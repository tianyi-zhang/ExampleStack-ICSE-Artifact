<p>I use the following to get images from an endpoint</p>

<pre><code>URL url = new URL(imageUrl);
InputStream content = (InputStream)url.getContent();
Drawable image = Drawable.createFromStream(content , "src");    
</code></pre>

<p>perhaps you can adapt this</p>

<hr>

<p>Okay I downloaded the sample and looked at URLs - the issue appears to be the HTTP => HTTPS redirection (I mentioned that I had to change them in my sample - I also notice my browser was forced to switch to https when I tried to load your images from the supplied strings). The sample does not appear to handle that correctly however if I alter ImageLoader.getBitmap to this then it does</p>

<pre><code>private Bitmap getBitmap(String url) 
{
    File f=fileCache.getFile(url);

    //from SD cache
    Bitmap b = decodeFile(f);
    if(b!=null)
        return b;

    //from web
    try {
        Bitmap bitmap=null;

        HttpURLConnection conn;
        URL imageUrl = new URL(url);
        int rc = -1;
        do {
            conn = (HttpURLConnection)imageUrl.openConnection();
            conn.setConnectTimeout(30000);
            conn.setReadTimeout(30000);
            conn.setInstanceFollowRedirects(true);
            rc = conn.getResponseCode();
            imageUrl = conn.getURL();
        } while (rc == -1); // hmmm - perhaps a http =&gt; https

        InputStream is=conn.getInputStream();
        OutputStream os = new FileOutputStream(f);
        Utils.CopyStream(is, os);
        os.close();
        bitmap = decodeFile(f);
        return bitmap;
    } catch (Exception ex){
       ex.printStackTrace();
       return null;
    }
}
</code></pre>
