<p>Your code isn't working because in order to use the ApacheCommons solution you will have to download the ApacheCommons library found here: </p>

<p><a href="http://commons.apache.org/" rel="nofollow">http://commons.apache.org/</a></p>

<p>and add a reference to it.</p>

<p>Since you are using JRE 6 you can't use all the NIO file utilities, and despite everyone loving Apache Commons as a quick way to answer forum posts, you may not like the idea of having to add that utility on just to get one function.  You can also use this code that uses a transferFrom method without using ApacheCommons.</p>

<pre><code>public static void copyFile(File sourceFile, File destFile) throws IOException {
  if (!destFile.exists()) {
    destFile.createNewFile();
  }
  FileInputStream fIn = null;
  FileOutputStream fOut = null;
  FileChannel source = null;
  FileChannel destination = null;
  try {
    fIn = new FileInputStream(sourceFile);
    source = fIn.getChannel();
    fOut = new FileOutputStream(destFile);
    destination = fOut.getChannel();
    long transfered = 0;
    long bytes = source.size();
    while (transfered &lt; bytes) {
      transfered += destination.transferFrom(source, 0, source.size());
      destination.position(transfered);
    }
  } finally {
    if (source != null) {
      source.close();
    } else if (fIn != null) {
      fIn.close();
    }
    if (destination != null) {
      destination.close();
    } else if (fOut != null) {
      fOut.close();
    }
  }
}
</code></pre>

<p>When you upgrade to 7, you will be able to do the following</p>

<pre><code>public static void copyFile( File from, File to ) throws IOException {
    Files.copy( from.toPath(), to.toPath() );
}
</code></pre>

<p>reference:</p>

<p><a href="https://gist.github.com/mrenouf/889747" rel="nofollow">https://gist.github.com/mrenouf/889747</a></p>

<p><a href="http://stackoverflow.com/questions/106770/standard-concise-way-to-copy-a-file-in-java">Standard concise way to copy a file in Java?</a></p>
