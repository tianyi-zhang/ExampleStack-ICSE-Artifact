<p>Use apache-commons IO's <a href="http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileDeleteStrategy.html" rel="nofollow">FileDeleteStrategy</a>. Something like:</p>

<pre><code>FileDeleteStrategy.FORCE.delete(file);
</code></pre>

<p><strong>Update</strong>:</p>

<p>It should be the way IO is being handled in your application. I have written simple code which copies a zip file to a temporary zip, deflates the temporary zip and after few seconds deletes it. Here you go:</p>

<pre><code>public class ZipTest {

private static String dirPath = "/home/ubuntuuser/Desktop/";

public static void main(String[] args) throws Exception {

    File myzip = new File(dirPath + "content.zip");
    String tempFileStr = dirPath + "content_temp.zip";
    File tempFile = new File(tempFileStr);
    String unzipFolderStr = dirPath + "unzip";


    copyUsingChannels(myzip, tempFile);

    // copyUsingStreams(myzip, tempFile);

    unZip(tempFileStr, unzipFolderStr);

    Thread.sleep(3000);

    tempFile.delete();


}

private static void copyUsingStreams(File myzip, File tempFile)
        throws IOException, FileNotFoundException {
    byte[] barray = new byte[1024];

    if (!tempFile.exists())
    {
        tempFile.createNewFile();
    }

    FileOutputStream fos = new FileOutputStream(tempFile);
    FileInputStream fis = new FileInputStream(myzip);

    int length = 0;

    while ((length = fis.read(barray)) != -1)
    {
        fos.write(barray, 0, length);
    }

    fis.close();
    fos.close();
}

public static void copyUsingChannels(final File srcFile, final File destFile) throws Exception
{
    if (!destFile.exists())
    {
        destFile.createNewFile();
    }

    FileChannel source = new FileInputStream(srcFile).getChannel();
    FileChannel destination = new FileOutputStream(destFile).getChannel();

    source.transferTo(0, source.size(), destination);

    source.close();
    destination.close();
}

private static void unZip(String zipFile, String outputFolder) throws Exception {

    byte[] buffer = new byte[1024];

    File folder = new File(outputFolder);
    if (!folder.exists()) {
        folder.mkdir();
    }

    ZipInputStream zis = new ZipInputStream(new FileInputStream(zipFile));
    ZipEntry ze = zis.getNextEntry();

    while (ze != null) {

        String fileName = ze.getName();

        File newFile = new File(outputFolder + File.separator + fileName);

        System.out.println("file unzip : " + newFile.getAbsoluteFile());

        new File(newFile.getParent()).mkdirs();

        if (ze.isDirectory())
        {
            newFile.mkdir();
            ze = zis.getNextEntry();
            continue;
        }

        FileOutputStream fos = new FileOutputStream(newFile);

        int len;
        while ((len = zis.read(buffer)) &gt; 0) {
            fos.write(buffer, 0, len);
        }

        fos.close();
        ze = zis.getNextEntry();
    }

    zis.closeEntry();
    zis.close();
}

}
</code></pre>
