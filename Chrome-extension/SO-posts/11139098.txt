<blockquote>
  <p><strong>One-liners:</strong></p>

<pre><code>import javax.xml.bind.DatatypeConverter;

public static String toHexString(byte[] array) {
    return DatatypeConverter.printHexBinary(array);
}

public static byte[] toByteArray(String s) {
    return DatatypeConverter.parseHexBinary(s);
}
</code></pre>
</blockquote>

<p>For those of you interested in the actual code behind the <strong>One-liners</strong> from <a href="http://stackoverflow.com/users/173677/fractalizer">FractalizeR</a> (I needed that since javax.xml.bind is not available for Android (by default)), this comes from <a href="http://www.docjar.com/html/api/com/sun/xml/internal/bind/DatatypeConverterImpl.java.html">com.sun.xml.internal.bind.DatatypeConverterImpl.java</a> :</p>

<pre><code>public byte[] parseHexBinary(String s) {
    final int len = s.length();

    // "111" is not a valid hex encoding.
    if( len%2 != 0 )
        throw new IllegalArgumentException("hexBinary needs to be even-length: "+s);

    byte[] out = new byte[len/2];

    for( int i=0; i&lt;len; i+=2 ) {
        int h = hexToBin(s.charAt(i  ));
        int l = hexToBin(s.charAt(i+1));
        if( h==-1 || l==-1 )
            throw new IllegalArgumentException("contains illegal character for hexBinary: "+s);

        out[i/2] = (byte)(h*16+l);
    }

    return out;
}

private static int hexToBin( char ch ) {
    if( '0'&lt;=ch &amp;&amp; ch&lt;='9' )    return ch-'0';
    if( 'A'&lt;=ch &amp;&amp; ch&lt;='F' )    return ch-'A'+10;
    if( 'a'&lt;=ch &amp;&amp; ch&lt;='f' )    return ch-'a'+10;
    return -1;
}

private static final char[] hexCode = "0123456789ABCDEF".toCharArray();

public String printHexBinary(byte[] data) {
    StringBuilder r = new StringBuilder(data.length*2);
    for ( byte b : data) {
        r.append(hexCode[(b &gt;&gt; 4) &amp; 0xF]);
        r.append(hexCode[(b &amp; 0xF)]);
    }
    return r.toString();
}
</code></pre>
