<p>I have written a camera class which takes picture, arranges the orientation (some devices takes photo horizontal as default) and saves the photo taken. You can check it from the link below:</p>

<p><a href="http://stackoverflow.com/questions/18203369/camera-capture-orientation-on-samsung-devices-in-android/18203715#18203715">Camera capture orientation on samsung devices in android</a></p>

<p>Edit: Sorry, savePhoto functions are not written in my example. Adding them now.</p>

<p>savePhoto function:</p>

<pre><code>public void savePhoto(Bitmap bmp) {

    imageFileFolder = new File(Environment.getExternalStorageDirectory(),
            cc.getDirectoryName());
    imageFileFolder.mkdir();
    FileOutputStream out = null;
    Calendar c = Calendar.getInstance();
    String date = fromInt(c.get(Calendar.MONTH))
            + fromInt(c.get(Calendar.DAY_OF_MONTH))
            + fromInt(c.get(Calendar.YEAR))
            + fromInt(c.get(Calendar.HOUR_OF_DAY))
            + fromInt(c.get(Calendar.MINUTE))
            + fromInt(c.get(Calendar.SECOND));
    imageFileName = new File(imageFileFolder, date.toString() + ".jpg");
    try {
        out = new FileOutputStream(imageFileName);
        bmp.compress(Bitmap.CompressFormat.JPEG, 70, out);
        out.flush();
        out.close();
        scanPhoto(imageFileName.toString());
        out = null;
    } catch (Exception e) {
        e.printStackTrace();
    }
}
</code></pre>

<p>scanPhoto function:</p>

<pre><code>public void scanPhoto(final String imageFileName) {
    geniusPath = imageFileName;
    msConn = new MediaScannerConnection(MyClass.this,
            new MediaScannerConnectionClient() {
                public void onMediaScannerConnected() {
                    msConn.scanFile(imageFileName, null);

                }

                @Override
                public void onScanCompleted(String path, Uri uri) {

                    msConn.disconnect();

                }
            });
    msConn.connect();
}
</code></pre>

<p>SavePhotoTask class:</p>

<pre><code>class SavePhotoTask extends AsyncTask&lt;byte[], String, String&gt; {
    @Override
    protected String doInBackground(byte[]... jpeg) {
        File photo = new File(Environment.getExternalStorageDirectory(),
                "photo.jpg");
        if (photo.exists()) {
            photo.delete();
        }
        try {
            FileOutputStream fos = new FileOutputStream(photo.getPath());
            fos.write(jpeg[0]);
            fos.close();
        } catch (java.io.IOException e) {
        }
        return (null);
    }
}
</code></pre>
