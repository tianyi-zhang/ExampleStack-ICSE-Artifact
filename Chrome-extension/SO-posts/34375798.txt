<p>You need some sort of a link between adapter items and string value (name or the index in string array). For example:</p>

<pre><code>class SingleItem{
int image;
double nutritional_value;
String name;

    SingleItem(int image, double nutritional_value,String name){
    this.image = image;
    this.nutritional_value = nutritional_value;
    this.name = name;


}
}
</code></pre>

<p>If you want to make changes while user typing the query, you need to override </p>

<pre><code>@Override
    public boolean onQueryTextChange(String newText) {
        adapter.filter(newText);
        return true;
    }
</code></pre>

<p>in ObjectAdapter class make changes. You need additional list of currently displaying items. </p>

<pre><code>public class objectAdapter extends BaseAdapter {
ArrayList&lt;SingleItem&gt; list;
ArrayList&lt;SingleItem&gt; filteredItems;
Context context;
Bundle myBundle;

objectAdapter(Context context) {
    this.context = context;
    myBundle = new Bundle();
    double[][] nutritional_value = {
            {89, 22.8, 0.3, 1},
            {61, 1.5, 0.5, 1.1},
            {375, 6.8, 0.6, 1.2},
            {767, 0, 9.3, 0},
            {580, 9.1, 42, 36.5}



    };
    myBundle.putSerializable("array_array", nutritional_value);

    int[] image_id = {
            R.drawable.Bananas, R.drawable.Kiwis, R.drawable.oatmeals, R.drawable.coconuts,
            R.drawable.dark_chocolate
    };

    int[] name_id = {R.string.Bananas, R.string.Kiwis, R.string.oatmeals, R.string.coconuts,
            R.string.dark_chocolate
    };
    for (int i = 0; i &lt; image_id.length; i++) {
        SingleItem tempSingleItem = new SingleItem(image_id[i], nutritional_value[i][i],context.getResources().getString(name_id[i]));
        list.add(tempSingleItem);
    }

    filteredItems = new ArrayList&lt;&gt;(list.size());
    filteredItems.addAll(list);
}


@Override
public View getView(int position, View convertView, ViewGroup parent) {

    View row = convertView;
    ViewHolder holder = null;
    if (row == null) {
        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        row = inflater.inflate(R.layout.single_item, parent, false);
        holder= new ViewHolder(row);
        row.setTag(holder);
    }
    else {
        holder = (ViewHolder) row.getTag();
    }
        SingleItem temp = filteredItems.get(position);
        holder.myItem.setImageResource(temp.image);
    holder.myItem.setTag(temp);
    return row;
    }




@Override
public long getItemId(int position) {
    return position;
}
class ViewHolder
{
    ImageView myItem;
    ViewHolder(View v){
       myItem = (ImageView) v.findViewById(R.id.imageView2);
    }
}

@Override
public Object getItem(int position) {
    return filteredItems.get(position);
}

@Override
public int getCount() {
    return filteredItems.size();
}


public void filter(String text) {
    filteredItems.clear(); 
    for(int i=0; i &lt; list.size(); ++i) {
        SingleItem item = list.get(i);
        if (item.name.toLowerCase().contains(text.toLowerCase()) {
           filteredItems.add(item);
        }
    }
    notifyDataSetChanged();
    }
}
</code></pre>
