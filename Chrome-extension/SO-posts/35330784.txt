<p>Why don't you use icon fonts (like font awesome) for your icons? then change the font of tab text to your desirable font icon .ttf and enjoy change selected text color to your tab icons!</p>

<p>I, myself, used this method and it is really nice and clean :)</p>

<p>firstly, set up the titles from your desired icon font:</p>

<p>in string.xml:</p>

<pre><code>    &lt;string name="ic_calculator"&gt;&amp;#xf1ec;&lt;/string&gt;
    &lt;string name="ic_bank"&gt;&amp;#xf19c;&lt;/string&gt;
</code></pre>

<p>then in MainActivity.Java:</p>

<pre><code>    private void setupViewPager(ViewPager viewPager) {
    ViewPagerAdapter adapter = new ViewPagerAdapter(getSupportFragmentManager());
    adapter.addFragment(new FragmentBank(), getString(R.string.ic_bank));
    adapter.addFragment(new FragmentCalculate(), getString(R.string.ic_calculator));
    viewPager.setAdapter(adapter);
    }
</code></pre>

<p>Then you should change the font of Tab titles to font-awesome:</p>

<pre><code>    Typeface typeFaceFont = Typeface.createFromAsset(getAssets(), "fontawesome-webfont.ttf");

    TabLayout tabLayout = (TabLayout) findViewById(R.id.tabs);
    tabLayout.setupWithViewPager(viewPager);
    ViewGroup vg = (ViewGroup) tabLayout.getChildAt(0);
    int tabsCount = vg.getChildCount();
    for (int j = 0; j &lt; tabsCount; j++) {
        ViewGroup vgTab = (ViewGroup) vg.getChildAt(j);
        int tabChildsCount = vgTab.getChildCount();
        for (int i = 0; i &lt; tabChildsCount; i++) {
            View tabViewChild = vgTab.getChildAt(i);
            if (tabViewChild instanceof TextView) {
                ((TextView) tabViewChild).setTypeface(typeFaceFont);
            }
        }
    }
</code></pre>

<p>and last but not least, in your related .xml file, set color for your tabTextColor and tabSelectedTextColor:</p>

<pre><code>&lt;android.support.design.widget.TabLayout
        android:id="@+id/tabs"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:scrollbars="horizontal"
        android:background="@color/colorPrimaryDark"
        app:tabSelectedTextColor="@color/colorAccent"
        app:tabTextColor="@color/textColorPrimary"
        app:tabIndicatorColor="@color/colorAccent"
        app:tabMode="fixed"
        app:tabGravity="fill"/&gt;
&lt;/android.support.design.widget.AppBarLayout&gt;
</code></pre>

<p>and in colors.xml:</p>

<pre><code>&lt;resources&gt;
    &lt;color name="colorPrimary"&gt;#3F51B5&lt;/color&gt;
    &lt;color name="colorPrimaryDark"&gt;#303F9F&lt;/color&gt;
    &lt;color name="colorAccent"&gt;#FF4081&lt;/color&gt;
    &lt;color name="colorHighlight"&gt;#FFFFFF&lt;/color&gt;
    &lt;color name="textColorPrimary"&gt;#E1E3F3&lt;/color&gt;
&lt;/resources&gt;
</code></pre>
