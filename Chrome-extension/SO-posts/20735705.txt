<p>I would try a ViewTreeObserver with OnGlobalLayoutListener as described here: <a href="http://stackoverflow.com/questions/7733813/how-can-you-tell-when-a-layout-has-been-drawn">How can you tell when a layout has been drawn?</a></p>

<p>EDIT: I created a sample working implementation. It is capturing the screen after the orientation change as you asked for.</p>

<p>Not possible to get the status bar without root: <a href="http://stackoverflow.com/questions/11315226/android-developmenthow-to-implement-screen-grab-with-status-bar-in-code">(android development)how to implement screen grab with status bar in code</a></p>

<p>However, is possible to remove the blank space where the status bar goes: <a href="http://stackoverflow.com/questions/13194118/android-screenshot-of-activity-with-actionbar">Android screenshot of activity with actionbar</a></p>

<pre><code>public class MainActivity extends Activity
{
    private static int counter = 1;
    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final View root = getWindow().getDecorView();
        ViewTreeObserver vto = root.getViewTreeObserver();
        vto.addOnGlobalLayoutListener(new OnGlobalLayoutListener() {

            @Override
            public void onGlobalLayout()
            {
                root
                .getViewTreeObserver()
                .removeOnGlobalLayoutListener(this);

                takeScreenShot(root);
                ++counter;
            }

        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu)
    {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    private void takeScreenShot(View view)
    {
        String mPath = Environment.getExternalStorageDirectory().toString() 
                + "/" + "rotation" + String.valueOf(counter);   

        // create bitmap screen capture
        Bitmap bitmap;

        view.setDrawingCacheEnabled(true);
        bitmap = Bitmap.createBitmap(view.getDrawingCache());
        view.setDrawingCacheEnabled(false);

        OutputStream fout = null;
        File imageFile = new File(mPath);

        try {
            fout = new FileOutputStream(imageFile);
            bitmap.compress(Bitmap.CompressFormat.JPEG, 90, fout);
            fout.flush();
            fout.close();

        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }   
}
</code></pre>
