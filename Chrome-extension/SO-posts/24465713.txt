<p>It seems the values are not really being overwritten. Each time the second activity is loaded new part and type ArrayLists are being created. In these new lists only the latest part and type are added (in the onCreate Function) which have travelled with the intent.</p>

<p>If you want the list to keep adding the part and type selected by the user you can maintain the lists on the MainActivity. So upon selection of each item and type add it to the list on the MainActivity and then pass it to the ListViewItems activity.</p>

<p>This way the list will always have all the items selected by you.</p>

<p>I must admit I am not 100% sure if I understood your question correctly. But I have tried to answer with as much as I did.</p>

<p>EDIT:</p>

<p>MainActivity:</p>

<pre><code>public class MainActivity extends ActionBarActivity {

    ArrayList&lt;String&gt; list;
    int clickCount = 0;

    static TextView textViewHelloWorld;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        try {
            list = new ArrayList&lt;String&gt;();

            textViewHelloWorld = (TextView) findViewById(R.id.textViewHelloWorld);


            Button buttonAddElements = (Button) findViewById(R.id.buttonAddElement);
            buttonAddElements.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View v) {
                    // TODO Auto-generated method stub
                    clickCount = clickCount + 1;
                    textViewHelloWorld.setText("Click Count" + clickCount);
                    list.add("Click number " + clickCount);             
                }
            });

            Button buttonStartNewActivity = (Button) findViewById (R.id.buttonStartNewActivity);
            buttonStartNewActivity.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View v) {
                    // TODO Auto-generated method stub
                    Bundle bundle = new Bundle();
                    bundle.putStringArrayList("list", list);
                    startActivity(new Intent(MainActivity.this, Main2Activity.class).putExtras(bundle));

                }
            });
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }


    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {

        public PlaceholderFragment() {
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_main, container,
                    false);
            return rootView;
        }
    }

}
</code></pre>

<p>Main2Activity: (ListView Activity):</p>

<pre><code>public class Main2Activity extends ActionBarActivity {

    ArrayList&lt;String&gt; list;
    ListView listView;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);

        list  = getIntent().getStringArrayListExtra("list");

        listView = (ListView) findViewById(R.id.listViewList);
        String []dsf = new String[list.size()];
        list.toArray(dsf);
        listView.setAdapter(new ArrayAdapter&lt;String&gt;(this,
                android.R.layout.simple_list_item_1, dsf));
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main2, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {

        public PlaceholderFragment() {
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_main2,
                    container, false);
            return rootView;
        }
    }

}
</code></pre>

<p>EDIT2:
MainActivity.Java</p>

<pre><code>public class MainActivity extends Activity implements OnClickListener {

    SharedPreferences SharedPrefs;
    String sp_selected;
    Spinner sp;
    String s1;
    String partname;
    String partname1;
    Button Parts_history;

    private ArrayList&lt;String&gt; parts;
    private ArrayList&lt;String&gt; types;

    Imageadapter image_adapter;

    private static final String[] paths = { "Select Your Choice", "Type1",
            "Type2", "Type3", "Type4" };
    private static final int position = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        this.requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.partsrepair);

        image_adapter = new Imageadapter(this);

        parts = new ArrayList&lt;String&gt;();
        types = new ArrayList&lt;String&gt;();

        SharedPrefs = getSharedPreferences("Preference", MODE_PRIVATE);

        GridView gridview = (GridView) findViewById(R.id.gridView1);
        gridview.setAdapter(new Imageadapter(this));

        Parts_history = (Button) findViewById(R.id.partshistory_button);
        Parts_history.setOnClickListener((this));

        gridview.setOnItemClickListener(new OnItemClickListener() {
            public void onItemClick(final AdapterView&lt;?&gt; parent, View v,
                    int position, long id) {

                SharedPreferences.Editor edit = SharedPrefs.edit();

                // partname = parent.getItemAtPosition(position).toString();
                partname1 = image_adapter.names[position].toString();
                parts.add(partname1);
                image_adapter.names[position].toString();
                Toast.makeText(MainActivity.this, "you Selected:" + partname1,
                        Toast.LENGTH_SHORT).show();

                // edit.putString("SelectPart", partname1);

                final Dialog dialog = new Dialog(MainActivity.this);
                dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
                dialog.setContentView(R.layout.repairtype_spinner);
                dialog.setCancelable(true);

                Spinner sp = (Spinner) dialog.findViewById(R.id.spinner_1);

                ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(
                        MainActivity.this,
                    android.R.layout.simple_spinner_item,paths); 

                sp.setAdapter(adapter);

                sp.setOnItemSelectedListener(new OnItemSelectedListener() {

                    @Override
                    public void onItemSelected(AdapterView&lt;?&gt; parent,
                            View view, int position, long id) {

                        if (position &gt; 0) {
                    sp_selected = parent.getItemAtPosition(position)
                                    .toString();
                    types.add(sp_selected);
                        }
                    }

                    @Override
                    public void onNothingSelected(AdapterView&lt;?&gt;arg0) {
                        // TODO Auto-generated method stub

                    }
                });

        Button btnOk = (Button)dialog.findViewById(R.id.Button_sms_ok);
                btnOk.setOnClickListener(new View.OnClickListener() {

        @Override
    public void onClick(View v) {
        SharedPreferences.Editor edit = SharedPrefs.edit();

            if ((sp_selected != null)
                    &amp;&amp; !sp_selected.equals("Select Your Choice")) { //
                            edit.putString("SelectType", sp_selected);
                        Toast.makeText(getApplicationContext(),
                    "You selected:" + sp_selected,
                Toast.LENGTH_SHORT).show();
                Toast.makeText(getApplicationContext(),
                    "Thank You!", Toast.LENGTH_LONG).show();

                            dialog.dismiss();
                        } else {

            Toast.makeText(MainActivity.this,
                "plz Select your Choice",
                    Toast.LENGTH_SHORT).show();
                        }} });


                dialog.show(); }});}

                    public void onClick(View v) {

                 switch (v.getId()) {
                case R.id.partshistory_button:

                    Bundle bundle = new Bundle();
                    bundle.putStringArrayList("parts", parts);
                    bundle.putStringArrayList("type", types);



            Intent intent = new Intent(MainActivity.this, ListViewItems.class);
            intent.putExtra("Part", partname1);
            intent.putExtra("Type", sp_selected);
            intent.putExtra("bundle", bundle);
            startActivity(intent);
            finish();
               }}}
</code></pre>

<p>ListView:</p>

<pre><code>public class ListViewItems extends Activity {

    ArrayList&lt;String&gt; part, type;

    ListView list;

    public ListViewItems() {
        // TODO Auto-generated constructor stub
        part = new ArrayList&lt;String&gt;();
        type = new ArrayList&lt;String&gt;();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // TODO Auto-generated method stub
        super.onCreate(savedInstanceState);
        setContentView(R.layout.sms_summary);

        Intent i = getIntent();
//        part.add(i.getStringExtra("Part"));
//        type.add(i.getStringExtra("Type"));

        part = i.getExtras().getBundle("bundle").getStringArrayList("parts");
        type = i.getExtras().getBundle("bundle").getStringArrayList("types");

        list = (ListView) findViewById(R.id.listView1);
        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(
                getBaseContext(), R.layout.listview, type);
        list.setAdapter(new CustomViewAdapter(ListViewItems.this));
        adapter.notifyDataSetChanged();
    }

    public class CustomViewAdapter extends BaseAdapter {

        Context context;

        public CustomViewAdapter(Context context) {
            // TODO Auto-generated constructor stub
            this.context = context;
        }
        private class ViewHolder {
            TextView text_part;
            TextView text_type;
        }
        public View getView(int position, View convertView, ViewGroup parent) {
            ViewHolder holder = null;
            // Log.d("hao",""+position);

            LayoutInflater minflater = (LayoutInflater) context
                               .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
            if (convertView == null) {
                convertView = minflater.inflate(R.layout.listview, null);
                holder = new ViewHolder();
                holder.text_part = (TextView) convertView
                        .findViewById(R.id.textView1);
                // Log.d("hao", ""+holder.text_desc);
                holder.text_type = (TextView) convertView
                        .findViewById(R.id.textView2);
                convertView.setTag(holder);
            }

            else
                holder = (ViewHolder) convertView.getTag();

            holder.text_type.setText(type.get(position));
            holder.text_part.setText(part.get(position));

            return convertView;

        }

        @Override
        public int getCount() {
            // TODO Auto-generated method stub
            return part.size();
        }

        @Override
        public Object getItem(int position) {
            // TODO Auto-generated method stub
            return position;
        }

        @Override
        public long getItemId(int position) {
            // TODO Auto-generated method stub
            return position;
        }
    }}
</code></pre>
