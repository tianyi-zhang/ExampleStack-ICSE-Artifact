<p>This will give you a file manager as you like. Just needs a bit of work around. But definitely helps</p>

<pre><code>    //fill method is to get the dir
        private void fill(File f) 
        {
            File[] dirs = f.listFiles();
            this.setTitle("Current Dir: " + f.getName());
            List&lt;Option&gt; dir = new ArrayList&lt;Option&gt;();
            List&lt;Option&gt; fls = new ArrayList&lt;Option&gt;();
            try 
            {
                for (File ff : dirs) 
                {
                    if (ff.isDirectory())
                    {
                        dir.add(new Option(ff.getName(), "Folder", ff.getAbsolutePath()));
                    }
                    else 
                    {
String filetype[] = objOption.getName().split("\\.");
        if (filetype[(filetype.length) - 1].equals("txt"))                                   {   
                        fls.add(new Option(ff.getName(), "File Size: "+ ff.length()+" bytes", ff.getAbsolutePath()));
                                   }
                    }
                }
            } 
            catch (Exception e) 
            {}
            Collections.sort(dir);
            Collections.sort(fls);
            dir.addAll(fls);
            if (!f.getName().equalsIgnoreCase("sdcard"))
            {
                dir.add(0, new Option("..", "Parent Directory", f.getParent()));
            }
            adapter = new FileArrayAdapter(FileChooser.this, R.layout.dialog_file_view,dir);
            lvFileList.setAdapter(adapter);
        }
</code></pre>
