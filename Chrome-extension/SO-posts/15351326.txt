<p>Yes, you do. <code>HashMap</code>s work by computing the hash code of the key and using that as a base point. If the <code>hashCode</code> function isn't overriden (by you), then it will use the memory address, and <code>equals</code> will be the same as <code>==</code>.</p>

<p>If you're in Eclipse, it'll generate them for you. Click <strong>Source</strong> menu &rarr; <strong>Generate hashCode() and equals()</strong>.</p>

<p>If you don't have Eclipse, here's some that should work. (I generated these in Eclipse, as described above.)</p>

<pre><code>@Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((info == null) ? 0 : info.hashCode());
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (!(obj instanceof EventInfo)) {
        return false;
    }
    EventInfo other = (EventInfo) obj;
    if (info == null) {
        if (other.info != null) {
            return false;
        }
    } else if (!info.equals(other.info)) {
        return false;
    }
    if (name == null) {
        if (other.name != null) {
            return false;
        }
    } else if (!name.equals(other.name)) {
        return false;
    }
    return true;
}
</code></pre>
