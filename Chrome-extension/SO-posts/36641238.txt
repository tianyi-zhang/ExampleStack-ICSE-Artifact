<p>You should use use the "view holder" design pattern as described by <a href="http://developer.android.com/intl/pt-br/training/improving-layouts/smooth-scrolling.html#ViewHolder" rel="nofollow">developer.android.com</a> and explained with details on <a href="https://www.codeofaninja.com/2013/09/android-viewholder-pattern-example.html" rel="nofollow">this post</a>.</p>

<p>The most important here is: </p>

<ol>
<li>Create the ViewHolder class;</li>
<li>Store the ViewHolder instance in a tag if the convertView is null;</li>
<li>Restore the ViewHolder instance from a tag if it is not.</li>
</ol>

<p>That is my Adapter's code:</p>

<pre><code>package br.com.inovant.pm;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.*;

import java.util.List;

public class ContactsAdapter extends ArrayAdapter&lt;CheckedContact&gt;{

    public ContactsAdapter(Context context, List&lt;CheckedContact&gt; contacts) {
        super(context, 0, contacts);
    }

    static class ViewHolder {
        protected CheckedTextView checkedTextView;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder viewHolder;
        if (convertView == null) {
            convertView = LayoutInflater.from(getContext()).inflate(android.R.layout.select_dialog_multichoice, parent, false);
            viewHolder = new ViewHolder();
            viewHolder.checkedTextView = (CheckedTextView) convertView.findViewById(android.R.id.text1);
            convertView.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) convertView.getTag();
        }

        final CheckedContact checkedContact = getItem(position);

        final CheckedTextView checkedTextView = viewHolder.checkedTextView;
        checkedTextView.setText(checkedContact.getContact().getDisplayName());
        checkedTextView.setChecked(checkedContact.isChecked());
        return convertView;
    }

    @Override
    public long getItemId(int position) {
        return getItem(position).getContact().getId().hashCode();
    }

    @Override
    public boolean hasStableIds() {
        return true;
    }
}
</code></pre>
