<p>I found one way how to do it. For example I have this layout of item in listview. I will made my own adapter and then simply by calling setVisibility(View.GONE); i will hide this item from listview. 
PS: Here is only example in realcode there should be some IF() to hide column.</p>

<p>Layout for item.
    
    </p>

<pre><code>&lt;TextView
    android:id="@+id/description"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="TextView" /&gt;

&lt;TextView
    android:id="@+id/value"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_alignBaseline="@+id/description"
    android:layout_alignBottom="@+id/description"
    android:layout_toRightOf="@+id/description"
    android:text="TextView" /&gt;
</code></pre>

<p></p>

<p>And MyAdapter.</p>

<pre><code>private class ConnectedAdapter extends ArrayAdapter&lt;ConnectionClass&gt; {

    private ArrayList&lt;ConnectionClass&gt; connectionList;

    public ConnectedAdapter(Context context, int textViewResourceId,
            ArrayList&lt;ConnectionClass&gt; countryList) {
        super(context, textViewResourceId, countryList);
        this.connectionList = new ArrayList&lt;ConnectionClass&gt;();
        this.connectionList.addAll(countryList);
    }

    private class ViewHolder {
        TextView description;
        TextView value;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        ViewHolder holder = null;
        Log.v("ConvertView", String.valueOf(position));

        if (convertView == null) {
            LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = vi.inflate(R.layout.activity_connected_item,
                    null);

            holder = new ViewHolder();
            holder.description = (TextView) convertView
                    .findViewById(R.id.description);
            holder.value = (TextView) convertView
                    .findViewById(R.id.value);

            convertView.setTag(holder);

        } else {
            holder = (ViewHolder) convertView.getTag();
        }

        ConnectionClass connection = connectedList.get(position);
        holder.description.setText(connection.getDescription());
        holder.description.setVisibility(View.GONE);
        holder.value.setText(connection.getValue());

        return convertView;

    }

}
</code></pre>
