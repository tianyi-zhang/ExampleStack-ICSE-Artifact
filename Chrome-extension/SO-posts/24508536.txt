<p>Just try the following code, hopefully it should work. You need to pass the context in Dialog Builder. Then the Android OS will know which activity the dialog is attached to and where it should be popped.</p>

<pre><code>public void onActivityResult(int requestCode, int resultCode, Intent intent) {
    if (requestCode == 0) {
        if (resultCode == RESULT_OK) {
            String boardingPassString = intent
                    .getStringExtra("SCAN_RESULT");
            Log.d("Scan Result", "contents: " + boardingPassString);
            String flightNumber = dataProcessor.decodeFlightNumber(boardingPassString);

        Builder dialogBuilder = new AlertDialog.Builder(this);
        String isFlightOld = isFlightOld(boardingPassString);
        if(isFlightOld.equals(CURRENT))
        {
            Log.d("Block", "Current");
            postData(flightNumber);
        }
        else if(isFlightOld.equals(TOO_NEW))
        {
            displayAlert(R.string.dialog_msg_new1 + flightNumber + R.string.dialog_msg_new2);
            Log.d("Block", getResources().getString(R.string.dialog_title_new));
        }
        else if(isFlightOld.equals(OLD))
        {
            displayAlert(R.string.dialog_msg_old1 + flightNumber + R.string.dialog_msg_old2);
            Log.d("Block", getResources().getString(R.string.dialog_title_old));
        }
        else
        {
            displayAlert(R.string.dialog_msg_error);
            Log.d("Block", getResources().getString(R.string.dialog_title_error));
        }


    } else if (resultCode == RESULT_CANCELED) {
        Log.d("Scan Result", "RESULT_CANCELED");
    }
}
}



displayAlert(String message)
{

  AlertDialog.Builder alertDialog = new AlertDialog.Builder(MyActivity.this);
  alertDialog.setTitle(getResources().getString(R.string.alert_title));
  alertDialog.setMessage(message);

  alertDialog.setPositiveButton(getResources().getString(R.string.ok),
    new DialogInterface.OnClickListener() {
      public void onClick(DialogInterface dialog, int which) 
      {
         //your action here
      }
  });


  alertDialog.setNegativeButton(getResources().getString(R.string.ok),
      new DialogInterface.OnClickListener() {
           public void onClick(DialogInterface dialog, int which) {
           // Your Action here      
      }
  });
  alertDialog.show();

}
</code></pre>

<p>If this does not solve your problem. Then you need to show ur entire activity code, as it may be possible that your activity is getting finished soon after the dialog is displayed to the screen.</p>
