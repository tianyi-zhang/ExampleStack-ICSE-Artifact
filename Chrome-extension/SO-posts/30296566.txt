<p>Here is an example for POST:</p>

<pre><code>private void sendPost() throws Exception {

    String url = "your_url";
    URL obj = new URL(url);
    HttpsURLConnection con = (HttpsURLConnection) obj.openConnection();

    //add reuqest header
    con.setRequestMethod("POST");
    con.setRequestProperty("User-Agent", USER_AGENT);
    con.setRequestProperty("Accept-Language", "en-US,en;q=0.5");


    // Send post request
    con.setDoOutput(true);
    DataOutputStream wr = new DataOutputStream(con.getOutputStream());
    wr.writeBytes(urlParameters);
    wr.flush();
    wr.close();

    int responseCode = con.getResponseCode();
    System.out.println("\nSending 'POST' request to URL : " + url);
    System.out.println("Post parameters : " + urlParameters);
    System.out.println("Response Code : " + responseCode);

    BufferedReader in = new BufferedReader(
            new InputStreamReader(con.getInputStream()));
    String inputLine;
    StringBuffer response = new StringBuffer();

    while ((inputLine = in.readLine()) != null) {
        response.append(inputLine);
    }
    in.close();

    //print result
    System.out.println(response.toString());

}
</code></pre>

<p>For more details, go through <a href="http://www.mkyong.com/java/how-to-send-http-request-getpost-in-java/" rel="nofollow">How to send HTTP request GET/POST in Java</a>.</p>

<p>For all deprecated classes look at the JavaDoc, it will hint at which class to use to replace the old code. Example:</p>

<pre><code>...
*
* @deprecated (4.3) use {@link HttpClientBuilder}.  &lt;----- THE HINT IS HERE !
*/
@ThreadSafe
@Deprecated
public class DefaultHttpClient extends AbstractHttpClient {
</code></pre>

<p>Therefore, I will suggest using </p>

<pre><code>HttpClientBuilder.create().build();
</code></pre>

<p>As the <code>build()</code> method returns a <code>CloseableHttpClient</code> which is-a <code>AutoClosable</code>, you can place the declaration in a try-with-resources statement (Java 7+):</p>

<pre><code>try (CloseableHttpClient httpClient = HttpClientBuilder.create().build()){

// use httpClient (no need to close it explicitly)

} catch (IOException e) {

// handle

}
</code></pre>

<p>Hope it helps!</p>
