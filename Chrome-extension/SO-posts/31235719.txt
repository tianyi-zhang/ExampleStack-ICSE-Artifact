<pre><code>First - extends RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt;

public class MenuAdapter extends RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt; {
</code></pre>

<p>After - Override the method getItemViewTpe
***More Important</p>

<pre><code>@Override
public int getItemViewType(int position) {
    return position;
}
</code></pre>

<p>method onCreateViewHolder</p>

<pre><code>@Override
public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
    View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.menu_item, parent, false);
    View header = LayoutInflater.from(parent.getContext()).inflate(R.layout.menu_header_item, parent, false);
    Log.d("onCreateViewHolder", String.valueOf(viewType));

    if (viewType == 0) {
        return new MenuLeftHeaderViewHolder(header, onClickListener);
    } else {
        return new MenuLeftViewHolder(view, onClickListener);
    }
}
</code></pre>

<p>method onBindViewHolder</p>

<pre><code>@Override
public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
    if (position == 0) {
        MenuHeaderViewHolder menuHeaderViewHolder = (MenuHeaderViewHolder) holder;
        menuHeaderViewHolder.mTitle.setText(sMenuTitles[position]);
        menuHeaderViewHolder.mImage.setImageResource(sMenuImages[position]);
    } else {
        MenuViewHolder menuLeftViewHolder = (MenuLeftViewHolder) holder;
        menuViewHolder.mTitle.setText(sMenuTitles[position]);
        menuViewHolder.mImage.setImageResource(sMenuImages[position]);
    }
}
</code></pre>

<p>in finish implements the ViewHolders class static </p>

<pre><code>public static class MenuViewHolder extends RecyclerView.ViewHolder 

public static class MenuLeftHeaderViewHolder extends RecyclerView.ViewHolder 
</code></pre>
