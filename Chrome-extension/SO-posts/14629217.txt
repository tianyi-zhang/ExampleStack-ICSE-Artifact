<p>Minor improvements for Vivek's function -> Handle CDATA + Use field constants:</p>

<pre><code>public static String getStringFromNode(Node root) throws IOException 
{
    StringBuilder result = new StringBuilder();

    if (root.getNodeType() == Node.TEXT_NODE)
        result.append(root.getNodeValue());
    else if(root.getNodeType() == Node.CDATA_SECTION_NODE)
        result.append("&lt;![CDATA["+root.getNodeValue()+"]]&gt;");
    else {
        if (root.getNodeType() != Node.DOCUMENT_NODE) {
            StringBuffer attrs = new StringBuffer();

            for (int k = 0; k &lt; root.getAttributes().getLength(); ++k) {
                attrs.append(" ").append(
                        root.getAttributes().item(k).getNodeName()).append(
                        "=\"").append(
                        root.getAttributes().item(k).getNodeValue())
                        .append("\" ");
            }
            result.append("&lt;").append(root.getNodeName()).append(" ")
                    .append(attrs).append("&gt;");
        } else {
            result.append("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;");
        }

        NodeList nodes = root.getChildNodes();
        for (int i = 0, j = nodes.getLength(); i &lt; j; i++) {
            Node node = nodes.item(i);
            result.append(getStringFromNode(node));
        }

        if (root.getNodeType() != Node.DOCUMENT_NODE) {
            result.append("&lt;/").append(root.getNodeName()).append("&gt;");
        }
    }
    return result.toString();
}
</code></pre>
