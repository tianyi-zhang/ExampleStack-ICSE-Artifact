<pre><code>public class OnSwipeTouchListener implements OnTouchListener {

private final GestureDetector gestureDetector;
private SwipeGestureInterface gestureInterface;
private boolean left, right, top, bottom;
private boolean doubleTap;
private int x, y;

public OnSwipeTouchListener(Context ctx, boolean left, boolean right,
        boolean top, boolean bottom, boolean doubleTap,
        SwipeGestureInterface gestureInterface) {
    gestureDetector = new GestureDetector(ctx, new GestureListener());
    this.gestureInterface = gestureInterface;
    this.left = left;
    this.right = right;
    this.top = top;
    this.bottom = bottom;
    this.doubleTap = doubleTap;
}

private final class GestureListener extends SimpleOnGestureListener {

    private static final int SWIPE_THRESHOLD = 100;
    private static final int SWIPE_VELOCITY_THRESHOLD = 120;

    @Override
    public boolean onDown(MotionEvent e) {
        setX((int) e.getX());
        setY((int) e.getY());
        return true;
    }

    @Override
    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
            float velocityY) {
        boolean result = false;
        try {
            float diffY = e2.getY() - e1.getY();
            float diffX = e2.getX() - e1.getX();
            if (Math.abs(diffX) &gt; Math.abs(diffY)) {
                if (Math.abs(diffX) &gt; SWIPE_THRESHOLD
                        &amp;&amp; Math.abs(velocityX) &gt; SWIPE_VELOCITY_THRESHOLD) {
                    if (diffX &gt; 0) {
                        onSwipeRight();
                    } else {
                        onSwipeLeft();
                    }
                }
                result = true;
            } else if (Math.abs(diffY) &gt; SWIPE_THRESHOLD
                    &amp;&amp; Math.abs(velocityY) &gt; SWIPE_VELOCITY_THRESHOLD) {
                if (diffY &gt; 0) {
                    onSwipeBottom();
                } else {
                    onSwipeTop();
                }
            }
            result = true;
        } catch (Exception exception) {
            exception.printStackTrace();
        }

        Utils.log("onfling", "val Y:" + velocityY);
        return result;
    }

    @Override
    public boolean onDoubleTap(MotionEvent e) {
        // TODO Auto-generated method stub
        if (gestureInterface != null &amp;&amp; doubleTap) {
            gestureInterface.onDoubleTap();
            return true;
        }
        return false;
    }

}

public void onSwipeRight() {
    if (gestureInterface != null &amp;&amp; right)
        gestureInterface.onSwipeRight();
}

public void onSwipeLeft() {
    if (gestureInterface != null &amp;&amp; left)
        gestureInterface.onSwipeLeft();
}

public void onSwipeTop() {
    if (gestureInterface != null &amp;&amp; top)
        gestureInterface.onSwipeTop();
}

public void onSwipeBottom() {
    if (gestureInterface != null &amp;&amp; bottom)
        gestureInterface.onSwipeBottom();
}

@SuppressLint("ClickableViewAccessibility")
@Override
public boolean onTouch(View arg0, MotionEvent event) {
    // TODO Auto-generated method stub
    gestureDetector.onTouchEvent(event);
    return false;
}

public int getX() {
    return x;
}

public void setX(int x) {
    this.x = x;
}

public int getY() {
    return y;
}

public void setY(int y) {
    this.y = y;
}
</code></pre>

<p>}</p>
