<p>I solved my problem ,these are the edits .I hope it will help someone else !   </p>

<p><em>on the new list .class</em></p>

<pre><code>                  @Override
       public boolean onItemLongClick(AdapterView&lt;?&gt; arg0, View view,
                               int position, long arg3) {
    TextView textView4 = (TextView)view.findViewById(R.id.titleTextView);
    TextView textView5 = (TextView)view.findViewById(R.id.userNameTextView);
     n =textView4.getText().toString();
     m=textView5.getText().toString();
     MyObject=new CustomObject(n,m);


    sharedPreference = new SharedPreference();

        sharedPreference.addFavorite(NewList.this, MyObject);
        Toast.makeText(NewList.this,
                NewList.this.getResources().getString(R.string.add_favr),
                Toast.LENGTH_SHORT).show();



    return true;
}
</code></pre>

<p>}</p>

<ul>
<li><p>the favorites activity * </p>

<pre><code>      public class FavActivity extends Activity {
    ListView lv;
  SharedPreference sharedPreference;
  List&lt;CustomObject&gt; favorites;
    ProductListAdapter productListAdapter;
      Activity context = this;
     public static final String FAVORITES = "Favorite";

  @Override
protected void onCreate(Bundle savedInstanceState) {
// TODO Auto-generated method stub
super.onCreate(savedInstanceState);
setContentView(R.layout.forthact);
sharedPreference = new SharedPreference();
favorites = sharedPreference.getFavorites(context);
lv = (ListView) findViewById(R.id.forthlistview);


fillFavoriteList();


 }

  private void fillFavoriteList() {

       if (favorites != null) {
    productListAdapter = new ProductListAdapter(ForthActivity.this, favorites);
    lv.setAdapter(productListAdapter);
    productListAdapter.notifyDataSetChanged();


  }
}
</code></pre>

<p>}</p>

<p><em>the SharedPreferences class</em></p>

<pre><code> public class SharedPreference {

    public static final String PREFS_NAME = "PRODUCT_APP";
   public static final String FAVORITES = "Product_Favorite";

  public SharedPreference() {
 super();
  }

// This four methods are used for maintaining favorites.
 public void saveFavorites(Context context, List&lt;CustomObject&gt; favorites) {
SharedPreferences settings;
SharedPreferences.Editor editor;

  settings = context.getSharedPreferences(PREFS_NAME,
         Context.MODE_PRIVATE);
 editor = settings.edit();

Gson gson = new Gson();
String jsonFavorites = gson.toJson(favorites);

editor.putString(FAVORITES, jsonFavorites);

editor.commit();
 }

   public void addFavorite(Context context, CustomObject product) {
   List&lt;CustomObject&gt; favorites = getFavorites(context);
  String s=product.getProp1();
if (favorites == null)
    favorites = new ArrayList&lt;CustomObject&gt;();
favorites.add(product);
saveFavorites(context, favorites);
</code></pre>

<p>}</p>

<pre><code>  public void removeFavorite(Context context, CustomObject product) {
   ArrayList&lt;CustomObject&gt; favorites = getFavorites(context);
   if (favorites != null) {
    favorites.remove(product);
      saveFavorites(context, favorites);
      }
       }

public ArrayList&lt;CustomObject&gt; getFavorites(Context context) {
   SharedPreferences settings;
   List&lt;CustomObject&gt; favorites;

   settings = context.getSharedPreferences(PREFS_NAME,
        Context.MODE_PRIVATE);

  if (settings.contains(FAVORITES)) {
    String jsonFavorites = settings.getString(FAVORITES, null);
    Gson gson = new Gson();
    CustomObject[] favoriteItems = gson.fromJson(jsonFavorites,
            CustomObject[].class);

    favorites = Arrays.asList(favoriteItems);
    favorites = new ArrayList&lt;CustomObject&gt;(favorites);
} else
    return null;

return (ArrayList&lt;CustomObject&gt;) favorites;
}
</code></pre>

<p>}</p></li>
</ul>
