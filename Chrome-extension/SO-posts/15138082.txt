<p>public class Download extends AsyncTask
              {</p>

<pre><code>        @Override
        protected Void doInBackground(Void... params) 
                    {
            try {
        URL url = new URL(imageURL);
        file2 = new File(fileName);


        long startTime = System.currentTimeMillis();

        /* Open a connection to that URL. */
        URLConnection ucon = url.openConnection();

        /*
         * Define InputStreams to read from the URLConnection.
         */
        InputStream is = ucon.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);

        /*
         * Read bytes to the Buffer until there is nothing more to read(-1).
         */
        ByteArrayBuffer baf = new ByteArrayBuffer(50);
        int current = 0;
        while ((current = bis.read()) != -1) {
            baf.append((byte) current);
        }

        /* Convert the Bytes read to a String. */
        FileOutputStream fos = new FileOutputStream(file2);
        fos.write(baf.toByteArray());
        fos.close();
        Log.d("ImageManager",
                "download ready in"
                        + ((System.currentTimeMillis() - startTime) / 1000)
                        + " sec");



    } catch (IOException e) {

    }
            return null;
        }

        @Override
        protected void onPostExecute(Void result) {
            super.onPostExecute(result);
            try {
                try {

        File fileWithinMyDir = getApplicationContext().getFilesDir();
        String PATH = fileWithinMyDir.getAbsolutePath();


        Drawable d = Drawable.createFromPath(PATH.toString());
        Bitmap bmp = ((BitmapDrawable) d).getBitmap();

    } catch (Exception e) {
        e.printStackTrace();
    }

                if (dialog != null) {
                    if (dialog.isShowing()) {
                        dialog.dismiss();
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }
</code></pre>
