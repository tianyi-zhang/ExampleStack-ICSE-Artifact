<blockquote>
  <p>I am using Netbeans on a Windows machine, what happens is that if I
  run the main java file the look and feel I get is different than in
  the case I run the whole program.</p>
</blockquote>

<p>When you run a Swing application the default Look and Feel is set to a cross-platform L&amp;F also called <a href="http://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html#available" rel="nofollow">Metal</a>. On the other hand when you create a new <a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/JFrame.html" rel="nofollow">JFrame</a> from NetBeans <em>New file</em> wizard it also includes a <code>main</code> method just for test purposes, making developers able to "run" the top-level container. Within this <code>main</code> method the Look and Feel is set to <a href="http://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/nimbus.html" rel="nofollow">Nimbus</a> as you have included in your <em>Update 1</em>.</p>

<p>This is well explained in this Q&amp;A: <a href="http://stackoverflow.com/questions/22066620/how-can-i-change-the-default-look-and-feel-of-jframe-not-theme-of-netbeans">How can I change the default look and feel of Jframe? (Not theme of Netbeans)</a>. As stated there you can modify the template associated to <code>JFrame</code> form to set the L&amp;F you wish. However be aware of this line:</p>

<blockquote>
  <p>A Java application only needs one <code>main</code> class so this test-only <code>main</code>
  methods should be deleted when you will deploy your application. [...]
  the L&amp;F should be established only once at the start-up, not in every
  top-level container (<code>JFrame</code>, <code>JDialog</code>...).</p>
</blockquote>

<p>You also might to take a look to <a href="http://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html#programmatic" rel="nofollow">Programatically Setting the Look and Feel</a> of <a href="http://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html" rel="nofollow">How to Set the Look and Feel</a> article.</p>

<h2>Edit</h2>

<blockquote>
  <p>I just did not understand one thing which test-only main methods do i
  need to delete and if i delete them how will my prg run properly?</p>
</blockquote>

<p>A Java application must have only one <code>main</code> method that inits the execution. The class which has this <code>main</code> method is defined within <code>MANIFEST.MF</code> file when you deploy your JAR. So, having a <code>main</code> method in each top-level container (<code>JFrame</code> or <code>JDialog</code>) is not needed and it's not a good practice.</p>

<p>However sometimes you don't want to run the whole application to test how a particular frame/dialog works. That's why NetBeans includes this <code>main</code> method on <code>JFrame</code> or <code>JDialog</code> creation. But as stated above when you will deploy your JAR you should delete those "extra" <code>main</code> methods.</p>

<blockquote>
  <p>and yah, in that you have given how to do it when i create new
  jframes, but i already have 20s of them</p>
</blockquote>

<p>A Swing application tipically has a single <code>JFrame</code> and multiple <code>JDialog</code>'s. Take a look to this topic for further details: <a href="http://stackoverflow.com/a/9554657/1795530">The Use of Multiple JFrames, Good/Bad Practice?</a></p>

<blockquote>
  <p>And anyways it is nimbus in there and it is what i want, but that is
  not what is opening</p>
</blockquote>

<p>You just need to programatically set the L&amp;F to Nimbus in your <code>main</code> class (the one that is executed when you run the whole application). You can copy-paste the code you've included in your <em>Update 1</em>  there.</p>

<h2>Edit 2</h2>

<p>When you create a new project in NetBeans it ask you for create a main class too. Let's say I create a new project called <code>Test</code>, it will ask me for create a main class like this:</p>

<p><img src="http://i.stack.imgur.com/Jdkev.jpg" alt="enter image description here"></p>

<p>This generated <code>Test</code> class will have the <code>main</code> method that triggers the application execution:</p>

<p><img src="http://i.stack.imgur.com/7M35S.jpg" alt="enter image description here"></p>

<p>Within this main method you have to put the code you've included in your <em>Update 1</em>:</p>

<pre><code>public class Test {

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        try {
                            javax.swing.UIManager.setLookAndFeel(info.getClassName());
                            break;
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (InstantiationException ex) {
                            Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IllegalAccessException ex) {
                            Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (UnsupportedLookAndFeelException ex) {
                            Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }                                       
            }
        });
    }

}
</code></pre>

<p>Then when you run your application the L&amp;F will be set to Nimbus overriding the default cross-platform L&amp;F. Henceforth all created Swing components will have Nimbus as L&amp;F.</p>

<p><strong>Note:</strong> The reason of <a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/SwingUtilities.html#invokeLater%28java.lang.Runnable%29" rel="nofollow">SwingUtilities.invokeLater()</a> call is explained in <a href="http://docs.oracle.com/javase/tutorial/uiswing/concurrency/initial.html" rel="nofollow">Initial Threads</a> article.</p>
