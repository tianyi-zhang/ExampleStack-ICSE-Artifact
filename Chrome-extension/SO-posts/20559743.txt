<p>In the xml file for your button, define <code>android:onClick="SendMail"</code></p>

<p>This will call the <code>SendMail</code> function inside your activity when your button is clicked.</p>

<p>Next, get a reference to the <code>EditText</code> view where the user enters the email body. </p>

<p><strong>E.g.:</strong> If the resource id of your <code>EditText</code> view is <code>edittext1</code>, then in your activity you need to do the following:</p>

<pre><code>EditText ed=(EditText)findViewById(R.id.edittext1);

String emailBody=ed.getText().toString();
</code></pre>

<p>Now the <code>emailBody</code> string consists of the body of the mail that the user has typed in.</p>

<p>Next, inside your activity, you need to define a function <code>SendMail()</code> as shown below:</p>

<pre><code>void SendMail(String body) {
   String recipient="usrname@mail.com";
   String subject="Your subject here";
   Intent i = new Intent(Intent.ACTION_SEND);
   i.setType("message/rfc822");
   i.putExtra(Intent.EXTRA_EMAIL  , recipient);
   i.putExtra(Intent.EXTRA_SUBJECT, subject);
   i.putExtra(Intent.EXTRA_TEXT   , body);
   try {
      startActivity(Intent.createChooser(i, "Send mail..."));
    } catch (android.content.ActivityNotFoundException ex) {
    Toast.makeText(MyActivity.this, "There are no email clients installed.", Toast.LENGTH_SHORT).show();
    }
}
</code></pre>

<p>This approach has helped me, hope it helps you also. </p>
