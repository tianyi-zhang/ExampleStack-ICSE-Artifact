<p>I can't thank you all enough for the amazing answers. I put the various ideas and came up with this solution to my problem.</p>

<p>My working answer to my Question above takes ideas from Leos Literak, abmitchell, Vimal Bera and Grisha's answers.</p>

<p>The database is created via this code:</p>

<pre><code>package Database;

//STEP 1. Import required packages
import java.sql.*;

public class JDBCExampleCreateTables {
    // JDBC driver name and database URL
    private static String JDBC_DRIVER = "org.h2.Driver";
    private static String DB_URL = "jdbc:h2:file:C:/WAKILI/WAKILIdb";

    //  Database credentials
    private static String USER = "sa";
    private static String PASS = "";

    public static void main (String[] args) {
        Connection conn = null;
        Statement stmt = null;

        try {
            //STEP 2: Register JDBC driver
            Class.forName(JDBC_DRIVER);

            //STEP 3: Open a connection
            System.out.println("Connecting to a selected database...");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            System.out.println("Connected database successfully...");

            //STEP 4: Execute a query
            System.out.println("Creating table in given database...");
            stmt = conn.createStatement();

            String sql = "CREATE TABLE CLIENT " +
                    "(ID INT UNSIGNED NOT NULL AUTO_INCREMENT, " + 
                    " fullNames VARCHAR(255), " + 
                    " iDNumber VARCHAR(255), " + 
                    " pINNumber VARCHAR(255), " + 
                    " passportNumber VARCHAR(255), " + 
                    " postOfficeBoxNumber VARCHAR(255), " + 
                    " postalCode VARCHAR(255), " + 
                    " telephoneNumberLandline VARCHAR(255), " + 
                    " telephoneNumberMobile VARCHAR(255)) "; 

            stmt.executeUpdate(sql);
            System.out.println("Created table in given database...");

        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            // Handle errors for Class.forName
            e.printStackTrace();
        } finally {
            // finally block used to close resources
            try {
                if (stmt!=null)
                    conn.close();
            } catch(SQLException se) {
            } // do nothing
            try {
                if (conn!=null)
                    conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            } // end finally try
        } // end try
        System.out.println("Goodbye!");
    } // end main
} // end
</code></pre>

<p>The class that saves into the database is:</p>

<pre><code>package Database;

//STEP 1. Import required packages
import java.sql.*;

public class JDBCExampleInsertRecords {
    public static String values;
    public final String table;

    public JDBCExampleInsertRecords (String values, String table) 
    {
        this.values = values;
        this.table = table;
    }

    // JDBC driver name and database URL
    private static String JDBC_DRIVER = "org.h2.Driver";
    private static String DB_URL = "jdbc:h2:file:C:/WAKILI/WAKILIdb";

    //  Database credentials
    private static String USER = "sa";
    private static String PASS = "";

    public static void main () {
        Connection conn = null;
        Statement stmt = null;

        try {
            //STEP 2: Register JDBC driver
            Class.forName(getJDBC_DRIVER());

            //STEP 3: Open a connection
            System.out.println("Connecting to a selected database...");
            conn = DriverManager.getConnection(getDB_URL(), getUSER(), getPASS());
            System.out.println("Connected database successfully...");

            //STEP 4: Execute a query
            System.out.println("Inserting records into the table...");
            stmt = conn.createStatement();

            String sql = "INSERT INTO CLIENT VALUES (NULL, " + (values) + ")";

            stmt.executeUpdate(sql);

            System.out.println("Inserted records into the table...");

        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } finally {
            //finally block used to close resources
            try {
                if (stmt != null)
                    conn.close();
            } catch (SQLException se) {
            } // do nothing
            try {
                if (conn!=null)
                    conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            } //end finally try
        } //end try

        System.out.println("Goodbye!");
    } //end main

    /**
     * @return the JDBC_DRIVER
     */
    public static String getJDBC_DRIVER() {
        return JDBC_DRIVER;
    }

    /**
     * @param aJDBC_DRIVER the JDBC_DRIVER to set
     */
    public static void setJDBC_DRIVER(String aJDBC_DRIVER) {
        JDBC_DRIVER = aJDBC_DRIVER;
    }

    /**
     * @return the DB_URL
     */
    public static String getDB_URL() {
        return DB_URL;
    }

    /**
     * @param aDB_URL the DB_URL to set
     */
    public static void setDB_URL(String aDB_URL) {
        DB_URL = aDB_URL;
    }

    /**
     * @return the USER
     */
    public static String getUSER() {
        return USER;
    }

    /**
     * @param aUSER the USER to set
     */
    public static void setUSER(String aUSER) {
        USER = aUSER;
    }

    /**
     * @return the PASS
     */
    public static String getPASS() {
        return PASS;
    }

    /**
     * @param aPASS the PASS to set
     */
    public static void setPASS(String aPASS) {
        PASS = aPASS;
    }
} //end
</code></pre>

<p>The code that gets the values is in a Class called "AddNewClient" and is as follows:</p>

<pre><code>    public String getValues () {
    String fullNames = fullNamesJTextField.getText();
    String iDNumber = identificationNumberJTextField.getText();
    String pINNumber = pINNumberJTextField.getText();
    String passportNumber = passportNumberJTextField.getText();
    String postOfficeBoxNumber = postOfficeBoxNumberJTextField.getText();
    String postalCode = postalCodeJTextField.getText();
    String telephoneNumberLandline = telephoneNumberLandlineJTextField.getText();
    String telephoneNumberMobile = telephoneNumberMobileJTextField.getText();

    List&lt;String&gt; client = new ArrayList&lt;String&gt;();

    client.add(fullNames);
    client.add(iDNumber);
    client.add(pINNumber);
    client.add(passportNumber);
    client.add(postOfficeBoxNumber);
    client.add(postalCode);
    client.add(telephoneNumberLandline);
    client.add(telephoneNumberMobile);

    Iterator&lt;String&gt; iter = client.iterator();
    StringBuilder sb = new StringBuilder();

    while (iter.hasNext()) {
        sb.append("'").append(iter.next()).append("'");
        if (iter.hasNext())
            sb.append(",");
    }

    return sb.toString();
    }
</code></pre>
