<p><a href="http://www.kospol.gr/204/create-md5-hashes-in-android/">Here</a> is an implementation you can use (updated to use more up to date Java conventions  - <code>for:each</code> loop, <code>StringBuilder</code> instead of <code>StringBuffer</code>):</p>

<pre><code>public static final String md5(final String s) {
    final String MD5 = "MD5";
    try {
        // Create MD5 Hash
        MessageDigest digest = java.security.MessageDigest
                .getInstance(MD5);
        digest.update(s.getBytes());
        byte messageDigest[] = digest.digest();

        // Create Hex String
        StringBuilder hexString = new StringBuilder();
        for (byte aMessageDigest : messageDigest) {
            String h = Integer.toHexString(0xFF &amp; aMessageDigest);
            while (h.length() &lt; 2)
                h = "0" + h;
            hexString.append(h);
        }
        return hexString.toString();

    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    }
    return "";
}
</code></pre>

<p>Although it is not recommended for systems that involve even the basic level of security (MD5 <a href="http://www.mscs.dal.ca/~selinger/md5collision/">is considered broken and can be easily exploited</a>), it is sometimes enough for basic tasks.</p>
