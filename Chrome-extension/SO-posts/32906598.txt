<p>It is possible to put extra data in intents before using them to start another activity.
Intent class provides putExtra() method to put extra data in it.</p>

<p>putExtra() method has several overloads, because you are asking specifically about passing a Set, this one is probably the most relevant:</p>

<p><code>public Intent putExtra (String name, Serializable value)</code></p>

<p>For more detail check this out: <a href="http://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20java.io.Serializable)" rel="nofollow">putExtra(String name, Serializable value)</a></p>

<p>Since you are using HashSets, passing the <code>favs</code> object as it is should work fine since <a href="http://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html" rel="nofollow">HashSet</a> implements Serializable.</p>

<p>So your code would look something like this:</p>

<pre><code>@Override
public boolean onOptionsItemSelected(MenuItem item) {
    int id = item.getItemId();


    if (id == R.id.action_settings) {
        return true;
    } else if (id == R.id.exit_the_app) {
        finish();
        return true;
    } else if (id == R.id.favorites) {
        Intent startfavs = (new Intent(Insulter.this, Favorites.class));
        startfavs.putExtra("favs_set", favs);
        startActivity(startfavs);
        return true;
        }
return super.onOptionsItemSelected(item);
}
</code></pre>

<p>Don't forget that you must also retrieve this data, therefore in your <code>Favorites</code> activity, on <code>onCreate()</code> method you retrieve this data by using</p>

<p><code>public Serializable getSerializableExtra (String name)</code></p>

<p>The relevant piece of code would look something like this: </p>

<p><code>getExtras().getSerializableExtra("favs_set");</code></p>
