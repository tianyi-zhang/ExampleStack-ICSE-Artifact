<p>Using R.anim.fade_out &amp; .R.anim.fade_in you can create an animation which does this. I don't know much about this myself but heres a tutorial regarding animations in android: <a href="http://developerlife.com/tutorials/?p=343" rel="nofollow">Animation Tutorial</a></p>

<p>P.S. This tutorial is not mine thus credit does not go out to me.</p>

<p>Edit: </p>

<pre><code>AnimationSet set = new AnimationSet(true);

Animation animation = new AlphaAnimation(0.0f, 1.0f);
animation.setDuration(50);
set.addAnimation(animation);

animation = new TranslateAnimation(
Animation.RELATIVE_TO_SELF, 0.0f,Animation.RELATIVE_TO_SELF, 0.0f,
Animation.RELATIVE_TO_SELF, -1.0f,Animation.RELATIVE_TO_SELF, 0.0f
);
animation.setDuration(100);
set.addAnimation(animation);

LayoutAnimationController controller = new LayoutAnimationController(set, 0.5f);
l.setLayoutAnimation(controller);
</code></pre>

<p>Fade out Animation</p>

<pre><code>public static Animation runFadeOutAnimationOn(Activity ctx, View target) {
  Animation animation = AnimationUtils.loadAnimation(ctx,android.R.anim.fade_out);
  target.startAnimation(animation);
  return animation;
}
</code></pre>

<p>I'm guessing you can try something like this, I copy pasted the animation from the tutorial I don't know what it does exactly as I have no experience with Android development. Another example could be <a href="http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/view/Animation2.html" rel="nofollow">Example 2</a></p>
