<p>Below is the working code I am using for upload image to the server you can use with AsynTask.</p>

<pre><code>//this method takes Inputs (Image name and Image file path where it stored)
//and after upload it returns json response

public String pushImage(String filepath,String imageName){


    Log.v(TAG, "path is:"+filepath);
    Log.v(TAG, "image name is:"+imageName);
    HttpURLConnection conn = null;

    DataInputStream inStream = null;

    String lineEnd = "\r\n";
    String twoHyphens = "--";
    String boundary =  "---------------------------14737809831466499882746641449";
    int bytesRead, bytesAvailable, bufferSize;
    byte[] buffer;
    int maxBufferSize = 1*1024*1024;


    String reponse_data=null;
    try{
        //------------------ CLIENT REQUEST      

        //set request properties
        // here baseURL is url for uploading image
        URL url = new URL(baseURL);        
        conn = (HttpURLConnection) url.openConnection();        
        conn.setDoInput(true);       
        conn.setDoOutput(true);       
        conn.setUseCaches(false);       
        conn.setRequestMethod("POST");
        conn.setRequestProperty("Connection", "Keep-Alive");
        conn.setRequestProperty("Content-Type", "multipart/form-data;boundary="+boundary);



        //add request body        

        DataOutputStream dos = new DataOutputStream( conn.getOutputStream() );

        dos.writeBytes(lineEnd+twoHyphens + boundary + lineEnd);        

        dos.writeBytes("Content-Disposition: form-data; name=\"uploaded\";filename=\"" + imageName + "\"" + lineEnd);     

        dos.writeBytes("Content-Type: application/octet-stream\r\n\r\n");

        //now add image data


        FileInputStream fileInputStream = new FileInputStream(new File(filepath) );

        bytesAvailable = fileInputStream.available();
        bufferSize = Math.min(bytesAvailable, maxBufferSize);
        buffer = new byte[bufferSize];
        bytesRead = fileInputStream.read(buffer, 0, bufferSize);

        while (bytesRead &gt; 0){
            dos.write(buffer, 0, bufferSize);
            bytesAvailable = fileInputStream.available();
            bufferSize = Math.min(bytesAvailable, maxBufferSize);
            bytesRead = fileInputStream.read(buffer, 0, bufferSize);
        }     

        dos.writeBytes(lineEnd);
        dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);


        fileInputStream.close();
        dos.flush();
        dos.close();
    }
    catch (MalformedURLException ex){
       ex.printStackTrace();
    }
    catch (IOException ioe){
        ioe.printStackTrace();
    }


    //------------------ read the SERVER RESPONSE
    try {
        if(conn !=null){
            inStream = new DataInputStream ( conn.getInputStream() );
        }

        String str=null;

        if(inStream !=null){
             while (( str = inStream.readLine()) != null){
                 Log.e("Debug","Server Response "+str);
                 reponse_data=str;
             }


             inStream.close();
        }


    }
    catch (IOException ioex){
        ioex.printStackTrace();
    }
   return reponse_data;
}
</code></pre>

<p>you can download <strong>commons-io-2.4.jar</strong> from <a href="http://commons.apache.org/io/download_io.cgi" rel="nofollow">this</a> link</p>
