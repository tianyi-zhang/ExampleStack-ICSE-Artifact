<p>Take a look at <a href="http://programmerbruce.blogspot.com/2011/05/deserialize-json-with-jackson-into.html" rel="nofollow">this</a>. Here is a code that I think might help you to get some ideas.</p>

<pre><code>public class MyDeserializer extends JsonDeserializer&lt; Message &gt;
{
@Override
public Message deserialize( JsonParser jp, DeserializationContext arg1 ) throws IOException,
        JsonProcessingException
{
    ObjectMapper mapper = (ObjectMapper) jp.getCodec();  
    ObjectNode root = (ObjectNode) mapper.readTree(jp);  
    Class&lt;? extends Message&gt; subClass = null;  
    Iterator&lt;Entry&lt;String, JsonNode&gt;&gt; elementsIterator = root.getFields();  
    while (elementsIterator.hasNext())  
    {  
      Entry&lt;String, JsonNode&gt; element = elementsIterator.next();  
      String name = element.getKey();  
      if ("foo_id".equals(name))  
      {  
         if(element.getValue().isInt())
            subClass = FooInteger.Class;  
         break;  
      }  
    }  
    if (subClass == null) return null;  
    return mapper.readValue(root, subClass);    
}
}
</code></pre>
