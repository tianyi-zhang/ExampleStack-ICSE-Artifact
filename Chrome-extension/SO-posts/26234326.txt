<p>You can use this class to handle with this:</p>

<pre><code>import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.utils.URLEncodedUtils;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

public class ServiceHandler 
{

    private JSONObject response = null;

    public final static int GET = 1;

    public final static int POST = 2;

    public JSONObject makeServiceCall( String url, int method )
    {

        return this.makeServiceCall( url, method, null );

    }

    public JSONObject makeServiceCall( String url, int method, List&lt;NameValuePair&gt; params )
    {

        try
        {

            DefaultHttpClient httpClient = new DefaultHttpClient();

            HttpEntity httpEntity = null;

            HttpResponse httpResponse = null;

            if( method == POST )
            {

                HttpPost httpPost = new HttpPost( url );

                if( params != null )
                {

                    httpPost.setEntity( new UrlEncodedFormEntity( params, "UTF-8" ) );

                }

                httpResponse = httpClient.execute( httpPost );

            }else if( method == GET )
            {

                if( params != null )
                {

                    String paramString = URLEncodedUtils.format( params, "UTF-8" );

                    url += "?" + paramString;

                }

                HttpGet httpGet = new HttpGet( url );

                //Envia a URL e pega a resposta.
                httpResponse = httpClient.execute( httpGet );

            }

            httpClient = null;

            httpEntity = httpResponse.getEntity();

            httpResponse = null;

            String JSONString = EntityUtils.toString( httpEntity );

            Log.e( "JSON", JSONString );

            try
            {

                response = new JSONObject( JSONString );

            }catch( JSONException e ) { }

            httpEntity = null;

        }catch( UnsupportedEncodingException e ) 
        {

            e.printStackTrace();

        }catch( ClientProtocolException e ) 
        {

            e.printStackTrace();

        }catch( IOException e )
        {

            e.printStackTrace();

        }

        return response;

    }

}
</code></pre>

<p>How to use:</p>

<pre><code>ServiceHandler serviceHandler = new ServiceHandler();

JSONObject jsonObj = serviceHandler.makeServiceCall( URL, ServiceHandler.POST OR ServiceHandler.GET, PARAMS );
</code></pre>
