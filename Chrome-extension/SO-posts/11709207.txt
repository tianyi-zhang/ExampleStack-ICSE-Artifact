<p>The data that you setup as a <code>string-array</code> is not properly built to be shown in a <code>ListView</code>. It should be like this:</p>

<pre><code>    &lt;string-array name="exams"&gt;
        &lt;item&gt;@array/exam1&lt;/item&gt;
        &lt;item&gt;@array/exam2&lt;/item&gt;
        &lt;item&gt;@array/exam3&lt;/item&gt;
        &lt;item&gt;@array/exam4&lt;/item&gt;
    &lt;/string-array&gt;
    &lt;string-array name="exam1"&gt;
        &lt;item&gt;One&lt;/item&gt;
        &lt;item&gt;11111111One&lt;/item&gt;
        &lt;item&gt;25/7/12&lt;/item&gt;
    &lt;/string-array&gt;
    &lt;string-array name="exam2"&gt;
        &lt;item&gt;Two&lt;/item&gt;
        &lt;item&gt;2222222222Two&lt;/item&gt;
        &lt;item&gt;28/7/12&lt;/item&gt;
    &lt;/string-array&gt;
    &lt;string-array name="exam3"&gt;
        &lt;item&gt;Three&lt;/item&gt;
        &lt;item&gt;333333333333Three&lt;/item&gt;
        &lt;item&gt;29/1/10&lt;/item&gt;
    &lt;/string-array&gt;
    &lt;string-array name="exam4"&gt;
        &lt;item&gt;Four&lt;/item&gt;
        &lt;item&gt;444444444Four&lt;/item&gt;
        &lt;item&gt;21/2/11&lt;/item&gt;
    &lt;/string-array&gt;
</code></pre>

<p>To parse this in a data structure good for a <code>ListView</code> you would write(part of the code comes from this answer: <a href="http://stackoverflow.com/questions/4326037/android-resource-array-of-arrays">Android Resource - Array of Arrays</a> ):</p>

<pre><code> Resources res = getResources();
        ArrayList&lt;Exam&gt; extractedData = new ArrayList&lt;Exam&gt;();
        TypedArray ta = res.obtainTypedArray(R.array.exams);
        int n = ta.length();
        for (int i = 0; i &lt; n; ++i) {
            int id = ta.getResourceId(i, 0);
            if (id &gt; 0) {
                extractedData.add(new Exam(res.getStringArray(id)));
            } else {
                // something wrong with the XML, don't add anything
            }
        }
        ta.recycle();
</code></pre>

<p>The <code>Exam</code> class is a simple data holder class:</p>

<pre><code>public class Exam {
    String name, desc, date;

    public Exam(String[] dataArray) {
        this.name = dataArray[0];
        this.desc = dataArray[1];
        this.date = dataArray[2];
    }
}
</code></pre>

<p>Then you would use the <code>extractedData</code> <code>ArrayList</code> in a custom adapter with your row layout:</p>

<pre><code>public class CustomAdapter extends ArrayAdapter&lt;Exam&gt; {

    private LayoutInflater mInflater;

    public CustomAdapter(Context context, int textViewResourceId,
            List&lt;Exam&gt; objects) {
        super(context, textViewResourceId, objects);
        mInflater = LayoutInflater.from(context);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if (convertView == null) {
            convertView = mInflater.inflate(
                    R.layout.your_layout_file, parent, false);
        }
        Exam e = getItem(position);
        ((TextView) convertView.findViewById(R.id.name)).setText(e.name);
        ((TextView) convertView.findViewById(R.id.desc)).setText(e.desc);
        ((TextView) convertView.findViewById(R.id.date)).setText(e.date);
        return convertView;
    }

}
</code></pre>
