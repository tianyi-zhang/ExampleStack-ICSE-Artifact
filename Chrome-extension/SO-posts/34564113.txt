<pre><code>public class CustomAdapter extends RecyclerView.Adapter&lt;CustomAdapter.ViewHolder&gt; {

private int[] mCardTypes;

public static final int TIME = 0;
public static final int MAP = 1;
public static final int COST = 2;
// create this variable
private static ParkTimeViewHolder parkTimeViewholder;

//call this function in mainactivity
public static void startChrono(){
    if(parkTimeViewholder!=null){
    // start chrono here using parkTimeViewholder variable
    }
}

public static class ViewHolder extends RecyclerView.ViewHolder {
    public ViewHolder(View itemView) {
        super(itemView);
    }
}

public CustomAdapter(MainActivity main, int[] cardTypes) {
    this.main = main;
    mCardTypes = cardTypes;
}

public class ParkTimeViewHolder extends ViewHolder {
    Chronometer mTotalTime;
    Chronometer mRemainingTime;

    public ParkTimeViewHolder(View itemView) {
        super(itemView);
        this.mTotalTime = (Chronometer) itemView.findViewById(R.id.chrono_total);
        this.mRemainingTime = (Chronometer) itemView.findViewById(R.id.chrono_remaining);
      // i can only run choro.start() here
    }
}

public class MapViewHolder extends ViewHolder {
    //MapView

    public MapViewHolder(View itemView) {
        super(itemView);
        // TODO: 24-Dec-15 add map view
    }
}

public class CostViewHolder extends ViewHolder {
    TextView mCost;

    public CostViewHolder(View itemView) {
        super(itemView);
        this.mCost = (TextView) itemView.findViewById(R.id.text_view_cost);
        mCost.setText("20000");
    }
}


@Override
public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
    View v;
    if (viewType == TIME) {
        v = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.card_view_time, parent, false);
        return new ParkTimeViewHolder(v);
    } else if (viewType == MAP) {
        v = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.card_view_map, parent, false);
        return new MapViewHolder(v);
    } else {
        v = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.card_view_cost, parent, false);
        return new CostViewHolder(v);
    }
}

@Override
public void onBindViewHolder(ViewHolder holder, int position) {
    if(holder.getItemViewType() == TIME) {
        ParkTimeViewHolder myHolder = (ParkTimeViewHolder) holder;
        //initiate parkTimeViewholder variable
        this.parkTimeViewholder = myHolder;
    } else
    if(holder.getItemViewType() == MAP) {
        MapViewHolder myHolder = (MapViewHolder) holder;
    } else
    if(holder.getItemViewType() == COST) {
        CostViewHolder myHolder = (CostViewHolder) holder;
    }
}

@Override
public int getItemCount() {
    return mCardTypes.length;
}

@Override
public int getItemViewType(int position) {
    return mCardTypes[position];
}
</code></pre>
