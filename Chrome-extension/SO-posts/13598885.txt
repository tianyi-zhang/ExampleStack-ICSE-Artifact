<p>hi it's simple refer this link <a href="http://wptrafficanalyzer.in/blog/android-reverse-geocoding-using-geocoder-at-touched-location-in-google-map/" rel="nofollow">Click Here</a></p>

<pre><code>import java.io.IOException;
import java.util.List;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.location.Address;
import android.location.Geocoder;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.Menu;
import android.widget.TextView;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.Overlay;
import com.google.android.maps.OverlayItem;

public class MainActivity extends MapActivity {

    private MapView mapView;
    private TextView tvLocation;

    // Handles Taps on the Google Map
    Handler h = new Handler(){

        // Invoked by the method onTap()
        // in the class CurrentLocationOverlay
        @Override
        public void handleMessage(Message msg) {
            Bundle data = msg.getData();

            // Getting the Latitude of the location
            int latitude = data.getInt("latitude");

            // Getting the Longitude of the location
            int longitude = data.getInt("longitude");

            // Show the location in the Google Map
            showLocation(latitude,longitude);
        }
    };

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Getting reference to map_view available in activity_main.xml
        mapView = (MapView) findViewById(R.id.map_view);

        // Getting reference to tv_location available in activity_main.xml
        tvLocation = (TextView) findViewById(R.id.tv_location);

        // Default Latitude
        int latitude = 28426365;

        // Default Longitude
        int longitude = 77320393;

        // Show the location in the Google Map
        showLocation(latitude,longitude);
    }

    private void showLocation(int latitude, int longitude){

        // Setting Zoom Controls
        mapView.setBuiltInZoomControls(true);

        // Getting the MapController
        MapController mapController = mapView.getController();

        // Getting Overlays of the map
        List&lt;Overlay&gt; overlays = mapView.getOverlays();

        // Getting Drawable object corresponding to a resource image
        Drawable drawable = getResources().getDrawable(R.drawable.marker);

        // Creating an ItemizedOverlay
        TouchedLocationOverlay locationOverlay = new TouchedLocationOverlay(drawable,h);

        // Getting the MapController
        MapController mc = mapView.getController();

        // Creating an instance of GeoPoint, to display in Google Map
        GeoPoint p = new GeoPoint(
                        latitude,
                        longitude
                    );

        // Locating the point in the Google Map
        mc.animateTo(p);

        // Creating an OverlayItem to mark the point
        OverlayItem overlayItem = new OverlayItem(p, "Item", "Item");

        // Adding the OverlayItem in the LocationOverlay
        locationOverlay.addOverlay(overlayItem);

        // Clearing the overlays
        overlays.clear();

        // Adding locationOverlay to the overlay
        overlays.add(locationOverlay);

        // Redraws the map
        mapView.invalidate();

        Double[] lat_long = new Double[] { latitude/1E6, longitude/1E6 };

        // Executing ReverseGeocodingTask to get Address
        new ReverseGeocodingTask(getBaseContext()).execute(lat_long);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.activity_main, menu);
        return false;
    }

    @Override
    protected boolean isRouteDisplayed() {
        // TODO Auto-generated method stub
        return false;
    }

    private class ReverseGeocodingTask extends AsyncTask&lt;Double, Void, String&gt;{
        Context mContext;

        public ReverseGeocodingTask(Context context){
            super();
            mContext = context;
        }

        @Override
        protected String doInBackground(Double... params) {
            Geocoder geocoder = new Geocoder(mContext);
            double latitude = params[0].doubleValue();
            double longitude = params[1].doubleValue();

            List&lt;Address&gt; addresses = null;
            String addressText="";

            try {
                addresses = geocoder.getFromLocation(latitude, longitude,1);
            } catch (IOException e) {
                e.printStackTrace();
            }

            if(addresses != null &amp;&amp; addresses.size() &gt; 0 ){
                Address address = addresses.get(0);

                addressText = String.format("%s, %s, %s",
                        address.getMaxAddressLineIndex() &gt; 0 ? address.getAddressLine(0) : "",
                        address.getLocality(),
                        address.getCountryName());
            }

            return addressText;
        }

        @Override
        protected void onPostExecute(String addressText) {
            // Setting address of the touched Position
            tvLocation.setText(addressText);
        }
    }
}
</code></pre>
