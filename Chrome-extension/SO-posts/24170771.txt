<p>You code had a misplaced } in it that made the class finish to soon. This bracket was suposed to be at the very end of you code. So I moved it for you I also moved your imports to the top. And also TopLigaActivity is now a nested class inside Update. If you do not want this you should move it to it's own file so that there's a file named Update and a file named TopLigaActivity. You'll have to do this because you cannot difine two different classes in one file (unless it's a nested class). By the way the bracket I move was the one directly above your imports.<br><br>
Here is your 'new' code:<br></p>

<pre><code>import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.HashMap;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import com.example.updater.AutomaticUpdaterActivity;

import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ListActivity;
import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.widget.ListAdapter;
import android.widget.SimpleAdapter;

public class Update extends AutomaticUpdaterActivity {
private Object context;

protected String doInBackground(String... sUrl) {
    String path = "http://192.168.1.20/android/TopLiga.apk";
    try {
        URL url = new URL(sUrl[0]);
        URLConnection connection = url.openConnection();
        connection.connect();

        int fileLength = connection.getContentLength();

        InputStream input = new BufferedInputStream(url.openStream());
        OutputStream output = new FileOutputStream(path);

        byte data[] = new byte[1024];
        long total = 0;
        int count;
        while ((count = input.read(data)) != -1) {
            total += count;
            publishProgress((int) (total * 100 / fileLength));
            output.write(data, 0, count);
        }

        output.flush();
        output.close();
        input.close();
    } catch (Exception e) {
        Log.e("YourApp", "Well that didn't work out so well...");
        Log.e("YourApp", e.getMessage());
    }
    return path;
}

private void publishProgress(int i) {

}

@Override
protected void onPostExecute(String path) {
    Intent i = new Intent();
    i.setAction(Intent.ACTION_VIEW);
    i.setDataAndType(Uri.fromFile(new File(path)), "application/vnd.android.package-archive" );
    Log.d("Lofting", "About to install new .apk");
    ((Activity) this.context).startActivity(i);
}




@SuppressLint("ParserError")
public class TopLigaActivity extends ListActivity {

    static final String URL = "http://minesemhamachi.no-ip.org/android/usersdata.xml";
    static final String KEY_ITEM = "mydata"; // nodo pai
    static final String KEY_ID = "id";
    static final String KEY_username = "Username";
    static final String KEY_password = "Password";

    XMLParser parser;

    @SuppressLint({ "ParserError", "NewApi" })
    @Override
    public void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);

        ConnectivityManager connMgr = (ConnectivityManager) 
                getSystemService(Context.CONNECTIVITY_SERVICE);
            NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();
            if (networkInfo != null &amp;&amp; networkInfo.isConnected()) {
                parser = new XMLParser();
                new DownloadXml().execute(URL);
            } 
    }

    private void setListView(String xml) {
        ArrayList&lt;HashMap&lt;String, String&gt;&gt; menuItems = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();

        // Obter elemento (DOM)
        Document doc = parser.getDomElement(xml); 

        NodeList nl = doc.getElementsByTagName(KEY_ITEM);
        // Iteração sobre todos os nodos &lt;item&gt;
        for (int i = 0; i &lt; nl.getLength(); i++) {
            // Criação de HashMap
            HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
            Element e = (Element) nl.item(i);
            // Adição de cada nodo filho ao HashMap key =&gt; value
            map.put(KEY_ID, parser.getValue(e, KEY_ID));
            map.put(KEY_username, parser.getValue(e, KEY_username));
            map.put(KEY_password, parser.getValue(e, KEY_password));

            // adição da HashList ao ArrayList
            menuItems.add(map);
        }

        // Adição dos menuItems ao ListView
        ListAdapter adapter = new SimpleAdapter(this, menuItems,
                R.layout.list_item,
                new String[] { KEY_username, KEY_password }, new int[] {
                        R.id.name, R.id.score });

        setListAdapter(adapter);

    }


    private class DownloadXml extends AsyncTask&lt;String, Integer, String&gt; {

        @Override
        protected String doInBackground(String... urls) {           
            return  parser.getXmlFromUrl(urls[0]);            
        }

        @Override
        protected void onPostExecute(String result) {
            setListView(result);
       }

    }
}
}
</code></pre>

<p>I hope that this solves your problem.</p>

<p>P.S. you could also make Update a subclass of TopLigaActivity.</p>
