<p>I would first suggest you to add a type for your Array Adapter</p>

<pre><code>public class GridViewPhotoAdapter extends ArrayAdapter&lt;PhotoGridItem&gt; {
...
}
</code></pre>

<p>also in your PhotoTab.java</p>

<pre><code>ArrayAdapter&lt;PhotoGridItem&gt; adapter;
</code></pre>

<p>After these two steps, you would probably get some errors or warnings now. If not, check this line in your PhotoTab.java</p>

<pre><code>adapter.add(BitmapFactory.decodeResource(getResources(), R.drawable.ic_photo_placeholder));
</code></pre>

<p>This line looks especially suspicious for me, because you're adding a Bitmap to and Array Adapter of PhotoGridItem. I guess what you want is:</p>

<pre><code>adapter.add(new PhotoGridItem(BitmapFactory.decodeResource(getResources(), R.drawable.ic_photo_placeholder)));
</code></pre>

<h1>Update</h1>

<p>I would also suggest you not to pass in an ArrayList in your constructor, because ArrayAdapter already backed by an array. I didn't test the following code, but to illustrate my idea, here is the code:</p>

<pre><code>public class GridViewPhotoAdapter extends ArrayAdapter&lt;PhotoGridItem&gt; {

    public Context context;
    private int resourceId;

    public GridViewPhotoAdapter(Context context, int layoutResourceId) {
        super(context, layoutResourceId, photos);
        this.context = context;
        this.resourceId = layoutResourceId;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        View row = convertView;
        ViewHolder holder;

        if (row == null) {
            LayoutInflater inflater = ((Activity) context).getLayoutInflater();
            row = inflater.inflate(resourceId, parent, false);
            holder = new ViewHolder();
            holder.image = (ImageView) row.findViewById(R.id.photo_grid_view);
            row.setTag(holder);
        } else {
            holder = (ViewHolder) row.getTag();
        }


        PhotoGridItem photoGridItem = getItem(position);
        Bitmap bm = photoGridItem.getImage();
        holder.image.setImageBitmap(bm);

        return row;
    }

    static class ViewHolder {
        ImageView image;
    }
}
</code></pre>

<p>And then in your PhotoTab.java:</p>

<pre><code>@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container,
                         Bundle savedInstanceState) {

    // Inflate the layout for this fragment
    View v = inflater.inflate(R.layout.photo_tab, container, false);

    // with fragments, make sure you include the rootView when finding id
    gridView = (GridView) v.findViewById(R.id.photo_grid);
    adapter = new GridViewPhotoAdapter(getActivity(), R.layout.photo_grid_item);
    // Set the Adapter to GridView
    gridView.setAdapter(adapter);

    adapter.addAll(loadSDCard());

    // add the default icons remaining, to GridView, if less than 24 files on SD card
    for (int i = 0; i &lt; (24 - photoList.size()); i++) {
        adapter.add(
            new PhotoGridItem(
                BitmapFactory.decodeResource(getResources(), R.drawable.ic_photo_placeholder)));
    }

    adapter.notifyDataSetChanged();

    return v;
}
</code></pre>
