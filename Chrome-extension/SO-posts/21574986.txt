<p>Actually   there is not any function to achieve this . If you want to achieve this you have to edit the source of library .</p>

<p>Make a new function in <code>Zoom.java</code>(Only change in value of <code>centerX</code> &amp; <code>centerY</code>)</p>

<pre><code>public void apply(int zoom_axis,double x,double y) {
    if (mChart instanceof XYChart) {
      int scales = mRenderer.getScalesCount();
      for (int i = 0; i &lt; scales; i++) {
        double[] range = getRange(i);
        checkRange(range, i);
        double[] limits = mRenderer.getZoomLimits();

        double centerX = x;
        double centerY = y;
        double newWidth = range[1] - range[0];
        double newHeight = range[3] - range[2];
        double newXMin = centerX - newWidth / 2;
        double newXMax = centerX + newWidth / 2;
        double newYMin = centerY - newHeight / 2;
        double newYMax = centerY + newHeight / 2;

        // if already reached last zoom, then it will always set to reached
        if (i == 0) {
          limitsReachedX = limits != null &amp;&amp; (newXMin &lt;= limits[0] || newXMax &gt;= limits[1]);
          limitsReachedY = limits != null &amp;&amp; (newYMin &lt;= limits[2] || newYMax &gt;= limits[3]);
        }

        if (mZoomIn) {
          if (mRenderer.isZoomXEnabled() &amp;&amp; (zoom_axis == ZOOM_AXIS_X || zoom_axis == ZOOM_AXIS_XY)) {
            if (limitsReachedX &amp;&amp; mZoomRate &lt; 1) {
              // ignore pinch zoom out once reached X limit
            } else {
              newWidth /= mZoomRate;
            }
          }

          if (mRenderer.isZoomYEnabled() &amp;&amp; (zoom_axis == ZOOM_AXIS_Y || zoom_axis == ZOOM_AXIS_XY)) {
            if (limitsReachedY &amp;&amp; mZoomRate &lt; 1) {
            } else {
              newHeight /= mZoomRate;
            }
          }
        } else {
          if (mRenderer.isZoomXEnabled() &amp;&amp; !limitsReachedX
              &amp;&amp; (zoom_axis == ZOOM_AXIS_X || zoom_axis == ZOOM_AXIS_XY)) {
            newWidth *= mZoomRate;
          }

          if (mRenderer.isZoomYEnabled() &amp;&amp; !limitsReachedY
              &amp;&amp; (zoom_axis == ZOOM_AXIS_Y || zoom_axis == ZOOM_AXIS_XY)) {
            newHeight *= mZoomRate;
          }
        }

        double minX, minY;
        if (limits != null) {
          minX = Math.min(mRenderer.getZoomInLimitX(), limits[1] - limits[0]);
          minY = Math.min(mRenderer.getZoomInLimitY(), limits[3] - limits[2]);
        } else {
          minX = mRenderer.getZoomInLimitX();
          minY = mRenderer.getZoomInLimitY();
        }
        newWidth = Math.max(newWidth, minX);
        newHeight = Math.max(newHeight, minY);

        if (mRenderer.isZoomXEnabled() &amp;&amp; (zoom_axis == ZOOM_AXIS_X || zoom_axis == ZOOM_AXIS_XY)) {
          newXMin = centerX - newWidth / 2;
          newXMax = centerX + newWidth / 2;
          setXRange(newXMin, newXMax, i);
        }
        if (mRenderer.isZoomYEnabled() &amp;&amp; (zoom_axis == ZOOM_AXIS_Y || zoom_axis == ZOOM_AXIS_XY)) {
          newYMin = centerY - newHeight / 2;
          newYMax = centerY + newHeight / 2;
          setYRange(newYMin, newYMax, i);
        }
      }
    } else {
      DefaultRenderer renderer = ((RoundChart) mChart).getRenderer();
      if (mZoomIn) {
        renderer.setScale(renderer.getScale() * mZoomRate);
      } else {
        renderer.setScale(renderer.getScale() / mZoomRate);
      }
    }
    notifyZoomListeners(new ZoomEvent(mZoomIn, mZoomRate));
  }
</code></pre>

<p>Also in <code>GraphicalView.java</code></p>

<pre><code>public void zoomIn(double x,double y ) {
    if (mZoomIn != null) {
      mZoomIn.apply(Zoom.ZOOM_AXIS_XY,x,y);
      repaint();
    }
  }
</code></pre>

<p>Now use this in ur <code>onclick()</code> </p>

<pre><code>mChartView.zoomIn(mChartView.toRealPoint(0)[0],mChartView.toRealPoint(0)[1]);
</code></pre>
