<p>You just need to setenabled property of the button for this. If two textbox has no text then disable button and if they have text then enable button. </p>

<p>Here's example</p>

<pre><code>String str1, str2;

str1 = word.getText().toString();
str2 = answer.getText().toString();

if(!(str1.equals("")) &amp;&amp; !(str2.equals("")))
{
  teach.setEnabled(true);
}
else
{
  teach.setEnabled(false);
}
</code></pre>

<p><strong>EDIT</strong></p>

<p>If you want to check as soon as any of edittext get changed then you need to use textchangelistner for that.</p>

<p>Here I made small example for it. It enables button only when 2 edittext have any of text.
Hope this will help you.</p>

<pre><code>public class TSActivity extends Activity {

     String str = "";
     String str1 = "";
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        final Button btn = (Button)findViewById(R.id.btn);
        TextView txt = (TextView)findViewById(R.id.text);
        TextView txt1 = (TextView)findViewById(R.id.text1);
        btn.setEnabled(false);


        txt.addTextChangedListener(new TextWatcher() {

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                // TODO Auto-generated method stub
            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                    int after) {
                // TODO Auto-generated method stub
            }

            @Override
            public void afterTextChanged(Editable s) {
                // TODO Auto-generated method stub

                str = s.toString();
                if( !(str.equals("")) &amp;&amp; !(str1.equals("")) )
                {
                    btn.setEnabled(true);
                }
                else
                {
                    btn.setEnabled(false);
                }
            }
        });
 /**************************************************************************************************/       
        txt1.addTextChangedListener(new TextWatcher() {

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                // TODO Auto-generated method stub              
            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                    int after) {
                // TODO Auto-generated method stub              
            }

            @Override
            public void afterTextChanged(Editable s) {
                // TODO Auto-generated method stub

                str1 = s.toString();
                if( !(str.equals("")) &amp;&amp; !(str1.equals("")) )
                {
                    btn.setEnabled(true);
                }
                else
                {
                    btn.setEnabled(false);
                }
            }
        });
    }  
}
</code></pre>

<p>Thanks...</p>
