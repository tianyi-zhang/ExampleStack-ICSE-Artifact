<p>There is a token filter which enables this pretty easily, the <a href="https://lucene.apache.org/core/5_3_1/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html" rel="nofollow"><code>KeywordRepeatFilter</code></a> (<code>SpanishLightStemFilter</code> <em>does</em> respect the KeywordAttribute).  Simply add that into your analysis chain just before the Stemmer.  For SpanishAnalyzer, the <code>createComponents</code> method would look like this:</p>

<pre><code>@Override
protected TokenStreamComponents createComponents(String fieldName) {
    final Tokenizer source;
    if (getVersion().onOrAfter(Version.LUCENE_4_7_0)) {
        source = new StandardTokenizer();
    } else {
        source = new StandardTokenizer40();
    }
    TokenStream result = new StandardFilter(source);
    result = new LowerCaseFilter(result);
    result = new StopFilter(result, stopwords);
    if(!stemExclusionSet.isEmpty())
        result = new SetKeywordMarkerFilter(result, stemExclusionSet);
    result = new KeywordRepeatFilter(result);
    result = new SpanishLightStemFilter(result);
    return new TokenStreamComponents(source, result);
}
</code></pre>

<p>This won't allow you explicitly search <em>only unstemmed terms</em>, but it will keep the original terms at the same positions as the stems, allowing them to be factored into phrase queries easily.  If you do need to explicitly search only stemmed, or only unstemmed, terms then indexing in separate fields would really be the better approach.</p>
