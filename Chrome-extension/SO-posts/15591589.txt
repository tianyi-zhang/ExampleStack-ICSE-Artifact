<p>This is the best (and shortest) working solution I've found </p>

<p><a href="http://faruk.akgul.org/blog/javas-missing-algorithm-biginteger-sqrt/" rel="nofollow">http://faruk.akgul.org/blog/javas-missing-algorithm-biginteger-sqrt/</a> </p>

<p>Here is the code:</p>

<pre><code>  public static BigInteger sqrt(BigInteger n) {
    BigInteger a = BigInteger.ONE;
    BigInteger b = new BigInteger(n.shiftRight(5).add(new BigInteger("8")).toString());
    while(b.compareTo(a) &gt;= 0) {
      BigInteger mid = new BigInteger(a.add(b).shiftRight(1).toString());
      if(mid.multiply(mid).compareTo(n) &gt; 0) b = mid.subtract(BigInteger.ONE);
      else a = mid.add(BigInteger.ONE);
    }
    return a.subtract(BigInteger.ONE);
  }
</code></pre>

<p>I've tested it and it's working correctly (and seems fast)</p>
