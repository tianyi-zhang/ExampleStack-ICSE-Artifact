<p>The <em>shortest &amp; easiest solution</em> for the <strong>ListView inside a ScrollView</strong> problem.</p>

<p>You do not have to do anything special in <strong>layout.xml</strong> file nor handle anything on the parent ScrollView. <em>You only have to handle the child ListView</em>. <strong>You can also use this code to use any type of child view inside a ScrollView &amp; perform Touch operations.</strong></p>

<p>Just add these lines of code in your java class :</p>

<pre><code>ListView lv = (ListView) findViewById(R.id.layout_lv);
lv.setOnTouchListener(new OnTouchListener() {
    // Setting on Touch Listener for handling the touch inside ScrollView
    @Override
    public boolean onTouch(View v, MotionEvent event) {
    // Disallow the touch request for parent scroll on touch of child view
    v.getParent().requestDisallowInterceptTouchEvent(true);
    return false;
    }
});
</code></pre>

<p>If you put <strong><em>ListView inside a ScrollView</strong> then all the <strong>ListView does not stretch to its full height</em></strong>. Below is a method to fix this issue.</p>

<pre><code>/**** Method for Setting the Height of the ListView dynamically.
 **** Hack to fix the issue of not showing all the items of the ListView
 **** when placed inside a ScrollView  ****/
public static void setListViewHeightBasedOnChildren(ListView listView) {
    ListAdapter listAdapter = listView.getAdapter();
    if (listAdapter == null)
        return;

    int desiredWidth = MeasureSpec.makeMeasureSpec(listView.getWidth(), MeasureSpec.UNSPECIFIED);
    int totalHeight = 0;
    View view = null;
    for (int i = 0; i &lt; listAdapter.getCount(); i++) {
        view = listAdapter.getView(i, view, listView);
        if (i == 0)
            view.setLayoutParams(new ViewGroup.LayoutParams(desiredWidth, LayoutParams.WRAP_CONTENT));

        view.measure(desiredWidth, MeasureSpec.UNSPECIFIED);
        totalHeight += view.getMeasuredHeight();
    }
    ViewGroup.LayoutParams params = listView.getLayoutParams();
    params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));
    listView.setLayoutParams(params);
}
</code></pre>

<p><strong><em>To use this method just pass the ListView inside this method :</em></strong></p>

<pre><code>ListView list = (ListView) view.findViewById(R.id.ls);
setListViewHeightBasedOnChildren(list);
</code></pre>

<p><strong>For using with ExpandableListView</strong>  - credit <strong><em>Benny</em></strong></p>

<pre><code>ExpandableListView: view = listAdapter.getView(0, view, listView);
int widthMeasureSpec = View.MeasureSpec.makeMeasureSpec(ViewGroup.LayoutParams.MATCH_PARENT, View.MeasureSpec.EXACTLY);
int heightMeasureSpec = View.MeasureSpec.makeMeasureSpec(ViewGroup.LayoutParams.WRAP_CONTENT, View.MeasureSpec.EXACTLY);
view.measure(widthMeasureSpec, heightMeasureSpec);
</code></pre>

<p><strong>For ListView with variable items height</strong> use the below link :</p>

<p><a href="http://stackoverflow.com/questions/6210895/listview-inside-scrollview-is-not-scrolling-on-android/17503823#17503823">ListView inside ScrollView is not scrolling on Android</a></p>

<p><strong>For Library to directly implementing in your code</strong> - credit <a href="https://github.com/PaoloRotolo/">Paolo Rotolo</a></p>

<p><a href="https://github.com/PaoloRotolo/ExpandableHeightListView">https://github.com/PaoloRotolo/ExpandableHeightListView</a></p>
