<p>For Apache HttpClient 4.4:  </p>

<pre><code>HttpClientBuilder b = HttpClientBuilder.create();

SSLContext sslContext = new SSLContextBuilder().loadTrustMaterial(null, new TrustStrategy() {
    public boolean isTrusted(X509Certificate[] arg0, String arg1) throws CertificateException {
        return true;
    }
}).build();
b.setSslcontext( sslContext);

// or SSLConnectionSocketFactory.getDefaultHostnameVerifier(), if you don't want to weaken
HostnameVerifier hostnameVerifier = SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;

SSLConnectionSocketFactory sslSocketFactory = new SSLConnectionSocketFactory(sslContext, hostnameVerifier);
Registry&lt;ConnectionSocketFactory&gt; socketFactoryRegistry = RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()
        .register("http", PlainConnectionSocketFactory.getSocketFactory())
        .register("https", sslSocketFactory)
        .build();

// allows multi-threaded use
PoolingHttpClientConnectionManager connMgr = new PoolingHttpClientConnectionManager( socketFactoryRegistry);
b.setConnectionManager( connMgr);

HttpClient client = b.build();
</code></pre>

<p>This is extracted from our actual working implementation. </p>

<p>The other answers are popular, but for HttpClient 4.4 they don't work. I spent hours trying &amp; exhausting possibilities, but there seems to have been extremely major API change &amp; relocation at 4.4.</p>

<p>See also a slightly fuller explanation at: <a href="http://literatejava.com/networks/ignore-ssl-certificate-errors-apache-httpclient-4-4/">http://literatejava.com/networks/ignore-ssl-certificate-errors-apache-httpclient-4-4/</a></p>

<p>Hope that helps!</p>
