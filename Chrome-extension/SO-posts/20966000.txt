<p>Call the service from the Activity because no need of receiver:</p>

<pre><code>Calendar ctest = Calendar.getInstance();
    ctest.add(Calendar.MINUTE, 1);
     Intent myIntent = new Intent(Appointments.this, MyAlarmService.class);
      pendingIntent = PendingIntent.getBroadcast(Appointments.this, 0, myIntent,0);
     AlarmManager alarmManager = (AlarmManager)getSystemService(ALARM_SERVICE);
      alarmManager.set(AlarmManager.RTC, ctest.getTimeInMillis(), pendingIntent);
startService(myIntent );
</code></pre>

<p>After that change your MyAlarmService.class by the following code:</p>

<pre><code>    @Override   
    public void onCreate() 
    {   
      super.onCreate(); 

    }

    @Override   
    public int onStartCommand(Intent intent, int flags, int startId) 
    {   


        NotificationManager mManager = (NotificationManager) this.getApplicationContext().getSystemService(this.getApplicationContext().NOTIFICATION_SERVICE);
           Intent intent1 = new Intent(this.getApplicationContext(),MainActivity1.class);

           Notification notification = new Notification(R.drawable.ic_launcher,"This is a test message!", System.currentTimeMillis());
           intent1.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP| Intent.FLAG_ACTIVITY_CLEAR_TOP);

           PendingIntent pendingNotificationIntent = PendingIntent.getActivity( this.getApplicationContext(),0, intent1,PendingIntent.FLAG_UPDATE_CURRENT);
           notification.flags |= Notification.FLAG_AUTO_CANCEL;
           notification.setLatestEventInfo(this.getApplicationContext(), "AlarmManagerDemo", "This is a test message!", pendingNotificationIntent);

           mManager.notify(0, notification);
        return 0;

    }
</code></pre>

<p>It will work. try this and let me know.</p>
