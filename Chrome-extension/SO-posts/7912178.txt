<p>You can never get someone elses location simply from the mobile number, that is like stalking.  </p>

<p>Google provide a service called <a href="http://www.google.co.uk/latitude">Latitude</a> which is a much better, legal way of doing this.</p>

<hr>

<p>Otherwise, if the two uses have the same application, they should push their location (obtained from the Cell ID or GPS) to a Web Server (which you will handle). You can then exchange the location coordinates using your web-service. For reference, have a look at the Table 1 <a href="http://msdn.microsoft.com/en-us/library/ms980225.aspx#v35go_topic2">over here</a></p>

<hr>

<p>Code to detect SMS messages </p>

<pre><code>public class IncomingSmsCapture extends BroadcastReceiver {
@Override
public void onReceive(Context context, Intent intent) {
Bundle bundle = intent.getExtras();       
SmsMessage[] msgs = null;
String data = "";           
if (bundle != null)
{
    Object[] pdus = (Object[]) bundle.get("pdus");
    msgs = new SmsMessage[pdus.length];           
    for (int i=0; i&lt;msgs.length; i++){
    msgs[i] = SmsMessage.createFromPdu((byte[])pdus[i]);               
    String sender = msgs[i].getOriginatingAddress();      
    data = msgs[i].getMessageBody().toString(); 
    // parse the data and extract the location, then convert to an Address using the GeoCoder. 
}    }   }   }
</code></pre>
