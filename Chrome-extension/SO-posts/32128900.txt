<p>I could not guess that it would be a framework issue. But after I spent hard time on analyzing it I could find that destroyItem() in FragmentStatePagerAdapter is not removing the fragment for which getItemPosition() returned POSITION_NONE. It assigns null but it does not remove the item. Below is that method from original FragmentStatePagerAdapter. And you see I have added two lines of code to remove the fragment explicitly.</p>

<pre><code>    public void destroyItem(ViewGroup container, int position, Object object) {
        Fragment fragment = (Fragment)object;
        if(this.mCurTransaction == null) {
            this.mCurTransaction = this.mFragmentManager.beginTransaction();
        }

        while(this.mSavedState.size() &lt;= position) {
            this.mSavedState.add(null);
        }

        this.mSavedState.set(position, this.mFragmentManager.saveFragmentInstanceState(fragment));
        this.mFragments.set(position, null);

        /***** Below are the two lines I have added  
        in addition to this original method from Android. ******/
        this.mFragments.remove(position);
        this.mSavedState.remove(position);

        this.mCurTransaction.remove(fragment);
    }
</code></pre>

<p>As I could see clearly in the log that the index of pages after a page is deleted is not reordered properly.</p>

<pre><code>InnerFragment{3e50591d #0 id=0x7f10008d}
InnerFragment{ccaf792 #1 id=0x7f10008d}
InnerFragment{16c61563 #2 id=0x7f10008d}
InnerFragment{229e6a19 #4 id=0x7f10008d}
InnerFragment{2a1cfade #5 id=0x7f10008d}
</code></pre>

<p>I had deleted the 3rd position. Above is the list of fragments in the container where you can see the index #3 is missed. That is because there is an element which is null..it is not completely removed but it is just null referenced by the original code if you observe.<br>
My case is that I should be able to delete any page and should be able to add a new page at the end.<br>
So, I explicitly removed the object with the lines as in above destroyItem() method. And it worked.  </p>

<p>Last but not least, I found this link after I got my answer. See this <a href="https://code.google.com/p/android/issues/detail?id=37990" rel="nofollow">https://code.google.com/p/android/issues/detail?id=37990</a>. THere are multiple issues it seems are occuring for many developers but for their specific scenarios and they have solutions too. Find if your scenario covered there. If not you can do what I did..lift the complete FragmentStatePagerAdapter.java and modify according to the needs.</p>
