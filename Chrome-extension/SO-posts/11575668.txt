<p>The simplest way to include an external javascript file into a Vaadin application is to override the <code>Application#writeAjaxPageHtmlVaadinScripts</code> method.</p>

<p>To call a javascript function from the Vaadin server-side code, you call <code>Window#executeJavascript</code></p>

<pre><code>@Override
protected void writeAjaxPageHtmlVaadinScripts(Window window,
                                              String themeName, Application application, BufferedWriter page,
                                              String appUrl, String themeUri, String appId,
                                              HttpServletRequest request) throws ServletException, IOException {
  page.write("&lt;script type=\"text/javascript\"&gt;\n");
  page.write("//&lt;![CDATA[\n");
  page.write("document.write(\"&lt;script language='javascript' src='" + appUrl + "/VAADIN/scripts/example.js'&gt;&lt;\\/script&gt;\");\n");
  page.write("//]]&gt;\n&lt;/script&gt;\n");
  super.writeAjaxPageHtmlVaadinScripts(window, themeName, application,
      page, appUrl, themeUri, appId, request);
}
</code></pre>

<p>NB : I have never used Vaadin as a Portlet, but a quick look suggests that this should work OK.</p>

<p>However, this approach is rather rudimentary, and only suitable for a quick hack/proof-of-concept: if you want to so anything more sophisticated, then developing your own Vaadin widget is correct approach. It gives you the power of GWT and JSNI, and gives you a much finer grain of control : See <a href="https://vaadin.com/book/-/page/gwt.html" rel="nofollow">The Book Of Vaadin</a> for more details.</p>
