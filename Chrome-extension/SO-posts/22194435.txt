<p>Use a <code>CardScrollView</code> and create your own <code>CardScrollAdapter</code> in the <code>getView</code> function you inflate a layout from an xml file and fill in all information, like you would do in an android app.</p>

<p>Edit after reading comments:
In your <code>Adapter</code> class add</p>

<pre><code>public static class ViewHolder{
    public TextView text;
    public ImageView image;
}
</code></pre>

<p>And change</p>

<pre><code>public View getView(int position, View convertView, ViewGroup parent) {
     return mCards.get(position).toView();
}
</code></pre>

<p>into</p>

<pre><code>public View getView(int position, View convertView, ViewGroup parent) {
     ViewHolder holder;
     if(convertView==null) {
         convertView = inflater.inflate(R.layout.mycardlayout, null);
         holder = new ViewHolder();
         holder.text = (TextView) vi.findViewById(R.id.text);
         holder.image=(ImageView)vi.findViewById(R.id.image);
         convertView.setTag( holder );
     } else holder = (ViewHolder) convertView.getTag();

     myObject = getItem(position); //HERE YOU SHOULD MAKE SURE MYOBJECT IS THE CORRECT OBJECT

     holder.text.setText(myObject.getName());
     lazyLoad(holder.image, myObject.getImageUrl()); //USE LAZY LOADING LIBRARY
     return convertView;
}
</code></pre>

<p>So all you have to do:</p>

<ol>
<li><p>check if <code>getItem</code> is implemented in your <code>Adapter</code></p></li>
<li><p>use lazyloading for the image (if a remote image, which looks like it will be)</p></li>
<li><p>create the <code>mycardlayout.xml</code> file in the <code>/layout</code> folder which has to contain a <code>TextField</code> with the id <code>text</code> and an <code>ImageView</code> with the id <code>image</code></p></li>
</ol>
