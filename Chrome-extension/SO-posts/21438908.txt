<p><code>Thread.sleep(50);</code> </p>

<p>You are calling sleep on the ui thread which blocks it. Remove it.</p>

<p>Use <code>AsyncTask</code> instead of a <code>Thread</code>.</p>

<p><a href="http://developer.android.com/reference/android/os/AsyncTask.html" rel="nofollow">http://developer.android.com/reference/android/os/AsyncTask.html</a></p>

<p>Show progress dialog in <code>onPreExecute</code>. Do your http request in <code>doInbackground</code>. Dismiss dialog in <code>onPostExecute</code> and update ui accordingly.</p>

<p>To invoke</p>

<pre><code> new TheTask().execute();
</code></pre>

<p>Then</p>

<pre><code> class TheTask extends AsyncTask&lt;Void, Void, Void&gt;    {

        ProgressDialog pd;

        @Override
        protected void onPostExecute(Void result) {
            super.onPostExecute(result);
            progress.dismiss();

        }

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
             progress = ProgressDialog.show(MainActivity.this, "dialog title",
                            "dialog message", true);
        }

        @Override
        protected Void doInBackground(Void... arg0) {
            // http request
            return null;
        }   
    } 
</code></pre>

<p>Edit:</p>

<pre><code>public class MainActivity extends ListActivity {

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    new TheTask().execute();
    }
class TheTask extends AsyncTask&lt;Void, Void, JSONObject&gt; {
    InputStream is = null;
    String result = "";
    JSONObject jArray = null;

    ProgressDialog pd;

    @Override
    protected void onPostExecute(JSONObject result) {
        super.onPostExecute(result);
        pd.dismiss();
        // parse and set List adapter here
    }

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        pd = ProgressDialog.show(MainActivity.this, "dialog title",
                "dialog message", true);
    }

    @Override
    protected JSONObject doInBackground(Void... arg0) {
        try {
            HttpClient httpclient = new DefaultHttpClient();
            HttpPost httppost = new HttpPost("******");
            HttpResponse response = httpclient.execute(httppost);
            HttpEntity entity = response.getEntity();
            is = entity.getContent();

        } catch (Exception e) {
            Log.e("log_tag", "Error in http connection " + e.toString());
        }

        // Convert response to string
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    is, "iso-8859-1"), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
            is.close();
            result = sb.toString();
        } catch (Exception e) {
            Log.e("log_tag", "Error converting result " + e.toString());
        }

        try {

            jArray = new JSONObject(result);
        } catch (JSONException e) {
            Log.e("log_tag", "Error parsing data " + e.toString());
        }

        return jArray;
    }
}
}
</code></pre>

<p>Edit2:</p>

<pre><code>   class TheTask extends AsyncTask&lt;Void, Void, JSONArray&gt; {
    InputStream is = null;
    String result = "";
    JSONArray jArray = null;

    ProgressDialog pd;

    @Override
    protected void onPostExecute(JSONArray result) {
        super.onPostExecute(result);
        pd.dismiss();
        ArrayList&lt;String&gt; list= new ArrayList&lt;String&gt;();
        try
        {
        for(int i=0;i&lt;result.length();i++)
        {

            JSONObject jb = result.getJSONObject(i) ;
            String name = jb.getString("name");
            list.add(name);
        }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        setListAdapter(new ArrayAdapter&lt;String&gt;(MainActivity.this, android.R.layout.simple_list_item_1, list));
    }
    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        pd = ProgressDialog.show(MainActivity.this, "dialog title",
                "dialog message", true);
    }

    @Override
    protected JSONArray doInBackground(Void... arg0) {
        try {
            HttpClient httpclient = new DefaultHttpClient();
            HttpPost httppost = new HttpPost("******");
            HttpResponse response = httpclient.execute(httppost);
            HttpEntity entity = response.getEntity();
            is = entity.getContent();

        } catch (Exception e) {
            Log.e("log_tag", "Error in http connection " + e.toString());
        }

        // Convert response to string
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    is, "iso-8859-1"), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
            is.close();
            result = sb.toString();
        } catch (Exception e) {
            Log.e("log_tag", "Error converting result " + e.toString());
        }

        try {

            jArray = new JSONArray(result);
        } catch (JSONException e) {
            Log.e("log_tag", "Error parsing data " + e.toString());
        }

        return jArray;
    }
}
}
</code></pre>
