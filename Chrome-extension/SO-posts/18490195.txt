<p>it's My Code</p>

<pre><code>public void PCMtoFile(OutputStream os, short[] pcmdata, int srate, int channel, int format) throws IOException {
    byte[] header = new byte[44];
    byte[] data = get16BitPcm(pcmdata);

    long totalDataLen = data.length + 36;
    long bitrate = srate * channel * format;

    header[0] = 'R'; 
    header[1] = 'I';
    header[2] = 'F';
    header[3] = 'F';
    header[4] = (byte) (totalDataLen &amp; 0xff);
    header[5] = (byte) ((totalDataLen &gt;&gt; 8) &amp; 0xff);
    header[6] = (byte) ((totalDataLen &gt;&gt; 16) &amp; 0xff);
    header[7] = (byte) ((totalDataLen &gt;&gt; 24) &amp; 0xff);
    header[8] = 'W';
    header[9] = 'A';
    header[10] = 'V';
    header[11] = 'E';
    header[12] = 'f'; 
    header[13] = 'm';
    header[14] = 't';
    header[15] = ' ';
    header[16] = (byte) format; 
    header[17] = 0;
    header[18] = 0;
    header[19] = 0;
    header[20] = 1; 
    header[21] = 0;
    header[22] = (byte) channel; 
    header[23] = 0;
    header[24] = (byte) (srate &amp; 0xff);
    header[25] = (byte) ((srate &gt;&gt; 8) &amp; 0xff);
    header[26] = (byte) ((srate &gt;&gt; 16) &amp; 0xff);
    header[27] = (byte) ((srate &gt;&gt; 24) &amp; 0xff);
    header[28] = (byte) ((bitrate / 8) &amp; 0xff);
    header[29] = (byte) (((bitrate / 8) &gt;&gt; 8) &amp; 0xff);
    header[30] = (byte) (((bitrate / 8) &gt;&gt; 16) &amp; 0xff);
    header[31] = (byte) (((bitrate / 8) &gt;&gt; 24) &amp; 0xff);
    header[32] = (byte) ((channel * format) / 8); 
    header[33] = 0;
    header[34] = 16; 
    header[35] = 0;
    header[36] = 'd';
    header[37] = 'a';
    header[38] = 't';
    header[39] = 'a';
    header[40] = (byte) (data.length  &amp; 0xff);
    header[41] = (byte) ((data.length &gt;&gt; 8) &amp; 0xff);
    header[42] = (byte) ((data.length &gt;&gt; 16) &amp; 0xff);
    header[43] = (byte) ((data.length &gt;&gt; 24) &amp; 0xff);

    os.write(header, 0, 44);
    os.write(data);
    os.close();
}
</code></pre>

<p><strong>EDIT: 2016-01-11</strong></p>

<pre><code>public byte[] get16BitPcm(short[] data) {
    byte[] resultData = new byte[2 * data.length];
    int iter = 0;
    for (double sample : data) {
        short maxSample = (short)((sample * Short.MAX_VALUE));
        resultData[iter++] = (byte)(maxSample &amp; 0x00ff);
        resultData[iter++] = (byte)((maxSample &amp; 0xff00) &gt;&gt;&gt; 8);
    }
    return resultData;
}
</code></pre>
