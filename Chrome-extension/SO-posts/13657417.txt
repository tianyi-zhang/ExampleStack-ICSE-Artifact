<p>You should use BaseAdapter in that case. see this walkthough.
<a href="http://anujarosha.wordpress.com/2011/11/30/how-to-use-baseadapter-and-onitemclicklistener-in-android/" rel="nofollow">http://anujarosha.wordpress.com/2011/11/30/how-to-use-baseadapter-and-onitemclicklistener-in-android/</a></p>

<p>EDITED:</p>

<p>You have to implement BaseAdapter since ArrayAdapter can shown only one String.</p>

<p>See my implementation, which has a list of Item. Each item contain a name and contact.</p>

<p>You need to set this BaseAdapter in place of ArrayAdapter. </p>

<p>The BaseAdapter create a view by inflating from a layout in method getView(). The Layout has two TextView.</p>

<p>In that method, we also set the name and contact to two TextView.</p>

<pre><code>    public class Item
{
    private String name;
    private String contact;
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public String getContact() {
        return contact;
    }
    public void setContact(String contact) {
        this.contact = contact;
    }


}

public class Adapter1 extends BaseAdapter
{
    private List&lt;Item&gt; items;
    private LayoutInflator inflator;
    public Adapter1(List&lt;Item&gt; items, LayoutInflator inflator) {
        super();
        this.items = items;
                    this.inflator = inflator;
    }

    @Override
    public int getCount() {
        return items.size();
    }

    @Override
    public Object getItem(int position) {
        return items.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        View view;

        if(convertView != null)
            view = convertView;
        else
            view = inflator.inflate(R.layout.item_layout, parent, false);

        Item item = (Item) getItem(position);

        ((TextView) view.findViewById(R.id.textName)).setText(item.getName());
        ((TextView) view.findViewById(R.id.textContact)).setText(item.getContact());

        return view;
    }

}
</code></pre>
