<p>Ok so after hours and hours of mind numbing searching for this answer, I finally figured it out. I was looking through the example <a href="https://github.com/TonicArtos/StickyGridHeaders" rel="nofollow">here</a> and noticed that in the header layout, they didn't specify the layout as </p>

<pre><code>//remove the following from your header layout
android:clickable="true"
android:focusable="true"
android:focusableInTouchMode="true"
</code></pre>

<p>I <strong>removed</strong> these properties from my header view completely and viola! it works. I feel pretty dumb after that, but hope it helps someone else.</p>

<p><strong>UPDATE</strong></p>

<p>Here is a little more detail in how I have implemented it.</p>

<p><strong>Fragment Class</strong></p>

<pre><code>public static class PlaceholderFragment extends Fragment implements      
StickyGridHeadersGridView.OnHeaderClickListener,
StickyGridHeadersGridView.OnItemClickListener,
StickyGridHeadersGridView.OnItemLongClickListener {

    @Override
    public void onHeaderClick(AdapterView&lt;?&gt; adapterView, final View view, long l) {
        Log.i("asd","THE HEADER IS CLICKED");
    }

    @Override
    public void onItemClick(AdapterView&lt;?&gt; adapterView, View view, int i, long l) {
        Log.i("asd","ITEM "+i+" IS CLICKED");
    }

    @Override
    public boolean onItemLongClick(AdapterView&lt;?&gt; adapterView, final View view, int i, long l) {
        Log.i("asd","ITEM "+i+" IS LONG CLICKED");
        return true;
    }
</code></pre>

<p><strong>Custom Base Adapter</strong></p>

<pre><code>public class MediaAdapter extends BaseAdapter implements StickyGridHeadersBaseAdapter{
private Context mContext;
ArrayList&lt;MediaItem&gt; mediaitems;
ArrayList&lt;GalleryItem&gt; galleryItems;
LayoutInflater inflater;
HashMap&lt;String,ImageView&gt; imageHolder;

public MediaAdapter(Context c,ArrayList&lt;GalleryItem&gt; l) {
    mediaitems = new ArrayList&lt;MediaItem&gt;();
    galleryRef = new HashMap&lt;String, Integer&gt;();
    mContext = c;
    galleryItems = l;
    imageHolder = new HashMap&lt;String, ImageView&gt;();
    inflater = LayoutInflater.from(c);
}

public GalleryItem getSelectedGallery(String id){
        return ((Tidy)mContext.getApplicationContext()).startOrGetFileStore().getGalleryItem(id);
}

public int getCount() {
    return mediaitems.size();
}

public Object getItem(int position) {
    return mediaitems.get(position);
}

public long getItemId(int position) {
    return position;
}

@TargetApi(Build.VERSION_CODES.JELLY_BEAN)
public View getView(int position, View convertView, ViewGroup parent) {
    GridView gv =(GridView)parent;
    ViewHolder holder;

    if (convertView == null) {// if it's not recycled, initialize some attributes
        convertView = inflater.inflate(R.layout.media_item, parent, false);
        holder = new ViewHolder();
        holder.img = (ImageView) convertView.findViewById(R.id.image);
        convertView.setTag(holder);
    } else {
       holder = (ViewHolder) convertView.getTag();
    }

    imageManager.displayImage(holder.img);

    return convertView;
}

@Override
public int getCountForHeader(int i) {
    return galleryItems.get(i).getMediaLength();
}

@Override
public int getNumHeaders() {
    return galleryItems.size();
}

@Override
public View getHeaderView(final int pos, View view, ViewGroup viewGroup) {
    HeaderViewHolder holder = new HeaderViewHolder();

    if(view == null) {
        view = inflater.inflate(R.layout.gallery_item, viewGroup, false);
        holder.title = (TextView) view.findViewById(R.id.title);
        holder.date = (TextView) view.findViewById(R.id.date);
        holder.icon = (ImageView) view.findViewById(R.id.icon);
        holder.settings = (ImageView) view.findViewById(R.id.folder_settings);
        view.setTag(holder);
    }
    else{
        holder = (HeaderViewHolder) view.getTag();
    }

    GalleryItem galleryItem = galleryItems.get(pos);
    holder.icon.setImageResource(setIcon(galleryItem.getMode()));
    holder.title.setText(galleryItem.getTitle());
    Date da = galleryItem.record.getDate("FILE_DATE");
    SimpleDateFormat dateFormat = new SimpleDateFormat("LLLL-dd-yyyy");
    String mDate = dateFormat.format(da);
    holder.date.setText(mDate);
    holder.gallery = galleryItem.record;
    return view;
}

class HeaderViewHolder {
    DbxRecord gallery;
    RelativeLayout layout;
    TextView title;
    TextView date;
    ImageView icon;
    ImageView settings;
}

class ViewHolder {
    ImageView img;
}

}
</code></pre>

<p><strong>View XML</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout
xmlns:android="http://schemas.android.com/apk/res/android"
android:orientation="vertical"
android:layout_width="fill_parent"
android:layout_height="fill_parent"&gt;
    &lt;com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView xmlns:android="http://schemas.android.com/apk/res/android"
        android:id="@+id/imagegrid"
        android:layout_width="fill_parent"
        android:layout_height="match_parent"
        android:verticalSpacing="1dp"
        android:horizontalSpacing="1dp"
        android:stretchMode="columnWidth"
        android:gravity="center"
        android:layout_weight="1"
        android:stackFromBottom="false"
        android:numColumns="auto_fit"
        android:columnWidth="80dp"
        /&gt;
&lt;/RelativeLayout&gt;
</code></pre>
