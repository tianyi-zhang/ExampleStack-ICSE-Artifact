<pre><code>    public class FragmentFavorites extends Fragment {
        View view;
        TextView text;
        Homescreen home = new Homescreen();
        public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
            view = inflater.inflate(R.layout.favorites,container, false);
            text = (TextView) view.findViewById(R.id.textView2);
            FetchHtml fetchHtml = new FetchHtml(getActivity().getApplicationContext(), FragmentFavorites.this);
            fetchHtml.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, "http://pastebin.com/u7jHeNwf");
            return view;
        }

    public static class FetchHtml extends AsyncTask&lt;String, Void, String&gt; {

            Context mContext;
            WeakReference&lt;FragmentFavorites&gt; mClient;

            public RegisterGcmTask(Context context, FragmentFavorites client) {
                this.mContext = context;
                this.mClient = new WeakReference&lt;&gt;(client);
            }

            @Override
            protected String doInBackground(String... params) {
                  try {
                   return getHtml(params[0]);
                } catch (IOException e) {
                   e.printStackTrace();
                   return null;
                }
            }

            @Override
            protected void onPostExecute(String html) {
                super.onPostExecute(token);
                if (null != mClient &amp;&amp; null != mClient.get()) {
                    if (null != html) {
                        mClient.get().text.setText(html);
                    } else {
                       mClient.get().text.setText("Error fetching html");
                    }
                }
            }

        private static String getHtml(String url) throws IOException {
            URLConnection connection = (new URL(url)).openConnection();
            connection.setConnectTimeout(5000);
            connection.setReadTimeout(5000);
            connection.connect();

            InputStream in = connection.getInputStream();
            BufferedReader reader = new BufferedReader(new InputStreamReader(in));
            StringBuilder html = new StringBuilder();
            for (String line; (line = reader.readLine()) != null; ) {
                html.append(line);
            }
            in.close();

            return html.toString();
        }

    }
}
</code></pre>
