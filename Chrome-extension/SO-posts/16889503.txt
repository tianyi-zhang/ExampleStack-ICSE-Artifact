<p>I wrote this <code>TextWatcher</code> for a project, hopefully it will be helpful to someone. Note that it does <strong>not</strong> validate the date entered by the user, and you should handle that when the focus changes, since the user may not have finished entering the date.</p>

<p><strong>Update 25/06</strong> Made it a wiki to see if we reach a better final code.</p>

<p><strong>Update 07/06</strong>
I finally added some sort of validation to the watcher itself. It will do the following with invalid dates:</p>

<ul>
<li>If the month is greater than 12, it will be 12 (December)</li>
<li>If the date is greater than the one for the month selected, make it the max for that month.</li>
<li>If the year is not in the range <code>1900-2100</code>, change it to be in the range</li>
</ul>

<p>This validation fits my needs, but some of you may want to change it a little bit, ranges are easily changeable and you could hook this validations to <code>Toast</code> message for instance, to notify the user that we've modified his/her date since it was invalid.</p>

<p>In this code, I will be assuming that we have a reference to our <code>EditText</code> called <code>date</code> that has this <code>TextWatcher</code> attached to it, this can be done something like this:</p>

<pre><code>EditText date;
date = (EditText)findViewById(R.id.whichdate);
date.addTextChangedListener(tw);
</code></pre>

<hr>

<pre><code>TextWatcher tw = new TextWatcher() {
    private String current = "";
    private String ddmmyyyy = "DDMMYYYY";
    private Calendar cal = Calendar.getInstance();
</code></pre>

<p>When user changes text of the <code>EditText</code></p>

<pre><code>    @Override
    public void onTextChanged(CharSequence s, int start, int before, int count) {
        if (!s.toString().equals(current)) {
            String clean = s.toString().replaceAll("[^\\d.]", "");
            String cleanC = current.replaceAll("[^\\d.]", "");

            int cl = clean.length();
            int sel = cl;
            for (int i = 2; i &lt;= cl &amp;&amp; i &lt; 6; i += 2) {
                sel++;
            }
            //Fix for pressing delete next to a forward slash
            if (clean.equals(cleanC)) sel--;

            if (clean.length() &lt; 8){
               clean = clean + ddmmyyyy.substring(clean.length());
            }else{
               //This part makes sure that when we finish entering numbers
               //the date is correct, fixing it otherwise
               int day  = Integer.parseInt(clean.substring(0,2));
               int mon  = Integer.parseInt(clean.substring(2,4));
               int year = Integer.parseInt(clean.substring(4,8));

               if(mon &gt; 12) mon = 12;
               cal.set(Calendar.MONTH, mon-1);
               year = (year&lt;1900)?1900:(year&gt;2100)?2100:year;
               cal.set(Calendar.YEAR, year); 
               // ^ first set year for the line below to work correctly
               //with leap years - otherwise, date e.g. 29/02/2012
               //would be automatically corrected to 28/02/2012 

               day = (day &gt; cal.getActualMaximum(Calendar.DATE))? cal.getActualMaximum(Calendar.DATE):day;
               clean = String.format("%02d%02d%02d",day, mon, year);
            }

            clean = String.format("%s/%s/%s", clean.substring(0, 2),
                clean.substring(2, 4),
                clean.substring(4, 8));

            sel = sel &lt; 0 ? 0 : sel;
            current = clean;
            date.setText(current);
            date.setSelection(sel &lt; current.length() ? sel : current.length());
        }
    }
</code></pre>

<p>We also implement the other two functions because we have to</p>

<pre><code>    @Override
    public void beforeTextChanged(CharSequence s, int start, int count, int after) {}

    @Override
    public void afterTextChanged(Editable s) {}
};
</code></pre>

<p>This produces the following effect, where deleting or inserting characters will reveal or hide the <code>dd/mm/yyyy</code> mask. It should be easy to modify to fit other format masks since I tried to leave the code as simple as possible.</p>

<p><img src="http://i.stack.imgur.com/L5NsD.png" alt="enter image description here"></p>
