<p>Once check the loop  <code>onTaskCompleted</code> method. you are creating instance of the adapter and setting to gridview inside loop i think its wrong after observing and checking your code i found the first issue.</p>

<p>Second the way you are handling Adapter view inflating method for populating row is also wrong and i can say not a proper way...</p>

<p>So once check the below code for the adapter and <code>onTaskCompleted</code> method.</p>

<pre><code>@Override
    public void onTaskCompleted(JSONArray responseJson) {

        try {
            String[] Description = new String[responseJson.length()];
            String[] ImageURL = new String[responseJson.length()];
            JSONArray jArrayCategoryWise = new JSONArray();
            for (int i = 0; i &lt; responseJson.length(); i++) {
                JSONObject object = responseJson.getJSONObject(i);
                if ("1".equalsIgnoreCase(object.getString("MainCategoryID"))) {
                    // add to another jsonarray if MainCategoryID == 1
                    jArrayCategoryWise.put(object);
                }
            }

            /******
             * You can also create class with getter setter method for the
             * Description and ImageUrl.Make the arraylist of the class after
             * parsing jsonArray.
             */
            // which will required on more iteration of your json array response
            CustomGrid adapter = new CustomGrid(getActivity(),
                    jArrayCategoryWise);
            grid.setAdapter(adapter);
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
</code></pre>

<p>Once check the data is coming properly or not.or are you adding anything in between</p>

<p>ADAPTER </p>

<pre><code>    public class CustomGrid extends BaseAdapter {

    private Context context;
    private Context mContext;
    // private final String[] Description;
    // private final String[] ImageURL;
    private JSONArray json;
    private int size = 0;

    public CustomGrid(Context c, JSONArray json) {
        this.context = c;
        this.json = json;
        if (this.json != null)
            size = this.json.length();
        // You can also create class with getter setter method (getter setter
        // for Descriptions and ImageUrl). and pass arraylist of that class

        // this.Description = Description;
        // this.ImageURL = ImageURL;
    }

    @Override
    public int getCount() {
        return size;
    }

    @Override
    public Object getItem(int position) {
        return this.json.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        if (convertView == null) {
            holder = new ViewHolder();
            convertView = LayoutInflater.from(context).inflate(
                    R.layout.custom_trips_frag_row, parent, false);
            holder.ivImage = (ImageView) convertView
                    .findViewById(R.id.grid_image);
            holder.tvHeader = (TextView) convertView
                    .findViewById(R.id.grid_text);
            convertView.setTag(holder);

        } else {
            holder = (ViewHolder) convertView.getTag();
        }
        JSONObject jObjectRowData = this.json.getJSONObject(position);
        holder.tvHeader.setText(jObjectRowData.getString("Description"));
        Picasso.with(this.context).load(jObjectRowData.getString("ImageURL"))
                .into(holder.ivImage);

        return convertView;
    }

    private class ViewHolder {
        private TextView tvHeader;
        private ImageView ivImage;
    }
}
</code></pre>

<p>Please check the answer.. hope i gt ur quesion correctly and you gt your answer ... <strong>* Suggestion *</strong> ONCE CHECK THE <a href="http://developer.android.com/training/improving-layouts/smooth-scrolling.html#ViewHolder" rel="nofollow">ViewHolder</a> class pattern for the BaseAdapter.</p>
