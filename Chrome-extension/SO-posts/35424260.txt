<p>The following example uses the file you included with your question. You don't need to do any decoding, just read the file into memory, store the 8 byte <code>String</code> and then write the remaining bytes to a <code>jpg</code> from an 8 byte offset.</p>

<p>Just adapt the method below to work with your: "folder input for files". You don't need an <code>ArrayList</code> containing each actual <code>jpg</code> file.</p>

<pre><code>public void convertFiles() {
    File imgFile;
    byte[] bytes;
    FileOutputStream fos;
    String temp;

    for (int i = 0; i &lt; files.size(); i++) {
        temp = "";

        try {
            // 'read' method can be found below
            bytes = read(files.get(i));

            // read the 8 byte string from the beginning of the file
            for(int j = 0; j &lt; 8; j++) {
                temp += (char) bytes[j];
            }

            imgFile = new File("img.jpg");

            // points to './img.jpg'
            fos = new FileOutputStream(imgFile);

            // write from offset 8 to end of 'bytes'
            fos.write(bytes, 8, bytes.length - 8);

            fos.close();
        } catch (FileNotFoundException e) {
            // Logger stuff
        } catch (IOException ex) {
            // Logger stuff
        }

        System.out.println("[temp]:&gt; " + temp);
    }

}
</code></pre>

<p><code>read(File file)</code> method adapted from a community wiki answer to <a href="http://stackoverflow.com/a/859233/1241334">File to byte[] in Java</a></p>

<pre><code>public byte[] read(File file) throws IOException {
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte[] buffer = new byte[4096];
        ous = new ByteArrayOutputStream();
        ios = new FileInputStream(file);
        int read = 0;
        while ((read = ios.read(buffer)) != -1) {
            ous.write(buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null)
                ous.close();
        } catch (IOException e) {
        }

        try {
            if (ios != null)
                ios.close();
        } catch (IOException e) {
        }
    }

    return ous.toByteArray();
}
</code></pre>

<p>Output:</p>

<pre><code>[temp]:&gt; obscured
</code></pre>

<p>Image File: </p>

<p><img src="http://i.stack.imgur.com/bhzHv.jpg" alt="Decoded image file."></p>
