<blockquote>
  <p>bis.toString()<br>
  will definitely return an object.
  You can probably do this,</p>
</blockquote>

<pre><code>dis = new DataInputStream(bis);
String final_str="";
while (dis.available() != 0) {  
        String currentLine=dis.readLine();
        System.out.println(currentLine);
        final_str + = currentLine + "\n";
} 
</code></pre>

<p>The above code will print all lines in your input stream, you can store it into a string &amp; return it with </p>

<pre><code>pageContext.setAttribute("sitemap",final_str);  
</code></pre>

<p><strong>UPDATE</strong>
This function takes a normal xml String and formats the string (indent)</p>

<pre><code>public static String formatXSD(String xmlString) {
        try {
            Source xmlInput = new StreamSource(new StringReader(xmlString));
            StringWriter stringWriter = new StringWriter();
            StreamResult xmlOutput = new StreamResult(stringWriter);
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            transformerFactory.setAttribute("indent-number", 2);
            Transformer transformer = transformerFactory.newTransformer();
            transformer.setOutputProperty(OutputKeys.INDENT, "yes");
            transformer.transform(xmlInput, xmlOutput);

            return xmlOutput.getWriter().toString();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
</code></pre>
