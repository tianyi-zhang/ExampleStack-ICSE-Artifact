<p>You should create an <code>AsyncTask</code> and handle the <code>HttpPost</code> there.</p>

<pre><code>public  class  Post extends AsyncTask&lt;String, Void, Void&gt; {

    private  Activity   callingActivity   =   null;

    public Post(Activity  paramActivity) {
        callingActivity    =    paramActivity;
    }

    protected Void doInBackground(String... msg) {
        if (msg[0].length() &gt; 0) {
            HttpClient httpclient = new DefaultHttpClient();
            HttpPost httppost = new HttpPost("http://www.mstreetllc.com/Lab.asp");
            try {
                List&lt;NameValuePair&gt; nameValuePairs = new ArrayList&lt;NameValuePair&gt;(2);
                nameValuePairs.add(new BasicNameValuePair("id", "12345"));
                nameValuePairs.add(new BasicNameValuePair("message", msg[0]));
                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
                httpclient.execute(httppost);
            } 
            catch (ClientProtocolException e) {
                // TODO Auto-generated catch block
            } 
            catch (IOException e) {
                // TODO Auto-generated catch block
            }
        }
    }

    protected void onPostExecute(Void result) {
        EditText  msgTextField  =  (EditText) callingActivity.findViewById(R.id.msgTextField); 
        msgTextField.setText("");      
    }
}
</code></pre>

<p>To call this <code>AsyncTask</code>, simply write:</p>

<pre><code>new Post(this).execute(msg);
</code></pre>

<p>For more on <code>AsyncTasks</code>: <a href="http://developer.android.com/reference/android/os/AsyncTask.html" rel="nofollow">http://developer.android.com/reference/android/os/AsyncTask.html</a></p>
