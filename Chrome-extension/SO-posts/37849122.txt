<p>This is just trivial solution. You can associate your image with progress bar like this (wrapped by RelativeLayot).</p>

<pre><code>    &lt;?xml version="1.0" encoding="utf-8"?&gt;
    &lt;ScrollView
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context="appinventor.ai_itiel_maimon.Rubiks_cube.Intro"&gt;

        &lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:paddingBottom="@dimen/banner_ad_height"
            android:orientation="vertical"&gt;
            &lt;!-- IMAGE 1 --&gt;
            &lt;RelativeLayout
                android:layout_width="match_parent"                                  
                android:layout_height="wrap_content"&gt;
                &lt;ProgressBar
                     android:id="@+id/pb1"
                     android:layout_width="40dp"
                     android:layout_height="40dp"
                     android:layout_centerInParent="true" /&gt;
                &lt;ImageView
                     android:id="@+id/imageView_S0P1"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:adjustViewBounds="true" 
                     android:layout_centerInParent="true"  
                     android:scaleType="centerCrop" /&gt;
             &lt;/RelativeLayout&gt;

            &lt;!-- IMAGE 2 --&gt;
            &lt;RelativeLayout
                android:layout_width="match_parent"                                  
                android:layout_height="wrap_content"&gt;
                &lt;ProgressBar
                     android:id="@+id/pb2"
                     android:layout_width="40dp"
                     android:layout_height="40dp"
                     android:layout_centerInParent="true" /&gt;
                &lt;ImageView
                     android:id="@+id/imageView_S0P2"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:adjustViewBounds="true" 
                     android:layout_centerInParent="true"   
                     android:scaleType="centerCrop" /&gt;
             &lt;/RelativeLayout&gt;

             ......... and so on .....

        &lt;/LinearLayout&gt;
    &lt;/ScrollView&gt;
</code></pre>

<p>And it would be helpful to create helper class with static method look like this. This helps you when you have a changes on Glide cofiguration.</p>

<pre><code>public class ImageLoader{

   public static showImage(ImageView imageView, ProgressBar progressBar){
         Glide.with(mActivity).load(imagePath).asBitmap().listener(new RequestListener&lt;String, GlideDrawable&gt;() {

             @Override
             public boolean onException(Exception e, String model, Target&lt;GlideDrawable&gt; target, boolean isFirstResource) {
                //handle error
                return false;
             } 

             @Override
             public boolean onResourceReady(GlideDrawable resource, String model, Target&lt;GlideDrawable&gt; target, boolean isFromMemoryCache, boolean isFirstResource) {
                 progressBar.setVisibility(View.GONE);
               return false;
             }
         }).into(imageView);
     }
}
</code></pre>

<p>And call that method on your activity to show each image.</p>

<pre><code>ImageView image1 = (ImageView)rootView.findViewById(R.id.imageView_S0P1);
ProgressBar pb1 = (ProgressBar)rootView.findViewById(R.id.pb1);

ImageLoader.showImage(image1, pb1);
ImageLoader.showImage(image2, pb2);
... and so on....
</code></pre>
