<p>Let's start with the box frame:</p>

<p>/res/drawable/count_frame.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;inset xmlns:android="http://schemas.android.com/apk/res/android"
       android:inset="2dp"&gt;
    &lt;shape
        android:shape="rectangle"&gt;

        &lt;corners android:radius="2dp"/&gt;
        &lt;solid android:color="@android:color/transparent"/&gt;
        &lt;stroke
            android:width="2dp"
            android:color="#FF404040"/&gt;
    &lt;/shape&gt;

&lt;/inset&gt;
</code></pre>

<p>That <code>count_frame</code> box is going to go around a <code>TextView</code>:</p>

<p>/res/layout/menu_action_count_view.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;TextView android:id="@+id/text"
          xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
          android:layout_width="24dp"
          android:layout_height="24dp"
          android:layout_margin="12dp"
          android:background="@drawable/count_frame"
          android:gravity="center"
          android:textColor="#FF000000"
          android:textSize="13sp"
          android:textStyle="bold"
          tools:text="4"/&gt;
</code></pre>

<p>This <code>TextView</code> is going to be an action view for your menu item.  (Using the <code>app:</code> namespace since I am assuming you are using <code>AppCompatActivity</code>):</p>

<p>/res/menu/menu_main.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"
      xmlns:app="http://schemas.android.com/apk/res-auto"&gt;

    &lt;item
        android:id="@+id/action_result_view"
        android:title="@string/count"
        app:actionLayout="@layout/menu_action_count_view"
        app:showAsAction="always"/&gt;

&lt;/menu&gt;
</code></pre>

<p>Now in your <code>onCreateOptionsMenu</code> override, you get the action view and set it up.  Let's assume your count is in <code>private int mCount;</code></p>

<pre><code>@Override
public boolean onCreateOptionsMenu(Menu menu) {
    getMenuInflater().inflate(R.menu.menu_main, menu);
    TextView count = (TextView) menu.findItem(R.id.action_result_view).getActionView();
    count.setText(Integer.toString(mCount));  // so the int isn't mistaken for a resource id!
    count.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // do your action here
        }
    });
    return true;
}
</code></pre>

<p>When the count changes, call <code>supportInvalidateOptionsMenu()</code>.</p>

<p>In case you wanted to show the overflow menu on the tap of this bordered textview, use the following code in <code>onCreateOptionsMenu</code></p>

<pre><code>@Override
public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_main, menu);
        final Menu m = menu;
        final MenuItem item = menu.findItem((R.id.action_result_view));
        TextView count = (TextView) menu.findItem(R.id.action_result_view).getActionView();
        count.setText(Integer.toString(mCount));  // so the int isn't mistaken for a resource id!
        count.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View v) {
                m.performIdentifierAction(item.getItemId(), 0);
            }
        });
        return true;
    }
</code></pre>
