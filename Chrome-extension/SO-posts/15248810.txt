<p>The reason this happens because you setting huge pictures to your <code>ImageView</code> until the point where your devices runs out of memory.</p>

<p>What you should do is to create a thumbnail version of this pictures and apply them to the <code>ImageView</code>. and show the full Image only when this <code>ImageView</code> is clicked or not show it at all.</p>

<p>you could use this method to get the thumbnail of the image from file but you have to save the image first on your device to a file object:</p>

<pre><code>public static Bitmap decodeSampledBitmapFromFile(String path,
        int reqWidth, int reqHeight) { // BEST QUALITY MATCH

    // First decode with inJustDecodeBounds=true to check dimensions
    final BitmapFactory.Options options = new BitmapFactory.Options();
    options.inJustDecodeBounds = true;
    BitmapFactory.decodeFile(path, options);

    // Calculate inSampleSize
        // Raw height and width of image
        final int height = options.outHeight;
        final int width = options.outWidth;
        options.inPreferredConfig = Bitmap.Config.RGB_565;
        int inSampleSize = 1;

        if (height &gt; reqHeight) {
            inSampleSize = Math.round((float)height / (float)reqHeight);
        }

        int expectedWidth = width / inSampleSize;

        if (expectedWidth &gt; reqWidth) {
            //if(Math.round((float)width / (float)reqWidth) &gt; inSampleSize) // If bigger SampSize..
            inSampleSize = Math.round((float)width / (float)reqWidth);
        }


    options.inSampleSize = inSampleSize;

    // Decode bitmap with inSampleSize set
    options.inJustDecodeBounds = false;

    return BitmapFactory.decodeFile(path, options);
}
</code></pre>
