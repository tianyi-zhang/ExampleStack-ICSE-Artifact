<p>When you are overriding equals method, then always override hashcode method also. 
A simple rule is, if two objects are considered to be equal then they should return the same hashcode.</p>

<p>I took your code and generated equals and hashcode with the help of eclipse</p>

<pre><code>import java.util.HashSet;
import java.util.Set;

public class UserDefinedName {
private final String first, last;

public UserDefinedName(String first, String last) {
    this.first = first;
    this.last = last;
}

public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((first == null) ? 0 : first.hashCode());
    result = prime * result + ((last == null) ? 0 : last.hashCode());
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    UserDefinedName other = (UserDefinedName) obj;
    if (first == null) {
        if (other.first != null)
            return false;
    } else if (!first.equals(other.first))
        return false;
    if (last == null) {
        if (other.last != null)
            return false;
    } else if (!last.equals(other.last))
        return false;
    return true;
}

public static void main(String[] args) {
    Set&lt;UserDefinedName&gt; s = new HashSet&lt;UserDefinedName&gt;();
    s.add(new UserDefinedName("Carballo", "Videl"));
    System.out.println(s.contains(new UserDefinedName("Carballo", "Videl")));
    UserDefinedName obj1 = new UserDefinedName("prasad", "kharkar");
    UserDefinedName obj2 = new UserDefinedName("prasad", "kharkar");

    System.out.println(obj1.equals(obj2));
    System.out.println(obj1.hashCode());
    System.out.println(obj2.hashCode());

    }
}
</code></pre>

<p>the output is </p>

<pre><code>true
true
-1072813416
-1072813416
</code></pre>
