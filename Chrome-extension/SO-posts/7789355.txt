<p>If you are passing a String array to the adapter,you can create custom adapter like this and can change background color of a selected item as below:</p>

<p>set the adapter to listview like:</p>

<pre><code>String[] options={"abc","def","ghi","jkl"};

CustomAdapter ca=new CustomAdapter(this,options);    
listView.setAdapter(ca);
</code></pre>

<p>and here is the custom adapter class:</p>

<pre><code>public class CustomAdapter extends BaseAdapter
    {
        String items[];
        LayoutInflater mInflater;
        Context context;

    public CustomAdapter(Context context,String[] items)
    {
        this.items=items;
        this.context=context;
        mInflater = LayoutInflater.from(context);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        ViewHolder holder;

        if(convertView==null)
        {
             convertView = mInflater.inflate(R.layout.cutsom_listitem, null);
             holder = new ViewHolder();

             holder.itemName=(TextView)convertView.findViewById(R.id.itemName);

             convertView.setTag(holder);
        }
        else
            holder=(ViewHolder)convertView.getTag();


        String option=items[position];
        holder.itemName.setText(option);

        holder.itemName.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View v) {

                holder.itemName.setBackgroundColor(Color.parseColor("#FF0000"));  // making selected item red colored
            }
        });

        return convertView;
    }

    @Override
    public int getCount() {
        return items.length;
    }

    @Override
    public Object getItem(int position) {
        return items[position];
    }

    @Override
    public long getItemId(int position) {
        return position;
    }
}

public static class ViewHolder
{
    TextView itemName;
}
</code></pre>
