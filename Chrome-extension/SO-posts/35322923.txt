<p>The code that is on the page that is in link i have modified it with single exception. Problem here is that in this case you will not able to know that exception is where whether due to </p>

<blockquote>
  <p>IndexOutOfBoundsException or IOException</p>
</blockquote>

<p>just you know that a exception occurs </p>

<pre><code>import java.io.*;

import java.util.List;
import java.util.ArrayList;

public class ListOfNumbers {

    public static void main(String... s) {
        ListOfNumbers lon = new ListOfNumbers();
        lon.writeList();
    }

    private List&lt;Integer&gt; list;
    private static final int SIZE = 10;

    public ListOfNumbers() {
        list = new ArrayList&lt;Integer&gt;(SIZE);
        for (int i = 0; i &lt; SIZE; i++) {
            list.add(new Integer(i));
        }
    }

    public void writeList() {
        PrintWriter out = null;

        try {
            System.out.println("Entering" + " try statement");

            out = new PrintWriter(new FileWriter("e://OutFile.txt"));
            for (int i = 0; i &lt; SIZE; i++) {
                out.println("Value at: " + i + " = " + list.get(i));
            }
        } catch (Exception e) {
            System.err.println("Caught Exception: " + e.getMessage());

        } finally {
            if (out != null) {
                System.out.println("Closing PrintWriter");
                out.close();
            } else {
                System.out.println("PrintWriter not open");
            }
        }
    }
}
</code></pre>

<p>Let us understand the concept it is better to know why the code fails due to which particular type of exception whether </p>

<blockquote>
  <p>IndexOutOfBoundsException or IOException</p>
</blockquote>

<p>Now The Code with handling of different Exception</p>

<pre><code>import java.io.*;

import java.util.List;
import java.util.ArrayList;

public class ListOfNumbers {

    public static void main(String... s) {
        ListOfNumbers lon = new ListOfNumbers();
        lon.writeList();
    }

    private List&lt;Integer&gt; list;
    private static final int SIZE = 10;

    public ListOfNumbers() {
        list = new ArrayList&lt;Integer&gt;(SIZE);
        for (int i = 0; i &lt; SIZE; i++) {
            list.add(new Integer(i));
        }
    }

    public void writeList() {
        PrintWriter out = null;

        try {
            System.out.println("Entering" + " try statement");

            out = new PrintWriter(new FileWriter("e://OutFile.txt"));
            for (int i = 0; i &lt; SIZE; i++) {
                out.println("Value at: " + i + " = " + list.get(i));
            }
        } catch (IndexOutOfBoundsException e) {
            System.err.println("Caught IndexOutOfBoundsException: " +
                               e.getMessage());

        } catch (IOException e) {
            System.err.println("Caught IOException: " + e.getMessage());

        } finally {
            if (out != null) {
                System.out.println("Closing PrintWriter");
                out.close();
            } else {
                System.out.println("PrintWriter not open");
            }
        }
    }
}
</code></pre>

<p>Here we could come to know that whether it fails due to creation of file at location </p>

<blockquote>
  <p>e://OutFile.txt
  drive Not on my system</p>
</blockquote>

<p>error printed as </p>

<blockquote>
  <p>Caught Exception: e:\OutFile.txt (The system cannot find the path
  specified) Entering try statement PrintWriter not open</p>
</blockquote>

<p>Next Case</p>

<p>Now when i comment the line </p>

<blockquote>
  <p>list.add(new Integer(i));</p>
</blockquote>

<pre><code>import java.io.*;
import java.util.List;
import java.util.ArrayList;

    public class ListOfNumbers {

        public static void main(String... s) {
            ListOfNumbers lon = new ListOfNumbers();
            lon.writeList();
        }

        private List&lt;Integer&gt; list;
        private static final int SIZE = 10;

        public ListOfNumbers() {
            list = new ArrayList&lt;Integer&gt;(SIZE);
            for (int i = 0; i &lt; SIZE; i++) {
                //    list.add(new Integer(i));
            }
        }

        public void writeList() {
            PrintWriter out = null;

            try {
                System.out.println("Entering" + " try statement");

                out = new PrintWriter(new FileWriter("OutFile.txt"));
                for (int i = 0; i &lt; SIZE; i++) {
                    out.println("Value at: " + i + " = " + list.get(i));
                }
            } catch (IndexOutOfBoundsException e) {
                System.err.println("Caught IndexOutOfBoundsException: " +
                                   e.getMessage());

            } catch (IOException e) {
                System.err.println("Caught IOException: " + e.getMessage());

            } finally {
                if (out != null) {
                    System.out.println("Closing PrintWriter");
                    out.close();
                } else {
                    System.out.println("PrintWriter not open");
                }
            }
        }
    }
</code></pre>

<p>then it clearly says that it fails for index out of bound exception</p>

<blockquote>
  <p>Entering try statement Caught IndexOutOfBoundsException: Index: 0,
  Size: 0 Closing PrintWriter</p>
</blockquote>

<p>So for the purpose of debugging the application properly and efficiently it is good.</p>

<p>I have created condition for the other type of exception  </p>

<pre><code>NoClassDefFoundError

java.lang.NoClassDefFoundError: ListOfNumbers
Caused by: java.lang.ClassNotFoundException: stackprac.ListOfNumbers
    at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
Exception in thread "main" Process exited with exit code 1.
</code></pre>
