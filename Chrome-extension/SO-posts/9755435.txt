<p>The code that causes the exception should be that:</p>

<p><em>TypedArray.getInt (TypedArray.java:248)</em></p>

<pre><code>/**
 * Retrieve the integer value for the attribute at &lt;var&gt;index&lt;/var&gt;.
 * 
 * @param index Index of attribute to retrieve.
 * @param defValue Value to return if the attribute is not defined.
 * 
 * @return Attribute int value, or defValue if not defined.
 */
public int getInt(int index, int defValue) {
    index *= AssetManager.STYLE_NUM_ENTRIES;
    final int[] data = mData;
    final int type = data[index+AssetManager.STYLE_TYPE];
    if (type == TypedValue.TYPE_NULL) {
        return defValue;
    } else if (type &gt;= TypedValue.TYPE_FIRST_INT
        &amp;&amp; type &lt;= TypedValue.TYPE_LAST_INT) {
        // vvvvvvvvvvvvvvvvvvvvvv 248
        return data[index+AssetManager.STYLE_DATA];
        // ^^^^^^^^^^^^^^^^^^^^^^ 248
    }

    TypedValue v = mValue;
    if (getValueAt(index, v)) {
        Log.w(Resources.TAG, "Converting to int: " + v);
        return XmlUtils.convertValueToInt(
            v.coerceToString(), defValue);
    }
    Log.w(Resources.TAG, "getInt of bad type: 0x"
          + Integer.toHexString(type));
    return defValue;
}
</code></pre>

<p>The strange thing is that there is no <code>getInt()</code> in <code>ScrollView.java</code> (why is there even a ScrollView in that Dialog?). Also the exception looks unusual. You would usually get <code>Caused by: java.lang.ArrayIndexOutOfBoundsException: length=5; index=12345</code> and not <code>null</code></p>

<p>No real clue what's wrong. But it might in fact be caused by some custom Layout stuff since <code>getInt</code> would be usually used like so to query the View attributes</p>

<pre><code>case R.styleable.View_scrollbars:
    final int scrollbars = a.getInt(attr, SCROLLBARS_NONE);
    if (scrollbars != SCROLLBARS_NONE) {
        viewFlagValues |= scrollbars;
</code></pre>

<p>I'd say it's a custom firmware or some software modifications done by Samsung that is causing this.</p>
