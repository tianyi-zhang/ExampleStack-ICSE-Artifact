<p>Check this <a href="http://download.androidhive.info/download?code=nePLuQPt2OCa9CDCWoVa0VRubiMENJPvFozE%2BLVVaQ8LZSW7xasdcttGU282b1%2Fv3oQAJAGjMSgMmeXKWRWj3pj%2B96QgOQc8i5yl5HcLkDhZu8tqpzpp%2BXSvg%3D%3DrUi3rrXE6m7Ou2tP3tIqGcNtn1w11RF36GI" rel="nofollow">sample code</a>:</p>

<p>And you can learn more about Navigation Drawers from this link:</p>

<blockquote>
  <p><a href="http://www.androidhive.info/2013/11/android-sliding-menu-using-navigation-drawer/" rel="nofollow">http://www.androidhive.info/2013/11/android-sliding-menu-using-navigation-drawer/</a></p>
</blockquote>

<p>And for doing it without <code>Fragments</code> I wrote a code below and used ViewPager:</p>

<p>This is my activity_main.xml:</p>

<pre><code>&lt;android.support.v4.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"&gt;

    &lt;!-- Instead of using Fragments I used ViewPager here --&gt;
    &lt;android.support.v4.view.ViewPager xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/pager"
    android:layout_width="match_parent"
    android:layout_height="match_parent" /&gt;

    &lt;!-- Listview to display slider menu --&gt;
    &lt;ListView
        android:id="@+id/list_slidermenu"
        android:layout_width="240dp"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:choiceMode="singleChoice"
        android:divider="@color/list_divider"
        android:dividerHeight="1dp"        
        android:listSelector="@drawable/list_selector"
        android:background="@color/list_background"/&gt;
&lt;/android.support.v4.widget.DrawerLayout&gt;
</code></pre>

<p>This is drawer_list_item.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="48dp" 
    android:background="@drawable/list_selector"&gt;

    &lt;TextView
        android:id="@+id/title"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_toLeftOf="@+id/button_delete_city"
        android:gravity="center_vertical"
        android:minHeight="?android:attr/listPreferredItemHeightSmall"
        android:paddingRight="40dp"
        android:textAppearance="?android:attr/textAppearanceListItemSmall"/&gt;

    &lt;Button
        android:id="@+id/button_delete_city"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentRight="true"
        android:layout_alignParentTop="true"
        android:text="X" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>This is NavDrawerListAdapter:</p>

<pre><code>public class NavDrawerListAdapter extends BaseAdapter {

    private Context context;
    private ArrayList&lt;String&gt; navDrawerItems;
    MainActivity act;

    public NavDrawerListAdapter(Context context, ArrayList&lt;String&gt; navDrawerItems, Activity act){
        this.context = context;
        this.navDrawerItems = navDrawerItems;
        this.act = (MainActivity) act;
    }

    @Override
    public int getCount() {
        return navDrawerItems.size();
    }

    @Override
    public Object getItem(int position) {       
        return navDrawerItems.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @SuppressLint("InflateParams")
    @Override
    public View getView(final int position, View convertView, ViewGroup parent) {
        if (convertView == null) {
            LayoutInflater mInflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
            convertView = mInflater.inflate(R.layout.drawer_list_item, null);
            Button btn_delete = (Button)convertView.findViewById(R.id.button_delete_city);
            btn_delete.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View v) {
                    act.actionDelete(position);
                }
            });

        }

        TextView txtTitle = (TextView) convertView.findViewById(R.id.title);

        txtTitle.setText(navDrawerItems.get(position));
        txtTitle.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View v) {
                act.displayView(position);
            }
        });

        return convertView;
    }

    public void addItem(String item){
        navDrawerItems.add(item);
        notifyDataSetChanged();
    }

    public void removeItem(int position){
        navDrawerItems.remove(position);
        notifyDataSetChanged();
    }

}
</code></pre>

<p>And this is my MainActivity:</p>

<pre><code>private ArrayList&lt;String&gt; navDrawerItems;
private NavDrawerListAdapter drawerAdapter;
private DrawerLayout mDrawerLayout;
private ListView mDrawerList;
private ActionBarDrawerToggle mDrawerToggle;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    //...
    //...other codes to implement ViewPager
    //...

    navDrawerItems = new ArrayList&lt;String&gt;();

    // setting the nav drawer list adapter
    drawerAdapter = new NavDrawerListAdapter(getApplicationContext(), navDrawerItems, this);

    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
    mDrawerList = (ListView) findViewById(R.id.list_slidermenu);
    mDrawerList.setAdapter(drawerAdapter);

    mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout,
            R.drawable.ic_drawer, //nav menu toggle icon
            R.string.app_name, // nav drawer open - description for accessibility
            R.string.app_name // nav drawer close - description for accessibility
    ) {
        public void onDrawerClosed(View view) {
            // calling onPrepareOptionsMenu() to show action bar icons
        }

        public void onDrawerOpened(View drawerView) {
            // calling onPrepareOptionsMenu() to hide action bar icons
        }
    };
    mDrawerLayout.setDrawerListener(mDrawerToggle);

    if (savedInstanceState == null) {
        // on first time display view for first nav item
        displayView(0);
    }
}

public void displayView(int position) {

    mPager.setCurrentItem(position, true);

    // update selected item and title, then close the drawer
    mDrawerList.setItemChecked(position, true);
    mDrawerList.setSelection(position);
    mDrawerLayout.closeDrawer(mDrawerList);

}
</code></pre>
