<p>Solved it, here's what I did:</p>

<pre><code>// Java the board game: find connected spaces

public class findConnectedCells
{
    public static int findNumberConnected(int a, int b, int[][] z)
    {
        boolean canUp = (a - 1 &gt;= 0);
        boolean canDown = (a + 1 &lt; z.length);
        boolean canRight = (b + 1 &lt; z[0].length);
        boolean canLeft = (b - 1 &gt;= 0);

        int value = z[a][b];

        int up = 0;
        int down = 0;
        int right = 0;
        int left = 0;

        z[a][b] = 2;

        if (canUp &amp;&amp; z[a-1][b] == value)
        {
            up = findNumberConnected(a-1,b,z);
        }
        if (canDown &amp;&amp; z[a+1][b] == value)
        {
            down = findNumberConnected(a+1,b,z);
        }
        if (canLeft &amp;&amp; z[a][b-1] == value)
        {
            left = findNumberConnected(a,b-1,z);
        }
        if (canRight &amp;&amp; z[a][b+1] == value)
        {
            right = findNumberConnected(a,b+1,z);
        }

        return up + left + right + down + 1;
    }


    public static void main(String[] args) {
        System.out.println("Finding connections");

        int[][] z = new int[][]{

                      { 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1 },
                      { 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1 },
                      { 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1 },
                      { 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1 },
                      { 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1 },   
                    };
        int x = 0;
        int y = 0;

        System.out.println("Number of connected cells from "+x+","+y+" is: "+findNumberConnected(x,y,z));
    }
}
</code></pre>
