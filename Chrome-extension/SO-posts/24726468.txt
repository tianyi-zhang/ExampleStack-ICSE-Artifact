<p>You can't disable the keys on the soft keyboard like that... the closest to that functionality would be specifying <code>inputType</code> for the <code>EditText</code> but obviously that only works with things like <code>number</code>, and you can't do that for a specific custom set of keys like the set you mentioned.</p>

<p>Instead look into <code>InputFilter</code>, as explained here:
<a href="http://stackoverflow.com/questions/3349121/how-do-i-use-inputfilter-to-limit-characters-in-an-edittext-in-android">How do I use InputFilter to limit characters in an EditText in Android?</a></p>

<p>Specifically the second answer (with modified if statements to fit your requirements):</p>

<pre><code>new InputFilter() {
@Override
public CharSequence filter(CharSequence source, int start, int end,
        Spanned dest, int dstart, int dend) {

    if (source instanceof SpannableStringBuilder) {
        SpannableStringBuilder sourceAsSpannableBuilder = (SpannableStringBuilder)source;
        for (int i = end - 1; i &gt;= start; i--) { 
            char currentChar = source.charAt(i);
             if (currChar=='.' || currChar=='?' || Character.isDigit(currChar) &amp;&amp; !Character.isSpaceChar(currentChar)) {    
                 sourceAsSpannableBuilder.delete(i, i+1);
             }     
        }
        return source;
    } else {
        StringBuilder filteredStringBuilder = new StringBuilder();
        for (int i = start; i &lt; end; i++) { 
            char currentChar = source.charAt(i);
            if (currChar=='.' || currChar=='?' || Character.isDigit(currChar) &amp;&amp; !Character.isSpaceChar(currentChar)) {    
                filteredStringBuilder.append(currentChar);
            }     
        }
        return filteredStringBuilder.toString();
    }
}
}
</code></pre>
