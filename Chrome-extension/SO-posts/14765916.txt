<p>If you are using <code>Eclipse IDE</code> then try to install <code>GrepCode_Plugin</code> from this tutorial <a href="http://grepcode.com/eclipse" rel="nofollow">GrepCode_Plugin</a></p>

<p>Once you get done with that in <code>GrepCode Search</code> box search with <code>android.text.format.DateUtils</code>. It will list you all files. Try to download the latest one.</p>

<p>Get the method from that file and modify it according to your needs.</p>

<p>For your Reference I am going put the method listed in <code>android 4.1.1_r1</code></p>

<pre><code>public static CharSequence getRelativeTimeSpanString(long time, long now, long minResolution,
            int flags) {
    Resources r = Resources.getSystem();
    boolean abbrevRelative = (flags &amp; (FORMAT_ABBREV_RELATIVE | FORMAT_ABBREV_ALL)) != 0;

    boolean past = (now &gt;= time);
    long duration = Math.abs(now - time);

    int resId;
    long count;
    if (duration &lt; MINUTE_IN_MILLIS &amp;&amp; minResolution &lt; MINUTE_IN_MILLIS) {
        count = duration / SECOND_IN_MILLIS;
        if (past) {
            if (abbrevRelative) {
                resId = com.android.internal.R.plurals.abbrev_num_seconds_ago;
            } else {
                resId = com.android.internal.R.plurals.num_seconds_ago;
            }
        } else {
            if (abbrevRelative) {
                resId = com.android.internal.R.plurals.abbrev_in_num_seconds;
            } else {
                resId = com.android.internal.R.plurals.in_num_seconds;
            }
        }
    } else if (duration &lt; HOUR_IN_MILLIS &amp;&amp; minResolution &lt; HOUR_IN_MILLIS) {
        count = duration / MINUTE_IN_MILLIS;
        if (past) {
            if (abbrevRelative) {
                resId = com.android.internal.R.plurals.abbrev_num_minutes_ago;
            } else {
                resId = com.android.internal.R.plurals.num_minutes_ago;
            }
        } else {
            if (abbrevRelative) {
                resId = com.android.internal.R.plurals.abbrev_in_num_minutes;
            } else {
                resId = com.android.internal.R.plurals.in_num_minutes;
            }
        }
    } else if (duration &lt; DAY_IN_MILLIS &amp;&amp; minResolution &lt; DAY_IN_MILLIS) {
        count = duration / HOUR_IN_MILLIS;
        if (past) {
            if (abbrevRelative) {
                resId = com.android.internal.R.plurals.abbrev_num_hours_ago;
            } else {
                resId = com.android.internal.R.plurals.num_hours_ago;
            }
        } else {
            if (abbrevRelative) {
                resId = com.android.internal.R.plurals.abbrev_in_num_hours;
            } else {
                resId = com.android.internal.R.plurals.in_num_hours;
            }
        }
    } else if (duration &lt; WEEK_IN_MILLIS &amp;&amp; minResolution &lt; WEEK_IN_MILLIS) {
        count = getNumberOfDaysPassed(time, now);
        if (past) {
            if (abbrevRelative) {
                resId = com.android.internal.R.plurals.abbrev_num_days_ago;
            } else {
                resId = com.android.internal.R.plurals.num_days_ago;
            }
        } else {
            if (abbrevRelative) {
                resId = com.android.internal.R.plurals.abbrev_in_num_days;
            } else {
                resId = com.android.internal.R.plurals.in_num_days;
            }
        }
    } else {
        // We know that we won't be showing the time, so it is safe to pass
        // in a null context.
        return formatDateRange(null, time, time, flags);
    }

    String format = r.getQuantityString(resId, (int) count);
    return String.format(format, count);
}
</code></pre>
