<p>There was a <a href="http://stackoverflow.com/questions/15352496/how-to-add-image-in-a-textview-text">similiar question</a> a while back and someone came up with an awesome solution. I've just tweaked this one a little bit so that the image-size is always as tall as the line. So basically your icons will <strong>scale with the textSize</strong>.</p>

<h2>Step 1 - Create a new View</h2>

<p>Create a new Java class which extends <code>TextView</code></p>

<pre><code>public class TextViewWithImages extends TextView {

    public TextViewWithImages(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);

    }
    public TextViewWithImages(Context context, AttributeSet attrs) {
        super(context, attrs);
    }
    public TextViewWithImages(Context context) {
        super(context);
    }

    @Override
    public void setText(CharSequence text, BufferType type) {
        Spannable s = getTextWithImages(getContext(), text, this.getLineHeight());
        super.setText(s, BufferType.SPANNABLE);
    }

    private static final Spannable.Factory spannableFactory = Spannable.Factory.getInstance();

    private static boolean addImages(Context context, Spannable spannable, float height) {
        Pattern refImg = Pattern.compile("\\Q[img src=\\E([a-zA-Z0-9_]+?)\\Q/]\\E");
        boolean hasChanges = false;

        Matcher matcher = refImg.matcher(spannable);
        while (matcher.find()) {
            boolean set = true;
            for (ImageSpan span : spannable.getSpans(matcher.start(), matcher.end(), ImageSpan.class)) {
                if (spannable.getSpanStart(span) &gt;= matcher.start()
                        &amp;&amp; spannable.getSpanEnd(span) &lt;= matcher.end()
                        ) {
                    spannable.removeSpan(span);
                } else {
                    set = false;
                    break;
                }
            }
            String resName = spannable.subSequence(matcher.start(1), matcher.end(1)).toString().trim();
            int id = context.getResources().getIdentifier(resName, "drawable", context.getPackageName());
            Drawable mDrawable = context.getResources().getDrawable(id);
            mDrawable.setBounds(0, 0, (int)height, (int)height);
            if (set) {
                hasChanges = true;
                spannable.setSpan(  new ImageSpan(mDrawable),
                        matcher.start(),
                        matcher.end(),
                        Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
                );
            }
        }

        return hasChanges;
    }
    private static Spannable getTextWithImages(Context context, CharSequence text, float height) {
        Spannable spannable = spannableFactory.newSpannable(text);
        addImages(context, spannable, height);
        return spannable;
    }
}
</code></pre>

<h2>Step 2 - Usage in layout</h2>

<p>Now in your layout-xml just use the TextViewWithImages class</p>

<pre><code>&lt;com.stacko.examples.TextViewWithImages
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textSize="14sp"
    android:text="@string/my_string_with_icons" /&gt;
</code></pre>

<h2>Step 3 - Creating strings with icons</h2>

<p>As you can see in the <code>addImages(...)</code> function of the <code>TextViewWithImages</code> class, a special pattern (<code>[img src=my_icon/]</code>) within the string is used in order to add the images.
So here's a example:</p>

<pre><code>&lt;string name="my_string_with_icons"&gt;The [img src=ic_action_trash/] is used to delete an item while the [img src=ic_action_edit/] is to edit one.&lt;/string&gt;
</code></pre>

<p>The output:</p>

<p><img src="http://i.stack.imgur.com/KiPgM.png" alt="enter image description here"></p>

<p>And as previously said it will scale with your <code>textSize</code>:</p>

<p><img src="http://i.stack.imgur.com/nPSub.png" alt="enter image description here"></p>

<p>As initially said most of this post is taken from <a href="http://stackoverflow.com/users/755804/18446744073709551615">18446744073709551615</a> answer <a href="http://stackoverflow.com/questions/15352496/how-to-add-image-in-a-textview-text">here</a>. I think this should be published as a library since it's a common use-case to have images in the text. :&lt;</p>
