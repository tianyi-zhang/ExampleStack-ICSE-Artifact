<p><strong>Note:</strong> 
in my case, I could not see the text of expandable listview inside fragment
... otherthan all functionality worked fine like clicking and expand.</p>

<p>if you have same situation then you need give <strong>text color</strong> of each <strong>textview</strong> in your xml file. please try at once. because . i have used expandable listview with fragment its work. </p>

<p>I just updated the text color of each textview.</p>

<p>And here is code.</p>

<pre><code>class ExpandableAdapters extends BaseExpandableListAdapter
    {

        LayoutInflater mInflater;
        DisplayImageOptions options;
        ArrayList&lt;Taxons&gt; localArr;
        AnimateFirstDisplayListener animateFirstListener;

        public ExpandableAdapters(ArrayList&lt;Taxons&gt; arrTaxon)
        {

            localArr = arrTaxon;
            mInflater = LayoutInflater.from(view.getContext());

            options = new DisplayImageOptions.Builder().bitmapConfig(Bitmap.Config.RGB_565).imageScaleType(ImageScaleType.EXACTLY).cacheInMemory(true)
                    .cacheOnDisc(true).resetViewBeforeLoading(true).build();

        }

        @Override
        public Object getChild(int groupPosition, int childPosition)
        {

            if (localArr.get(groupPosition - 1).arr_Taxons != null &amp;&amp; groupPosition &gt; 0)
                return localArr.get(groupPosition - 1).arr_Taxons.get(childPosition);
            else
                return null;
        }

        @Override
        public long getChildId(int groupPosition, int childPosition)
        {

            return childPosition;
        }

        @Override
        public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent)
        {

            if (convertView == null)
            {
                LayoutInflater infalInflater = (LayoutInflater) getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                convertView = infalInflater.inflate(R.layout.lyt_subcategory, null);

            }

            TextView tvSubcatname = (TextView) convertView.findViewById(R.id.subcat_tvName);
            tvSubcatname.setText(localArr.get(groupPosition - 1).arr_Taxons.get(childPosition).name);
            return convertView;
        }

        @Override
        public int getChildrenCount(int groupPosition)
        {

            if (localArr.get(groupPosition - 1).arr_Taxons != null &amp;&amp; groupPosition &gt; 0)
            {
                return localArr.get(groupPosition - 1).arr_Taxons.size();
            }
            else
                return 0;

        }

        @Override
        public Object getGroup(int groupPosition)
        {

            return localArr.get(groupPosition - 1);
        }

        @Override
        public int getGroupCount()
        {

            return localArr.size() + 1;
        }

        @Override
        public long getGroupId(int groupPosition)
        {

            return groupPosition;
        }

        @Override
        public int getGroupTypeCount()
        {

            return 2;
        }

        @Override
        public int getGroupType(int groupPosition)
        {

            return (groupPosition == 0) ? 1 : 0;
        }

        @Override
        public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)
        {

            final ViewHolder holder;
            int theType = getGroupType(groupPosition);
            if (convertView == null)
            {
                holder = new ViewHolder();
                if (theType == 0)
                {
                    // inflate the search row
                    convertView = mInflater.inflate(R.layout.lyt_category, null);
                    holder.ivCategory = (ImageView) convertView.findViewById(R.id.home_ivCategory);
                    holder.ivCategory.setLayoutParams(new RelativeLayout.LayoutParams(LayoutParams.MATCH_PARENT, screenHeight / 2));
                    holder.ivCategory.setScaleType(ScaleType.CENTER_CROP);
                    holder.tvCategory = (TextView) convertView.findViewById(R.id.home_tvCategoryName);
                    holder.progress = (ProgressBar) convertView.findViewById(R.id.home_progressbar1);
                    holder.ivCategory.setTag(holder.progress);
                    holder.tvCategory.setPadding((int) (screenWidth * 0.07), 0, 0, 0);

                }
                else if (theType == 1)
                {
                    // except zero index it will execute this code.
                    convertView = mInflater.inflate(R.layout.lyt_search_home, null);
                    holder.rlSearchmain = (RelativeLayout) convertView.findViewById(R.id.home_rlsearch);
                    holder.rlSearchmain.setLayoutParams(new AbsListView.LayoutParams(screenWidth, (int) (screenHeight * 0.07)));
                    holder.ivSearch = (ImageButton) convertView.findViewById(R.id.home_Btn_search);
                    holder.etSearch = (EditText) convertView.findViewById(R.id.home_edt_search);

                }
                convertView.setTag(holder);
            }
            else
                holder = (ViewHolder) convertView.getTag();

            //set value here.

            return convertView;
        }

        @Override
        public boolean hasStableIds()
        {

            return false;
        }

        @Override
        public boolean isChildSelectable(int groupPosition, int childPosition)
        {

            return true;
        }

        private class ViewHolder
        {

            ImageView ivCategory;
            TextView tvCategory;
            ProgressBar progress;
            EditText etSearch;
            ImageButton ivSearch;
            RelativeLayout rlSearchmain;
        }
}
</code></pre>

<p>Please ignore extra code... </p>
