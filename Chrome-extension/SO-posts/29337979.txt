<p>Try this:</p>

<pre><code>String TABLE_NAME= "train_day";

String column1= "column1";
String column2= "column2";
String column3= "column3";

String TABLE_BODY = TABLE_NAME + " ("
            + column1 + " INTEGER PRIMARY KEY AUTOINCREMENT,"
            + column2 + " TEXT NOT NULL,"
            + column3 + " TEXT NOT NULL)";

public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
    replaceDataToNewTable(db, TABLE_NAME, TABLE_BODY);

}

private void replaceDataToNewTable(SQLiteDatabase db, String tableName, String tableString){
    db.execSQL("CREATE TABLE IF NOT EXISTS " + tableString);

    List&lt;String&gt; columns = getColumns(db, tableName);
    db.execSQL("ALTER TABLE " + tableName + " RENAME TO temp_" + tableName);
    db.execSQL("CREATE TABLE " + tableString);

    columns.retainAll(getColumns(db, tableName));
    String cols = join(columns, ",");
    db.execSQL(String.format("INSERT INTO %s (%s) SELECT %s from temp_%s",
            tableName, cols, cols, tableName));
    db.execSQL("DROP TABLE temp_" + tableName);
}

private List&lt;String&gt; getColumns(SQLiteDatabase db, String tableName) {
    List&lt;String&gt; ar = null;
    Cursor c = null;
    try {
        c = db.rawQuery("select * from " + tableName + " limit 1", null);
        if (c != null) {
            ar = new ArrayList&lt;String&gt;(Arrays.asList(c.getColumnNames()));
        }
    } catch (Exception e) {
        LOGE(tableName, e.getMessage() + e);
        e.printStackTrace();
    } finally {
        if (c != null)
            c.close();
    }
    return ar;
}

private String join(List&lt;String&gt; list, String divider) {
    StringBuilder buf = new StringBuilder();
    int num = list.size();
    for (int i = 0; i &lt; num; i++) {
        if (i != 0)
            buf.append(divider);
        buf.append(list.get(i));
    }
    return buf.toString();
}
</code></pre>
