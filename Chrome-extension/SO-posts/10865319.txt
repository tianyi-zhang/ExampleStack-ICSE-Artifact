<p>This is a security breach. You should have a rooted device in order to do it.</p>

<p>You can use this code with your own app: (I got this code from this answer to another question: <a href="http://stackoverflow.com/a/5651242/237838">http://stackoverflow.com/a/5651242/237838</a> )</p>

<pre><code>// image naming and path  to include sd card  appending name you choose for file
String mPath = Environment.getExternalStorageDirectory().toString() + "/" + ACCUWX.IMAGE_APPEND;   

// create bitmap screen capture
Bitmap bitmap;
View v1 = mCurrentUrlMask.getRootView();
v1.setDrawingCacheEnabled(true);
bitmap = Bitmap.createBitmap(v1.getDrawingCache());
v1.setDrawingCacheEnabled(false);

OutputStream fout = null;
imageFile = new File(mPath);

try {
   fout = new FileOutputStream(imageFile);
   bitmap.compress(Bitmap.CompressFormat.JPEG, 90, fout);
   fout.flush();
   fout.close();
} catch (FileNotFoundException e) {
   e.printStackTrace();
} catch (IOException e) {
   e.printStackTrace();
}
</code></pre>

<p>Try looking this code for additional help:</p>

<ul>
<li><a href="http://code.google.com/p/android-screenshot-library/wiki/DeveloperGuide" rel="nofollow">code.google.com/p/android-screenshot-library/wiki/DeveloperGuide</a></li>
</ul>

<p><strong>P.S.</strong> It's possible to take a screenshot from Android using DDMS, but this is another story.</p>

<p><strong>P.P.S.</strong> If you want to draw your launcher transparently over the activity below it you need to set pixel format to RGBA (only dealt with OpenGL) and render accordingly. You don't need to take a screenshot of the underlaying activity to do that.</p>

<p><strong>Rooted device:</strong> use this code on the rooted device:</p>

<pre><code>process = Runtime.getRuntime().exec("su -c cat /dev/graphics/fb0");
InputStream is = process.getInputStream();
</code></pre>
