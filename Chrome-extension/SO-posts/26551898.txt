<p>Hey i see my simple and best example, Follow some steps </p>

<p>I mostly use custom for testing </p>

<p>JSON Parsing
 Step 1.</p>

<p>JSONParser.java</p>

<pre><code>  public class JSONParser {
  InputStream is = null;
  JSONObject jObj = null;
  String json = "";

  // constructor
 public JSONParser() {
 }

  public String getJSONFromUrl(String url) {

 // Making HTTP request
 try {

   DefaultHttpClient httpClient = new DefaultHttpClient();
   HttpPost httpPost = new HttpPost(url);
   HttpResponse httpResponse = httpClient.execute(httpPost);
   Log.e("response", "" + httpResponse);

   HttpEntity httpEntity = httpResponse.getEntity();
   is = httpEntity.getContent();

   } catch (UnsupportedEncodingException e) {
   e.printStackTrace();
   } catch (ClientProtocolException e) {
  e.printStackTrace();
} catch (IOException e) {
 e.printStackTrace();
}
try {
 BufferedReader reader = new BufferedReader(new InputStreamReader(
 is, "iso-8859-1"), 8);
 StringBuilder sb = new StringBuilder();
  String line = null;
 while ((line = reader.readLine()) != null) {
sb.append(line + "\n");
 }
  json = sb.toString();
 is.close();
 } catch (Exception e) {
 Log.e("Buffer Error", "Error converting result " + e.toString());
 }
 return json;
 }


 }
</code></pre>

<p>Sept 2.</p>

<p>MainHome.java</p>

<pre><code>   public class MainActivity extends Activity {

ListView lvdata;
LinkedList&lt;HashMap&lt;String, String&gt;&gt; aldata = new LinkedList&lt;HashMap&lt;String, String&gt;&gt;();

@Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
init();

 new getData().execute();
 }

 void init() {
 lvdata = (ListView) findViewById(R.id.lvdata);

 }

private class getData extends AsyncTask&lt;Void, Void, String&gt; {
 Dialog dialog;
String url;

@Override
   protected void onPreExecute() {
 super.onPreExecute();

 }

@Override
protected String doInBackground(Void... params) {
  url = "Enter your url";

 JSONParser jParser = new JSONParser();
 String json = jParser.getJSONFromUrl(url);
 try {
  JSONObject jobject = new JSONObject(json);

  int success = jobject.getInt("success");

  for (int i = 0; i &lt; jobject.length() - 1; i++) {
   JSONObject jobj = jobject
   .getJSONObject(Integer.toString(i));
   if (success == 1) {
    HashMap&lt;String, String&gt; hm = new HashMap&lt;String, String&gt;();

    hm.put("p_name", jobj.getString("p_name"));
    hm.put("p_title", jobj.getString("p_title"));
    aldata.add(hm);
   }
  }
 } catch (JSONException e) {
  e.printStackTrace();
 }
   return null;

}

@Override
 protected void onPostExecute(String result) {
 super.onPostExecute(result);
 if (dialog != null)
  if (dialog.isShowing())
 dialog.dismiss();
 Custom_Adapter adapter = new Custom_Adapter(
 (Activity) MainActivity.this, aldata);
 lvdata.setAdapter(adapter);
}
 }

  }
</code></pre>

<ol start="3">
<li>Custom Adapter</li>
</ol>

<p>Custom_Adapter.java</p>

<pre><code>public class Custom_Adapter extends ArrayAdapter&lt;HashMap&lt;String, String&gt;&gt; {

private final Activity context;
 private final LinkedList&lt;HashMap&lt;String, String&gt;&gt; allData;

public Custom_Adapter(Activity context,
 LinkedList&lt;HashMap&lt;String, String&gt;&gt; list) {
super(context, R.layout.custom_list, list);
 this.context = context;

this.allData = list;
}

static class ViewHolder {

TextView tvname, tvinfo;

}

@Override
 public View getView(int position, View convertView, ViewGroup parent) {
 View view = convertView;
view = null;
if (view == null) {
 LayoutInflater inflator = context.getLayoutInflater();
 view = inflator.inflate(R.layout.custom_list, null);
 final ViewHolder viewHolder = new ViewHolder();
 initAll(view, viewHolder);
 view.setTag(viewHolder);
 }
 ViewHolder holder = (ViewHolder) view.getTag();
 fillAll(holder, position);
return view;

  }

public void initAll(View view, ViewHolder viewHolder) {

viewHolder.tvname = (TextView) view.findViewById(R.id.tvname);

viewHolder.tvinfo = (TextView) view.findViewById(R.id.tvinfo);

}

public void fillAll(final ViewHolder holder, final int position) {

holder.tvname.setText(allData.get(position).get("p_name"));
holder.tvinfo.setText(allData.get(position).get("p_title"));

 }

}
</code></pre>
