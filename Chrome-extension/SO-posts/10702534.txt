<blockquote>
  <p>EVEN key value 5 is repeated but it doesn't call equals and hashCode</p>
</blockquote>

<p>Yes it does call hashCode, on the key, the Integer.</p>

<blockquote>
  <p>I want to apply it also on Value</p>
</blockquote>

<p>Dose of reality: Java HashMaps don't work that way. They check the key only for duplicates, not the value, and this is as it should be.</p>

<p>If you want Employee's hash to be checked in the Map, then it <em>must</em> be the key. Period.</p>

<p>Another possible solution is to download one of the multimaps that are available.</p>

<p><strong>Edit</strong>  to see that it's calling hashCode and equals, change your Map's key type to something like so:</p>

<pre><code>class MyInt {
   private Integer i;

   public MyInt(Integer i) {
      this.i = i;
   }

   public Integer getI() {
      return i;
   }

   @Override
   public int hashCode() {
      System.out.println("MyInt HashCode: " + i.hashCode());
     return i.hashCode();
   }

   @Override
   public boolean equals(Object obj) {
      System.out.printf("MyInt equals: [%s, %s]%n", i, obj);
      if (this == obj)
         return true;
      if (obj == null)
         return false;
      if (getClass() != obj.getClass())
         return false;
      MyInt other = (MyInt) obj;
      if (i == null) {
         if (other.i != null)
            return false;
      } else if (!i.equals(other.i))
         return false;
      return true;
   }

   @Override
   public String toString() {
      return i.toString();
   }

}
</code></pre>

<p>Then fill your Map like so:</p>

<pre><code>   Map&lt;MyInt,Employee&gt; map = new HashMap&lt;MyInt,Employee&gt;();
   map.put(new MyInt(1), new Employee(1, "emp", 981));
   map.put(new MyInt(2), new Employee(2, "emp2", 982));
   map.put(new MyInt(3), new Employee(3, "emp3", 983));
   map.put(new MyInt(4), new Employee(4, "emp4", 984));
   map.put(new MyInt(5), new Employee(4, "emp4", 984));
   map.put(new MyInt(5), new Employee(4, "emp4", 984));
</code></pre>

<p>and you'll see:</p>

<pre><code>MyInt HashCode: 1
MyInt HashCode: 2
MyInt HashCode: 3
MyInt HashCode: 4
MyInt HashCode: 5
MyInt HashCode: 5
MyInt equals: [5, 5]
</code></pre>
