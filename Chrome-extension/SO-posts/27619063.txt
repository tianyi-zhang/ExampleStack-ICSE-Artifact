<h2>Try this code and get latitude and longitude</h2>

<p><strong>Create a class GPSTracker.java</strong></p>

<pre><code>package com.example.gpstracker;

import android.app.AlertDialog;
import android.app.Service;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.IBinder;
import android.provider.Settings;
import android.util.Log;

public class GPSTracker extends Service implements LocationListener
{
private final Context _context;

boolean isGPSEnabled=false;
boolean isNetworkEnabled=false;
boolean canGetLocation=false;

Location location;
double latitude;
double longitude;

private static final long MIN_DISTANCE_CHANGE_FOR_UPDATES=5; //5 meters
private static final long MIN_TIME_BW_UPDATES=1000*60*1; // 1 minute

protected LocationManager locationManager;

public GPSTracker(Context contet)
{
    this._context=contet;
    getLocation();
}




public Location getLocation() 
{
    try
    {
        locationManager =(LocationManager)_context.getSystemService(LOCATION_SERVICE);

        //getting GPS Status
        isGPSEnabled=locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);

        //getting network status
        isNetworkEnabled=locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);

        if(!isGPSEnabled &amp;&amp; !isNetworkEnabled)
        {

        }
        else
        {
            this.canGetLocation=true;
            //first get location from network provider
            if(isNetworkEnabled)
            {
                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                Log.i("Network","Network");

                if(locationManager !=null)
                {
                    location=locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
                    if(location !=null)
                    {
                        latitude=location.getLatitude();
                        longitude=location.getLongitude();
                    }
                }
            }
            // if GPS Enabled get lat/log
            if(isGPSEnabled)
            {
                if(location == null)
                {
                    locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                    Log.i("GPS","GPS Enabled");
                    if(locationManager !=null)
                    {
                        location=locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
                        if(location !=null)
                        {
                            latitude=location.getLatitude();
                            longitude=location.getLongitude();
                        }
                    }
                }
            }

        }

    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
    return location;
}
 public void stopUsingGPS(){
        if(locationManager != null){
            locationManager.removeUpdates(GPSTracker.this);
        }       
    }
public double getLatitude()
{
    if(location !=null)
    {
        latitude=location.getLatitude();
    }
    return latitude;
}

public double getLongitude()
{
    if(location !=null)
    {
        longitude=location.getLongitude();
    }
    return longitude;
}

public boolean canGetLocation()
{
    return this.canGetLocation;
}

public void showSettingAlert()
{
    AlertDialog.Builder alert=new AlertDialog.Builder(_context);
    alert.setTitle("GPS is Setting");
    alert.setMessage("GPS is not enabled. Do you want to go to settings..?");
    alert.setPositiveButton("Yes",new DialogInterface.OnClickListener() {
        @Override
        public void onClick(DialogInterface dialog, int which) {
        Intent i=new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        _context.startActivity(i);
        }
    });

    alert.setNegativeButton("No",new DialogInterface.OnClickListener() {
        @Override
        public void onClick(DialogInterface dialog, int which) {
            dialog.cancel();
        }
    });
    alert.show();
}

public void onLocationChanged(Location location) {
}

@Override
public void onStatusChanged(String provider, int status, Bundle extras) {
}

@Override
public void onProviderEnabled(String provider) {
}

@Override
public void onProviderDisabled(String provider) {
}

@Override
public IBinder onBind(Intent intent) {
    return null;
}
}
</code></pre>

<p><strong>Create your activity class file MainActivity.java</strong></p>

<pre><code>package com.example.gpstracker;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends Activity implements OnClickListener {

Button btnClick;
GPSTracker tracker;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    btnClick=(Button)findViewById(R.id.btnClick);
    btnClick.setOnClickListener(this);
}


@Override
public void onClick(View v) {
    tracker=new GPSTracker(getApplicationContext());

    if(tracker.canGetLocation())
    {
        double latitude=tracker.getLatitude();
        double longitude=tracker.getLongitude();
        Toast.makeText(MainActivity.this,"your Location is \n Latitude : " + latitude +
                "\n Longitude : "+longitude,Toast.LENGTH_LONG).show();
    }
    else
    {
        tracker.showSettingAlert();
    }
}
}
</code></pre>

<p><strong>Add below lines in manifest.xml</strong></p>

<pre><code>&lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/&gt;
&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/&gt;
&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/&gt;
&lt;uses-permission android:name="android.permission.INTERNET"/&gt;
</code></pre>
