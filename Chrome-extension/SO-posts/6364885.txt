<p>First parse your JSON object like so:</p>

<pre><code>String str_json = "your json string";
try {
    JSONObject obj = new JSONObject(str_json);
    JSONArray stations = obj.getJSONArray("stations");
    //etc etc...

} catch (JSONException e) {
    e.printStackTrace();
}
</code></pre>

<p>Then parse this JSONArray into an ArrayList of custom Station objects that you have created, eg:</p>

<pre><code>public class Station {

    public String country;
    public int reg_price;
    // etc etc...
}
</code></pre>

<p>Put items from the JSONArray into your ArrayList:</p>

<pre><code>ArrayList&lt;Station&gt; stationsArrList = new ArrayList&lt;Station&gt;();

int len = stations.size();    
for ( int i = 0; i &lt; len; i++ ){
    JSONObject stationObj = stations.getJSONObject(i);
    Station station = new Station();

    for ( int j = 0; j &lt; stationObj.len(); j++ ){
        //add items from stationObj to station
    }
    stationsArrList.add(station);
}
</code></pre>

<p>Then create an adapter (assuming you want more than two pieces of info displayed):</p>

<pre><code>public class StationListAdapter extends BaseAdapter {
    private static ArrayList&lt;Station&gt; stationArrayList;

    private LayoutInflater inflator;

    public StationListAdapter(Context context, ArrayList&lt;Station&gt; results) {
        stationArrayList = results;
        inflator = LayoutInflater.from(context);
    }

    public int getCount() {
        if (stationArrayList == null)
            return 0;
        else
            return stationArrayList.size();
    }

    public Object getItem(int position) {
        try {
            return stationArrayList.get(position);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public long getItemId(int position) {
        return position;
    }

    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        if (convertView == null) {
            convertView = inflator.inflate(R.layout.list_item_station, null);
            holder = new ViewHolder();
            holder.country = (TextView) convertView.findViewById(R.id.station_listview_item_one);
            holder.reg_price = (TextView) convertView.findViewById(R.id.station_listview_item_two);
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }

        holder.country.setText(stationArrayList.get(position).getCountry());
        holder.reg_price.setText( stationArrayList.get(position).getRegPrice());

        return convertView;
    }

    static class ViewHolder {
        TextView country;
        TextView reg_price;
        //etc
    }
}
</code></pre>

<p>In the adapter, you'll be using a listview xml layout that you will have defined for each of the list rows.</p>

<p>Finally, you get the reference to the list and add the data on the main activity code:</p>

<pre><code>stationList = (ListView) findViewById(R.id.station_list_view);
stationListAdapter = new StationListAdapter(this, stationsArrList);
stationList.setAdapter(stationListAdapter);
</code></pre>
