<p>So after looking (and using) of the other answers, seems they all handling <code>ColorDrawable</code> and <code>PaintDrawable</code> badly. (Especially on lollipop) seemed that <code>Shader</code>s were tweaked so solid blocks of colors were not handled correctly.</p>

<p>I am using the following code now:</p>

<pre><code>public static Bitmap drawableToBitmap(Drawable drawable) {
    if (drawable instanceof BitmapDrawable) {
        return ((BitmapDrawable) drawable).getBitmap();
    }

    // We ask for the bounds if they have been set as they would be most
    // correct, then we check we are  &gt; 0
    final int width = !drawable.getBounds().isEmpty() ?
            drawable.getBounds().width() : drawable.getIntrinsicWidth();

    final int height = !drawable.getBounds().isEmpty() ?
            drawable.getBounds().height() : drawable.getIntrinsicHeight();

    // Now we check we are &gt; 0
    final Bitmap bitmap = Bitmap.createBitmap(width &lt;= 0 ? 1 : width, height &lt;= 0 ? 1 : height,
            Bitmap.Config.ARGB_8888);
    Canvas canvas = new Canvas(bitmap);
    drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
    drawable.draw(canvas);

    return bitmap;
}
</code></pre>

<p>Unlike the others, if you call <code>setBounds</code> on the <code>Drawable</code> before asking to turn it into a bitmap, it will draw the bitmap at the correct size!</p>
