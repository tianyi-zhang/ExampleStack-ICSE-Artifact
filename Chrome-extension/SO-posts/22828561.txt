<p>Some possible solutions to resolve it.</p>

<p><strong>Use a pseudo getter</strong></p>

<pre><code>public String getBigFieldString() {
    return bigField != null ? bigField.toPlainString : null;
}
</code></pre>

<p>and plugin will serialize it as <code>bigFieldString:"12345678901234567890.123456789123456789"</code>. You can also use field's getter to do this.</p>

<hr>

<p><strong>Change JSON Plugin Code</strong>
Copy <code>org.apache.struts2.json.JSONWriter</code> class from JSON Plugin to your project code. and update <code>process</code> method as below. (Be careful while doing this.)</p>

<pre><code>package org.apache.struts2.json;
...
class JSONWriter {
...
    private void process(Object object, Method method) throws JSONException {
        this.stack.push(object);

        if (object instanceof Class) {
            this.string(object);
        } else if (object instanceof Boolean) {
            this.bool((Boolean) object);
        } 

        // Begin: Handling of Big Decimal, Keep this code above Handling of Number
        else if (object instanceof BigDecimal) {
            this.string(((BigDecimal)object).toPlainString());
        } 
        // End: Handling of Big Decimal

        else if (object instanceof Number) {
            this.add(object);
        } else if (object instanceof String) {
            this.string(object);
        } else if (object instanceof Character) {
            this.string(object);
        } else if (object instanceof Map) {
            this.map((Map) object, method);
        } else if (object.getClass().isArray()) {
            this.array(object, method);
        } else if (object instanceof Iterable) {
            this.array(((Iterable) object).iterator(), method);
        } else if (object instanceof Date) {
            this.date((Date) object, method);
        } else if (object instanceof Calendar) {
            this.date(((Calendar) object).getTime(), method);
        } else if (object instanceof Locale) {
            this.string(object);
        } else if (object instanceof Enum) {
            this.enumeration((Enum) object);
        } else {
            this.bean(object);
        }

        this.stack.pop();
    }
    ...
}
</code></pre>
