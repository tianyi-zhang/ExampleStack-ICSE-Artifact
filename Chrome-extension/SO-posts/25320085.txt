<p>I've been butting up against this issue on a Gingerbread (2.3.7) device with not a great deal of RAM (HTC Wildfire).  After rotating the device a few times, the app crashes with:</p>

<pre><code>E/AndroidRuntime( 4805): Caused by: java.lang.OutOfMemoryError: bitmap size exceeds VM budget
E/AndroidRuntime( 4805):        at android.graphics.BitmapFactory.nativeDecodeAsset(Native Method)
E/AndroidRuntime( 4805):        at android.graphics.BitmapFactory.decodeStream(BitmapFactory.java:460)
E/AndroidRuntime( 4805):        at android.graphics.BitmapFactory.decodeResourceStream(BitmapFactory.java:336)
E/AndroidRuntime( 4805):        at android.graphics.drawable.Drawable.createFromResourceStream(Drawable.java:697)
E/AndroidRuntime( 4805):        at android.content.res.Resources.loadDrawable(Resources.java:1785)
E/AndroidRuntime( 4805):        at android.content.res.TypedArray.getDrawable(TypedArray.java:601)
E/AndroidRuntime( 4805):        at android.widget.ImageView.&lt;init&gt;(ImageView.java:118)
E/AndroidRuntime( 4805):        at android.widget.ImageView.&lt;init&gt;(ImageView.java:108)
E/AndroidRuntime( 4805):        ... 26 more
</code></pre>

<p>The layout that's rotating is pretty simple, a <code>RelativeLayout</code> with a few <code>ImageView</code> children, one of which has a relatively large (filesize) image as the background for part of the screen.</p>

<p>I tried implementing @AndroidUsers's solution but that did not correct my issue.  With a bit more work I found that the ImageView I was holding the background image in wasn't releasing its memory properly so I added another check to the unbindDrawables method.  I also bundled in the system.gc() call via an extra parameter so it can't be missed:</p>

<pre><code>public static void unbindDrawables(View view, boolean runGC) {
    if (view.getBackground() != null) {
        view.getBackground().setCallback(null);
    }

    if (view instanceof ImageView) {
        ((ImageView) view).setImageBitmap(null);
        ((ImageView) view).setImageDrawable(null);
    }
    else if (view instanceof ViewGroup) {
        for (int i = 0; i &lt; ((ViewGroup) view).getChildCount(); i++) {
            unbindDrawables(((ViewGroup) view).getChildAt(i), false);
        }
        ((ViewGroup) view).removeAllViews();
    }

    if(runGC) {
        System.gc();
    }
}
</code></pre>

<p>In my testing it doesn't seem to matter which of the Bitmap or Drawable you set to null, but I figured both couldn't hurt.</p>
