<p>You need to postInvalidate your frames to update the screen. You can try this :</p>

<pre><code>FrameLayout contentFrame = (FrameLayout) findViewById(R.id.content_frame);
FrameLayout contentFrameTwo = (FrameLayout) findViewById(R.id.content_frametwo);

if (frameOneVisible){
    contentFrame.setVisibility(View.VISIBLE);
    contentFrameTwo.setVisibility(View.GONE);
} else {
    contentFrame.setVisibility(View.GONE);
    contentFrameTwo.setVisibility(View.VISIBLE);
}

contentFrame.postInvalidate();
contentFrameTwo.postInvalidate();
</code></pre>

<p>And using your full main file :</p>

<pre><code>FrameLayout contentFrame;
FrameLayout contentFrameTwo;

protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
    setSupportActionBar(toolbar);

    DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
    ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
            this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
    drawer.setDrawerListener(toggle);
    toggle.syncState();

    NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
    navigationView.setNavigationItemSelectedListener(this);

    contentFrame = (FrameLayout) findViewById(R.id.content_frame);
    contentFrameTwo = (FrameLayout) findViewById(R.id.content_frametwo);

    setFrameVisibility(true);
}

@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.main, menu);
    return true;
}

private void setFrameVisibility (boolean frameOneVisible){
    if (frameOneVisible){
        contentFrame.setVisibility(View.VISIBLE);
        contentFrameTwo.setVisibility(View.GONE);
    } else {
        contentFrame.setVisibility(View.GONE);
        contentFrameTwo.setVisibility(View.VISIBLE);
    }
    contentFrame.postInvalidate();
    contentFrameTwo.postInvalidate();
}    

@Override
public boolean onOptionsItemSelected(MenuItem item) {
    // Handle action bar item clicks here. The action bar will
    // automatically handle clicks on the Home/Up button, so long
    // as you specify a parent activity in AndroidManifest.xml.
    int id = item.getItemId();

    //noinspection SimplifiableIfStatement
    if (id == R.id.colourred) {
        getWindow().getDecorView().setBackgroundColor(Color.parseColor("#33CCCC"));
        return true;
    } else if (id == R.id.colourblue) {
        getWindow().getDecorView().setBackgroundColor(Color.parseColor("#CC9900"));

    }

    return super.onOptionsItemSelected(item);
}


@SuppressWarnings("StatementWithEmptyBody")
@Override
public boolean onNavigationItemSelected(MenuItem item) {
    // Handle navigation view item clicks here.
    int id = item.getItemId();
    FragmentManager fragmentManager = getFragmentManager();

    if (id == R.id.homepage) {
        Intent homepage = new Intent(MainActivity.this, MainActivity.class);
        startActivity(homepage);
        // Handle the camera action
    } else if (id == R.id.foodpage) {
        //handle the food page here
        fragmentManager.beginTransaction()
                .replace(R.id.content_frame
                        , new FirstFragment())
                .commit();

    } else if (id == R.id.schedulepage) {
        fragmentManager.beginTransaction()
                .replace(R.id.content_frame
                        , new ScheduleFragment())
                .commit();

    } else if (id == R.id.emotionspage) {
        fragmentManager.beginTransaction()
                .replace(R.id.content_frame
                        , new EmotionsFragment())
                .commit();

    } else if (id == R.id.basicneedspage) {
        fragmentManager.beginTransaction()
                .replace(R.id.content_frame
                        , new BasicneedsFragment())
                .commit();

    } else if (id == R.id.exit) {
        askBeforeExit();

    }

    DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
    drawer.closeDrawer(GravityCompat.START);
    return true;
}
</code></pre>
