<p>Well, the problem here is that you don't really have a classpath configured in the environment for your second Java application, so even though you can invoke the main class itself (as you said,) none of the other dependencies are found.</p>

<p>I'd also guess that even if you use something like Maven or Ant, if you are building two separate Java applications with separate classpaths (but one knows about the other's classpath, then you could do something like this in order to tell the ProcessBuilder how to find the right JAR and Class files for your second application:</p>

<pre><code>public int exec(Class&lt;?&gt; clazz) throws IOException,
                                           InterruptedException {
    String javaHome = System.getProperty("java.home");
    String javaBin = javaHome +
            File.separator + "bin" +
            File.separator + "java";

    /* This is where you want to set up your Classpath for the second app */
    String classpath = System.getProperty("java.class.path");
    String className = clazz.getCanonicalName();

    ProcessBuilder builder = new ProcessBuilder(
            javaBin, "-cp", classpath, className);

    Process process = builder.start();
    process.waitFor();
    return process.exitValue();
}
</code></pre>

<p>But I question why you are launching the app from NetBeans - assumedly you will need to eventually launch both apps from the command line. If you can't launch the apps from the command-line, then you won't be able to launch them from Java either. ProcessBuilder just behaves as a command-line launcher for other programs on the system. </p>
