<p>I have found the answer to this issue. The sql native query I was using did NOT have any alias on the first 3 columns (company_id, long_name and reuters_org_id). When I debugged the <strong>SQLServer2008Dialect</strong>, it lead to the method <strong>getProcessedSql</strong>():</p>

<pre><code>public String getProcessedSql() {
        StringBuilder sb = new StringBuilder( sql );
        if ( sb.charAt( sb.length() - 1 ) == ';' ) {
            sb.setLength( sb.length() - 1 );
        }

        if ( LimitHelper.hasFirstRow( selection ) ) {
            final String selectClause = fillAliasInSelectClause( sb );

            int orderByIndex = shallowIndexOfWord( sb, ORDER_BY, 0 );
            if ( orderByIndex &gt; 0 ) {
                // ORDER BY requires using TOP.
                addTopExpression( sb );
            }

            encloseWithOuterQuery( sb );

            // Wrap the query within a with statement:
            sb.insert( 0, "WITH query AS (" ).append( ") SELECT " ).append( selectClause ).append( " FROM query " );
            sb.append( "WHERE __hibernate_row_nr__ &gt;= ? AND __hibernate_row_nr__ &lt; ?" );
        }
        else {
            hasOffset = false;
            addTopExpression( sb );
        }

        return sb.toString();
    }
</code></pre>

<p>The private method that sets the page0_, page1_, and page2, is done by <strong>fillAliasInSelectClause</strong>, an excerpt that does this is: </p>

<pre><code>// Inserting alias. It is unlikely that we would have to add alias, but just in case.
alias = StringHelper.generateAlias( "page", unique );
</code></pre>

<p>The solution that worked for me is to provide the column alias on the 3 columns that initially did not have any. So basically, you will need to put alias on all your columns.</p>
