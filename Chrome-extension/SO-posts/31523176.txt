<p>Clearly, in your addLocation method, the locationCursor you get by calling <code>Cursor locationCursor = mContext.getContentResolver().query(...)</code> is null, which causes the crash when you call <code>locationCursor.moveToFirst()</code> just after that.</p>

<p>I suggest to check out <a href="http://stackoverflow.com/questions/13080540/what-causes-androids-contentresolver-query-to-return-null">this problem's accepted answer</a>. The problem might be that the query is empty.</p>

<p>In any case, you should always check whether the Cursor is null before you apply methods to it, and deal with that case somehow by alerting the user.</p>

<p>The method could look like this:</p>

<pre><code>    long addLocation(String locationSetting, String cityName, double lat, double lon) {
    long locationId;

    // First, check if the location with this city name exists in the db
    Cursor locationCursor = mContext.getContentResolver().query(
            WeatherContract.LocationEntry.CONTENT_URI,
            new String[]{WeatherContract.LocationEntry._ID},
            WeatherContract.LocationEntry.COLUMN_LOCATION_SETTING + " = ?",
            new String[]{locationSetting},
            null);

    if (locationCursor != null) {
        if (locationCursor.moveToFirst()) {
            int locationIdIndex = locationCursor.getColumnIndex(WeatherContract.LocationEntry._ID);
            locationId = locationCursor.getLong(locationIdIndex);
            locationCursor.close();
            return locationId;
        }
    }
    // Now that the content provider is set up, inserting rows of data is pretty simple.
    // First create a ContentValues object to hold the data you want to insert.
    ContentValues locationValues = new ContentValues();

    // Then add the data, along with the corresponding name of the data type,
    // so the content provider knows what kind of value is being inserted.
    locationValues.put(WeatherContract.LocationEntry.COLUMN_CITY_NAME, cityName);
    locationValues.put(WeatherContract.LocationEntry.COLUMN_LOCATION_SETTING, locationSetting);
    locationValues.put(WeatherContract.LocationEntry.COLUMN_COORD_LAT, lat);
    locationValues.put(WeatherContract.LocationEntry.COLUMN_COORD_LONG, lon);

    // Finally, insert location data into the database.
    Uri insertedUri = mContext.getContentResolver().insert(
            WeatherContract.LocationEntry.CONTENT_URI,
            locationValues
    );

    // The resulting URI contains the ID for the row.  Extract the locationId from the Uri.
    locationId = ContentUris.parseId(insertedUri);
    locationCursor.close();
    // Wait, that worked?  Yes!
    return locationId;
}
</code></pre>
