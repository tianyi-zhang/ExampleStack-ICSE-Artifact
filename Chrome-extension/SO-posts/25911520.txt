<p>After trying lots of things Finally I came to solution that In current version Facebook broke Intent for accepting Multiple Images while coming as Intent. ACTION_SEND_MULTIPLE. But I surprised when Multiple sharing is working with default Gallery in my device. 
Finally with the help of my friend (not wanted to take credit from him). I came to know that Default GAllery is sending files in URI by using <strong>Content Provider</strong> thats why they are working So I have changed my URI list for Facebook (I have created custom share dialog, So I can intercept which option is selected from Share Dialog opened via Intent.)</p>

<pre><code>private void updateUrisForFacebook() {
    if (intent.getAction().equalsIgnoreCase(Intent.ACTION_SEND_MULTIPLE)) {
        ArrayList&lt;Uri&gt; uris = intent
                .getParcelableArrayListExtra(Intent.EXTRA_STREAM);
        for (int i = 0; i &lt; uris.size(); i++) {
            Uri uri = uris.get(i);
            String path = uri.getPath();
            File imageFile = new File(path);
            uri = getImageContentUri(imageFile);
            uris.set(i, uri);
        }
        intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);
    }
}

private Uri getImageContentUri(File imageFile) {
    String filePath = imageFile.getAbsolutePath();
    Cursor cursor = context.getContentResolver().query(
            MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
            new String[] { MediaStore.Images.Media._ID },
            MediaStore.Images.Media.DATA + "=? ",
            new String[] { filePath }, null);
    if (cursor != null &amp;&amp; cursor.moveToFirst()) {
        int id = cursor.getInt(cursor
                .getColumnIndex(MediaStore.MediaColumns._ID));
        Uri baseUri = Uri.parse("content://media/external/images/media");
        return Uri.withAppendedPath(baseUri, "" + id);
    } else {
        if (imageFile.exists()) {
            ContentValues values = new ContentValues();
            values.put(MediaStore.Images.Media.DATA, filePath);
            return context.getContentResolver().insert(
                    MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);
        } else {
            return null;
        }
    }
}
</code></pre>

<p>Finally It works :) </p>

<p><strong><em>So Basic Idea is to convert your URI list into Content provider URI list and then check it will work.</em></strong></p>
