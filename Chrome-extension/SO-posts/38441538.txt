<pre><code>package com.ultimate.gre.prep.adapters;

import java.util.ArrayList;

import android.app.Activity;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;



public class MainListViewCustomAdapter extends BaseAdapter {

    private String[] mTitleListToDisplay;
    private String[] mSubTitleListToDisplay;
    private Context mContext;

    //through constructor you can send the data
    //if you want any more data ,then please add more parameters to constructor
    public MainListViewCustomAdapter(Context context,String[] titleListToDisplay,String[] subTitleListToDisplay){
        mContext =  context;
        mTitleListToDisplay = titleListToDisplay;
        mSubTitleListToDisplay =subTitleListToDisplay;
    }
    @Override
    public int getCount() {
        return mTitleListToDisplay.length();
    }

    @Override
    public Object getItem(int position) {
        return mTitleListToDisplay.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
          ViewHolder holder = null;

          LayoutInflater mInflater = (LayoutInflater) mContext
                    .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
            if (convertView == null) {
            //For the first time it will execute
                convertView = mInflater.inflate(R.layout.main_activity_custom_row_leyout, null);
                holder = new ViewHolder();
                holder.txtTitle = (TextView) convertView.findViewById(R.id.task_title);
                holder.subTitleTextView = (TextView) convertView.findViewById(R.id.task_subtitle);
                convertView.setTag(holder);
            } else {
            //second time onwards this case will execute
                holder = (ViewHolder) convertView.getTag();
            }

            holder.titleTextView.setText(mTitleListToDisplay[position]);
            holder.subTitleTextView.setText(mSubTitleListToDisplay[position]);

            return convertView;
    }


    private class ViewHolder {
       TextView titleTextView;
        TextView subTitleTextView;
    }

}
</code></pre>
