<p>While following the example from <a href="http://developer.android.com/reference/android/provider/ContactsContract.Contacts.Photo.html" rel="nofollow">ContactsContract.Contacts.Photo</a> I got the same exception as you did when trying to use <code>openDisplayPhoto</code>:</p>

<pre><code>    public InputStream openDisplayPhoto(long contactId) {
    Uri contactUri = ContentUris.withAppendedId(ContactsContract.Contacts.CONTENT_URI,
            contactId);
    Uri displayPhotoUri = Uri.withAppendedPath(contactUri, ContactsContract.Contacts.Photo
            .DISPLAY_PHOTO);
    try {
        AssetFileDescriptor fd =
                getContentResolver().openAssetFileDescriptor(displayPhotoUri, "r");
        return fd.createInputStream();
    } catch (IOException e) {
        e.printStackTrace();
        return null;
    }
}
</code></pre>

<p>And it worked fine when using <code>openPhoto</code> (which is actually the thumbnail):</p>

<pre><code>    public InputStream openPhoto(long contactId) {
    Uri contactUri = ContentUris.withAppendedId(ContactsContract.Contacts.CONTENT_URI,
            contactId);
    Uri photoUri = Uri.withAppendedPath(contactUri, ContactsContract.Contacts.Photo
            .CONTENT_DIRECTORY);
    Cursor cursor = getContentResolver().query(photoUri,
            new String[]{ContactsContract.Contacts.Photo.PHOTO}, null, null, null);
    if (cursor == null) {
        return null;
    }
    try {
        if (cursor.moveToFirst()) {
            byte[] data = cursor.getBlob(0);
            if (data != null) {
                return new ByteArrayInputStream(data);
            }
        }
    } finally {
        cursor.close();
    }
    return null;
}
</code></pre>

<p>Indeed, when the contact image comes from Google+ for example, it will only be available as thumbnail and not as a normal full sized image.</p>
