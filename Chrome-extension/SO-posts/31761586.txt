<p><strong>UPDATE:</strong><br>
Actually, since you writing it to a file, you don't need the 'is2Bytes()'. Just dump the input stream (cont.getInputStream()) directly to a file.</p>

<p><strong>ORIGINAL ANSWER:</strong><br>
Since you are referring to the <a href="https://developers.google.com/drive/android/intro" rel="nofollow">GDAA</a>, this method (<a href="https://github.com/seanpjanson/GDAADemo" rel="nofollow">taken from here</a>) may just work for you:</p>

<pre><code>  GoogleApiClient mGAC;

  byte[] read(DriveId id) {
    byte[] buf = null;
    if (mGAC != null &amp;&amp; mGAC.isConnected() &amp;&amp; id != null) try {
      DriveFile df = Drive.DriveApi.getFile(mGAC, id);
      DriveContentsResult rslt = df.open(mGAC, DriveFile.MODE_READ_ONLY, null).await();
      if ((rslt != null) &amp;&amp; rslt.getStatus().isSuccess()) {
        DriveContents cont = rslt.getDriveContents();
        buf = is2Bytes(cont.getInputStream());
        cont.discard(mGAC);    // or cont.commit();  they are equiv if READONLY
      }
    } catch (Exception e) { Log.e("_", Log.getStackTraceString(e)); }
    return buf;
  }

  byte[] is2Bytes(InputStream is) {
    byte[] buf = null;
    BufferedInputStream bufIS = null;
    if (is != null) try {
      ByteArrayOutputStream byteBuffer = new ByteArrayOutputStream();
      bufIS = new BufferedInputStream(is);
      buf = new byte[4096];
      int cnt;
      while ((cnt = bufIS.read(buf)) &gt;= 0) {
        byteBuffer.write(buf, 0, cnt);
      }
      buf = byteBuffer.size() &gt; 0 ? byteBuffer.toByteArray() : null;
    } catch (Exception ignore) {}
    finally {
      try {
        if (bufIS != null) bufIS.close();
      } catch (Exception ignore) {}
    }
    return buf;
  }
</code></pre>

<p>It is a simplified version of 'await' flavor that has be run off-UI-thread. Also, dumping input stream into a buffer is optional, I don't know what your 
app's needs are.</p>

<p>Good Luck.</p>
