<p>What you have to do is, modify your <code>onMessage</code> function in order to create a notification (push notifications is a different concept from app notifications) for your app instead of calling <code>sendGCMIntent</code>.</p>

<p>Got from <a href="http://developer.android.com/guide/topics/ui/notifiers/notifications.html" rel="nofollow">here</a>, you should do something like the following:</p>

<pre><code>NotificationCompat.Builder mBuilder =
    new NotificationCompat.Builder(this)
    .setSmallIcon(R.drawable.notification_icon)
    .setContentTitle("My notification")
    .setContentText("Hello World!");
// Creates an explicit intent for an Activity in your app
Intent resultIntent = new Intent(this, TheActivityYouWantToOpen.class);

// The stack builder object will contain an artificial back stack for the
// started Activity.
// This ensures that navigating backward from the Activity leads out of
// your application to the Home screen.
TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);
// Adds the back stack for the Intent (but not the Intent itself)
stackBuilder.addParentStack(MainActivity.class); //to allow you to use back button
// Adds the Intent that starts the Activity to the top of the stack
stackBuilder.addNextIntent(resultIntent);
PendingIntent resultPendingIntent =
    stackBuilder.getPendingIntent(
        0,
        PendingIntent.FLAG_UPDATE_CURRENT
    );
mBuilder.setContentIntent(resultPendingIntent);
NotificationManager mNotificationManager =
(NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
// my_notification_idallows you to update the notification later on.
mNotificationManager.notify(my_notification_id, mBuilder.build());
</code></pre>

<p>Notification id is just an integer you may use to update an existing notification.</p>

<p>Hope it helps</p>
