<p>One solution is to do the ListView height as big as the content. You can achieve this effect using the following class instead of ListView:</p>

<pre><code>public class ExpandedListView extends ListView {

  private int old_count = 0;

  public ExpandedListView(Context context, AttributeSet attrs) {
    super(context, attrs);
  }

  @Override
  protected void onDraw(Canvas canvas) {
    if (getCount() != old_count) {
        old_count = getCount();
        int totalHeight = 0;
        int desiredWidth = MeasureSpec.makeMeasureSpec(getWidth(), MeasureSpec.AT_MOST);
        for (int i = 0; i &lt; getCount(); i++) {
            View listItem = getAdapter().getView(i, null, this);
            listItem.measure(desiredWidth, MeasureSpec.UNSPECIFIED);
            totalHeight += listItem.getMeasuredHeight();
        }

        ViewGroup.LayoutParams params = getLayoutParams();
        params.height = totalHeight + (getDividerHeight() * (getCount() - 1));
        setLayoutParams(params);
        requestLayout();
    }

    super.onDraw(canvas);
  }

}
</code></pre>

<p>Anyway, it's a bad idea to have a ListView within a ScrollView, so I would add the other elements in your Layout as a header/footer view with the methods addHeaderView() and addFooterView() as Micha?K pointed out.</p>

<p>Here you have an example about how to use these methods:</p>

<p><a href="https://github.com/commonsguy/cw-advandroid/tree/master/ListView/HeaderFooter" rel="nofollow">https://github.com/commonsguy/cw-advandroid/tree/master/ListView/HeaderFooter</a></p>
