<p>Assuming you want to set an ImageView declared in your layout (for example with properties <code>android:layout_width="match_parent" android:layout_height="wrap_content"</code>) you can adapt the following code:</p>

<pre><code>BitmapFactory.Options options = new BitmapFactory.Options();
options.inJustDecodeBounds = true;  // just compute size, don't create bitmap
BitmapFactory.decodeStream(stream, null, options); // stream is the InputStream representing the image you want to display
int imageHeight = options.outHeight;
int imageWidth = options.outWidth;
imageViewWidth = imageView.getWidth(); // imageView is the View container for the image you want to display
imageViewHeight = imageView.getHeight();
// Compute the sample size
double sampleSize = computePowerOfTwoInSampleSize(options, imageViewWidth, imageViewHeight);
if(sampleSize&lt;1) { 
    options.inSampleSize = 1; 
}
else { 
    options.inSampleSize = (int) sampleSize; 
}
options.inJustDecodeBounds = false; // compute size and create bitmap  
bitmap = BitmapFactory.decodeStream(stream, null, options);
imageView.setImageBitmap(bitmap);
try { 
    stream.close(); 
} 
catch (IOException e) { 
    e.printStackTrace(); 
}
</code></pre>

<p>where the method <code>computePowerOfTwoInSampleSize</code> is something like this (take into consideration that resizing to power of 2 is more efficient compared to other values):</p>

<pre><code>private double computePowerOfTwoInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {
    // Raw height and width of image
    int height = options.outHeight;
    int width = options.outWidth;
    double inSampleSize = 1;        
    // compute the up-sample coefficient (power of 2)
    if(height &lt; reqHeight &amp;&amp; width &lt; reqWidth) {
        while(height &lt; reqHeight &amp;&amp; width &lt; reqWidth) {
            height = height*2;
            width = width*2;
            if(height &lt; reqHeight &amp;&amp; width &lt; reqWidth) {
                inSampleSize = inSampleSize/2;
            }
        }
    }
    // compute the down-sample coefficient
    else {
        while(height &gt; reqHeight || width &gt; reqWidth) { 
            // Calculate ratios of height and width to requested height and width (power of 2)
            height = Math.round((float)height/2);
            width = Math.round((float)width/2); 
            inSampleSize = inSampleSize*2;
        }
    }
    return inSampleSize;
}
</code></pre>
