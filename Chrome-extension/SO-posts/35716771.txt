<p><strong>Kafka Producer using Twitter Hash_tag</strong>   </p>

<p>package com.multipleproducer.sparkstreaming.Multiplekafkaproducersparkstreaming;</p>

<pre><code>import java.util.Properties;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

import kafka.javaapi.producer.Producer;
import kafka.producer.KeyedMessage;
import kafka.producer.ProducerConfig;

import com.google.common.collect.Lists;
import com.twitter.hbc.ClientBuilder;
import com.twitter.hbc.core.Client;
import com.twitter.hbc.core.Constants;
import com.twitter.hbc.core.endpoint.StatusesFilterEndpoint;
import com.twitter.hbc.core.processor.StringDelimitedProcessor;
import com.twitter.hbc.httpclient.auth.Authentication;
import com.twitter.hbc.httpclient.auth.OAuth1;

/**
 * Hello world!
 *
 */
public class TwitterHash_tag 
{
    private static final String topic = "Hash_tag";

    public static void run(String consumerKey, String consumerSecret,
            String token, String secret) throws InterruptedException {

        Properties properties = new Properties();
        properties.put("metadata.broker.list", "localhost:9092");
        properties.put("serializer.class", "kafka.serializer.StringEncoder");
        properties.put("client.id","camus");
        ProducerConfig producerConfig = new ProducerConfig(properties);

        Producer&lt;String, String&gt; producer = new Producer&lt;String, String&gt;(producerConfig);
        BlockingQueue&lt;String&gt; queue = new LinkedBlockingQueue&lt;String&gt;(10);
        StatusesFilterEndpoint endpoint = new StatusesFilterEndpoint();

        // add some track terms in hashtag
        endpoint.trackTerms(Lists.newArrayList("",
                "#India"));


        Authentication auth = new OAuth1(consumerKey, consumerSecret, token,
                secret);
        // Authentication auth = new BasicAuth(username, password);

        // Create a new BasicClient. By default gzip is enabled.
        Client client = new ClientBuilder().hosts(Constants.STREAM_HOST)
                .endpoint(endpoint).authentication(auth)
                .processor(new StringDelimitedProcessor(queue)).build();

        // Establish a connection
        client.connect();

        // Do whatever needs to be done with messages
        for (int msgRead = 0; msgRead &lt; 10; msgRead++) {
            KeyedMessage&lt;String, String&gt; message = null;
            try {
                message = new KeyedMessage&lt;String, String&gt;(topic, queue.take());
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            producer.send(message);
            System.out.println(message);
        }
        producer.close();
        client.stop();

    }

    public static void main( String[] args ) throws InterruptedException
    {

        TwitterHash_tag.run("consumerKey", "consumerSecretkey",
                " AccessToken", "AccessTokenSecret");

    }
}
</code></pre>
