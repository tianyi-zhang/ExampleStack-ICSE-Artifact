<p>Here's an answer to my own question. I combined the answers from the various results to write a class that pretty prints XML.</p>

<p>No guarantees on how it responds with invalid XML or large documents.</p>

<pre><code>package ecb.sdw.pretty;

import org.apache.xml.serialize.OutputFormat;
import org.apache.xml.serialize.XMLSerializer;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;

/**
 * Pretty-prints xml, supplied as a string.
 * &lt;p/&gt;
 * eg.
 * &lt;code&gt;
 * String formattedXml = new XmlFormatter().format("&lt;tag&gt;&lt;nested&gt;hello&lt;/nested&gt;&lt;/tag&gt;");
 * &lt;/code&gt;
 */
public class XmlFormatter {

    public XmlFormatter() {
    }

    public String format(String unformattedXml) {
        try {
            final Document document = parseXmlFile(unformattedXml);

            OutputFormat format = new OutputFormat(document);
            format.setLineWidth(65);
            format.setIndenting(true);
            format.setIndent(2);
            Writer out = new StringWriter();
            XMLSerializer serializer = new XMLSerializer(out, format);
            serializer.serialize(document);

            return out.toString();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    private Document parseXmlFile(String in) {
        try {
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = dbf.newDocumentBuilder();
            InputSource is = new InputSource(new StringReader(in));
            return db.parse(is);
        } catch (ParserConfigurationException e) {
            throw new RuntimeException(e);
        } catch (SAXException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public static void main(String[] args) {
        String unformattedXml =
                "&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;QueryMessage\n" +
                        "        xmlns=\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\"\n" +
                        "        xmlns:query=\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query\"&gt;\n" +
                        "    &lt;Query&gt;\n" +
                        "        &lt;query:CategorySchemeWhere&gt;\n" +
                        "   \t\t\t\t\t         &lt;query:AgencyID&gt;ECB\n\n\n\n&lt;/query:AgencyID&gt;\n" +
                        "        &lt;/query:CategorySchemeWhere&gt;\n" +
                        "    &lt;/Query&gt;\n\n\n\n\n" +
                        "&lt;/QueryMessage&gt;";

        System.out.println(new XmlFormatter().format(unformattedXml));
    }

}
</code></pre>
