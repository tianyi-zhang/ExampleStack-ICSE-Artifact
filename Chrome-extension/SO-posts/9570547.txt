<p>Assuming you are using a custom bean object to store your name &amp; website values and an <code>ArrayAdapter</code> to show them in your <code>ListView</code>, like so</p>

<pre><code>public class NamedLink {
    final String mName;
    final String mWebsite; 
    public NamedLink(String name, String website) {
        mName = name;
        mWebsite = website;
    }
    @Override
    public String toString() {
        return mName;
    }
}
</code></pre>

<p>With an adapter, defined something like this:</p>

<pre><code>mAdapter = new ArrayAdapter&lt;NamedLink&gt;(this, android.R.layout.simple_list_item_2, mLinks) {
        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            if (convertView == null) {
                convertView = LayoutInflater.from(WhateverYourActivityIsNamed.this).inflate(android.R.layout.simple_list_item_2, null);
            }
            NamedLink link = getItem(position);
            // This probably deserves a ViewHolder
            ((TextView) convertView.findViewById(android.R.id.text1)).setText(link.getName());
            ((TextView) convertView.findViewById(android.R.id.text2)).setText(link.getWebsite());
            return convertView;
        }
    };
</code></pre>

<p>When you filter the array adapter it will match against the beans <code>#toString()</code>, which in this case returns the name. When filtered, the array adapter maintains a properly indexed copy of your list of beans internally - i.e. you can use the position you get in the click listener like this:</p>

<pre><code>getListView().setOnItemClickListener(new OnItemClickListener() {
        public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
            // getItemAtPosition() will return a NamedLink from the filtered
            // list maintained inside the ArrayAdapter
            NamedLink link = (NamedLink) parent.getItemAtPosition(position);
            Intent openDetails = new Intent(Test.this, ResourceDetails.class);
            Bundle b = new Bundle();            
            b.putString("name", link.getName());
            b.putString("web", link.getWebsite());
            openDetails.putExtras(b);
            startActivity(openDetails);  
        }
    });
</code></pre>
