<p>Here's what you can do:</p>

<ol>
<li>Break that one string into several string resources (atleast separate the app-name and links to a different string resource.</li>
<li>Contruct the full <code>legalText</code> by joining the substrings found in step 1. Use the <code>&lt;a href= "link"&gt;&lt;a/&gt;</code> tag for the substrings with link. You can style the rest of the substrings accordingly, as you get the idea.</li>
<li><p>Use the <code>Html.fromHtml</code> method to show the formatting:</p>

<pre><code>Spannable text = (Spannable)Html.fromHtml(legalText);

//this one here to get the links clickable:        
textView.setMovementMethod(LinkMovementMethod.getInstance());
textView.setText(text);
</code></pre></li>
<li><p>You might need to get rid of extra underlines at this point, therefore use this method:</p>

<pre><code>private void stripUnderlines(TextView textView) {
    Spannable s = (Spannable)textView.getText();
    URLSpan[] spans = s.getSpans(0, s.length(), URLSpan.class);
    for (URLSpan span: spans) {
        int start = s.getSpanStart(span);
        int end = s.getSpanEnd(span);
        s.removeSpan(span);
        span = new URLSpanNoUnderline(span.getURL());
        s.setSpan(span, start, end, 0);
    }
    textView.setText(s);
}
</code></pre></li>
</ol>
