<p>Found the error, simply solved by adding this             <code>if(start&lt;output.length())</code> before </p>

<pre><code>output.setSpan()
</code></pre>

<p>The correct and working code is this:</p>

<pre><code>public class HtmlTagHandler implements Html.TagHandler {
    private int mListItemCount = 0;
    private Vector&lt;String&gt; mListParents = new Vector&lt;String&gt;();

    @Override
    public void handleTag(final boolean opening, final String tag, Editable output, final XMLReader xmlReader) {

        if (tag.equals("ul") || tag.equals("ol") || tag.equals("dd")) {
            if (opening) {
                mListParents.add(tag);
            } else mListParents.remove(tag);

            mListItemCount = 0;
        } else if (tag.equals("li") &amp;&amp; !opening) {
            handleListTag(output);
        }



    }



    private void handleListTag(Editable output) {
        if (mListParents.lastElement().equals("ul")) {
            output.append("\n");
            String[] split = output.toString().split("\n");

            int lastIndex = split.length - 1;
            int start = output.length() - split[lastIndex].length() - 1;
            if(start&lt;output.length())
                output.setSpan(new BulletSpan(15 * mListParents.size()), start, output.length(), 0);
        } else if (mListParents.lastElement().equals("ol")) {
            mListItemCount++;

            output.append("\n");
            String[] split = output.toString().split("\n");

            int lastIndex = split.length - 1;
            int start = output.length() - split[lastIndex].length() - 1;
            output.insert(start, mListItemCount + ". ");
            if(start&lt;output.length())
               output.setSpan(new LeadingMarginSpan.Standard(15 * mListParents.size()), start, output.length(), 0);
        }
    }
    }
</code></pre>

<p><strong>Update:</strong></p>

<p>After having some other trouble with the code above I've developed this code which work without exception, I hope it would be useful.</p>

<pre><code>public class HtmlTagHandler implements Html.TagHandler {
    private int mListItemCount = 0;
    private Vector&lt;String&gt; mListParents = new Vector&lt;String&gt;();
    private Vector&lt;Integer&gt; mListCounter = new Vector&lt;Integer&gt;();


    @Override
    public void handleTag(final boolean opening, final String tag, Editable output, final XMLReader xmlReader) {

        if (tag.equals("ul") || tag.equals("ol") ) {
            if (opening) {
                mListParents.add(mListParents.size(),tag);
                mListCounter.add(mListCounter.size(),  0);

            } else {
                Log.d("Bohhh"," tolgo "+mListParents.get(mListParents.size()-1));
                mListParents.removeElementAt(mListParents.size()-1);
                Log.d("Bohhh","lunghezza "+mListParents.size());
                mListCounter.removeElementAt(mListCounter.size()-1);

            }

        } else if (tag.equals("li") &amp;&amp; opening) {
            handleListTag(output);
        }



    }



    private void handleListTag(Editable output) {

        if (mListParents.lastElement().equals("ul")) {
           if(output.length()!=0)
            output.append("\n");
            for(int i=1;i&lt;mListCounter.size();i++)
                output.append("\t");
            output.append("â€¢ ");
           } else if (mListParents.lastElement().equals("ol")) {
            mListItemCount=            mListCounter.lastElement()+1;
            if(output.length()!=0)
            output.append("\n");
            for(int i=1;i&lt;mListCounter.size();i++)
                output.append("\t");
           output.append( mListItemCount + ". ");
           mListCounter.removeElementAt(mListCounter.size()-1);
           mListCounter.add(mListCounter.size(), mListItemCount);
      }
    }

}
</code></pre>
