<p><strong>UPDATE</strong></p>

<p>A fix for this issue is to make the following change to <code>getChildStaticTransformation(View child, Transformation t)</code></p>

<pre><code>protected boolean getChildStaticTransformation(View child, Transformation t) {
                child.invalidate(); // add this line
                final int childCenter = getCenterOfView(child);
                final int childWidth = child.getWidth();
                int rotationAngle = 0;

                t.clear();
                t.setTransformationType(Transformation.TYPE_MATRIX);

                if (childCenter == mCoveflowCenter) {
                        transformImageBitmap((ImageView) child, t, 0); 
                } else {
                        rotationAngle = (int) (((float) (mCoveflowCenter - childCenter) / childWidth) * mMaxRotationAngle);
                        if (Math.abs(rotationAngle) &gt; mMaxRotationAngle) {
                                rotationAngle = (rotationAngle &lt; 0) ? -mMaxRotationAngle
                                                : mMaxRotationAngle;
                        }   
                        transformImageBitmap((ImageView) child, t, rotationAngle);
                }   

                return true;
        }   
</code></pre>

<p>--</p>

<p>I had this same problem recently. This has to do with the <a href="http://developer.android.com/reference/android/widget/Gallery.html" rel="nofollow">Gallery</a> having been deprecated. As an alternative, I implemented something similar to this using a HorizontalScrollView and centering using .scrollTo(). The problem with this solution is that scrollTo() aligns with the left side of the View and so you have to compute the middle y0urself. If the layout fills the screen you're going to have to apply padding to the left and right side of the view to force the selected element to the center.</p>

<p>A word of caution. Horizontal scroll views don't have animatible scrolling so it's going to be a snap-to behavior. You can get around this by scrolling using a timer but it's not a terribly elegant solution.</p>
