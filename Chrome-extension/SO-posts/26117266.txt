<p>Use lazy loading for it and also first store the url in the list view and then do it as i have done in step 4.The steps for it are given below:</p>

<p>Step 1:Download the universal image download jar through below url:
<a href="http://www.java2s.com/Code/Jar/u/Downloaduniversalimageloaderjar.htm" rel="nofollow">http://www.java2s.com/Code/Jar/u/Downloaduniversalimageloaderjar.htm</a></p>

<p>Step 2:-Put this code into your application file :</p>

<p>File cacheDir = com.nostra13.universalimageloader.utils.StorageUtils
                .getCacheDirectory(this);</p>

<pre><code>    ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(
            this)
            .memoryCacheExtraOptions(480, 120)
            // default
            // =
            // device
            // screen
            // dimensions
            .discCacheExtraOptions(480, 800, CompressFormat.JPEG, 75, null)

            .threadPoolSize(3)
            // default
            .threadPriority(Thread.NORM_PRIORITY - 1)
            // default
            .tasksProcessingOrder(QueueProcessingType.FIFO)
            // default

            .denyCacheImageMultipleSizesInMemory()
            .memoryCache(new LruMemoryCache(2 * 1024 * 1024))
            .memoryCacheSize(2 * 1024 * 1024).memoryCacheSizePercentage(13)
            // default
            .discCache(new UnlimitedDiscCache(cacheDir))
            // default

            .discCacheSize(50 * 1024 * 1024).discCacheFileCount(100)
            .discCacheFileNameGenerator(new HashCodeFileNameGenerator()) // default
            .imageDownloader(new BaseImageDownloader(this)) // default
            .imageDecoder(new BaseImageDecoder(true)) // default
            .defaultDisplayImageOptions(DisplayImageOptions.createSimple()) // default
            .writeDebugLogs().build();
    ImageLoader.getInstance().init(config);
</code></pre>

<p>Step 3:-Put this code in the onCreate() of your activity :
private DisplayImageOptions options;</p>

<pre><code>    options = new DisplayImageOptions.Builder()
            .showImageOnLoading(R.drawable.iclauncher) // resource or
                                                            // drawable
            .showImageForEmptyUri(R.drawable.iclauncher) // resource or
            // drawable
            .showImageOnFail(R.drawable.iclauncher) // resource or
                                                        // drawable
            .resetViewBeforeLoading(false) // default
            .delayBeforeLoading(1000).cacheInMemory(true) // default
            .cacheOnDisc(true) // default
            .considerExifParams(true) // default
            .imageScaleType(ImageScaleType.IN_SAMPLE_INT) // default
            .bitmapConfig(Bitmap.Config.ARGB_8888) // default
            .displayer(new SimpleBitmapDisplayer()) // default
            .handler(new Handler()) // default
            .build();
    imageLoader = ImageLoader.getInstance();
</code></pre>

<p>Step 4:- Put this code in your adapter
imageLoader.displayImage(alist.get(position).getThumbnails(),
                    holder.ivImage, options, null);// holder.ivImage is my image view and alist.get(position).getThumbnails() is my url of the image</p>
