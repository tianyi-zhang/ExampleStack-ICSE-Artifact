<p>I found <a href="http://activemq.2283324.n4.nabble.com/ActiveMQ-for-Android-td3220245.html" rel="nofollow">this forum discussion</a> about JMS on Android, which references <a href="http://activemq.apache.org/stomp.html#Stomp-JavaAPI" rel="nofollow">the experimental Stomp API</a> included in ActiveMQ 5.2 and greater (example copied below)</p>

<p>Also mentioned is that the <a href="http://activemq.apache.org/rest.html" rel="nofollow">REST API</a> might be a better fit for mobile devices, allowing state to be maintained purely at the broker.</p>

<pre><code>StompConnection connection = new StompConnection();
connection.open("localhost", 61613);

connection.connect("system", "manager");
StompFrame connect = connection.receive();
if (!connect.getAction().equals(Stomp.Responses.CONNECTED)) {
    throw new Exception ("Not connected");
}

connection.begin("tx1");
connection.send("/queue/test", "message1", "tx1", null);
connection.send("/queue/test", "message2", "tx1", null);
connection.commit("tx1");

connection.subscribe("/queue/test", Subscribe.AckModeValues.CLIENT);

connection.begin("tx2");

StompFrame message = connection.receive();
System.out.println(message.getBody());
connection.ack(message, "tx2");

message = connection.receive();
System.out.println(message.getBody());
connection.ack(message, "tx2");

connection.commit("tx2");
connection.disconnect();
</code></pre>
