<p>i suggest this way to implement your code</p>

<p>Hope it will helpfull to you  download <code>Multiple images</code> with single <code>AsyncTask</code> call.</p>

<p><strong>Asynctask Call Method</strong></p>

<pre><code>public void setImages(String[] urls)
{
   DownloadImageTaskDAO imageDAO = new DownloadImageTaskDAO();

   if(int i= 0; i&lt; urls.lenght();i++)
   {
        image.setTag(urls[i]);
        imageDAO.execute(image).get();
    }
}
</code></pre>

<p><strong>DownloadImageTaskDAO Class :</strong> </p>

<pre><code>public class DownloadImageTaskDAO extends AsyncTask&lt;ImageView, Void, Bitmap&gt; {

    ImageView imageView = null;

    @Override
    protected Bitmap doInBackground(ImageView imageView) {
        this.imageView = imageView;
        return download_Image((String)imageView.getTag());
    }

    @Override
    protected void onPostExecute(Bitmap result) {
        imageView.setImageBitmap(result);
    }

    private Bitmap download_Image(String url) {
        //---------------------------------------------------
        Bitmap bm = null;
        try {
            URL aURL = new URL(url);
            URLConnection conn = aURL.openConnection();
            conn.connect();
            InputStream is = conn.getInputStream();
            BufferedInputStream bis = new BufferedInputStream(is);
            bm = BitmapFactory.decodeStream(bis);
            bis.close();
            is.close();
        } catch (IOException e) {
            Log.e("Hub","Error getting the image from server : " + e.getMessage().toString());
        } 
        return bm;
        //---------------------------------------------------
    }

}
</code></pre>
