<p>You should return <code>user</code> object if the user exists in the database, otherwise return <code>null</code> and check if the <code>user</code> is <code>null</code></p>

<pre><code>public HashMap&lt;String, String&gt; getUserDetails(){
    HashMap&lt;String,String&gt; user = null;
    String selectQuery = "SELECT  * FROM " + TABLE_LOGIN;

    try {
    SQLiteDatabase db = this.getReadableDatabase();
    Cursor cursor = db.rawQuery(selectQuery, null);

    if (cursor != null){
    cursor.moveToFirst();
    if(cursor.getCount() &gt; 0){
        user = new HashMap&lt;String,String&gt;();
        user.put("name", cursor.getString(1));
        user.put("position", cursor.getString(2));
        user.put("level", cursor.getString(3));
        user.put("email", cursor.getString(4));
        user.put("uid", cursor.getString(5));
        user.put("created_at", cursor.getString(6));
    }
}
} finally {
    cursor.close();
    db.close();
}

    return user;
}
</code></pre>

<p>Then</p>

<pre><code>DatabaseHandler db = new DatabaseHandler(getApplicationContext());
HashMap&lt;String,String&gt; userDetail= db.getUserDetails();
if (userDetail != null) {
  String level = userDetail.get("level");
  if (level != null){
    try {
      int userLevel = Integer.parseInt(level);
    } catch (Exception e){
     e.printStackTrace();
    }
  }
}
</code></pre>
