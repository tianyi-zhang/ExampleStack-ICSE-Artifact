<p>This one is subtle (I've been stuck for a couple of years :) but I've cracked it today.</p>

<p>The cursor appears to only support on/off for transparency, so drawing first to a TYPE_INT_RGB image then copying that to a TYPE_INT_ARGB (then fixing the transparency) works.</p>

<p>Not sure if it's optimal, but it doesn't matter too much for small images like this.</p>

<pre><code>        int size = 32;

        /*
         * we need two buffered images as the cursor only supports on/off for alpha
         * 
         * so we need to draw to an image without alpha support
         * then draw that to one with alpha support
         * then make "white" transparent
         */
        BufferedImage image = new BufferedImage(size, size,
                BufferedImage.TYPE_INT_RGB);
        BufferedImage image2 = new BufferedImage(size, size,
                BufferedImage.TYPE_INT_ARGB);

        Graphics2D g = image.createGraphics();
        Graphics2D g2 = image2.createGraphics();

        g.setColor(Color.white);
        g.fillRect(0, 0, size, size);


        // turn on anti-aliasing.
        g.setStroke(new BasicStroke(4.0f)); // 4-pixel lines
        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, 
            RenderingHints.VALUE_ANTIALIAS_ON);

        g.setColor(new Color(0.5f, 0f, 0f));
        g.drawOval(3, 3, size-7, size-7);

        g2.drawImage(image,  0, 0, null, null);


        for (int y = 0 ; y &lt; size ; y++) {
            for (int x = 0 ; x &lt; size ; x++) {

                int rgb = image.getRGB(x, y);

                int blue = rgb &amp; 0xff;
                int green = (rgb &amp; 0xff00) &gt;&gt; 8;
                int red = (rgb &amp; 0xff0000) &gt;&gt; 16;
                //int alpha = (rgb &amp; 0xff000000) &gt;&gt; 24;

                if (red == 255 &amp;&amp; green == 255 &amp;&amp; blue == 255) {
                    // make white transparent
                    image2.setRGB(x, y, 0);
                }

            }
        }

        eraserCursor = Toolkit.getDefaultToolkit().createCustomCursor(
                image2, new Point(size / 2, size / 2), "eraserCursor");
</code></pre>
