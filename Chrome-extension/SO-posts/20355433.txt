<p>Your asyncTask should be like the following, the class should extends <code>AsyncTask</code> not implements <code>Runnable</code>:</p>

<pre><code>public final class GetYouTubeUserVideosTask extends AsyncTask&lt;Void, Void, Void&gt; {

   public static final String LIBRARY = "Library";
   private final Handler replyTo;
   private final String username;

   public GetYouTubeUserVideosTask(Handler replyTo, String username) {
      this.replyTo = replyTo;
      this.username = username;
   }
  /* 
   * @see android.os.AsyncTask#doInBackground(Params[])
   */
  @Override
  protected Void doInBackground(Void... arg0) {
      try {

        HttpClient client = new DefaultHttpClient();

        HttpUriRequest request = new HttpGet("https://gdata.youtube.com/feeds/api/videos?author="+username+"&amp;v=2&amp;alt=jsonc");

        HttpResponse response = client.execute(request);

        String jsonString = StreamUtils.convertToString(response.getEntity().getContent());

        JSONObject json = new JSONObject(jsonString);
        JSONArray jsonArray = json.getJSONObject("data").getJSONArray("items");


        List&lt;Video&gt; videos = new ArrayList&lt;Video&gt;();

        for (int i = 0; i &lt; jsonArray.length(); i++) {
            JSONObject jsonObject = jsonArray.getJSONObject(i);

            String title = jsonObject.getString("title");
            String url;
            try {
                url = jsonObject.getJSONObject("player").getString("mobile");
            } catch (JSONException ignore) {
                url = jsonObject.getJSONObject("player").getString("default");
            }
            String thumbUrl = jsonObject.getJSONObject("thumbnail").getString("sqDefault");


            videos.add(new Video(title, url, thumbUrl));
        }

        Library lib = new Library(username, videos);

        Bundle data = new Bundle();
        data.putSerializable(LIBRARY, lib);


        Message msg = Message.obtain();
        msg.setData(data);
        replyTo.sendMessage(msg);

    } catch (ClientProtocolException e) {
        Log.e("Feck", e);
    } catch (IOException e) {
        Log.e("Feck", e);
    } catch (JSONException e) {
        Log.e("Feck", e);
    }
    return null;
}

/* 
 * @see android.os.AsyncTask#onPostExecute(java.lang.Object)
 */
@Override
protected void onPostExecute(Void result) {

}
}
</code></pre>
