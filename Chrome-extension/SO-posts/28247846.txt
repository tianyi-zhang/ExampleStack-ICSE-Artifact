<p>What I didn't realize at the time was, that SMSes are sent in blocks (in PDU) and what I was doing was reading just the first array <em>messages[0]</em>'s message body.</p>

<p>All I had to do was implement the same for loop to catch all the messages and use it to store/append all the messages into one string variable <em>messageBody</em>.</p>

<p>I also had to clear out the <em>messageBody</em> every time a new SMS was received so that it doesn't keep displaying the old one.</p>

<p><strong>This is the new and improved code:</strong></p>

<pre><code>package com.phoenix.omnisurf;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.SmsMessage;

public class ReceiveMessage extends BroadcastReceiver {

private static final String SMS_RECEIVED = "android.provider.Telephony.SMS_RECEIVED";
private static final String TAG = "SMSBroadcastReceiver";
private String messageBody = "";

@Override
public void onReceive(Context context, Intent intent) {
    if (intent.getAction().equals(SMS_RECEIVED)) {
        Bundle bundle = intent.getExtras();
        if (bundle != null) {

            messageBody = "";

            Object[] pdus = (Object[])bundle.get("pdus");
            final SmsMessage[] messages = new SmsMessage[pdus.length];

            for (int i = 0; i &lt; pdus.length; i++) {
                messages[i] = SmsMessage.createFromPdu((byte[])pdus[i]);
            }

            if (messages.length &gt; -1) {
                for (int i = 0; i &lt; pdus.length; i++) {
                    messageBody += (messages[i].getDisplayMessageBody());
                }
            }

            Surf.mThis.messageContainer.setText(messageBody);
        }
    }
}
}
</code></pre>
