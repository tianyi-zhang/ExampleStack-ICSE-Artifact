<p><code>Linkify</code> applies to a movementMethod to the textView <code>LinkMovementMethod</code>. That movement method thought it implements a scrolling vertically method it overrides any other scrolling method the parent has. Although  <code>touchEvent</code> can be dispached to the parent, the specific parent <code>ScrollView</code> needed the whole sequence <code>ACTION_DOWN</code> , <code>ACTION_MOVE</code>, <code>ACTION_UP</code> to perform (sweep detection).</p>

<p>So the solution to my problem is after Linkify to remove the textView's scrolling method and handle the <code>LinkMovementMethod</code> link detection action in <code>onTouchEvent</code> of the textView.</p>

<pre><code>@override
public boolean onTouchEvent(MotionEvent event) {
        TextView widget = (TextView) this;
        Object text = widget.getText();
        if (text instanceof Spanned) {
            Spannable buffer = (Spannable) text;

            int action = event.getAction();

            if (action == MotionEvent.ACTION_UP
                    || action == MotionEvent.ACTION_DOWN) {
                int x = (int) event.getX();
                int y = (int) event.getY();

                x -= widget.getTotalPaddingLeft();
                y -= widget.getTotalPaddingTop();

                x += widget.getScrollX();
                y += widget.getScrollY();

                Layout layout = widget.getLayout();
                int line = layout.getLineForVertical(y);
                int off = layout.getOffsetForHorizontal(line, x);

                ClickableSpan[] link = buffer.getSpans(off, off,
                        ClickableSpan.class);

                if (link.length != 0) {
                    if (action == MotionEvent.ACTION_UP) {
                        link[0].onClick(widget);
                    } else if (action == MotionEvent.ACTION_DOWN) {
                         Selection.setSelection(buffer,
                                 buffer.getSpanStart(link[0]),
                                 buffer.getSpanEnd(link[0]));
                    }
                    return true;
                }
            }

        }

        return false;
    }
</code></pre>

<p>This way i have the Link_Click detection (performed only with the user touches the link and not the whole textview) and i don't have the whole LinkMovementMethod.</p>
