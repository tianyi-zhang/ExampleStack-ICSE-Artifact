<pre><code>public class MainActivity extends SherlockFragmentActivity {
ViewPager  mViewPager;
TabsAdapter mTabsAdapter;

Button testButton;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    ActionBar bar = getSupportActionBar();
    bar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);

    mViewPager = (ViewPager)findViewById(R.id.pager);

    // Add the tabs
    mTabsAdapter = new TabsAdapter(this, bar, mViewPager);
    mTabsAdapter.addTab(bar.newTab().setText("First"),
            FragmentA.class, null);
    mTabsAdapter.addTab(bar.newTab().setText("Second"),
            FragmentB.class, null);
    mTabsAdapter.addTab(bar.newTab().setText("Third"),
            FragmentC.class, null);

    setTitle(R.string.app_name);

    if (savedInstanceState != null) {
        bar.setSelectedNavigationItem(savedInstanceState.getInt("tab"));
    }
}

@Override
protected void onSaveInstanceState(Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putInt("tab", getSupportActionBar().getSelectedNavigationIndex());
}

@Override
public boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu menu) {

    menu.add("Refresh")
        .setIcon(R.drawable.ic_action_refresh)
        .setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM);

    SubMenu subMenu1 = menu.addSubMenu("Menu");
    subMenu1.add("Sample");
    subMenu1.add("Items");
    subMenu1.add("In menu");

    MenuItem subMenu1Item = (MenuItem) subMenu1.getItem();
    subMenu1Item.setIcon(R.drawable.ic_action_overflow);
    subMenu1Item.setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);

    return super.onCreateOptionsMenu(menu);
}

@Override
public boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) {
    String itemTitle  = (String) item.getTitle();

        if(!itemTitle.equals("Menu")){
            Toast toast = Toast.makeText(getApplicationContext(), itemTitle+" pressed", Toast.LENGTH_SHORT);
            toast.show();
        }


    if(item.getItemId() == android.R.id.home){
        getSupportFragmentManager().popBackStackImmediate();
    }
    return super.onOptionsItemSelected(item);

}



public static class TabsAdapter extends FragmentPagerAdapter
        implements ViewPager.OnPageChangeListener, ActionBar.TabListener {
    private final Context mContext;
    private final ActionBar mBar;
    private final ViewPager mViewPager;
    private FragmentActivity mActivity;
    private final ArrayList&lt;TabInfo&gt; mTabs = new ArrayList&lt;TabInfo&gt;();

    static final class TabInfo {
        private final Class&lt;?&gt; clss;
        private final Bundle args;

        TabInfo(Class&lt;?&gt; _class, Bundle _args) {
            clss = _class;
            args = _args;
        }
    }

    public TabsAdapter(FragmentActivity activity, ActionBar bar, ViewPager pager) {
        super(activity.getSupportFragmentManager());
        mContext = activity;
        mActivity = activity;
        mBar = bar;
        mViewPager = pager;
        mViewPager.setAdapter(this);
        mViewPager.setOnPageChangeListener(this);

    }

    public void addTab(ActionBar.Tab tab, Class&lt;? extends Fragment&gt; clss, Bundle args) {
        TabInfo info = new TabInfo(clss, args);
        tab.setTag(info);
        tab.setTabListener(this);
        mTabs.add(info);
        mBar.addTab(tab);
        notifyDataSetChanged();
    }

    @Override
    public int getCount() {
        return mTabs.size();
    }

    @Override
    public Fragment getItem(int position) {
        TabInfo info = mTabs.get(position);
        return Fragment.instantiate(mContext, info.clss.getName(), info.args);
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
    }

    @Override
    public void onPageSelected(int position) {
        mBar.setSelectedNavigationItem(position);
    }

    @Override
    public void onPageScrollStateChanged(int state) {
    }

    @Override
    public void onTabSelected(Tab tab, FragmentTransaction ft) {
        mActivity.getSupportFragmentManager().popBackStack();
        Object tag = tab.getTag();
        for (int i=0; i&lt;mTabs.size(); i++) {
            if (mTabs.get(i) == tag) {
                mViewPager.setCurrentItem(i);
            }
        }
    }

    @Override
    public void onTabUnselected(Tab tab, FragmentTransaction ft) {

    }

    @Override
    public void onTabReselected(Tab tab, FragmentTransaction ft) {

    }


}
</code></pre>

<p>}</p>
