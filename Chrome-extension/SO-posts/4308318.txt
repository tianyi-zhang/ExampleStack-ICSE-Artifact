<p>I think you would be interested in <a href="http://download.oracle.com/javase/1.5.0/docs/api/java/util/zip/ZipOutputStream.html">ZipOutputStream</a>.  You can write to that stream, and then write it out to a zipped file.</p>

<p>Also, check out this tutorial for <a href="http://java.sun.com/developer/technicalArticles/Programming/compression/">working with compressed (zipped) files in Java</a>.  Here is a snippet from that tutorial, which might be a helpful illustration:</p>

<pre><code>     BufferedInputStream origin = null;
     FileOutputStream dest = new 
       FileOutputStream("c:\\zip\\myfigs.zip");
     ZipOutputStream out = new ZipOutputStream(new 
       BufferedOutputStream(dest));
     //out.setMethod(ZipOutputStream.DEFLATED);
     byte data[] = new byte[BUFFER];
     // get a list of files from current directory
     File f = new File(".");
     String files[] = f.list();

     for (int i=0; i&lt;files.length; i++) {
        System.out.println("Adding: "+files[i]);
        FileInputStream fi = new 
          FileInputStream(files[i]);
        origin = new 
          BufferedInputStream(fi, BUFFER);
        ZipEntry entry = new ZipEntry(files[i]);
        out.putNextEntry(entry);
        int count;
        while((count = origin.read(data, 0, 
          BUFFER)) != -1) {
           out.write(data, 0, count);
        }
        origin.close();
     }
     out.close();
</code></pre>
