<p>With ZXing APIs, you can implement it yourself. About how to use Android camera, please refer to <a href="http://developer.android.com/reference/android/hardware/Camera.html" rel="nofollow">Android website</a>. Here is the code for capturing images from preview callback, as well as how to use zxing to decode the image:</p>

<pre><code>private Camera.PreviewCallback mPreviewCallback = new PreviewCallback() {

        @Override
        public void onPreviewFrame(byte[] data, Camera camera) {
            // TODO Auto-generated method stub

            if (mDialog.isShowing())
                return;

            LuminanceSource source = new PlanarYUVLuminanceSource(data, mWidth, mHeight, mLeft, mTop, mAreaWidth, mAreaHeight, false);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(
              source));
            Result result;

            try {
                result = mMultiFormatReader.decode(bitmap, null);
                if (result != null) {
                    mDialog.setTitle("Result");
                    mDialog.setMessage(result.getText());
                    mDialog.show();
                }
            } catch (NotFoundException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    };
</code></pre>

<p>For more detailed information, you can read the article <a href="http://www.codepool.biz/ocr-barcode-twain/how-to-implement-a-simple-barcode-scan-application-on-android.html" rel="nofollow">How to implement a simple barcode scan application on Android</a></p>
