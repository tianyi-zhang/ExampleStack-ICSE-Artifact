<p>You should create a adapter class as follows:</p>

<pre><code>public class MyAdapter extends ArrayAdapter&lt;Address&gt; {

    Context context; 
    int layoutResourceId;    

    public MyAdapter(Context context, int layoutResourceId, List&lt;Address&gt; data) {
        super(context, layoutResourceId, data);
        this.layoutResourceId = layoutResourceId;
        this.context = context;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View row = convertView;
        StringHolder holder = null;

        if(row == null)
        {
            LayoutInflater inflater = ((Activity)context).getLayoutInflater();
            row = inflater.inflate(layoutResourceId, parent, false);

            holder = new StringHolder();
            holder.txtTitle = (TextView)row.findViewById(R.id.text1);

            row.setTag(holder);
        }
        else
        {
            holder = (StringHolder)row.getTag();
        }

        Address addressItem = getItem(position);
        Spanned format = Html.fromHtml("&lt;br/&gt;" + addressItem.getAddress() + "&lt;br/&gt;" +  addressItem.getName() + "&lt;br/&gt;");

        holder.txtTitle.setText(format);

        return row;
    }

    static class StringHolder
    {
        TextView txtTitle;
    }
}
</code></pre>

<p>Then use it <code>onCreate</code> as follows: </p>

<pre><code>List&lt;Address&gt; values = datasource.getAllAddresses();
MyAdapter adapter = new MyAdapter(this, android.R.layout.simple_list_item_1, values);
setListAdapter(adapter);
</code></pre>
