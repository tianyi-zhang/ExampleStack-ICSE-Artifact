<p>You should try <strong>AsyncTask</strong> something like below in your code...</p>

<pre><code>private class BackgroundTask extends AsyncTask&lt;String, Void, String&gt; {
@Override
  protected String doInBackground(String... urls) {
    // Making HTTP request
    try {
        // defaultHttpClient
        DefaultHttpClient httpClient = new DefaultHttpClient();
        HttpPost httpPost = new HttpPost(url);

        HttpResponse httpResponse = httpClient.execute(httpPost);
        HttpEntity httpEntity = httpResponse.getEntity();
        is = httpEntity.getContent();           

    } catch (UnsupportedEncodingException e) {
        e.printStackTrace();
    } catch (ClientProtocolException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }

    try {
        BufferedReader reader = new BufferedReader(new InputStreamReader(
                is, "iso-8859-1"), 8);
        StringBuilder sb = new StringBuilder();
        String line = null;
        while ((line = reader.readLine()) != null) {
            sb.append(line + "\n");
        }
        is.close();
        String result = sb.toString();
    } catch (Exception e) {
        Log.e("Buffer Error", "Error converting result " + e.toString());
    }

   return result;
 }

 @Override
 protected void onPostExecute(String result) {
  // try parse the string to a JSON object
    try {
        jObj = new JSONObject(result);
    } catch (JSONException e) {
        Log.e("JSON Parser", "Error parsing data " + e.toString());
    }

}
</code></pre>

<p>and call it by below line where you need...</p>

<pre><code> new BackgroundTask().execute(url);
</code></pre>
