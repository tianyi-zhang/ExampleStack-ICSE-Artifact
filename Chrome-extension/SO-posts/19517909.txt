<p>You can use the ANT jars <code>ant.jar</code> and <code>ant-launcher.jar</code>.<br>
In this case the path for <code>build.xml</code> should be fully specified. 
Call it from your Java class this way:</p>

<pre><code>public class AntTest {
public static void main(String[] args) {
    String build = "D:/xampp/htdocs/aud/TempProject/build.xml";
    generateApkThroughAnt(build);
}
/*
 * Generate APK through ANT API Method
 */
public static void generateApkThroughAnt(String buildPath) {
    File antBuildFile = new File(buildPath);
    Project p = new Project();
    p.setUserProperty("ant.file", antBuildFile.getAbsolutePath());
    DefaultLogger consoleLogger = new DefaultLogger();
    consoleLogger.setErrorPrintStream(System.err);
    consoleLogger.setOutputPrintStream(System.out);
    consoleLogger.setMessageOutputLevel(Project.MSG_INFO);
    p.addBuildListener(consoleLogger);
    BuildException ex = null;
    try {
        p.fireBuildStarted();
        p.init();
        ProjectHelper helper = ProjectHelper.getProjectHelper();
        p.addReference("ant.projectHelper", helper);
        helper.parse(p, antBuildFile);
        p.executeTarget("clean");
        p.executeTarget("release");
    } catch (BuildException e) {
        ex = e;
    } finally {
        p.fireBuildFinished(ex);
    }
   }
   }
</code></pre>

<p>To create a <code>build.xml</code> file go to  Eclipse=>Your Project=>Right click=>Export=>General=>Ant Buildfiles. 
After that then you will need to run:</p>

<pre><code>android update project --name &lt;project_name&gt; --target &lt;target_ID&gt; --path &lt;path_to_your_project&gt;
</code></pre>
