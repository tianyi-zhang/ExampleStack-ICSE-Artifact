<p>try use HttpGet to handle http GET connection (and HttpPost to handle http POST)</p>

<p>and make sure to always close the stream when doesn't needed.</p>

<p>here simple code using httpget to get String from server:</p>

<pre><code> private void executeRequest(HttpUriRequest request)
{
    HttpClient client = new DefaultHttpClient();

    HttpResponse httpResponse;
    try {
        httpResponse = client.execute(request);
        responseCode = httpResponse.getStatusLine().getStatusCode();
        message = httpResponse.getStatusLine().getReasonPhrase();

        System.out.println(responseCode + ":" +message);

        HttpEntity entity = httpResponse.getEntity();

        if (entity != null) {

            InputStream instream = entity.getContent();
            response = convertStreamToString(instream);

            // Closing the input stream will trigger connection release
            instream.close();
        }

    } catch (ClientProtocolException e)  {
        client.getConnectionManager().shutdown();
        Toast.makeText(null, "Error", Toast.LENGTH_LONG);
    } catch (IOException e) {
        client.getConnectionManager().shutdown();
        Toast.makeText(null, "Error", Toast.LENGTH_LONG);
    } catch (OAuthMessageSignerException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (OAuthExpectationFailedException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (OAuthCommunicationException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}

private static String convertStreamToString(InputStream is) {

    BufferedReader reader = new BufferedReader(new InputStreamReader(is));
    StringBuilder sb = new StringBuilder();

    String line = null;
    try {
        while ((line = reader.readLine()) != null) {
            sb.append(line + "\n");
        }
    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        try {
            is.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    return sb.toString();
}
</code></pre>

<p>you can call the function like this:</p>

<pre><code>HttpGet request = new HttpGet(url);
</code></pre>

<p>executeRequest(request);</p>
