<p>When you need random access, <code>BufferedReader</code> is not suited. Instead, you need to look into <code>Channel</code> and its subclasses like <code>FileChannel</code> and so on.  </p>

<p>Simple example of reading using a channel:  </p>

<pre><code>    RandomAccessFile aFile = new RandomAccessFile("data/nio-data.txt", "rw");
    FileChannel inChannel = aFile.getChannel();

    ByteBuffer buf = ByteBuffer.allocate(48);

    int bytesRead = inChannel.read(buf);
    while (bytesRead != -1) {

      System.out.println("Read " + bytesRead);
      buf.flip();

      while(buf.hasRemaining()){
          System.out.print((char) buf.get());
      }

      buf.clear();
      bytesRead = inChannel.read(buf);
    }
    aFile.close();  
</code></pre>

<p>Source: <a href="http://tutorials.jenkov.com/java-nio/channels.html" rel="nofollow">http://tutorials.jenkov.com/java-nio/channels.html</a>  </p>

<p>As for your question of reading from where you left off, <code>FileChannel</code> defines a method <code>read(ByteBuffer buf,int position)</code> where position is the position in bytes where yu want to read from.  </p>
