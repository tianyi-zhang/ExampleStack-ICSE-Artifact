<p>First of all create movie model class :</p>

<pre><code>class Movie {
        String movieName;
        String coverName;
        String movieYear;
        String movieId;

        public String getMovieName() {
            return movieName;
        }

        public void setMovieName(String movieName) {
            this.movieName = movieName;
        }

        public String getCoverName() {
            return coverName;
        }

        public void setCoverName(String coverName) {
            this.coverName = coverName;
        }

        public String getMovieYear() {
            return movieYear;
        }

        public void setMovieYear(String movieYear) {
            this.movieYear = movieYear;
        }

        public String getMovieId() {
            return movieId;
        }

        public void setMovieId(String movieId) {
            this.movieId = movieId;
        }
    }
</code></pre>

<p>Update your adapter class as follows :</p>

<pre><code>public class ListViewAdapter extends BaseAdapter {

        Context context;

        ArrayList&lt;Movie&gt; movieArrayList;

        public ListViewAdapter(Context context, ArrayList&lt;Movie&gt; arrayList) {
            super();
            this.context = context;
            movieArrayList = arrayList;
        }

        @Override
        public int getCount() {
            return movieArrayList.size();
        }

        @Override
        public Object getItem(int position) {
            return movieArrayList.get(position);
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        private class ViewHolder {
            TextView txtViewName;
            TextView txtViewID;
        }

        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            ViewHolder holder;
            LayoutInflater inflater =  context.getLayoutInflater();

            if (convertView == null)
            {
                convertView = inflater.inflate(R.layout.list_item_movie, null);
                holder = new ViewHolder();
                holder.txtViewName = (TextView) convertView.findViewById(R.id.list_item_movie_textview);
                holder.txtViewID = (TextView) convertView.findViewById(R.id.list_item_movieID_textview);
                convertView.setTag(holder);
            }
            else
            {
                holder = (ViewHolder) convertView.getTag();
            }

            holder.txtViewName.setText(movieArrayList.get(position).getMovieName());
            holder.txtViewID.setText(movieArrayList.get(position).getMovieId());

            return convertView;
        }
    }
</code></pre>

<p>Create ArrayList movieList; in activity and instantiate it in Oncreate method :  movieList = new ArrayList&lt;>();</p>

<p>And update AsyncTask as :</p>

<pre><code> public class RetrieveFeedTask extends AsyncTask&lt;String, Void, String&gt;{

                private final String LOG_TAG = RetrieveFeedTask.class.getSimpleName();

                private void getMovieDataFromJson(String jsonstring) throws JSONException{

                    final String SEARCH = "Search";
                    final String TITLE = "Title";
                    final String YEAR = "Year";
                    final String POSTER = "Poster";
                    final String MOVIEID = "imdbID" ;

                    JSONObject jsonObject = new JSONObject(jsonstring);
                    JSONArray jsonArray = jsonObject.getJSONArray(SEARCH);

                    String[] resultStrs = new String[cnt];
                    String[] movIdStrs = new String[cnt];
                    String[] coverStrs = new String[cnt];

                    for (int i = 0; i &lt; jsonArray.length(); i++){
                        String movname;
                        String movyear;
                        String movcover;
                        String movieID;

                        JSONObject titleobj = jsonArray.getJSONObject(i);
                        movname = titleobj.getString(TITLE);
                        movyear = titleobj.getString(YEAR);
                        movcover = titleobj.getString(POSTER);
                        movieID = titleobj.getString(MOVIEID);

                        Movie movie = new Movie();
                        movie.setMovieName(movname);
                        movie.setMovieId(movieID);
                        // similarly add other attributes
                        movieList.add(movie);

                    }




                }

                @Override
                protected void onPreExecute(){
                    progressDialog = ProgressDialog.show(MovieSearch.this, "", "Searching for "+name+"...", true);
                }

                @Override
                protected String[] doInBackground(String... params) {

                    String jsonString;

                    try{
                        URL url = new URL("http://www.omdbapi.com/?s="+params[0]);
                        Log.v(LOG_TAG, "URL : " + url);
                        HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
                        try {
                            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
                            StringBuilder stringBuilder = new StringBuilder();
                            String line;
                            while ((line = bufferedReader.readLine()) != null) {
                                stringBuilder.append(line).append("\n");
                            }
                            bufferedReader.close();
                            progressDialog.dismiss();
                            jsonString = stringBuilder.toString();
                            Log.v(LOG_TAG, "JSONString : " + jsonString);
                            return jsonString;
                        }
                        finally{
                            urlConnection.disconnect();
                        }
                    }
                    catch(Exception e) {
                        Log.e("ERROR", e.getMessage(), e);
                        return null;
                    }


                    return null;
                }

                @Override
                protected void onPostExecute(String jsonString){
                    if(progressDialog != null){

                        //hide your progress dialog
                    }
                    if (jsonString != null){
                        // mMovie.clear();
                        movieList.clear();
                        getMovieDataFromJson(jsonString);
                        if(listViewAdapter == null) {

                            //mMovieAdapter.add(newmovstr);
                            listViewAdapter = new ListViewAdapter(MovieSearch.this, movieList);
listview.setAdapter(listViewAdapter);
                        }else{
                            listViewAdapter.notifyDataSetChanged();
                        }

                    }
                }
            }
</code></pre>
