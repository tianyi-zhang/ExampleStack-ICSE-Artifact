<p>You should introduce inner class <code>ShapeAction</code> outside the <code>main</code> method, inside the <code>MyFrame</code> class. And you create a local <code>main</code>'s method class instead of that.</p>

<p>Simply move it outside the <code>main</code> method:</p>

<pre><code>import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;


public class MyFrame extends javax.swing.JFrame
{
    public MyFrame ()
    {
        // Create the menu
        JMenuBar topMenu = new JMenuBar ();
        this.setJMenuBar ( topMenu );

        //create the menu button "shapes"
        JMenu shapes = new JMenu ( "Shapes" );
        topMenu.add ( shapes );
        //Create the 3 shapes for the menu
        JMenuItem square = new JMenuItem ( "Square" );
        square.addActionListener ( new ShapeAction () );

        JMenuItem circle = new JMenuItem ( "Circle" );
        circle.addActionListener ( new ShapeAction () );

        JMenuItem triangle = new JMenuItem ( "Triangle" );
        triangle.addActionListener ( new ShapeAction () );

        //add shapes to menu
        shapes.add ( circle );
        shapes.add ( triangle );
        shapes.add ( square );

        //add the menu
        setJMenuBar ( topMenu );


        MyControlPanel pane = new MyControlPanel ();
        getContentPane ().add ( pane );

        this.add ( pane );
    }


    @SuppressWarnings( "unchecked" )
    // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;
    private void initComponents ()
    {

        setDefaultCloseOperation ( javax.swing.WindowConstants.EXIT_ON_CLOSE );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout ( getContentPane () );
        getContentPane ().setLayout ( layout );
        layout.setHorizontalGroup (
                layout.createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ).addGap ( 0, 400, Short.MAX_VALUE ) );
        layout.setVerticalGroup (
                layout.createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ).addGap ( 0, 300, Short.MAX_VALUE ) );

        pack ();
    }// &lt;/editor-fold&gt;

    /**
     * @param args the command line arguments
     */
    public static void main ( String args[] )
    {
        /* Set the Nimbus look and feel */
        //&lt;editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "&gt;
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels () )
            {
                if ( "Nimbus".equals ( info.getName () ) )
                {
                    javax.swing.UIManager.setLookAndFeel ( info.getClassName () );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger ( MyFrame.class.getName () ).log ( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger ( MyFrame.class.getName () ).log ( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger ( MyFrame.class.getName () ).log ( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger ( MyFrame.class.getName () ).log ( java.util.logging.Level.SEVERE, null, ex );
        }
        //&lt;/editor-fold&gt;

        /* Create and display the form */
        java.awt.EventQueue.invokeLater ( new Runnable ()
        {
            public void run ()
            {
                new MyFrame ().setVisible ( true );
            }
        } );
    }

    class ShapeAction implements ActionListener
    {
        public void actionPerformed ( ActionEvent e )
        {
            JMenuItem clickedMenu = ( JMenuItem ) e.getSource ();

            if ( clickedMenu.getText ().equals ( "Square" ) )
            {
                //implement abstract methods
                MyShape aSquare = new ASquare ();

            }
            else if ( clickedMenu.getText ().equals ( "Circle" ) )
            {
                //implement abstract methods
                MyShape ACircle = new ACircle ();

            }
            else if ( clickedMenu.getText ().equals ( "Triangle" ) )
            {
                //implement abstract methods
                MyShape ATriangle = new ATriangle ();

            }
        }
    }
}
</code></pre>

<p>P.S. And you forgot one closing bracket in the end of your code. I have added it in the example through...</p>
