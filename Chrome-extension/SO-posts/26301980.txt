<p>I have fixed my problem, the code is this: </p>

<pre><code>public MyLocation myLocation;
    /**
     * il metodo consente di registrare il punto
     */
    LocationResult locationResult = new LocationResult(){
        @Override
        public void gotLocation(Location location){
            //Got the location!
            System.out.println("ho avuto un segnale gps valido ");

            if (location != null)
            {
                LatLng latLong = new LatLng(location.getMyLocation().getLatitude(),
                        location.getMyLocation().getLongitude());
                mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(latLong, 25));
                listaPuntiTerreno.add(latLong);
                Toast toast = Toast.makeText(getApplicationContext(), "Punto registrato correttamente", Toast.LENGTH_SHORT);
                toast.show();
                disegnaTracciato();
            }
        }
    };
</code></pre>

<p>When I click the button I call this method:</p>

<pre><code>public void registraPunto(View view){
   myLocation.getLocation(this, locationResult);
}
</code></pre>

<p>and this is a class MyLocation (I have copy this class from another post)</p>

<pre><code>public class MyLocation {
    Timer timer1;
    LocationManager lm;
    LocationResult locationResult;
    boolean gps_enabled=false;
    boolean network_enabled=false;
    private ProgressDialog pDialog;
    private final static int LOCALIZATION_DELAY = 10000;

    public boolean getLocation(Context context, LocationResult result)
    {
        //I use LocationResult callback class to pass location value from MyLocation to user code.
        locationResult=result;
        if(lm==null)
            lm = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);

        //exceptions will be thrown if provider is not permitted.
        try{gps_enabled=lm.isProviderEnabled(LocationManager.GPS_PROVIDER);}catch(Exception ex){}
        try{network_enabled=lm.isProviderEnabled(LocationManager.NETWORK_PROVIDER);}catch(Exception ex){}

        //don't start listeners if no provider is enabled
        if(!gps_enabled &amp;&amp; !network_enabled)
            return false;

        if(gps_enabled)
            lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListenerGps);
        if(network_enabled)
            lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, locationListenerNetwork);

        pDialog = ProgressDialog.show(context, "Attendere ...", "Localizzazione in corso ...", true);
        pDialog.setCancelable(false);

        timer1=new Timer();
        timer1.schedule(new GetLastLocation(), LOCALIZATION_DELAY);
        return true;
    }

    LocationListener locationListenerGps = new LocationListener() {
        public void onLocationChanged(Location location) {
            timer1.cancel();
            if(pDialog.isShowing())
                pDialog.dismiss();
            locationResult.gotLocation(location);
            lm.removeUpdates(this);
            lm.removeUpdates(locationListenerNetwork);
        }
        public void onProviderDisabled(String provider) {}
        public void onProviderEnabled(String provider) {}
        public void onStatusChanged(String provider, int status, Bundle extras) {}
    };

    LocationListener locationListenerNetwork = new LocationListener() {
        public void onLocationChanged(Location location) {
            timer1.cancel();
            if(pDialog.isShowing())
                pDialog.dismiss();
            locationResult.gotLocation(location);
            lm.removeUpdates(this);
            lm.removeUpdates(locationListenerGps);
        }
        public void onProviderDisabled(String provider) {}
        public void onProviderEnabled(String provider) {}
        public void onStatusChanged(String provider, int status, Bundle extras) {}
    };

    class GetLastLocation extends TimerTask {
        @Override
        public void run() {
             if(pDialog.isShowing())
                pDialog.dismiss();

             lm.removeUpdates(locationListenerGps);
             lm.removeUpdates(locationListenerNetwork);

             Location net_loc=null, gps_loc=null;
             if(gps_enabled)
                 gps_loc=lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);
             if(network_enabled)
                 net_loc=lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);

             //if there are both values use the latest one
             if(gps_loc!=null &amp;&amp; net_loc!=null){
                 if(gps_loc.getTime()&gt;net_loc.getTime())
                     locationResult.gotLocation(gps_loc);
                 else
                     locationResult.gotLocation(net_loc);
                 return;
             }

             if(gps_loc!=null){
                 locationResult.gotLocation(gps_loc);
                 return;
             }

             if(net_loc!=null){
                 locationResult.gotLocation(net_loc);
                 return;
             }

             locationResult.gotLocation(null);
        }
    }

    public static abstract class LocationResult{
        public abstract void gotLocation(Location location);
    }
}
</code></pre>

<p>Now when I try to click a button, I get a Location, from MyLocation class but the Longitude and Latitude are wrong. If I insert this number on maps.google.it I see the my real position is wrong, if I get Longitude and Latitude from mMap object these are correct.</p>

<p>Where is my error?
Can we help me?</p>
