<p>Here's the code with the problem solved, hope it helps someone:</p>

<p>First, the code for calling the async in the main activity reads as following:</p>

<pre><code>private String deviceIdHttpGetter(){
        try
        {
        AsyncHttpDeviceId asyncId = new AsyncHttpDeviceId();
        return asyncId.execute("http://www.cafegourmet.es/newUser.php").get();
        }
        catch(Exception e){
            return e.toString();
        }
    }
}
</code></pre>

<p>And the Async finally reads as following:</p>

<pre><code>public class AsyncHttpDeviceId extends AsyncTask&lt;String, Integer, String&gt; {
    String code="";

     public AsyncHttpDeviceId () {
        }

        /**
         * background
         */
     protected String doInBackground(String... posturl ) {
               HttpClient httpclient = new DefaultHttpClient();
               HttpResponse response;
               String responseString = null;
               try {
                   response = httpclient.execute(new HttpGet(posturl[0]));
                   StatusLine statusLine = response.getStatusLine();
                   if(statusLine.getStatusCode() == HttpStatus.SC_OK){
                       ByteArrayOutputStream out = new ByteArrayOutputStream();
                       response.getEntity().writeTo(out);
                       responseString = out.toString();
                       out.close();
                   } else{
                       //Closes the connection.
                       response.getEntity().getContent().close();
                       throw new IOException(statusLine.getReasonPhrase());
                   }
               } catch (ClientProtocolException e) {
                   return e.toString();
               } catch (IOException e) {
                   return e.getMessage();
               }
               return responseString;
      }
      protected void onPostExecute(String result) {
            code=result;
      }
}
</code></pre>

<p>Hope this helps someone someday.</p>
