<p>There are two solutions-</p>

<p>1 - Stop using [multiple] groups. Sucks but this may be the easier option. If you look at how rendering/drawing is done you start at the root Group for a Stage and get its children and render them. For each of those children, if they are a Group then render that Groups children. <strong>ZIndex</strong> is nothing more than the order of children within a group. If you look at the Actor's <code>setZIndex</code> you can see why <code>toFront</code> or <code>setZIndex</code> only affect siblings.</p>

<pre><code>public void setZIndex (int index) {
    if (index &lt; 0) 
        throw new IllegalArgumentException("ZIndex cannot be &lt; 0.");

    Group parent = this.parent;
    if (parent == null) 
        return;

    Array&lt;Actor&gt; children = parent.getChildren();
    if (children.size == 1) 
        return;

    if (!children.removeValue(this, true)) 
        return;

    if (index &gt;= children.size)
        children.add(this);
    else
        children.insert(index, this);
}
</code></pre>

<p>2 - The only other option would be to change the drawing order of all the actors. You'd have to extend <code>Stage</code> and replace the <code>draw</code> method to <code>draw</code> based on a different order of your choosing. You'd probably have to incorporate a lot of the functionality from the <code>Group.drawChildren</code> method.</p>

<p>TLDR; The way things are implemented in <strong>LibGDX</strong> - a Group is a layer. If you don't want layers then either change what groups do or stop using groups.</p>
