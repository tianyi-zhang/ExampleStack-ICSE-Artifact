<p>I resolved this issue by extending IQ and IQProvider classes:</p>

<p>ServerTime_IQProvider.java</p>

<pre><code>public class ServerTime_IQProvider implements IQProvider
{
    public static final String NAMESPACE = "urn:xmpp:mrpresence";
    public static final String ELEMENT_NAME = "servertime";
    public static final String UTC = "utc";
    public static final String LOCAL = "local";
    private Map&lt;String, String&gt; list = new HashMap&lt;String, String&gt;();

    @Override
    public IQ parseIQ(XmlPullParser parser) throws Exception
    {
        boolean stop = false;
        String name = parser.getName();

        while(false == stop)
        {
            switch (parser.getEventType())
            {
                case XmlPullParser.START_TAG:
                {
                    if(ELEMENT_NAME.equals(name))
                    {
                        list.put(UTC, parser.getAttributeValue("", UTC));
                        list.put(LOCAL, parser.getAttributeValue("", LOCAL));
                    }

                    break;
                }
                case XmlPullParser.END_TAG:
                {
                    stop = ELEMENT_NAME.equals(name);
                    break;
                }
            }
        }

        name = null;
        return new ServerTime_IQ(list);
    }
}
</code></pre>

<p>ServerTime_IQ.java</p>

<pre><code>public class ServerTime_IQ extends IQ
{
    public static final String ID = "servertime";
    private Map&lt;String, String&gt; list;

    public ServerTime_IQ(Map&lt;String, String&gt; l)
    {
        list = l;
    }

    @Override
    public String getChildElementXML()
    {
        return null;
    }

    public String getServerTime_UTC()
    {
        return list.get(ServerTime_IQProvider.UTC);
    }

    public String getServerTime_Local()
    {
        return list.get(ServerTime_IQProvider.LOCAL);
    }
}
</code></pre>

<p>Then I added the ServerTime provider to the IQProvider's list:</p>

<pre><code>ProviderManager.getInstance().addIQProvider(ServerTime_IQProvider.ELEMENT_NAME, ServerTime_IQProvider.NAMESPACE, new ServerTime_IQProvider());
</code></pre>

<p>this will make sure that the xml response from server will be parsed with my custom parser (ServerTime_IQProvider) which is aware of the custom tags, and not with asmack's default parser.</p>
