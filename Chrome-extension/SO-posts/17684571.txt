<p>I have tested this code for posting with Facebook SDK 3.0 and this is working.</p>

<p>Reference the Facebook SDK 3.0 Library project in your current project.
Set the AppId in your String.xml file:</p>

<pre><code>&lt;string name="app_id"&gt;123456789012345&lt;/string&gt;
</code></pre>

<p>After that add a MetaTag in your manifest file:</p>

<pre><code>        &lt;meta-data
        android:name="com.facebook.sdk.ApplicationId"
        android:value="@string/app_id" /&gt;
</code></pre>

<p>For Logging and and Logging out, you can simply use Facebook Login Button widget <b>"com.facebook.widget.LoginButton"</b>.<br/></p>

<p>This widget manages the Sessions automatically, so you do-not have to worry about that.<br/>
Just place this button in the right place in your Layout.xml file.<br/>
Initialize this button like any other buttons:</p>

<pre><code>LoginButton authButton = (LoginButton) findViewById(R.id.YOUR_ID);
</code></pre>

<p>After initializing, set permissions on the LoginButton<br/></p>

<pre><code>authButton.setPublishPermissions(Arrays.asList("publish_stream","read_stream"));
</code></pre>

<p>and implement setSessionStatusCallback method of the Login button widget:</p>

<pre><code>authButton.setSessionStatusCallback(new Session.StatusCallback() 
{
 public void call(Session session, SessionState state,Exception exception) 
{
// TODO Auto-generated method stub
if (session.isOpened()) 
    {
    Log.i(TAG, "Access Token" + session.getAccessToken());
    Request.executeMeRequestAsync(session,new Request.GraphUserCallback() {

    public void onCompleted(GraphUser user,Response response) 
        {
        // TODO Auto-generated method stub
        if (user != null) 
            {
            Log.i(TAG, "User ID " + user.getId());
            Log.i(TAG,"Email "+ user.asMap().get("email"));
            }
        }});
    } 
    else 
    {
    //This else condition will be executed when logout will be clicked.
    }
}
});
</code></pre>

<p>Below is the method for posting on Facebook.</p>

<pre><code>private void publishStory(String status)
{       
Session session = Session.getActiveSession();

if (session != null) 
    {
    Bundle postParams = new Bundle();
    postParams.putString("message", status);
    Request.Callback callback = new Request.Callback() 
        {
        public void onMalformedURLException(MalformedURLException e)
              {

              } 

        public void onIOException(IOException e) 
              {

              } 
        public void onFileNotFoundException(FileNotFoundExceptione) 
              {

              } 
        public void onFacebookError(FacebookError e) 
              {

              }


    public void onCompleted(Response response) 
    {
        JSONObject graphResponse = response.getGraphObject().getInnerJSONObject();
        String postId = null;
        try 
        {
            postId = graphResponse.getString("id");
        } 
        catch (JSONException e) 
        {
            Log.i("JSON", "JSON error " + e.getMessage());
        }
        FacebookRequestError error = response.getError();
        Log.e("post response", response.toString());
        if (error != null) 
        {
        } 
        else 
        {
        }
    }
};
Request request = new Request(session, "me/feed", postParams, HttpMethod.POST, callback);
RequestAsyncTask task = new RequestAsyncTask(request);
task.execute();
}
}
</code></pre>
