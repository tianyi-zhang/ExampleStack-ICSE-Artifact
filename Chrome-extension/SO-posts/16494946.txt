<p>Take a look at this example, that handles the motion history of all pointers at once:</p>

<pre><code>void printSamples(MotionEvent ev) {
    final int historySize = ev.getHistorySize();
    final int pointerCount = ev.getPointerCount();
    for (int h = 0; h &lt; historySize; h++) {
        System.out.printf("At time %d:", ev.getHistoricalEventTime(h));
        for (int p = 0; p &lt; pointerCount; p++) {
            System.out.printf("  pointer %d: (%f,%f)",
            ev.getPointerId(p), ev.getHistoricalX(p, h), ev.getHistoricalY(p, h));
        }
    }

    System.out.printf("At time %d:", ev.getEventTime());
    for (int p = 0; p &lt; pointerCount; p++) {
        System.out.printf("  pointer %d: (%f,%f)",
        ev.getPointerId(p), ev.getX(p), ev.getY(p));
    }
}
</code></pre>

<p>You will have to create several arrays for several pointers. You can use a <code>HashMap&lt;Integer, List&lt;Point&gt;&gt;</code> to map from pointer ID to list of <code>Point</code>s for that pointer.</p>

<p>Here's the guide for <code>MotionEvent</code> with the example I posted above:</p>

<p><a href="http://developer.android.com/reference/android/view/MotionEvent.html" rel="nofollow">http://developer.android.com/reference/android/view/MotionEvent.html</a></p>

<p>Edit: Tried to match the code to your needs:</p>

<pre><code>private HashMap&lt;Integer, List&lt;Point&gt;&gt; myPoints;

private void addPoints(MotionEvent ev) {
    final int historySize = ev.getHistorySize();
    final int pointerCount = ev.getPointerCount();
    for (int h = 0; h &lt; historySize; h++) {
        for (int p = 0; p &lt; pointerCount; p++) {
            addPoint(ev.getPointerId(p), new Point(ev.getHistoricalX(p, h), ev.getHistoricalY(p, h)));
        }
    }

    System.out.printf("At time %d:", ev.getEventTime());
    for (int p = 0; p &lt; pointerCount; p++) {
        addPoint(ev.getPointerId(p), new Point(ev.getHistoricalX(p, h), ev.getHistoricalY(p, h)));
    }
}

private void addPoint(Integer pointerId, Point point) {
    List&lt;Point&gt; points = myPointers.get(pointerId);

    if (points == null) {
        points = new LinkedList&lt;Point&gt;();
        myPointers.put(pointerId, points);
    }

    myPointers.get(pointerId).add(point);
}
</code></pre>
