<p>I think you want this kind of output in listview</p>

<p><strong>text with image in listview</strong></p>

<p><img src="http://i.stack.imgur.com/oKStc.png" alt="enter image description here"></p>

<p>You can use custom listview . Make a class which extends BaseAdapter class</p>

<p>here is the exmaple that i am using</p>

<p><strong>Your BaseAdapter</strong> </p>

<pre><code>import java.util.ArrayList;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

    public class FrontListBaseAdapter extends BaseAdapter {
     private static ArrayList&lt;FrontDetails&gt; itemDetailsrrayList;

     private LayoutInflater l_Inflater;

     public FrontListBaseAdapter(Context context, ArrayList&lt;FrontDetails&gt; results) {
      itemDetailsrrayList = results;
      l_Inflater = LayoutInflater.from(context);
     }

     public int getCount() {
      return itemDetailsrrayList.size();
     }

     public Object getItem(int position) {
      return itemDetailsrrayList.get(position);
     }

     public long getItemId(int position) {
      return position;
     }

      // get the views in frontview xml file where you have
      // define multiple views that will appear in listview each row
     public View getView(int position, View convertView, ViewGroup parent) {
      ViewHolder holder;
      if (convertView == null) {
       convertView = l_Inflater.inflate(R.layout.frontview, null);
       holder = new ViewHolder();
       holder.Image = (ImageView) convertView.findViewById(R.id.adminpic1);
       holder.MsgType = (TextView) convertView.findViewById(R.id.msgtype1);

       convertView.setTag(holder);
      } else {
       holder = (ViewHolder) convertView.getTag();
      }


      holder.Image.setImageResource(R.drawable.mainlogo); // you can set your setter here
      holder.MsgType.setText(itemDetailsrrayList.get(position).getMsgType());

      return convertView;
     }

     // holder view for views
     static class ViewHolder {
      ImageView Image;
      TextView MsgType;
     }
    }
</code></pre>

<p>your FrontDetails class where you will make getters and setters and this class will be used in final ArrayList resultse = new ArrayList();</p>

<pre><code>import android.graphics.Bitmap;

public class FrontDetails {

    public int getImage() {
    return image;
    }
    public void setImage(int imageN) {
    this.image = imageN;
    }


    public String getMsgType() {
    return MsgType;
    }
    public void setMsgType(String text) {
    this.MsgType = text;
    }



    private int image;
    private String MsgType;

    }
</code></pre>

<p>your frontview.XML where you put your multiple views that will be in each row or your layout</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="100dp"
    android:orientation="vertical"
    android:layout_margin="10dp" &gt;

    &lt;LinearLayout
        android:layout_width="match_parent"
        android:layout_height="80dp" &gt;

        &lt;ImageView
            android:id="@+id/adminpic1"
            android:layout_width="60dp"
            android:layout_height="60dp"
            android:src="@drawable/ic_launcher" /&gt;

        &lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical" &gt;



            &lt;TextView
                android:id="@+id/msgtype1"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginLeft="5dp"
                android:layout_marginTop="4dp"
                android:textSize="1sp"
                android:text="MsgType" /&gt;


        &lt;/LinearLayout&gt;

    &lt;/LinearLayout&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>and your listview in xml</p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" &gt;

    &lt;Button
        android:id="@+id/sync"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Sync" /&gt;

    &lt;ListView
        android:id="@+id/listView1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp" &gt;
    &lt;/ListView&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>now in your main activity</p>

<pre><code>    final ArrayList&lt;FrontDetails&gt; resultse = new ArrayList&lt;FrontDetails&gt;();
FrontListBaseAdapter asdf = new FrontListBaseAdapter(context, resultse);
                lv1.setAdapter(new FrontListBaseAdapter(Front.this, resultse));


 lv1.setOnItemClickListener(new OnItemClickListener() {

                @Override
                public void onItemClick(AdapterView&lt;?&gt; arg0, View arg1,
                        int position, long arg3) {

                    Object o = lv1.getItemAtPosition(position);
                    FrontDetails obj_itemDetails = (FrontDetails)o;
                    Toast.makeText(context, "You have chosen " + ' ' + obj_itemDetails.getMsgType(), Toast.LENGTH_LONG).show();

    }
        });
</code></pre>

<p><strong>EDIT:
From here i learned Custom Listview its a simple exmaple with image</strong></p>

<p><a href="http://www.javasrilankansupport.com/2012/05/android-listview-example-with-image-and.html" rel="nofollow">http://www.javasrilankansupport.com/2012/05/android-listview-example-with-image-and.html</a></p>

<p><a href="http://www.javacodegeeks.com/2012/10/android-listview-example-with-image-and.html" rel="nofollow">http://www.javacodegeeks.com/2012/10/android-listview-example-with-image-and.html</a></p>
