<p>I am not sure what you want.</p>

<p>If you want to display only name</p>

<p>Then</p>

<pre><code>public class Employers{
    private String fullName;
    private int age;

    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
            this.fullName = fullName;
    }

    public int getAge() {
            return age;
    }
    public void setAge(int age) {
            this.age = age;
    }

    @Override
    public String toString() {      // note the toString method
        // TODO Auto-generated method stub
        return this.fullName;
    }

}
</code></pre>

<p>Then</p>

<pre><code>  ArrayAdapter&lt;Employers&gt; adapter = new ArrayAdapter&lt;Employers&gt;(this,android.R.layout.simple_list_item_1,employers);
  lv.setAdapter(adapter);
</code></pre>

<p>If you want to display name and age</p>

<p>Use a <code>CustomAdapter</code></p>

<pre><code>CustomAdapter adapter= new CustomAdapter(ActivityName.this,employers);
lv.setAdapter(adapter);
</code></pre>

<p>Then</p>

<pre><code>class CustomAdapter extends ArrayAdapter&lt;Employers&gt;
{


    List&lt;Employers&gt; data;
    LayoutInflater mInflater;
    public CustomAdapter(Context context,List&lt;Employers&gt; data) {
        super(context, R.layout.row,data);
        mInflater = LayoutInflater.from(context);
        this.data=data;
    }
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        // TODO Auto-generated method stub
        ViewHolder holder;
        if(convertView==null)
        {
            holder = new ViewHolder();
            convertView= mInflater.inflate(R.layout.row, parent,false);
            holder.tv1= (TextView) convertView.findViewById(R.id.textView1);
            holder.tv2= (TextView) convertView.findViewById(R.id.textView2);
            convertView.setTag(holder);
        }else
        {
            holder= (ViewHolder) convertView.getTag();
        }
        Employers e = data.get(position);
        holder.tv1.setText(e.getFullName());
        holder.tv2.setText(String.valueOf(e.getAge()));
        return convertView;
    }
    static class ViewHolder
    {
        TextView tv1,tv2;

    }

}
</code></pre>

<p>row.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignLeft="@+id/textView1"
        android:layout_below="@+id/textView1"
        android:layout_marginTop="29dp"
        android:text="TextView" /&gt;

    &lt;TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="34dp"
        android:text="TextView" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>
