<p>Here we go:</p>

<pre><code>Dimension imgSize = new Dimension(500, 100);
Dimension boundary = new Dimension(200, 200);
</code></pre>

<p>Function to return the new size depending on the boundary</p>

<pre><code>public static Dimension getScaledDimension(Dimension imgSize, Dimension boundary) {

    int original_width = imgSize.width;
    int original_height = imgSize.height;
    int bound_width = boundary.width;
    int bound_height = boundary.height;
    int new_width = original_width;
    int new_height = original_height;

    // first check if we need to scale width
    if (original_width &gt; bound_width) {
        //scale width to fit
        new_width = bound_width;
        //scale height to maintain aspect ratio
        new_height = (new_width * original_height) / original_width;
    }

    // then check if we need to scale even with the new height
    if (new_height &gt; bound_height) {
        //scale height to fit instead
        new_height = bound_height;
        //scale width to maintain aspect ratio
        new_width = (new_height * original_width) / original_height;
    }

    return new Dimension(new_width, new_height);
}
</code></pre>

<p>In case anyone also needs the image resizing code, <a href="http://stackoverflow.com/a/11371387/1031312">here is a decent solution</a>.</p>

<p>If you're unsure about the above solution <a href="http://stackoverflow.com/a/11959928/1031312">there are different ways</a> to achieve the same result.</p>
