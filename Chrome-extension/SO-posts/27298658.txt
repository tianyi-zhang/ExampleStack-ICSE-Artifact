<p>I think your capture method is wrong.</p>

<p><strong>Saving the View as a Bitmap</strong></p>

<p>Here is a code I'm using to dump an entire view into a <code>Bitmap</code> (this will not save the notification bar nor the navigation bar):</p>

<pre><code>    final DisplayMetrics displayMetrics = ApplicationHelper.resources().getDisplayMetrics();
    if (displayMetrics == null) {
        LogHelper.warning("DisplayMetrics was NULL");
        return null;
    }

    view.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));
    view.measure(displayMetrics.widthPixels, displayMetrics.heightPixels);
    view.layout(0, 0, displayMetrics.widthPixels, displayMetrics.heightPixels);
    view.buildDrawingCache();

    final Bitmap bitmap = Bitmap.createBitmap(view.getMeasuredWidth(), view.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
    final Canvas canvas = new Canvas(bitmap);
    view.draw(canvas);
    return bitmap;
</code></pre>

<p>Remember that you can use <code>android.R.id.content</code> to get your entire application's screen space, as a <code>View</code>.</p>

<p><strong>Saving to external storage</strong></p>

<p>With <code>file.mkdirs()</code> your code should work.</p>
