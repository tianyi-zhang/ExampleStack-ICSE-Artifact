<p>I am pretty new to Android, but I think the right answer is that you really can't, in the strict sense. Nevertheless, and the following may not be as nice as you (and I) were expecting, I found the following workaround from Pietmau <a href="http://answers.opencv.org/question/7092/cascadeclassifier-with-haarcascade-apparently-not/" rel="nofollow">here</a>. Basically, as you were hoping, put your xml in the resource/raw directory, and then, in your code, read it, save it to an external file, and load it in the classifier by passing the path of that file. Yeah, I know... </p>

<p>The method would be:</p>

<pre><code>public void load_cascade(){
    try {
        InputStream is = getResources().openRawResource(R.raw.lbpcascade_frontalface);
        File cascadeDir = getDir("cascade", Context.MODE_PRIVATE);
        File mCascadeFile = new File(cascadeDir, "lbpcascade_frontalface.xml");
        FileOutputStream os = new FileOutputStream(mCascadeFile);

        byte[] buffer = new byte[4096];
        int bytesRead;
        while ((bytesRead = is.read(buffer)) != -1) {
            os.write(buffer, 0, bytesRead);
        }
        is.close();
        os.close();

        face_cascade = new CascadeClassifier(mCascadeFile.getAbsolutePath());
        if(face_cascade.empty())
        {
            Log.v("MyActivity","--(!)Error loading A\n");
            return;
        }
        else
        {
            Log.v("MyActivity",
                    "Loaded cascade classifier from " + mCascadeFile.getAbsolutePath());
        }
    } catch (IOException e) {
        e.printStackTrace();
        Log.v("MyActivity", "Failed to load cascade. Exception thrown: " + e);
    }
}
</code></pre>

<p>And you just call it after loading the OpenCV library in the BaseLoaderCallback:</p>

<pre><code>private BaseLoaderCallback mLoaderCallback = new BaseLoaderCallback(this) {
    @Override
    public void onManagerConnected(int status) {
        switch (status) {
            case LoaderCallbackInterface.SUCCESS:
            {
                Log.i(TAG, "OpenCV loaded successfully");
                mOpenCvCameraView.enableView();
                mOpenCvCameraView.setOnTouchListener(Tutorial3Activity.this);
                load_cascade();
            } break;
            default:
            {
                super.onManagerConnected(status);
            } break;
        }
    }
};
</code></pre>

<p>Oh well...</p>
