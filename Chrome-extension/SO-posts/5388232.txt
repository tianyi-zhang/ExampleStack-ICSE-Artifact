<pre><code>I would suggest Apache commons FileUtils or NIO (direct OS calls)
</code></pre>

<hr>

<p>or Just this </p>

<p>Credits to Josh - <a href="http://stackoverflow.com/questions/106770/standard-concise-way-to-copy-a-file-in-java/115086#115086">standard-concise-way-to-copy-a-file-in-java</a></p>

<hr>

<pre><code>File source=new File("example.tar.gz");
File destination=new File("/temp/example_test.tar.gz");

copyFile(source,destination);
</code></pre>

<hr>

<p>Updates:</p>

<p>Changed to transferTo from @bestss</p>

<pre><code> public static void copyFile(File sourceFile, File destFile) throws IOException {
     if(!destFile.exists()) {
      destFile.createNewFile();
     }

     FileChannel source = null;
     FileChannel destination = null;
     try {
      source = new RandomAccessFile(sourceFile,"rw").getChannel();
      destination = new RandomAccessFile(destFile,"rw").getChannel();

      long position = 0;
      long count    = source.size();

      source.transferTo(position, count, destination);
     }
     finally {
      if(source != null) {
       source.close();
      }
      if(destination != null) {
       destination.close();
      }
    }
 }
</code></pre>
