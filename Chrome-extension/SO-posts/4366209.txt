<p>Add the functionality to your Adapter to remove an Item:</p>

<pre><code>    public void removeGroup(int group) {
        //TODO: Remove the according group. Dont forget to remove the children aswell!
        Log.v("Adapter", "Removing group"+group);
        notifyDataSetChanged();
    } 

    public void removeChild(int group, int child) {
        //TODO: Remove the according child
        Log.v("Adapter", "Removing child "+child+" in group "+group);
        notifyDataSetChanged();
    }
</code></pre>

<p>Make sure the new methods are accessible to you by changing:</p>

<blockquote>
  <p>ExpandableListAdapter mAdapter;</p>
</blockquote>

<p>to</p>

<blockquote>
  <p>MyExpandableListAdapter mAdapter;</p>
</blockquote>

<p>Call the methods when needed:</p>

<pre><code> @Override
 public boolean onContextItemSelected(MenuItem item) {
    ExpandableListContextMenuInfo info = (ExpandableListContextMenuInfo) item.getMenuInfo();
    String title = ((TextView) info.targetView).getText().toString();

    int type = ExpandableListView.getPackedPositionType(info.packedPosition);
    if (type == ExpandableListView.PACKED_POSITION_TYPE_CHILD) {
        int groupPos = ExpandableListView.getPackedPositionGroup(info.packedPosition); 
        int childPos = ExpandableListView.getPackedPositionChild(info.packedPosition); 
        mAdapter.removeChild(groupPos, childPos);
        return true;
    } else if (type == ExpandableListView.PACKED_POSITION_TYPE_GROUP) {
        int groupPos = ExpandableListView.getPackedPositionGroup(info.packedPosition); 
        mAdapter.removeGroup(groupPos);
        return true;
    }

    return false;
}
</code></pre>

<p>So, hope that helps. Cheers</p>
