<p>If allPossibleItems contains two different elements, x and y, then you successively write x and y to the list a until it reaches DESIRED_SIZE. Is that what you really want? If you pick DESIRED_SIZE sufficiently large, you will have too many recursive calls on the stack, hence the SO exception.</p>

<p>What I'd do (if original has no douplets): </p>

<pre><code>  public List&lt;List&lt;E&gt;&gt; generatePerm(List&lt;E&gt; original) {
     if (original.size() == 0) { 
       List&lt;List&lt;E&gt;&gt; result = new ArrayList&lt;List&lt;E&gt;&gt;();
       result.add(new ArrayList&lt;E&gt;());
       return result;
     }
     E firstElement = original.remove(0);
     List&lt;List&lt;E&gt;&gt; returnValue = new ArrayList&lt;List&lt;E&gt;&gt;();
     List&lt;List&lt;E&gt;&gt; permutations = generatePerm(original);
     for (List&lt;E&gt; smallerPermutated : permutations) {
       for (int index=0; index &lt;= smallerPermutated.size(); index++) {
         List&lt;E&gt; temp = new ArrayList&lt;E&gt;(smallerPermutated);
         temp.add(index, firstElement);
         returnValue.add(temp);
       }
     }
     return returnValue;
   }
</code></pre>
