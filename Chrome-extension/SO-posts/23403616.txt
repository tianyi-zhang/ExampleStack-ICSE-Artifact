<p>I suggest that you use a <code>BufferedWriter</code> instead as it is easier.  </p>

<blockquote>
  <p>Writes text to a character-output stream, buffering characters so as
  to provide for the efficient writing of single characters, arrays, and
  strings.</p>
</blockquote>

<p>Also, you do not need to append a <code>.txt</code>, AFAIK, because <code>JFileChooser</code> will return the full name.  </p>

<p><strong>SSCCE:</strong>  </p>

<pre><code>import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class WriteToFileExample {
    public static void main(String[] args) {
        try {

            String content = "This is the content to write into file";

            File file = new File("/users/mkyong/filename.txt");

            // if file doesnt exists, then create it
            if (!file.exists()) {
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(content,0,content.length());
            bw.close();

            System.out.println("Done");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}  
</code></pre>

<p>taken from Mykong.</p>
