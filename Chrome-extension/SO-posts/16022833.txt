<p>Trusting all certificates was no real alternative for me, so I did the following to get HttpsURLConnection to trust a new certificate (see also <a href="http://nelenkov.blogspot.jp/2011/12/using-custom-certificate-trust-store-on.html" rel="nofollow">http://nelenkov.blogspot.jp/2011/12/using-custom-certificate-trust-store-on.html</a>).</p>

<ol>
<li><p>Get the certificate; I got this done by exporting the certificate in Firefox (click on the little lock icon, get certificate details, click export), then used <a href="http://sourceforge.net/projects/portecle/?source=dlp" rel="nofollow">portecle</a> to export a truststore (BKS).</p></li>
<li><p>Load the Truststore from /res/raw/geotrust_cert.bks with the following code:</p>

<pre><code>    final KeyStore trustStore = KeyStore.getInstance("BKS");
    final InputStream in = context.getResources().openRawResource(
            R.raw.geotrust_cert);
    trustStore.load(in, null);

    final TrustManagerFactory tmf = TrustManagerFactory
            .getInstance(TrustManagerFactory.getDefaultAlgorithm());
    tmf.init(trustStore);

    final SSLContext sslCtx = SSLContext.getInstance("TLS");
    sslCtx.init(null, tmf.getTrustManagers(),
            new java.security.SecureRandom());

    HttpsURLConnection.setDefaultSSLSocketFactory(sslCtx
            .getSocketFactory());
</code></pre></li>
</ol>
