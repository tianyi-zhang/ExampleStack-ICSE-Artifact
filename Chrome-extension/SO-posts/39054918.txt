<p>this is the solution for your problem. In this <a href="https://github.com/googlesamples/android-Camera2Video/blob/master/Application/src/main/java/com/example/android/camera2video/Camera2VideoFragment.java#L236" rel="nofollow">line</a> the aspect ratio is set to 3/4. I changed <em>chooseVideSize</em> method to pick video size with hd resolution for <em>MediaRecorder</em>.</p>

<pre><code>    private static Size chooseVideoSize(Size[] choices) {
        for (Size size : choices) {
            if (1920 == size.getWidth() &amp;&amp; 1080 == size.getHeight()) {
                return size;
            }
        }
        Log.e(TAG, "Couldn't find any suitable video size");
        return choices[choices.length - 1];
    }
</code></pre>

<p>Then I corrected <a href="https://github.com/googlesamples/android-Camera2Video/blob/master/Application/src/main/java/com/example/android/camera2video/Camera2VideoFragment.java#L255" rel="nofollow">this method</a> to pick preview size accordingly to video size aspect ratio and below is result.</p>

<pre><code>private static Size chooseOptimalSize(Size[] choices, int width, int height, Size aspectRatio) {
    // Collect the supported resolutions that are at least as big as the preview Surface
    List&lt;Size&gt; bigEnough = new ArrayList&lt;Size&gt;();
    int w = aspectRatio.getWidth();
    int h = aspectRatio.getHeight();
    double ratio = (double) h / w;
    for (Size option : choices) {
        double optionRatio = (double) option.getHeight() / option.getWidth();
        if (ratio == optionRatio) {
            bigEnough.add(option);
        }
    }

    // Pick the smallest of those, assuming we found any
    if (bigEnough.size() &gt; 0) {
        return Collections.min(bigEnough, new CompareSizesByArea());
    } else {
        Log.e(TAG, "Couldn't find any suitable preview size");
        return choices[1];
    }
}
</code></pre>

<p>I hope it will help you!</p>
