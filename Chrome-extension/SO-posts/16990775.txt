<pre><code>private byte[] printbyte = {(byte)0x1B,(byte)0x2A,(byte)0x6F,(byte)0x63} 

File file = new File(Environment.getExternalStorageDirectory + File.seprator()+"file_name");
FileInputStream fin = new FileInputStream(file);
byte imageContent[] = new byte[(int)file.length()];
fin.read(imageContent);

byte [] width  = hexToBuffer(Integer.toHexString(your_width));
byte [] height = hexToBuffer(Integer.toHexString(your_height));

byte[] imageToPrint = new byte[printbyte.lenght()+imageContent.lenght()+width.lenght()+height.lenght()];

  System.arraycopy(imagetoprint,0,printbyte,0,printbyte.lenght());
  System.arraycopy(imagetoprint,printbyte.lenght(),width ,0,width.lenght());
  System.arraycopy(imagetoprint,width.lenght(),height,0,height.lenght());  
  System.arraycopy(imagetoprint,height.lenght(),imageContent,0,imageContent.lenght()); 

  mmOutputStream.write(imagetoprint);  
</code></pre>

<p>Hex to Buffer method -</p>

<pre><code>public static byte[] hexToBuffer(String hexString)
    throws NumberFormatException {
    int length = hexString.length();
    byte[] buffer = new byte[(length + 1) / 2];
    boolean evenByte = true;
    byte nextByte = 0;
    int bufferOffset = 0;

    if ((length % 2) == 1) {
        evenByte = false;
    }

    for (int i = 0; i &lt; length; i++) {
        char c = hexString.charAt(i);
        int nibble; // A "nibble" is 4 bits: a decimal 0..15

        if ((c &gt;= '0') &amp;&amp; (c &lt;= '9')) {
            nibble = c - '0';
        } else if ((c &gt;= 'A') &amp;&amp; (c &lt;= 'F')) {
            nibble = c - 'A' + 0x0A;
        } else if ((c &gt;= 'a') &amp;&amp; (c &lt;= 'f')) {
            nibble = c - 'a' + 0x0A;
        } else {
            throw new NumberFormatException("Invalid hex digit '" + c +
                "'.");
        }

        if (evenByte) {
            nextByte = (byte) (nibble &lt;&lt; 4);
        } else {
            nextByte += (byte) nibble;
            buffer[bufferOffset++] = nextByte;
        }

        evenByte = !evenByte;
    }

    return buffer;
}
</code></pre>
