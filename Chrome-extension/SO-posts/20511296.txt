<p>Do not initialize your views in <code>onActivityResult</code> may be the issue will be because of your <code>Textview</code> initialization. Declare it in your <code>onCreate()</code>. Remove the <code>TextView</code> initialization from your below method and initialize it in your onCreate() and check. </p>

<pre><code>@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    // TODO Auto-generated method stub
    super.onActivityResult(requestCode, resultCode, data);

    if (requestCode == 1) {
        if (resultCode == RESULT_OK) {
            Uri contactData = data.getData();
            Cursor cursor = managedQuery(contactData, null, null, null,
                    null);
            cursor.moveToFirst();

            String number = cursor
                    .getString(cursor
                            .getColumnIndexOrThrow(ContactsContract.CommonDataKinds.Phone.NUMBER));
            //TextView tv;
            //tv = (TextView) findViewById(R.id.tv); //remove this lines.

            tv.setText(number);

        }
    }

}
</code></pre>

<p><strong>EDITED:</strong></p>

<p>Try out using the below code:</p>

<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.contact_picker);

    // this opens the activity. note the  Intent.ACTION_GET_CONTENT
    // and the intent.setType
  etphone1.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // user BoD suggests using Intent.ACTION_PICK instead of .ACTION_GET_CONTENT to avoid the chooser
            Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
            // BoD con't: CONTENT_TYPE instead of CONTENT_ITEM_TYPE
            intent.setType(ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE);
            startActivityForResult(intent, 1);                
        }
    });
}
</code></pre>

<p>now, as soon as the user selects a contact (and probably chooses one of several phone numbers), you can retrieve the data the normal way:</p>

<pre><code>@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    if (data != null) {
        Uri uri = data.getData();

        if (uri != null) {
            Cursor c = null;
            try {
                c = getContentResolver().query(uri, new String[]{ 
                            ContactsContract.CommonDataKinds.Phone.NUMBER,
                 ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME },
                        null, null, null);

                if (c != null &amp;&amp; c.moveToFirst()) {
                    String number = c.getString(0);
                    String Name=c.getString(1);
                   Toast.makeText(this, number + Name, Toast.LENGTH_LONG).show();      
                }
            } finally {
                if (c != null) {
                    c.close();
                }
            }
        }
    }
}
</code></pre>
