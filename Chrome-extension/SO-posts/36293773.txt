<p>Thanks guys for your help, I finally figured it out.</p>

<p><code>ImageAdapter.java</code></p>

<pre><code>public class ImageAdapter extends BaseAdapter {
    private Context mContext;

    public ImageAdapter(Context c, String urls[]) {
        mContext = c;
        mThumbIds = urls;
        //myurls = urls;
    }

    public int getCount() {
        return mThumbIds.length;
    }

    public Object getItem(int position) {
        return null;
    }

    public long getItemId(int position) {
        return position;
        //return 0;
    }

    public String getURL(int position){
        return mThumbIds[position];
    }

    // create a new ImageView for each item referenced by the Adapter
    public View getView(int position, View convertView, ViewGroup parent) {
        ImageView imageView;
        if (convertView == null) {
            // if it's not recycled, initialize some attributes
            imageView = new ImageView(mContext);
            imageView.setLayoutParams(new GridView.LayoutParams(200, 200));
            imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
            imageView.setPadding(20, 20, 20, 20);
        } else {
            imageView = (ImageView) convertView;
        }

       // imageView.setImageResource(mThumbIds[position]);

        Picasso.with(mContext)
                .load(mThumbIds[position])
                .into(imageView);
        return imageView;
    }

    //private ArrayList&lt;String&gt; myurls = new ArrayList&lt;String&gt;();

    // references to our images
    private String[] mThumbIds = {

    };
}
</code></pre>

<p><code>gridgallery.java</code> (fragment)</p>

<pre><code>package com.example.imran.myapp;


    public class gridgallery extends Fragment {


    public gridgallery() {
        // Required empty public constructor
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_gridgallery, null);
        Myserver myserver = new Myserver();
        postStringRequest(myserver.url + "/api/albums/getalbums.php", view);
        return view;
    }

    public View postStringRequest(final String url,final View view){
        //final View view = inflater.inflate(R.layout.fragment_gallery, null);
        // Instantiate the RequestQueue.
        RequestQueue queue = Volley.newRequestQueue(getContext());

        // Request a string response from the provided URL.
        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
                new Response.Listener&lt;String&gt;() {
                    @Override
                    public void onResponse(String response) {
                        GridView gv = (GridView)view.findViewById(R.id.fragment_gridgallery);
                        ArrayList&lt;String&gt; urls2 = new ArrayList&lt;String&gt;();
                        try {
                            JSONArray jsonObj = new JSONArray(response);
                            Myserver myserver = new Myserver();
                            for (int i=0;i&lt;jsonObj.length();i++){
                                JSONObject c = jsonObj.getJSONObject(i);
                                String imgurl = myserver.url+"/images/thumbs/tn_"+c.getString("album_thumbnail");
                                urls2.add(imgurl);
                            }
                            String myabc[] = urls2.toArray(new String[urls2.size()]);
                            final ImageAdapter myadapter = new ImageAdapter(getContext(),myabc);
                            gv.setAdapter(myadapter);
                            gv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                                @Override
                                public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
                                    Toast.makeText(getContext(),myadapter.getURL(position),Toast.LENGTH_LONG).show();
                                }
                            });


                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Toast.makeText(getContext(), "Unable to reach server", Toast.LENGTH_LONG).show();
            }
        }) {
            @Override
            protected Map&lt;String, String&gt; getParams() {
                Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();
                params.put("getalbum", "getalbum");
                return params;
            }
        };
        queue.add(stringRequest);
        return view;
    }



}
</code></pre>
