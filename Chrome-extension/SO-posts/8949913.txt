<p>As suggested <a href="http://stackoverflow.com/a/8916537/230513">here</a>, a custom renderer can query the model to condition the result returned by <a href="http://www.jfree.org/jfreechart/api/javadoc/org/jfree/chart/renderer/AbstractRenderer.html#getItemPaint%28int,%20int%29" rel="nofollow"><code>getItemPaint()</code></a>. In this example, subtasks are rendered using a palette of varying saturations of the default color for a given series. The approach assumes that the renderer makes two passes; some care should be given to documenting the dependency.</p>

<p><img src="http://i.stack.imgur.com/QN82q.png" alt="GanttSubtaskDemo"></p>

<pre><code>/** @see http://stackoverflow.com/questions/8938690 */
private static class MyRenderer extends GanttRenderer {

    private static final int PASS = 2; // assumes two passes
    private final List&lt;Color&gt; clut = new ArrayList&lt;Color&gt;();
    private final TaskSeriesCollection model;
    private int row;
    private int col;
    private int index;

    public MyRenderer(TaskSeriesCollection model) {
        this.model = model;
    }

    @Override
    public Paint getItemPaint(int row, int col) {
        if (clut.isEmpty() || this.row != row || this.col != col) {
            initClut(row, col);
            this.row = row;
            this.col = col;
            index = 0;
        }
        int clutIndex = index++ / PASS;
        return clut.get(clutIndex);
    }

    private void initClut(int row, int col) {
        clut.clear();
        Color c = (Color) super.getItemPaint(row, col);
        float[] a = new float[3];
        Color.RGBtoHSB(c.getRed(), c.getGreen(), c.getBlue(), a);
        TaskSeries series = (TaskSeries) model.getRowKeys().get(row);
        List&lt;Task&gt; tasks = series.getTasks(); // unchecked
        int taskCount = tasks.get(col).getSubtaskCount();
        taskCount = Math.max(1, taskCount);
        for (int i = 0; i &lt; taskCount; i++) {
            clut.add(Color.getHSBColor(a[0], a[1] / i, a[2]));
        }
    }
}
</code></pre>
