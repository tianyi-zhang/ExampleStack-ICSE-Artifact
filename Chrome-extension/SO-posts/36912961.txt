<p>Probably problem is in shutdown. I suggest to cancel all tasks before and then shutdown picasso :)</p>

<p>Checkout this: <a href="https://github.com/square/picasso/issues/329" rel="nofollow">https://github.com/square/picasso/issues/329</a></p>

<p><strong>Simple fast solution.</strong></p>

<p>Use single instance for picasso</p>

<pre><code>  /** Stops this instance from accepting further requests. */
  public void shutdown() {
    if (this == singleton) {
      throw new UnsupportedOperationException("Default singleton instance cannot be shutdown.");
    }
    if (shutdown) {
      return;
    }
    cache.clear();
    cleanupThread.shutdown();
    stats.shutdown();
    dispatcher.shutdown();
    for (DeferredRequestCreator deferredRequestCreator : targetToDeferredRequestCreator.values()) {
      deferredRequestCreator.cancel();
    }
    targetToDeferredRequestCreator.clear();
    shutdown = true;
  }
</code></pre>

<p>Check: </p>

<pre><code>  public void cancelTag(Object tag) {
    checkMain();
    if (tag == null) {
      throw new IllegalArgumentException("Cannot cancel requests with null tag.");
    }

    List&lt;Action&gt; actions = new ArrayList&lt;Action&gt;(targetToAction.values());
    //noinspection ForLoopReplaceableByForEach
    for (int i = 0, n = actions.size(); i &lt; n; i++) {
      Action action = actions.get(i);
      if (tag.equals(action.getTag())) {
        cancelExistingRequest(action.getTarget());
      }
    }

    List&lt;DeferredRequestCreator&gt; deferredRequestCreators =
        new ArrayList&lt;DeferredRequestCreator&gt;(targetToDeferredRequestCreator.values());
    //noinspection ForLoopReplaceableByForEach
    for (int i = 0, n = deferredRequestCreators.size(); i &lt; n; i++) {
      DeferredRequestCreator deferredRequestCreator = deferredRequestCreators.get(i);
      if (tag.equals(deferredRequestCreator.getTag())) {
        deferredRequestCreator.cancel();
      }
    }
  }
</code></pre>
