<p>I've already solved my problem! I did the following: Instead of saving the <code>photo</code> <code>File</code>, I save the it in a String with the location of the image.</p>

<pre><code>if (requestCode == CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE) {
            if (resultCode == RESULT_OK) {
                for (int u = 0; u &lt;= 2; u++)
                {
                    if (savedImgs[u].equals(""))
                    {
                        // Saving important info to be used later
                        imgs = u + 1;
                        savedImgs[u] = photo.toString();
                        break;
                    }
                } ...
</code></pre>

<p>And then, when uploading the images to the server, I make a <code>for loop</code> like this:</p>

<pre><code>public void UploadImg()
    {
         HttpURLConnection conn = null;
         DataOutputStream dos = null;
         DataInputStream inStream = null; 

         // String exsistingFileName = "/sdcard/prueba.png";  --&gt; Used for local files!!

         String lineEnd = "\r\n";
         String twoHyphens = "--";
         String boundary =  "*****";

         int bytesRead, bytesAvailable, bufferSize;
         byte[] buffer;
         int maxBufferSize = 1*1024*1024;
         String urlString = "http://myUrl.com/uploadimg.php";

         for (int n = 0; n &lt; imgs; n++)
         {
            try
             {
                 FileInputStream fileInputStream = new FileInputStream(savedImgs[n]);

                 // Open a URL connection to the Servlet
                 URL url = new URL(urlString);

                 // Open a HTTP connection to the URL
                 conn = (HttpURLConnection) url.openConnection();

                 conn.setDoInput(true);
                 conn.setDoOutput(true);
                 conn.setUseCaches(false);
                 conn.setRequestMethod("POST");
                 conn.setRequestProperty("Connection", "Keep-Alive");
                 conn.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary);

                 dos = new DataOutputStream(conn.getOutputStream());
                 dos.writeBytes(twoHyphens + boundary + lineEnd);
                 dos.writeBytes("Content-Disposition: form-data; name=\"uploadedfile\";filename=\"" + savedImgs[n] +"\"" + lineEnd);
                 dos.writeBytes(lineEnd);

                 // Create a buffer of maximum size
                 bytesAvailable = fileInputStream.available();
                 bufferSize = Math.min(bytesAvailable, maxBufferSize);
                 buffer = new byte[bufferSize];

                 // Read file and write it into form...
                 bytesRead = fileInputStream.read(buffer, 0, bufferSize);

                 while (bytesRead &gt; 0)
                 {
                     dos.write(buffer, 0, bufferSize);
                     bytesAvailable = fileInputStream.available();
                     bufferSize = Math.min(bytesAvailable, maxBufferSize);
                     bytesRead = fileInputStream.read(buffer, 0, bufferSize);
                 }

                 // Send multipart form data necesssary after file data...
                 dos.writeBytes(lineEnd);
                 dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);

                 // Close streams
                 fileInputStream.close();
                 dos.flush();
                 dos.close();
             }
             catch (MalformedURLException ex) { Log.e("MediaPlayer", "error: " + ex.getMessage(), ex); }
             catch (IOException ioe) { Log.e("MediaPlayer", "error: " + ioe.getMessage(), ioe); }

          try {
                inStream = new DataInputStream (conn.getInputStream());
                String str;

                while ((str = inStream.readLine()) != null)
                {
                     System.out.println("Server Response" + str);
                }
                inStream.close();
            }
            catch (IOException ioex) { Log.e("MediaPlayer", "error: " + ioex.getMessage(), ioex); } 
         }
    }
</code></pre>
