<p>In the end I used something like this. I created a parent class for all my fragments and overriden the <code>OnCreateAnimation</code> method which is called on every animation. </p>

<pre><code>@Override
public Animation onCreateAnimation(int transit, boolean enter, int nextAnim) {
    //Check if the superclass already created the animation
    Animation anim = super.onCreateAnimation(transit, enter, nextAnim);

    //If not, and an animation is defined, load it now
    if (anim == null &amp;&amp; nextAnim != 0) {
        anim = AnimationUtils.loadAnimation(getActivity(), nextAnim);
    }

    //If there is an animation for this fragment, add a listener.
    if (anim != null) {
        anim.setAnimationListener(new Animation.AnimationListener() {
            @Override
            public void onAnimationStart(Animation animation) {
                isAnimationFinished = false;
            }

            @Override
            public void onAnimationEnd(Animation animation) {
                isAnimationFinished = true;
            }

            @Override
            public void onAnimationRepeat(Animation animation) {

            }
        });
    }

    return anim;
}
</code></pre>

<p>The <code>isAnimationFinished</code> variable is a public variable that can be used by the calling activity and the child classes</p>
