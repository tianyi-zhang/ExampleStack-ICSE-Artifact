<p>I found how to do it, we have to do some changes in the code.
I'm writing this answer while current ShowcaseView release is 5.0</p>

<p>A) scalemultiplier became orphelin, we have to reimplement it.</p>

<p>1) open StandarShowcaseDrawer.java, locate drawShowcase method and modify it as bellow :</p>

<pre><code>@Override
    public void drawShowcase(Bitmap buffer, float x, float y, float scaleMultiplier) {
        Canvas bufferCanvas = new Canvas(buffer);
        //[GIOVA]
        //To avoid an infinite exception
        if(scaleMultiplier == 0.0f)
            scaleMultiplier = 0.001f;
        //[/GIOVA]
        //[Original]
            //bufferCanvas.drawCircle(x, y, showcaseRadius, eraserPaint);
        //[/Original]
        //[GIOVA]
            bufferCanvas.drawCircle(x, y, showcaseRadius * scaleMultiplier, eraserPaint);
        //[/GIOVA]
        int halfW = getShowcaseWidth() / 2;
        int halfH = getShowcaseHeight() / 2;
        int left = (int) (x - halfW);
        int top = (int) (y - halfH);
        showcaseDrawable.setBounds(left, top,
                left + getShowcaseWidth(),
                top + getShowcaseHeight());
        showcaseDrawable.draw(bufferCanvas);
    }
</code></pre>

<p>NB : note that i've placed some [GIOVA] and [Original] tags, so you can compare changes ;)</p>

<p>2) open NewShowcaseDrawer.java, same job as previous step :</p>

<pre><code>@Override
    public void drawShowcase(Bitmap buffer, float x, float y, float scaleMultiplier) {
        Canvas bufferCanvas = new Canvas(buffer);
        //[GIOVA]
        //To avoid an infinite exception
        if(scaleMultiplier == 0.0f)
            scaleMultiplier = 0.001f;
        //[/GIOVA]
        eraserPaint.setAlpha(ALPHA_60_PERCENT);
        //[Original]
        //bufferCanvas.drawCircle(x, y, outerRadius , eraserPaint);
        //eraserPaint.setAlpha(0);
        //bufferCanvas.drawCircle(x, y, innerRadius , eraserPaint);
        //[/Original]

        //[GIOVA]
        bufferCanvas.drawCircle(x, y, outerRadius * scaleMultiplier, eraserPaint);
        eraserPaint.setAlpha(0);
        bufferCanvas.drawCircle(x, y, innerRadius * scaleMultiplier, eraserPaint);
        //[/GIOVA]
    }
</code></pre>

<p>B) Now we need to be able to set the value, we'll add a method to the builder.
Open ShowcaseView.java then locate following line :</p>

<pre><code>public static class Builder {
</code></pre>

<p>Inside this Builder class, add the following method : </p>

<pre><code> public Builder setScaleMultiplier(float multiplier){
            showcaseView.setScaleMultiplier(multiplier);
            return this;
        }
</code></pre>

<p><strong>How to use it :</strong></p>

<p>Pretty simple now, in your activity, when you use Builder to setup your showcaseview, simply call setScaleMultiplier.</p>

<p>Example : </p>

<pre><code>sv = new ShowcaseView.Builder(this, true)
                .setTarget(target)
                .setContentTitle(getResources().getString(R.string.welcome))
                .setContentText(getResources().getString(R.string.welcomDescription))
                .setStyle(R.style.MyTheme)
                .setScaleMultiplier(0.3f)
                .build();
sv.Show();
</code></pre>
