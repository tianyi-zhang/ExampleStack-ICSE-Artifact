<p>I am working on an app that does exactly what you are trying to do. </p>

<p>Heres my code:</p>

<p>this is the main activity. Here your connect to the php file and create an array from the JSON result.</p>

<pre><code>public class mainActivity extends Activity {



@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.menu);

    ArrayList&lt;List&gt; menuitems = getItems("android", 1); //Call to function to get results from web, you can put variables to pass here

    ListView listView = (ListView) findViewById(R.id.Menu);
    listView.setAdapter(new ListAdapter(this, R.layout.categorymenu, menuitems));

    listView.setOnItemClickListener(new OnItemClickListener() {
        public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {              
          ON CLICK ACTIVITY GOES HERE




        }
    });
}

public ArrayList&lt;List&gt; getItems(String searchTerm, int page) {
    String searchUrl = "URL TO YOUR PHP FILE GOES HERE";

    ArrayList&lt;List&gt; lists = new ArrayList&lt;List&gt;();

    HttpClient client = new  DefaultHttpClient();
    HttpGet get = new HttpGet(searchUrl);

    ResponseHandler&lt;String&gt; responseHandler = new BasicResponseHandler();

    String responseBody = null;
    try{
        responseBody = client.execute(get, responseHandler);
    }catch(Exception ex) {
        ex.printStackTrace();
    }

    JSONObject jsonObject = null;
    JSONParser parser=new JSONParser();

    try {
        Object obj = parser.parse(responseBody);
        jsonObject=(JSONObject)obj;

    }catch(Exception ex){
        Log.v("TEST","Exception: " + ex.getMessage());
    }

    JSONArray arr = null;

    try {
        Object j = jsonObject.get("results");
        arr = (JSONArray)j;
    }catch(Exception ex){
        Log.v("TEST","Exception: " + ex.getMessage());
    }

    for(Object t : arr) {
        List list = new List(
                ((JSONObject)t).get("categories_name").toString(),
                ((JSONObject)t).get("categories_id").toString()
                );
        lists.add(list);
    }

    return lists;


}   

/** Classes **/

public class List {
    public String name;
    public String message;
    public Boolean usernameSet = false;
    public Boolean messageSet = false;

    public List(String username, String message) {
        this.name = username;
        this.message = message;
    }
}

}
</code></pre>

<p>Then I use the menuListAdapater class to create the list view:</p>

<pre><code>public class menuListAdapter extends ArrayAdapter&lt;List&gt; {
private ArrayList&lt;List&gt; lists;
    private Activity activity;


public menuListAdapter(Activity a, int textViewResourceId, ArrayList&lt;List&gt; lists) {
    super(a, textViewResourceId, lists);
    this.lists = lists;
    activity = a;

}

public static class ViewHolder{
    public TextView name;
    public TextView message;
}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    View v = convertView;
    ViewHolder holder;
    if (v == null) {        
        LayoutInflater vi = 
            (LayoutInflater)activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        v = vi.inflate(R.layout.categorymenu, null);
        holder = new ViewHolder();
        holder.name = (TextView) v.findViewById(R.id.categoryname);
        holder.message = (TextView) v.findViewById(R.id.message);
        v.setTag(holder);
    }
    else
        holder=(ViewHolder)v.getTag();

    final List list = lists.get(position);
    if (list != null) {
        holder.name.setText(list.name);
        holder.message.setText(list.message);
    }

    return v;
}

}
</code></pre>

<p>I highly recommend that you test the output of your php file in a browsers to make sure your queries and connection to the database work correctly.</p>

<p>Good Luck!</p>
