<p>Why don't you take a look at the OkHTTP Library 
<a href="http://square.github.io/okhttp/" rel="nofollow">http://square.github.io/okhttp/</a></p>

<p>A simple example:</p>

<pre><code>OkHttpClient client = new OkHttpClient();

String run(String url) throws IOException {
  Request request = new Request.Builder()
      .url(url)
      .build();

  Response response = client.newCall(request).execute();
  return response.body().string();
}
</code></pre>

<p>if you need to make an Async Call:</p>

<pre><code>private final OkHttpClient client = new OkHttpClient();

  public void run() throws Exception {
    Request request = new Request.Builder()
        .url("http://publicobject.com/helloworld.txt")
        .build();

    client.newCall(request).enqueue(new Callback() {
      @Override public void onFailure(Request request, IOException throwable) {
        throwable.printStackTrace();
      }

      @Override public void onResponse(Response response) throws IOException {
        if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);

        Headers responseHeaders = response.headers();
        for (int i = 0; i &lt; responseHeaders.size(); i++) {
          System.out.println(responseHeaders.name(i) + ": " + responseHeaders.value(i));
        }

        System.out.println(response.body().string());
      }
    });
  }
</code></pre>

<p>For further information, you can read the documentation:</p>

<p><a href="https://github.com/square/okhttp/wiki" rel="nofollow">https://github.com/square/okhttp/wiki</a></p>
