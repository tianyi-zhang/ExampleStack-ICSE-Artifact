<p>Change your getView method to following</p>

<pre><code>@Override
public View getView(int position, View convertView, ViewGroup parent) {
    Holder viewHolder;      
    if(convertView == null){
        convertView = LayoutInflater.from(parent.getContext())
                                  .inflate(R.layout.submenu_button, parent, false);
        viewHolder = new Holder();
        viewHolder.submenu_btn = (Button) convertView
                                      .findViewById(R.id.submenu_layout_button);
        convertView.setTag(viewHolder);
    } else {
        viewHolder = (Holder) convertView.getTag();
    }

    String btn_name=mainmenu.get(position).toString();
    viewHolder.submenu_btn.setText(btn_name);
    return convertView;
}
</code></pre>

<p><strong>UPDATE</strong></p>

<p>To answer your second question in the comments, I am not sure why are you using ArrayList of HashMaps. Why not use plain java object? I am showing below how I would do it with POJO (Plain Old Java Object)</p>

<p>Create a POJO describing your menu item</p>

<pre><code>public class MenuItem {
    public int MenuId;
    public String MenuName;
}
</code></pre>

<p>MenuFragment </p>

<pre><code>//initialize submenus
List&lt;MenuItem&gt; submenus = new ArrayList&lt;&gt;();

JSONArray jsonarrays = json.getJSONArray("sub_menus");
for (int k = 0; k &lt; jsonarrays.length(); k++) {
    JSONObject main_menus = jsonarrays.getJSONObject(k);
    MenuItem item = new MenuItem();
    item.MenuId = main_menus.getInt("sub_menu_id");
    item.MenuName = main_menus.getString("sub_menu_name");
    submenus.add(item);
} 

//initializing adapter
submenuadapter = new SubmenuCategoryAdapter(submenus, getActivity());
sb_list.setAdapter(submenuadapter);
</code></pre>

<p>Adapter class</p>

<pre><code>public class SubmenuCategoryAdapter extends BaseAdapter {
    List&lt;MenuItem&gt; mainmenu;
    Context con;
    public SubmenuCategoryAdapter(List&lt;MenuItem&gt; mainmenu, Context con) {
        super();
        this.mainmenu = mainmenu;
        this.con = con;
    }

    ....

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        Holder viewHolder;      
        if(convertView == null){
            convertView = LayoutInflater.from(parent.getContext())
                                  .inflate(R.layout.submenu_button, parent, false);
            viewHolder = new Holder();
            viewHolder.submenu_btn = (Button) convertView
                                      .findViewById(R.id.submenu_layout_button);
            convertView.setTag(viewHolder);
        } else {
            viewHolder = (Holder) convertView.getTag();
        }

        String btn_name = mainmenu.get(position).MenuName;
        viewHolder.submenu_btn.setText(btn_name);
        return convertView;
    }

}
</code></pre>
