<p>As far as i have experienced the scenario like yours i found that the input stream for an image cannot be obtained by simple methods of getting stream try to update the following things in your code and then check results. I'm sure you will get what you want.</p>

<pre><code>Bitmap bitmap = BitmapFactory.decodeStream(getBitmapStream("http://some-path/img.png"));
</code></pre>

<p>and here is the method which can be declared within class to be called directly in your decode stream method</p>

<pre><code>public InputStream getBitmapStream (String url)
{
    HttpGet httpRequest = null;
    InputStream instream=null;
    try {
        URL bitmapUrl=new URL(url);
            httpRequest = new HttpGet(bitmapUrl.toURI());
            HttpClient httpclient = new DefaultHttpClient();
            HttpResponse response = (HttpResponse) httpclient.execute
    (httpRequest);

            HttpEntity entity = response.getEntity();
            BufferedHttpEntity bufHttpEntity = new BufferedHttpEntity
    (entity);
            instream = bufHttpEntity.getContent(); 
    } catch (URISyntaxException e) {
            e.printStackTrace();
    } catch (MalformedURLException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (ClientProtocolException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }


    return instream;
}
</code></pre>
