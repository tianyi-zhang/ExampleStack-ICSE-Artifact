<p>I ended up doing the following:</p>

<pre><code>try
{
    try
    {
        server.ping();
    }
    catch (Exception e)
    {
        if (failIfNotRunning)
        {
            throw new MojoExecutionException("Failed to stop the Derby server, no server running!", e);
        }

        getLog().error("Derby server was already stopped.");
        return;
    }

    try
    {
        DriverManager.getConnection(getConnectionURL());
        DriverManager.getConnection("jdbc:derby:;shutdown=true");
    }
    catch (SQLException e)
    {
        // Apparently this prints out a bunch of stuff we're not currently interested in,
        // we just want it to shutdown properly.
        // Perhaps further handling might be required at a future point in time.
    }

    server.shutdown();

    while (true)
    {
        Thread.sleep(1000);
        try
        {
            server.ping();
        }
        catch (Exception e)
        {
            getLog().info("Derby has stopped!");
            break;
        }
    }

    System.getProperties().remove("derby.system.home");
}
catch (Exception e)
{
    throw new MojoExecutionException(e.getMessage(), e);
}
</code></pre>

<p>This wasn't the way I expected it had to be done.</p>
