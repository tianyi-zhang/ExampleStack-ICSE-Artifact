<p>I've seen the error above when the constructor <br>
    IabHelper(Context ctx, String base64PublicKey) </p>

<p>is given an incorrect key. <br>
The solution is:<br>
to go to the Google Play, Developer Console web page.<br>
choose the app, <br>
then under "Services and APIs" you'll see "Your license key for this application"<br>
use that string. </p>

<hr>

<p>Another solution is to go into the Security.java file and make a couple of changes. See the lines on which I have the comment "// ADD_THIS_LINE"</p>

<pre><code>    public static boolean verifyPurchase(String base64PublicKey, String signedData, String signature) {
    if (signedData == null) {
        Log.e(TAG, "data is null");
        return false;
    }

    boolean verified = false;
    if (!TextUtils.isEmpty(signature)) {
        PublicKey key = Security.generatePublicKey(base64PublicKey);

        if( key != null) // ADD_THIS_LINE
            verified = Security.verify(key, signedData, signature);

        if (!verified) {
            Log.w(TAG, "signature does not match data.");
            return false;
        }
    }
    return true;
}    
////////////////////////////////////////////////////////////////////////
//  :     :     
///////////////////////////////////////////////////////////////////////
 public static PublicKey generatePublicKey(String encodedPublicKey) {
    try {
        byte[] decodedKey = Base64.decode(encodedPublicKey);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_FACTORY_ALGORITHM);
        return keyFactory.generatePublic(new X509EncodedKeySpec(decodedKey));
    } catch (NoSuchAlgorithmException e) {
        throw new RuntimeException(e);
    } catch (InvalidKeySpecException e) {
        Log.e(TAG, "Invalid key specification.");
        throw new IllegalArgumentException(e);
    } catch (Base64DecoderException e) {
        Log.e(TAG, "Base64 decoding failed.");
        return null;  // ADD_THIS_LINE
        // COMMENT_OUT_THIS_LINE:   throw new IllegalArgumentException(e);
    }
}


//////////////////////////////////////////////////////////////
</code></pre>
