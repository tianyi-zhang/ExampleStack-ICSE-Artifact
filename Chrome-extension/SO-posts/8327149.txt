<p><strong>EDIT</strong></p>

<p>Your adapter should look like this:</p>

<pre><code>public class InteractiveArrayAdapter extends ArrayAdapter&lt;Model&gt; {
  private final List&lt;Model&gt; list;
  private final Activity context;
  private CheckBox selectAll;

  public InteractiveArrayAdapter( Activity context, List&lt;Model&gt; list, CheckBox selectAll ) {
    super( context, R.layout.list_items_attendance_payment, list );
    this.context = context;
    this.list = list;
    this.selectAll = selectAll;
  }

  static class ViewHolder {
    protected TextView text;
    protected CheckBox checkbox;
  }

  @Override
  public View getView( final int position, View convertView, ViewGroup parent ) {
    View view = null;

    if( convertView == null ) {
      LayoutInflater inflator = context.getLayoutInflater();
      view = inflator.inflate( R.layout.list_items_attendance_payment, null );
      final ViewHolder viewHolder = new ViewHolder();
      viewHolder.text = (TextView) view.findViewById( R.id.name );
      viewHolder.checkbox = (CheckBox) view.findViewById( R.id.check );
      view.setTag( viewHolder );
    }
    else {
      view = convertView;
    }

    ViewHolder holder = (ViewHolder) view.getTag();
    holder.text.setText( list.get( position ).getName() );

    viewHolder.checkbox.setOnCheckedChangeListener( new CompoundButton.OnCheckedChangeListener() {
      @Override
      public void onCheckedChanged( CompoundButton buttonView, boolean isChecked ) {
        AttendanceActivity.listMember.get( position ).setSelected( isChecked );
        list.get( position ).setSelected( buttonView.isChecked() );
        selectAll.setChecked( areAllSelected() ); // We just use the method as parameter as it returns a boolean.
      }
    } );

    if( selectAll.isChecked() )
      holder.checkbox.setChecked( true );
    else
      holder.checkbox.setChecked( list.get( position ).isSelected() );

    return view;
  }

  public void deselectAll() {
    for( Model element : list )
      element.setSelected( false );

    notifyDataSetChanged();
  }

  public void selectAll() {
    for( Model element : list )
      element.setSelected( true );

    notifyDataSetChanged();
  }

  private boolean areAllSelected() {
    for( Model element : list )
      if( !element.getSelected() )
        return false; // We conclude that not all are selected.

    return true; // All of the items were selected
  }
}
</code></pre>

<p>And the method in your <code>Activity</code> that set the <code>OnCheckedChangedListener</code> should be changed to this:</p>

<pre><code>private void onClickSetAllAttendance() {
  selectAll.setOnClickListener( new OnClickListener() {
    @Override
    public void onClick( View v ) {
      CheckBox box = (CheckBox) v;
      box.toggle();

      if( box.isChecked() )
        listAdapter.selectAll();
      else
        listAdapter.deselectAll();
    }
  });
}
</code></pre>
