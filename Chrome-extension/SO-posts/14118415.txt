<p>I ran into same problem some time ago. Here are the functions i used</p>

<p>Compress Function</p>

<p><code>if (responseCode == HttpConnection.HTTP_OK){</code></p>

<pre><code>boolean stop = false, pause = false;
totalSize = conn.getLength() + downloaded;
chunkSize = (int)(conn.getLength() / 100);
System.out.println("*********-----" + conn.getLength() + "");
System.out.println("-----------------ok");
in = conn.openInputStream();
int length = 0, s = 0;
byte[] readBlock = new byte[(int)conn.getLength()];


while ((s = in.read(readBlock) != -1)
        length = length + s;
{
      if (!pause)
        {
            readBlock = Decompress.decompress(readBlock);
            out.write(readBlock, 0, length);
            downloaded += length;
            int a = getPerComplete(totalSize, downloaded);
            System.out.println("% OF Downloaded--------" + a);
            int a1 = getPerComplete(totalSize, downloaded);
</code></pre>

<p>Decompress function:-</p>

<pre><code>public byte[] decompress(byte[] compressed) throws IOException
{
    GZIPInputStream gzipInputStream;
    if (compressed.length &gt; 4)
    {
        gzipInputStream = new GZIPInputStream(
            new ByteArrayInputStream(compressed, 4,
                                     compressed.length - 4));

        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        for (int value = 0; value != -1;)
        {
            value = gzipInputStream.read();
            if (value != -1)
            {
                baos.write(value);
            }
        }
        gzipInputStream.close();
        baos.close();

        return baos.toByteArray();
    }
    else
    {
       return null;
    }
}
</code></pre>

<p>}</p>
