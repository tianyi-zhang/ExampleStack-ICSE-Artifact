<p>Here you can find the whole code for your dialog. Basically I removed the AsyncTask (you can eventually restore it if you need for example to download pictures from network) and override method <code>onCreateDialog</code> instead of <code>onCreateView</code>. </p>

<pre><code>public class PhotoDialog extends DialogFragment {

    public static PhotoDialog newInstance() {
        return new PhotoDialog();
    }

    @NonNull
    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        View v = getActivity().getLayoutInflater().inflate(R.layout.pick_photo_dialog_fragment, null);
        Button closeButton = (Button) v.findViewById(R.id.closeButton);
        closeButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                dismiss();
            }
        });
        ListView listView = (ListView) v.findViewById(R.id.photosListView);
        ListAdapter listAdapter = new PhotoListAdapter(getActivity());
        listView.setAdapter(listAdapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            public void onItemClick(AdapterView&lt;?&gt; a, View v, int position, long id) {
                //do stuff
            }
        });
        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
        // REMOVE setTitle in case you don't want dialog title to be shown
        //builder.setTitle("Dialog Title");
        builder.setView(v);
        return builder.create();
    }

    private static class PhotoListAdapter extends BaseAdapter {

        private static ListItem[] _ITEMS = {
                new ListItem("basketball", R.drawable.basketball),
                new ListItem("bodyweight", R.drawable.bodyweight),
                new ListItem("boulder", R.drawable.boulder),
                new ListItem("boxing", R.drawable.boxing),
                new ListItem("cardio", R.drawable.cardio),
                new ListItem("crossfit", R.drawable.crossfit),
                new ListItem("olympic", R.drawable.olympic),
                new ListItem("racquet", R.drawable.racquet),
                new ListItem("run", R.drawable.run),
                new ListItem("spin", R.drawable.spin),
                new ListItem("squash", R.drawable.squash),
                new ListItem("swim", R.drawable.swim),
                new ListItem("volleyball", R.drawable.volleyball),
                new ListItem("weight", R.drawable.weight),
                new ListItem("yoga", R.drawable.yoga)
        };

        static class ViewHolder {

            TextView activityNameTV;
            ImageView activityImageIV;

        }

        static class ListItem {

            String title;
            int icon;

            public ListItem(String title, int icon) {
                this.title = title;
                this.icon = icon;
            }

        }

        private LayoutInflater mInflater;

        public PhotoListAdapter(Context context) {
            mInflater = LayoutInflater.from(context);
        }

        public int getCount() {
            return _ITEMS.length;
        }

        public Object getItem(int position) {
            return _ITEMS[position];
        }

        public long getItemId(int position) {
            return position;
        }

        public View getView(int position, View convertView, ViewGroup parent) {
            ViewHolder holder;

            if (convertView == null) {
                convertView = mInflater.inflate(R.layout.photo_list_row_view, null);
                holder = new ViewHolder();
                holder.activityNameTV = (TextView) convertView.findViewById(R.id.activityName);
                holder.activityImageIV = (ImageView) convertView.findViewById(R.id.activityImage);
                convertView.setTag(holder);
            } else {
                holder = (ViewHolder) convertView.getTag();
            }

            ListItem item = (ListItem) getItem(position);

            holder.activityNameTV.setText(item.title);
            holder.activityImageIV.setImageResource(item.icon);

            return convertView;
        }

    }

}
</code></pre>
