<pre><code>    public class GCMIntentService extends GCMBaseIntentService {

    @SuppressWarnings("unused")
    private final String TAG = "GCMIntentService";

    public GCMIntentService() {

        super("GCM_ID");
    }

    /**
     * Issues a notification to inform the user that server has sent a message.
     */
    public void generateNotification(Context context, String message) {
        long when = System.currentTimeMillis();
        NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
        Notification notification = new Notification(R.drawable.ic_launcher, message, when);
        String title = context.getString(R.string.app_name);

        Intent notificationIntent = new Intent(context, SamplePushActivity.class);
        PendingIntent intent = PendingIntent.getActivity(context, 0, notificationIntent, android.content.Intent.FLAG_ACTIVITY_NEW_TASK);
        notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
        notification.setLatestEventInfo(context, title, message, intent);
        notification.flags |= Notification.FLAG_AUTO_CANCEL;
        notification.defaults |= Notification.DEFAULT_SOUND | Notification.DEFAULT_LIGHTS;
        notificationManager.notify(0, notification);
    }

    @Override
    protected void onError(Context arg0, String arg1) {

    }

    @Override
    protected void onMessage(Context arg0, Intent arg1) {

        Resources res = getResources();
        Log.d("GCM", "RECIEVED A MESSAGE");

        // Get the data from intent and send to notificaion bar

        System.out.println("MEssage Recieved :" + arg1.getStringExtra("message"));
        System.out.println("Data Recieved :" + arg1.getExtras().getString("collapse_key"));

        // generateNotification(arg0, arg1.getStringExtra("state"));
        // generateNotification(arg0, arg1.getStringExtra("message"));
        generateNotification(arg0, res.getString(R.string.assignment_new, "arg1", "arg2"));
        // String notifyMessage = arg1.getStringExtra("collapse_key");
        // if
        // (arg1.getStringExtra("collapse_key").equalsIgnoreCase("NOTIFICATION_ASSIGNMENT"))
        // {
        // generateNotification(arg0, arg1.getStringExtra("message"));
        // }
    }

    @Override
    protected void onRegistered(Context arg0, String arg1) {
        // TODO Auto-generated method stub
    }

    @Override
    protected void onUnregistered(Context arg0, String arg1) {
        // TODO Auto-generated method stub
    }

public class SamplePushActivity extends Activity {
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.main);
        TextView regNumber = (TextView) findViewById(R.id.textView1);

        GCMRegistrar.checkDevice(this);
        GCMRegistrar.checkManifest(this);

        if (GCMRegistrar.isRegistered(this)) {
            Log.d("info", GCMRegistrar.getRegistrationId(this));
        }

        final String regId = GCMRegistrar.getRegistrationId(this);
        regNumber.setText(regId);

        if (regId.equals("")) {
            // replace this with the project ID
            System.out.println("registration ID is " + regId);
            GCMRegistrar.register(this, "GCM_ID");
            Log.d("info", GCMRegistrar.getRegistrationId(this));
            System.out.println("Get Reg ID: " + GCMRegistrar.getRegistrationId(this));
            regNumber.setText(regId);
        } else {
            Log.d("info", "already registered as" + regId);
        }
    }
</code></pre>

<p></p>

<pre><code>&lt;uses-sdk android:minSdkVersion="8" /&gt;

&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
&lt;uses-permission android:name="android.permission.GET_ACCOUNTS" /&gt;
&lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;

&lt;permission
    android:name="in.android.gcm.permission.C2D_MESSAGE"
    android:protectionLevel="signature" /&gt;

&lt;uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" /&gt;
&lt;uses-permission android:name="in.android.gcm.permission.C2D_MESSAGE" /&gt;
&lt;uses-permission android:name="android.permission.GET_ACCOUNTS" /&gt;
&lt;uses-permission android:name="android.permission.USE_CREDENTIALS" /&gt;

&lt;application
    android:icon="@drawable/ic_launcher"
    android:label="@string/app_name" &gt;
    &lt;activity
        android:name=".SamplePushActivity"
        android:label="@string/app_name" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name="android.intent.action.MAIN" /&gt;

            &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;

    &lt;receiver
        android:name="com.google.android.gcm.GCMBroadcastReceiver"
        android:permission="com.google.android.c2dm.permission.SEND" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name="com.google.android.c2dm.intent.RECEIVE" /&gt;
            &lt;action android:name="com.google.android.c2dm.intent.REGISTRATION" /&gt;

            &lt;category android:name="in.android.gcm" /&gt;
        &lt;/intent-filter&gt;
    &lt;/receiver&gt;

    &lt;service android:name=".GCMIntentService" /&gt;
&lt;/application&gt;
</code></pre>

<p></p>
