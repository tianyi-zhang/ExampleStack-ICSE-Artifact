<p>You're splitting <code>name1</code> around spaces. You can try to split <code>name1</code> around <a href="https://docs.oracle.com/javase/tutorial/essential/regex/pre_char_classes.html" rel="nofollow">any non-word character</a>:</p>

<pre><code>names.split("\\W+");
</code></pre>

<p>Method <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#split(java.lang.String)" rel="nofollow">String.split</a> accepts regex as argument. To quote from the docs:</p>

<blockquote>
  <p>Splits this string around matches of the given regular expression.</p>
</blockquote>

<p><code>name1.split(" ");</code> splits string around single space and returns array: <code>[1298, Anthony.ef, 1298, Anthony.ef]</code></p>

<p><code>names.split("\\W+");</code> splits string around any non-word character (comma, dot, dash, etc.) and returns array: <code>[1298, Anthony, ef, 1298, Anthony, ef]</code>
As you can see in this case it was able to split <code>Anthony.ef</code> into separate strings.</p>

<p><strong>UPDATE:</strong> If you want to preserve word's order in the original string you might want to use <code>LinkedHashSet</code> instead of <code>HashSet</code>. For example:</p>

<pre><code>public static void removeString(){

    String name1 = "1298 Anthony.ef 1298 Anthony.ef";

    String[] strArr = name1.split("\\W+");
    Set&lt;String&gt; set = new LinkedHashSet&lt;String&gt;(Arrays.asList(strArr));

    String[] result = new String[set.size()];
    set.toArray(result);
    StringBuilder res = new StringBuilder();
    for (int i = 0; i &lt; result.length; i++) {
        String string = result[i];
        if(i==result.length-1){
            res.append(string);
        }
        else{
            res.append(string).append(" ");
        }

    }
    System.out.println(res.toString());
    String abc = res.toString();
}
</code></pre>

<p>Check out this question: <a href="http://stackoverflow.com/questions/8185090/is-there-an-insertion-order-preserving-set-in-java">Is there an insertion order preserving set in Java?</a></p>
