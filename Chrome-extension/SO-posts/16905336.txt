<p>It looks to me like your code is just returning the first match - is that not the problem? I would have expected you to build up list of addresses, and return that instead of just a single string. Something like this:</p>

<pre><code>public String[] getLocalIpAddress()
{          
    ArrayList&lt;String&gt; addresses = new ArrayList&lt;String&gt;();
    try {
        for (Enumeration&lt;NetworkInterface&gt; en = NetworkInterface.getNetworkInterfaces(); en.hasMoreElements();) {
            NetworkInterface intf = en.nextElement();
            for (Enumeration&lt;InetAddress&gt; enumIpAddr = intf.getInetAddresses(); enumIpAddr.hasMoreElements();) {
                InetAddress inetAddress = enumIpAddr.nextElement();
                if (!inetAddress.isLoopbackAddress()) {
                    IPAddresses.setText(inetAddress.getHostAddress().toString());
                    addresses.add(inetAddress.getHostAddress().toString());
                }
             }
         }
     } catch (SocketException ex) {
         String LOG_TAG = null;
         Log.e(LOG_TAG, ex.toString());
     }
     return addresses.toArray(new String[0]);
}
</code></pre>

<p>I'm not sure what the <code>IPAddresses.setText</code> call is doing, so I've left it in, but I expect that would also need to be adjusted in some way to handle the fact that you could have multiple addresses being matched.</p>
