<p>You cannot access the <code>position</code> parameter in the callback because RecyclerView will not rebind a ViewHolder just because its position has changed. Removing an item changes the position of all items below it so all of your position references for those items will be obsolete.</p>

<p>Instead, you can use <code>ViewHolder#getPosition</code> to get the up to date position at the time of the user action.</p>

<p>In addition to that, do not add the gesture listener and touch listener in onBind, instead, add them when you create the ViewHolder. This way, you'll avoid creating a new object each time an item is rebound. </p>

<p><strong>Update for the comment. Suggested changes:</strong></p>

<pre><code>@Override
    public RecyclerView.ViewHolder onCreateViewHolder(final ViewGroup parent, final int viewType) {
        RecyclerView.ViewHolder holder = null;
        View rootView;
        switch (viewType) {
        case ItemViewType.HEADER:
            rootView = LayoutInflater.from(parent.getContext()).inflate(R.layout.header, parent, false);
            holder = new HeaderViewHoler(rootView);
            break;
        case ItemViewType.ITEM:
            rootView = LayoutInflater.from(parent.getContext()).inflate(R.layout.card, parent, false);
            holder = new ItemViewHolder(rootView);
            //initialize gesture detector and touch listener, replace position with getPosiiton
        }
        return holder;
    }
</code></pre>
