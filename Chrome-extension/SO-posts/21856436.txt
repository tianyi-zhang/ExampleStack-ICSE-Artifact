<p>You can use an array list to store all locations of largest. Something Like this.</p>

<pre><code>import java.util.Scanner;
public class LargestElementLocator {

public static void main(String[] args)
{
    //Read the input from the console
Scanner input = new Scanner(System.in);
System.out.print("Enter the number of rows and columns of the array: ");
//Read no.of rows
int rows  = input.nextInt();
//Read no.of columns
int columns = input.nextInt();

//Create new array object
double[][] a = new double[rows][columns];
//Input array of elements
System.out.println("Enter the array: ");
for (int i = 0; i &lt; 3; i++) {
for (int j = 0; j &lt; 3; j++)
a[i][j] = input.nextDouble();
}
//call the locateLargest and print
int[] location = locateLargest(rows,columns,a);
System.out.println("The location of the largest element is at (" + location[0] + ", " + location[1] + ")");
}

//method to determine the max val &amp; postion

public static List&lt;Location&gt; locateLargest(int rows,int columns,double[][] a) {

double largest = a[0][0];
//rows = 10;
//columns = 10;
for (int i = 0; i &lt; rows; i++) {
  for (int j = 0; j &lt; columns; j++) {
    if (largest &lt; a[i][j]) {
      largest = a[i][j];
    }
  }
}

List&lt;Location&gt; locations = new ArrayList&lt;Location&gt;();
for (int i = 0; i &lt; rows; i++) {
  for (int j = 0; j &lt; columns; j++) {
    if (largest = a[i][j]) {
      locations.add(new Location(i,j));
    }
  }
}

return locations;
}
}

class Location {
  int x,y;
  Location(int x, int y) {
      this.x = x;
      this.y = y;
  }
}
</code></pre>
