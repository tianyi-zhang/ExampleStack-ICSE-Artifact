<p>In your process2D method start off by creating an array with the correct size which has 1 more row and 1 more column than the original:</p>

<pre><code>int[][] matrix = new int[arr.length+1][arr[0].length+1];
</code></pre>

<p>Then to populate the matrix array you do like you were doing before, but you need to take care not to reference an index of the arr array that is out of bounds. Because your matrix index is bigger than arr. If you are populating the new indexes then you can just use random numbers.</p>

<pre><code>        if(row &lt; arr.length &amp;&amp; col &lt; arr[0].length)
        {
            matrix[row][col] = arr[row][col];
        }
        else
        {
            matrix[row][col] = new Random().nextInt(10);
        }
</code></pre>

<p>So here is the full method process2D:</p>

<pre><code>public static int[][] processing2D(int[][] arr) {

    int[][] matrix = new int[arr.length+1][arr[0].length+1];

    for (int row = 0; row &lt; matrix.length; row++) {

        for (int col = 0; col &lt; matrix[0].length; col++) {

            // once I reach the last pos I enter the count
            // of numbers greater than or equal to zero in that row/col
            if(row &lt; arr.length &amp;&amp; col &lt; arr[0].length)
            {
                matrix[row][col] = arr[row][col];
            }
            else
            {
                matrix[row][col] = new Random().nextInt(10);
            }

        }

    }

    // assign the corner -1 here

    return matrix;
}
</code></pre>
