<p>The Right way is to define <code>ItemDecoration</code> for the <code>RecyclerView</code> is as following</p>

<p><strong>SimpleDividerItemDecoration.java</strong></p>

<pre><code>public class SimpleDividerItemDecoration extends RecyclerView.ItemDecoration {
    private Drawable mDivider;

    public SimpleDividerItemDecoration(Context context) {
        mDivider = context.getResources().getDrawable(R.drawable.line_divider);
    }

    @Override
    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {
        int left = parent.getPaddingLeft();
        int right = parent.getWidth() - parent.getPaddingRight();

        int childCount = parent.getChildCount();
        for (int i = 0; i &lt; childCount; i++) {
            View child = parent.getChildAt(i);

            RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child.getLayoutParams();

            int top = child.getBottom() + params.bottomMargin;
            int bottom = top + mDivider.getIntrinsicHeight();

            mDivider.setBounds(left, top, right, bottom);
            mDivider.draw(c);
        }
    }
}
</code></pre>

<p><strong>line_divider.xml:</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle"&gt;

    &lt;size
        android:width="1dp"
        android:height="1dp" /&gt;

    &lt;solid android:color="@color/dark_gray" /&gt;

&lt;/shape&gt;
</code></pre>

<p><strong>Finally set it like this</strong></p>

<pre><code>recyclerView.addItemDecoration(new SimpleDividerItemDecoration(this));
</code></pre>

<hr>

<h2>Edit</h2>

<p>As pointed by @Alan Solitar</p>

<pre><code>context.getResources().getDrawable(R.drawable.line_divider); 
</code></pre>

<p>is depreciated  instead of that you can use </p>

<pre><code>ContextCompat.getDrawable(context,R.drawable.line_divider);
</code></pre>
