<p>You can use some rest client APIs like <a href="http://www.mkyong.com/webservices/jax-rs/restful-java-client-with-jersey-client/" rel="nofollow">Jersey Client</a>.</p>

<p>for example for send get parameter:</p>

<pre><code>import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;

public class JerseyClientGet {



 public static void main(String[] args) {
    try {

        Client client = Client.create();

        WebResource webResource = client
           .resource("http://localhost:8080/RESTfulExample/rest/json/metallica/get");

        ClientResponse response = webResource.accept("application/json")
                   .get(ClientResponse.class);

        if (response.getStatus() != 200) {
           throw new RuntimeException("Failed : HTTP error code : "
            + response.getStatus());
        }

        String output = response.getEntity(String.class);

        System.out.println("Output from Server .... \n");
        System.out.println(output);

      } catch (Exception e) {

        e.printStackTrace();

      }

    }
}
</code></pre>

<p>for parse post or get method parameters use these functions:</p>

<pre><code>  private static Map&lt;String, String&gt; parsePostParameters(HttpExchange exchange)
            throws IOException {

        if ("post".equalsIgnoreCase(exchange.getRequestMethod())) {
            @SuppressWarnings("unchecked")
            InputStreamReader isr
                    = new InputStreamReader(exchange.getRequestBody(), "utf-8");
            BufferedReader br = new BufferedReader(isr);
            String query = br.readLine();
            return queryToMap(query);
        }
        return null;
    }

    public static Map&lt;String, String&gt; queryToMap(String query) {
        Map&lt;String, String&gt; result = new HashMap&lt;&gt;();
        for (String param : query.split("&amp;")) {
            String pair[] = param.split("=");
            if (pair.length &gt; 1) {
                result.put(pair[0], pair[1]);
            } else {
                result.put(pair[0], "");
            }
        }
        return result;
    }
}
</code></pre>
