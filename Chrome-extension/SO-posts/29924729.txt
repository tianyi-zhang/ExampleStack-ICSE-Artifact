<p>You don't need a new implementation class for <code>AllowAllHostnameVerifier</code> and don't need another implementation for <code>BrowserCompatHostnameVerifier</code>, simply pass an instance to the new <a href="https://hc.apache.org/httpcomponents-client-dev/httpclient/apidocs/org/apache/http/conn/ssl/DefaultHostnameVerifier.html" rel="nofollow">DefaultHostnameVerifier</a>, </p>

<pre><code>SSLConnectionSocketFactory sslsf = new SSLConnectionSocketFactory(sslcontext, new DefaultHostnameVerifier());
</code></pre>

<p>this class the neccesary verification methods for both with the following method signatures</p>

<pre><code>public final boolean verify(String host, SSLSession session) (Override)
</code></pre>

<p>and</p>

<pre><code>public final void verify(String host, X509Certificate cert) throws SSLException
</code></pre>

<p>in the second method the httpcomponents does a checking for matching subdomains</p>

<pre><code>public final void verify(String host, X509Certificate cert) throws SSLException {
    boolean ipv4 = InetAddressUtils.isIPv4Address(host);
    boolean ipv6 = InetAddressUtils.isIPv6Address(host);
    int subjectType = ((ipv4) || (ipv6)) ? 7 : 2;
    List subjectAlts = extractSubjectAlts(cert, subjectType);
    if ((subjectAlts != null) &amp;&amp; (!(subjectAlts.isEmpty()))) {
        if (ipv4)
            matchIPAddress(host, subjectAlts);
        else if (ipv6)
            matchIPv6Address(host, subjectAlts);
        else {
            matchDNSName(host, subjectAlts, this.publicSuffixMatcher);
        }
    } else {
        X500Principal subjectPrincipal = cert.getSubjectX500Principal();
        String cn = extractCN(subjectPrincipal.getName("RFC2253"));
        if (cn == null) {
            throw new SSLException("Certificate subject for &lt;" + host + "&gt; doesn't contain " + "a common name and does not have alternative names");
        }

        matchCN(host, cn, this.publicSuffixMatcher);
    }
}
</code></pre>

<p>take a look at the source code for more clarification</p>

<p><a href="http://grepcode.com/file/repo1.maven.org/maven2/org.apache.httpcomponents/httpclient/4.4/org/apache/http/conn/ssl/DefaultHostnameVerifier.java/" rel="nofollow">org.apache.http.conn.ssl.DefaultHostnameVerifier</a></p>

<p>Hope this helps.</p>
