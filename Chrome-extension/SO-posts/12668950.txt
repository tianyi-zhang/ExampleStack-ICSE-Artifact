<pre><code>  // uris[] - the file uris array
  if (uris != null &amp;&amp; !uris.isEmpty()) {
            for (int i = 0; i &lt; uris.size(); i++) {
                // current image's uri

                // Uri u = Uri.fromFile(filepath)   - YOUR situation
                Uri u = uris.get(i);
                if (u != null) {
                    System.gc();
                    InputStream is = null;
                    byte[] data = null;
                    try {
                        is = mContentResolver.openInputStream(u);
                        // converting to byteArray / my Procedure
                        data = getFileBytes(is);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    u = null;

                    // converting bytes to Base64
                    String data_string = 
                            Base64.encodeToString(data, Base64.URL_SAFE);

                    // my pairs for transfer, may not use
                    if( ! data_string.trim().equals("")){
                        nameValuePairs.add(
                                new BasicNameValuePair(
                                        "data[file_" + i + "]",
                                        data_string
                                )
                        );
                    }
                    data_string = null;
                }
            }
        }

        /* convert InputStream to Byte array procedure */
        public byte[] getFileBytes(InputStream ios) throws IOException {
            ByteArrayOutputStream ous = null;
            try {
                byte[] buffer = new byte[4096];
                ous = new ByteArrayOutputStream();
                int read = 0;

                while ((read = ios.read(buffer)) != -1)
                    ous.write(buffer, 0, read);
            } finally {
                try {
                    if (ous != null)
                    ous.close();
                } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                if (ios != null)
                    ios.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        return ous.toByteArray();
    }
</code></pre>

<p>Also check where do you see you base64. If debug - it will be cut!</p>

<p><strong>Ok. Try my code to decode image into MPx you want. Here is 1 megapixel:</strong></p>

<p><strong>Using:</strong></p>

<pre><code> minimizeBitmap(filePath, 1000000, true)
</code></pre>

<p><strong>My Code:</strong></p>

<pre><code> public Bitmap minimizeBitmap(String aPath, int aMps, boolean aSaveOrNot) throws FileNotFoundException {
    Uri aUri = null;
    {
        File f = new File(aPath);
        aUri = Uri.fromFile(f);
        f = null;
        System.gc();
    }

    InputStream in = mContentResolver.openInputStream(aUri);
    try {
        final int IMAGE_MAX_SIZE = aMps; 

        // Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inJustDecodeBounds = true;
        BitmapFactory.decodeStream(in, null, o);
        in.close();

        int scale = 1;
        while ((o.outWidth * o.outHeight) * (1 / Math.pow(scale, 2)) &gt; IMAGE_MAX_SIZE) {
            scale++;
        }

        Bitmap b = null;
        in =  mContentResolver.openInputStream(aUri);

        aUri = null;
        if (scale &gt; 1) {
            scale--;

            o = new BitmapFactory.Options();
            o.inSampleSize = scale;
            b = BitmapFactory.decodeStream(in, null, o);

            int height = b.getHeight();
            int width = b.getWidth();

            double y = Math.sqrt(IMAGE_MAX_SIZE
                    / (((double) width) / height));
            double x = (y / height) * width;

            Bitmap scaledBitmap = Bitmap.createScaledBitmap(b, (int) x, (int) y, true);
            b.recycle();
            b = scaledBitmap;

            if (aSaveOrNot) {
                FileOutputStream out = new FileOutputStream(_fileName);
                b.compress(Bitmap.CompressFormat.JPEG, 85, out);
                out.close();
            }

            System.gc();
            return b;
        } else {
            b = BitmapFactory.decodeStream(in);
        }
        in.close();
//
//          Log.i("junr", "out getBitmap");
//          Log.i("junr", String.valueOf(Environment.getExternalStorageDirectory()));
        if (aSaveOrNot) {
            FileOutputStream out = new FileOutputStream(_fileName);
            b.compress(Bitmap.CompressFormat.JPEG, 85, out);
            out.close();
        }
        return b;
    } catch (IOException e) {
        Log.e("junr", e.getMessage(),e);
        return null;
    }

}
</code></pre>
