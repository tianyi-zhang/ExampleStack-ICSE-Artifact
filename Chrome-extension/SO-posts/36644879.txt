<p>Code to show the dialog</p>

<pre><code>private void showAlertWithRadioButtons(){
AlertDialog.Builder builder = new AlertDialog.Builder(ShowDialog.this);//ERROR ShowDialog cannot be resolved to a type
        builder.setTitle("Alert Dialog with ListView and Radio button");
        builder.setSingleChoiceItems(items, -1,
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int item) {
                         // Toast.makeText(getApplicationContext(), items[item],
                                Toast.LENGTH_SHORT).show();
                    }
                });
    }
 builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
        public void onClick(DialogInterface dialog, int id) {

        ListView lw = ((AlertDialog)dialog).getListView();
        Object checkedItem = lw.getAdapter().getItem(lw.getCheckedItemPosition());
        itemsList.add(String.valueOf(checkedItem));
        adapter.notifyDataSetChanged();

        }
    });}
</code></pre>

<p>Set an adapter with you listview as: </p>

<pre><code>List&lt;String&gt; itemsList = Arrays.asList(items);
// create ArrayAdapter with this exact parameters, not unique because of your app
ArrayAdapter&lt;String&gt; adapter = new VersionAdapter(this, itemsList);
lv.setAdapter(adapter);
</code></pre>

<p>Here is your adapter after a little modification</p>

<pre><code>class VersionAdapter extends ArrayAdapter&lt;String&gt; {

private List&lt;String&gt; listItems;
private LayoutInflater layoutInflater;

public VersionAdapter(Activity activity, List&lt;String&gt; listItems) {
    super(activity, 0, listItems);
    layoutInflater = (LayoutInflater) activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    this.listItems = listItems;
}

@Override
public int getCount() {
    return listItems.size();
}

@Override
public int getItemViewType(int position) {
    return super.getItemViewType(position);
}

@Override
public View getView(int position, View convertView, ViewGroup parent)
{
    String item = listItems.get(position);
    final ViewHolder holder;
    if (convertView == null)
    {
        convertView = layoutInflater.inflate(R.layout.list_item, parent, false);
        holder = new ViewHolder();

        holder.itemElement = (TextView) convertView.findViewById(R.id.item_element);
        convertView.setTag(holder);

    }
    else
    {
        holder = (ViewHolder) convertView.getTag();
        ((ViewHolder) convertView.getTag()).itemElement.setTag(item);
    }

    if(!item.isEmpty()) {
        holder.itemElement.setText(item);

    }
    return convertView;
}

static class ViewHolder {
    TextView itemElement;
}
</code></pre>

<p>}</p>
