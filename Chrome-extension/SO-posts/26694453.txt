<p>Solved it, I was overthinking it. I Overrode getDropDownView() and implemented it exactly the same way I had implemented getView().</p>

<pre><code>    @Override
    public View getDropDownView(final int position, final View convertView, ViewGroup parent)
    {
        View rowView = convertView;
        if(rowView == null)
        {
            LayoutInflater inflater = (LayoutInflater) ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            rowView = inflater.inflate(R.layout.listitem_button, parent, false);
            ButtonListViewHolder viewHolder = new ButtonListViewHolder();
            viewHolder.textView = (TextView) rowView.findViewById(R.id.listitem_button_text1);
            viewHolder.button = (Button) rowView.findViewById(R.id.listitem_button_button1);
            rowView.setTag(viewHolder);
        }

        ButtonListViewHolder holder = (ButtonListViewHolder) rowView.getTag();

        holder.textView.setText(values[position]);
        //Here is where I set the onClickListener
        //I created a class onListButtonClickListener, and that is what
        //I call onClick(convertView, position) on in this method
        holder.button.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v)
            {
                if(l != null)
                    l.onClick(convertView, position); //l instance of OnListButtonClickListener
            }
        });

        return rowView;
    }
</code></pre>
