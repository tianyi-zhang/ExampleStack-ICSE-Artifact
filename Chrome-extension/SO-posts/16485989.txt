<p>This code can distinguish between click and movement (drag, scroll).  In onTouchEvent set a flag isOnClick, and initial X, Y coordinates on ACTION_DOWN. Clear the flag on ACTION_MOVE (minding that unintentional movement is often detected which can be solved with a THRESHOLD const).</p>

<pre><code>private float mDownX;
private float mDownY;
private final float SCROLL_THRESHOLD = 10;
private boolean isOnClick;

@Override
public boolean onTouchEvent(MotionEvent ev) {
    switch (ev.getAction() &amp; MotionEvent.ACTION_MASK) {
        case MotionEvent.ACTION_DOWN:
            mDownX = ev.getX();
            mDownY = ev.getY();
            isOnClick = true;
            break;
        case MotionEvent.ACTION_CANCEL:
        case MotionEvent.ACTION_UP:
            if (isOnClick) {
                Log.i(LOG_TAG, "onClick ");
                //TODO onClick code
            }
            break;
        case MotionEvent.ACTION_MOVE:
            if (isOnClick &amp;&amp; (Math.abs(mDownX - ev.getX()) &gt; SCROLL_THRESHOLD || Math.abs(mDownY - ev.getY()) &gt; SCROLL_THRESHOLD)) {
                Log.i(LOG_TAG, "movement detected");
                isOnClick = false;
            }
            break;
        default:
            break;
    }
    return true;
}
</code></pre>

<p>For LongPress as suggested above, GestureDetector is the way to go. Check this Q&amp;A:</p>

<p><a href="http://stackoverflow.com/questions/7919865/detecting-a-long-press-with-android/11679788#11679788">Detecting a long press with Android</a></p>
