<p>The listview is lagging because you are creating <em>new</em> Thumbnails in getView() <em>every time</em>. There is just no caching or re-use. As the use scrolls up/down , getView() is called and time consuming process of creating thumbnails happen, hence the lag. You will also run <code>Out of Memory</code> soon.
<p>Create and keep an Array of Bitmaps, with the same length as the number of elements in the datasource and store your thumbnails in the array. Take out the bitmap from the array for that particular position inside <code>getView()</code>. This should considerably increase the performance.<p>
EDIT
I have added a Hasmap of bitmaps to demonstrate the re-use.</p>

<pre><code> public MyAdapter(Activity context, String[] names) {
    super(context, R.layout.rowlayout, names);
    this.context = context;
    this.names = names;
    filePath = Environment.getExternalStorageDirectory() + dirNameSlash;
    formatter = new SimpleDateFormat(dateFormat);
cacheBitmap = new HashMap&lt;String, Bitmap&gt;(names.length);
initCacheBitmap();
}

private void initCacheBitmap() {
    for(String string:names)
        cacheBitmap.put(string, ThumbnailUtils.createVideoThumbnail(filePath+string, Thumbnails.MICRO_KIND));

}

@Override
public View getView(int position, View convertView, ViewGroup parent) {

    View rowView = convertView;
    if (rowView == null) {
        LayoutInflater inflater = context.getLayoutInflater();
        rowView = inflater.inflate(R.layout.rowlayout, null);
        ViewHolder viewHolder = new ViewHolder();
        viewHolder.text = (TextView) rowView.findViewById(R.id.label);
        viewHolder.image = (ImageView) rowView.findViewById(R.id.icon);
        rowView.setTag(viewHolder);
    }

    ViewHolder holder = (ViewHolder) rowView.getTag();
    // Video file name
    String s = names[position];

    holder.text.setText(s);


    holder.image.setImageBitmap(cacheBitmap.get(s));

    return rowView;
}}
</code></pre>
