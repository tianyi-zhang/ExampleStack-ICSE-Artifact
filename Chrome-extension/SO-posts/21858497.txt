<p>Good morning could you please post the logcat error please... actually android does not allow you to make a http request in the main thread of the app... there are some ways to achieve what you are looking for... first you can implement you thread as an asyncTask... or just for developing purposes you can remove the polycies you can add these lines to your code in the onCreate of your activity...</p>

<pre><code>StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
    StrictMode.setThreadPolicy(policy);
</code></pre>

<p>but this is not recomended... </p>

<p>EDIT:</p>

<p>ok I see your error there is no database or nothing to handle the data you are sending... could you please post the code you have on the server side... and also check the url you are sending data... it seems not to be valid... I will post one example to show you how to get this to work..!!</p>

<pre><code>ArrayList&lt;NameValuePair&gt; nameValuePairs = new ArrayList&lt;NameValuePair&gt;(3);
        nameValuePairs.add(new BasicNameValuePair("data1", "data"));
        nameValuePairs.add(new BasicNameValuePair("data2", "dataa"));
        nameValuePairs.add(new BasicNameValuePair("data3", "dataaa"));
        try {
            res = CustomHttpClient.sendData("URL", nameValuePairs);
            String resp = res.toString();
            Log.e(Tag, res);
            resp = resp.replaceAll("\\s+","");
</code></pre>

<p>as you can see I am making an instance of custom http client wich the one in charge to make the call to the server... and is also in charge of handle the answer from the server...</p>

<p>public class CustomHttpClient{</p>

<pre><code>public static final int HTTP_TIMEOT = 30 * 1000;
private static HttpClient mHttpClient;

private static HttpClient getHttpClient() {
    if (mHttpClient == null) ;
    {
        mHttpClient = new DefaultHttpClient();
        final HttpParams param = mHttpClient.getParams();
        HttpConnectionParams.setConnectionTimeout(param, HTTP_TIMEOT);
        HttpConnectionParams.setSoTimeout(param, HTTP_TIMEOT);
        ConnManagerParams.setTimeout(param, HTTP_TIMEOT);
    }
    return mHttpClient;
}

public static String sendData(String url, ArrayList nameValuePairs) throws Exception {
    BufferedReader reader = null;
    try {
        HttpClient httpclient = getHttpClient();
        HttpPost httppost = new HttpPost(url);
        UrlEncodedFormEntity formEntity = new UrlEncodedFormEntity(nameValuePairs);
        httppost.setEntity(formEntity);

        HttpResponse response = httpclient.execute(httppost);
        reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
        StringBuffer sBuffer = new StringBuffer("");
        String line = "";
        String NL = System.getProperty("line.separator");
        while ((line = reader.readLine()) != null) {
            sBuffer.append(line + NL);
        }
        reader.close();
        String result = sBuffer.toString();
        return result;
    } finally {
        if (reader != null) {
            try {
                reader.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
</code></pre>

<p>}</p>
