<pre><code>//somewhere in your code, init part
Calendar then = setDate(9, 0, 2015);//9 january 2015
Calendar c = Calendar.getInstance();
Calendar now = setDate(c.get(Calendar.DAY_OF_MONTH), c.get(Calendar.MONTH), c.get(Calendar.YEAR));
String leftDays = getLeftDays(then, now);//your result

//method setting days months years - we ignore hours and minutes
private String getLeftDays(Calendar then, Calendar now) {
    long leftMilis = then.getTimeInMillis() - now.getTimeInMillis();
    int seconds = (int) (leftMilis / 1000);
    Log.d(TAG, "seconds:" + seconds);
    int minutes = seconds / 60;
    Log.d(TAG, "minutes:" + minutes);
    int hours = minutes / 60;
    Log.d(TAG, "hours:" + hours);
    int days = hours / 24;
    Log.d(TAG, "days:" + days);
    int weeks = days / 7;
    Log.d(TAG, "weeks:" + weeks);

    //months.. another way calculating data due not equal amount of days per month
    Calendar temp = ((Calendar) then.clone());
    temp.add(Calendar.MONTH, -now.get(Calendar.MONTH));
    int months = temp.get(Calendar.MONTH);
    Log.d(TAG, "months:" + months);

    StringBuilder sb = new StringBuilder();
    String format = "%d months, %d days, %d weeks";
    String formatStr = String.format(format, months, days, weeks);

    String result = sb.append(formatStr).toString();
    Log.d(TAG, sb.toString());
    return result;
}

private Calendar setDate(int day, int month, int year) {
    Calendar c = Calendar.getInstance();
    c.set(Calendar.DAY_OF_MONTH, day);
    c.set(Calendar.MONTH, month);
    c.set(Calendar.YEAR, year);
    c.set(Calendar.HOUR, 0);
    c.set(Calendar.MINUTE, 0);
    c.set(Calendar.SECOND, 0);
    Log.d(TAG, c.getTime().toString());
    return c;
}
</code></pre>
