<p>What you can do is create an array of Body and initialize hitbody[] with the pointer of your touch. you can change the above code to following code.</p>

<p>In the following function the varable pointer is the pointer if your current touch</p>

<pre><code>public class MyMouseJoint{

OrthographicCamera cam; 
World world;

Body groundBody ;   
public MouseJoint mouseJoint[] = new MouseJoint[2];    
Body hitBody[] = new Body[2];    
Vector2 target = new Vector2(); 
Vector3 testPoint = new Vector3();

Body tempBody;

QueryCallback callback = new QueryCallback() {
    @Override
    public boolean reportFixture (Fixture fixture) {
        // if the hit fixture's body is the ground body we ignore it            
        if (fixture.getBody() == groundBody) return true;

        // if the hit point is inside the fixture of the body
        // we report it
        if (fixture.testPoint(testPoint.x, testPoint.y)) {
            tempBody = fixture.getBody();
            return false;
        } else
            return true;
    }
};
public MyMouseJoint(OrthographicCamera cam, World world, Body groundBody){
    this.cam=cam;
    this.world=world;
    this.groundBody = groundBody;  
}

    //USE THIS FUNCTION IN touchDown
public void createMouseJoint(float x, float y,int pointer){
    // translate the mouse coordinates to world coordinates
            testPoint.set(x, y, 0);
            cam.unproject(testPoint);

            // ask the world which bodies are within the given
            // bounding box around the mouse pointer
            hitBody[pointer] = null;

            world.QueryAABB(callback, testPoint.x - 0.1f, testPoint.y - 0.1f, testPoint.x + 0.1f, testPoint.y + 0.1f);
            hitBody[pointer] = tempBody;

            if (hitBody[pointer] != null) {
                MouseJointDef def = new MouseJointDef();
                def.bodyA = groundBody;
                def.bodyB = hitBody[pointer];
                def.collideConnected = true;
                def.target.set(testPoint.x, testPoint.y);
                def.maxForce = 10000.0f * hitBody[pointer].getMass();
                def.frequencyHz=100;
                def.dampingRatio=0;

                mouseJoint[pointer] = (MouseJoint)world.createJoint(def);
                hitBody[pointer].setAwake(true);
            }

}

    //USE THIS FUNCTION IN touchDragged
public void dragMouseJoint(float x, float y,int pointer){
    if (mouseJoint[pointer] != null) {
        cam.unproject(testPoint.set(x, y, 0));
        mouseJoint[pointer].setTarget(target.set(testPoint.x, testPoint.y));
    }
}

    //USE THIS FUNCTION IN touchUp
public void releaseMouseJoint(int pointer){
    if (mouseJoint[pointer] != null) {
        world.destroyJoint(mouseJoint[pointer]);
        mouseJoint[pointer] = null;
    }
}
}
</code></pre>
