<p>You can use this method in a loop with your array. Do not worry about the external directory. The devices which haven't got sd card slot, have a separate place from the internal memory to act like an "external memory".</p>

<pre><code>public Bitmap downloadImage(String url)
{
    final DefaultHttpClient client = new DefaultHttpClient();
    final HttpGet getRequest = new HttpGet(url);

    try
    {
        HttpResponse response = client.execute(getRequest);
        final int statusCode = response.getStatusLine().getStatusCode();
        if (statusCode != HttpStatus.SC_OK)
        {
            return null;
        }

        final HttpEntity entity = response.getEntity();
        if (entity != null)
        {
            InputStream inputStream = null;
            try
            {
                inputStream = entity.getContent();
                final Bitmap bitmap = BitmapFactory.decodeStream(inputStream);
                saveImageToExternalMemory(bitmap, url); //edit the name if need
                return bitmap;
            }
            finally
            {
                if (inputStream != null)
                {
                    inputStream.close();
                }
                entity.consumeContent();
            }
        }
    }
    catch(IOException e)
    {
        getRequest.abort();
    }
    catch (Exception e)
    {
        getRequest.abort();
    }
    finally
    {
        if (client != null)
        {
            client.getConnectionManager().shutdown();
        }
    }
    return null;
}
</code></pre>

<p>This will save the image with the name of the url, you can edit to your needs. And to save the image for external memory (it doesn't matter if the device has an sd card or not). For example, I have a Nexus 7 and it works.</p>

<pre><code>public void saveImageToExternalMemory(Bitmap bitmap, String name) throws IOException
{
    File dir = new File(Environment.getExternalStorageDirectory().toString()+"/yourdirectoryname");
    if (!dir.exists()) 
        dir.mkdirs();
    File file = new File(dir, name+ ".jpg"); //or the type you need
    file.createNewFile();
    OutputStream outStream = new FileOutputStream(file);
    bitmap.compress(Bitmap.CompressFormat.JPEG, 100, outStream);
    outStream.flush();
    outStream.close();
}
</code></pre>

<p>This method requires</p>

<pre><code>&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt;
&lt;uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/&gt;
</code></pre>

<p>in the manifest, and downloading requires:</p>

<pre><code>&lt;uses-permission android:name="android.permission.INTERNET"/&gt;
</code></pre>
