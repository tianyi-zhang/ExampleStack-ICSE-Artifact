<p>Carl's class is self-contained and works fine.</p>

<p>I would make initial delay and repeat interval configurable.
To do so,</p>

<p>attrs.xml</p>

<pre><code>&lt;resources&gt;
&lt;declare-styleable name="AutoRepeatButton"&gt;
    &lt;attr name="initial_delay"  format="integer" /&gt;
    &lt;attr name="repeat_interval"  format="integer" /&gt;
&lt;/declare-styleable&gt;
&lt;/resources&gt;
</code></pre>

<p>AutoRepeatButton.java</p>

<pre><code>    public AutoRepeatButton(Context context, AttributeSet attrs) {
    super(context, attrs);

    TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.AutoRepeatButton);
    int n = a.getIndexCount();
    for (int i = 0; i &lt; n; i++) {
        int attr = a.getIndex(i);

        switch (attr) {
        case R.styleable.AutoRepeatButton_initial_delay:
            initialRepeatDelay = a.getInt(attr, DEFAULT_INITIAL_DELAY);
            break;
        case R.styleable.AutoRepeatButton_repeat_interval:
            repeatIntervalInMilliseconds = a.getInt(attr, DEFAULT_REPEAT_INTERVAL);
            break;
        }
    }
    a.recycle();
    commonConstructorCode();
}
</code></pre>

<p>then you can use the class like this</p>

<pre><code>        &lt;com.thepath.AutoRepeatButton
            xmlns:repeat="http://schemas.android.com/apk/res/com.thepath"
            android:id="@+id/btn_delete"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:background="@drawable/selector_btn_delete"
            android:onClick="onBtnClick"
            android:layout_weight="1"
            android:layout_margin="2dp"

            repeat:initial_delay="1500"
            repeat:repeat_interval="150"
            /&gt;
</code></pre>
