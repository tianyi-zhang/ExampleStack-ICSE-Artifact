<p>Here is a utility class I implemented for this purpose a while ago. It uses array of <code>int</code> instead of list of <code>String</code> but it should give you the idea:</p>

<pre><code>public final class Math {

    private Math() {
    }

    public static int[][] ncks(int n, int k) {
        int[] ks = new int[k];
        for (int i = 0; i &lt; ks.length; i++) {
            ks[i] = i + 1;
        }

        int[][] ncks = new int[nck(n, k)][];

        boolean done = false;
        for (int j = 0; !done; j++) {
            ncks[j] = Arrays.copyOf(ks, ks.length);
            done = getNext(ks, n, k);
        }
        return ncks;
    }

    private static int nck(int n, int k) {
        int d = 1;
        int r = 1;

        int m = java.lang.Math.max(k, n - k) + 1;
        for (; m &lt;= n; m++, d++) {
            r *= m;
            r /= d;
        }
        return r;
    }

    private static boolean getNext(int[] num, int n, int k) {
        int target = k - 1;

        num[target]++;
        if (num[target] &gt; ((n - (k - target)) + 1)) {
            while (num[target] &gt; ((n - (k - target)))) {
                target--;
                if (target &lt; 0) {
                    break;
                }
            }

            if (target &lt; 0) {
                return true;
            }

            num[target]++;
            for (int i = target + 1; i &lt; num.length; i++) {
                num[i] = num[i - 1] + 1;
            }
        }
        return false;
    }

}
</code></pre>
