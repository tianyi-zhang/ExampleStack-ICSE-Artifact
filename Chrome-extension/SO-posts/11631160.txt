<p>For your list view you are using SimpleAdapter provided by android but this works only when you have to display a list of names. If you want your list to be customized according to your need like adding buttons or images etc on each of the row then you will have to make your own adapter.
<br>Here are the steps to do this:<br></p>

<ol>
<li>Write your custom adapter by extending BaseAdapter or ArrayAdapter</li>
<li>Override its methods.</li>
</ol>

<blockquote>
  <p>Note: If you add any clickable item to the list view row then the item will be clickable but list will not be clickable. And hence the list onItemClickListener will not work. Now in this case for getting the position of the item clicked you have to do some workaround. I use setTag() on the row items and getTag() method to get the tag which will be the it's position in the group.</p>
</blockquote>

<p>Here is a sample code for this:<br>
<b> XML for the row item </b><br></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="horizontal"
    android:padding="10dp" &gt;
    &lt;TextView 
        android:id="@+id/nameTxt"
        android:layout_width="0dp"
        android:layout_height="50dp"
        android:layout_weight="3"
        /&gt;
    &lt;Button 
        android:id="@+id/addBtn"
        android:layout_width="0dp"
        android:layout_height="50dp"
        android:layout_weight="1"
        android:text="Add"
            android:onClick="addFriend"
        /&gt;  
&lt;/LinearLayout&gt;
</code></pre>

<p><br><b> Code for custom Adapter </b><br></p>

<pre><code>public class MyListAdapter extends BaseAdapter
{
    String names[];
    LayoutInflater mInflater;

    public MyListAdapter(String _names[],Context context) {
        names = _names;
        mInfalter = LayoutInflater.from(context);
    }

    @Override
    public int getCount ( )
    {
        return names.length;
    }

    @Override
    public Object getItem (int position)
    {
        return names[position];
    }

    @Override
    public long getItemId (int position)
    {
        return position;
    }

    @Override
    public View getView (int position, View convertView, ViewGroup parent)
    {
        ViewHolder holder;
        if(convertView == null) {
            holder = new ViewHolder();
            convertView = mInfalter.inflate(R.layout.list_item, null);
            holder.name = (ImageView)convertView.findViewById(R.id.name);
            holder.addBrn = (TextView)convertView.findViewById(R.id.addBtn);
            convertView.setTag(holder);
        }else{
            holder = (ViewHolder)convertView.getTag();
        }

        holder.templeName.setText(names[position]);
        holder.addBtn.setTag(Integer.toString(position));

        return convertView;
    }

    static class ViewHolder {
        TextView name;
        Button addBtn;
    }

}
</code></pre>

<p><br> Here is the method called when the add button is clicked <br></p>

<pre><code>public void addFriend(View v) {
    int position = Integer.parseInt(v.getTag().toString());
    //now you have the position of the button that you can use for your purpose
}
</code></pre>

<p><br> Here is the code for setting the adapter <br></p>

<pre><code>//String array of names
 String[] names;

 MyListAdapter mAdapter = new MyListAdapter(names,yourActivity.this);
 list.setAdapter(mAdapter);
</code></pre>

<blockquote>
  <p>I hope this will help :)</p>
</blockquote>
