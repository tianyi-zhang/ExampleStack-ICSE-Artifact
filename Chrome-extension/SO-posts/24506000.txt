<p>Found the solution. </p>

<p>I used this stuff for a ListView where I tried to grap the wanted View via</p>

<pre><code>    View v = dataAdapter.getView(0,null,null);
    ImageView iv =(ImageView) v.findViewById(R.id.Image);
    iv.setImageBitmap(DataHelper.getPreview(allDirects.get(0)));
</code></pre>

<p>But it doesnt work like this :D</p>

<p>So i build my own BaseAdapter. For all of those who wonder how I did it here is the full Class:</p>

<pre><code>package de.bachelorarbeit.main;

import java.io.File;
import java.util.List;
import de.bachelorarbeit.R;
import de.bachelorarbeit.helper.DataHelper;
import android.app.Activity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

public class CustomList extends BaseAdapter {
    private final Activity context;
    private final List&lt;File&gt; allDirects;

    public CustomList(Activity context,List&lt;File&gt; allDirects) {
        this.context = context;
        this.allDirects=allDirects;
}

@Override
public View getView(int position, View view, ViewGroup parent) {
    LayoutInflater inflater = context.getLayoutInflater();
    View rowView = inflater.inflate(R.layout.item, null, true);
    TextView txtTitle = (TextView) rowView.findViewById(R.id.Title);
    TextView subTitle = (TextView) rowView.findViewById(R.id.SubTitle);
    ImageView imageView = (ImageView) rowView.findViewById(R.id.Image);


    String[] both = DataHelper.readTitleAndSubtitle(allDirects.get(position));      
    txtTitle.setText(both[0]);
    subTitle.setText(both[1]);
    imageView.setImageBitmap(DataHelper.getPreview(allDirects.get(position)));
    return rowView;
}

@Override
public int getCount() {
    return allDirects.size();
}

@Override
public Object getItem(int position) {
    return position;
}

@Override
public long getItemId(int position) {
    return position;
}
}
</code></pre>

<p>Thanks for every help I got,
Lightbringa</p>
