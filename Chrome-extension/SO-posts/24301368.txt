<p>You are not setting <code>mObjects</code> values in <code>adapter</code><br/> So your adapter class will look like this</p>

<pre><code>  public class DSongListAdapter extends ArrayAdapter&lt;Song&gt; {

        Context mContext;
        List&lt;Song&gt; mObjects;

        public DSongListAdapter(Context context, List&lt;Song&gt; songList ) {
            super(context, R.layout.list_item, songList );
            this.mContext = context;
            this.mObjects = songList;
        }


        @Override
        public View getView(int position, View convertView, ViewGroup parent) {

            ViewHolder holder;
            if( convertView == null ){
                holder = new ViewHolder();
                convertView = LayoutInflater.from(mContext).inflate(R.layout.list_item, parent, false);
                holder.titleLabel = (TextView) convertView.findViewById(R.id.titleLabel);
                convertView.setTag(holder);
            }else{
                holder = (ViewHolder) convertView.getTag();
            }
            holder.titleLabel.setText(mObjects.get(position).getTitle());
            return convertView;
        }

        class ViewHolder {
            TextView titleLabel;
        }



    }
</code></pre>

<p>And also pass some <code>songList</code>  value to adapter from  <code>onCreateView</code> method.i.e.<br/></p>

<pre><code>public View onCreateView( LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState ){
    rootView = inflater.inflate(R.layout.fragment_song, container, false);
    listView = (ListView) rootView.findViewById( R.id.playlist_listview );

    songList = new ArrayList&lt;Song&gt;();
   // Add songList values here
    adapter = new DSongListAdapter(getActivity(), songList);
    listView.setAdapter(adapter); //Crashes now!

    return rootView;
}
</code></pre>
