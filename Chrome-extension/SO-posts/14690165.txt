<p>I have figured out how to get this done. It is a round about way but here it is:
Set up a sensor manager and an oreitnation senosr</p>

<pre><code>public class ActivityRecordVideo extends ActivityBase implements SensorEventListener
{

private SensorManager mSensorManager;
private Sensor mOrientation;

@Override
public void onCreate(Bundle savedInstanceState)
{
    mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
    mOrientation = mSensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION);
}

public void onAccuracyChanged(Sensor arg0, int arg1) {
    // TODO Auto-generated method stub

}

public void onSensorChanged(SensorEvent event) {
    int rotation = getWindowManager().getDefaultDisplay().getRotation();

    if(camId != -1 &amp;&amp; currentDisplayRotation != rotation)
    {
        if(!isRecording)
            setCameraOrientation(camId, cameraRecorder);
    }

}
</code></pre>

<p>I also set the listeners in onResume() and remove them in onPause().</p>

<p>This allows for a camera orientation to flip with everything else (e.g. when in reverse landscape all views are in reverse landscape along with the camera preview)</p>

<p>Also decided to show setCameraOrientation code, it is a stipped down version of the android developers code</p>

<pre><code>private void setCameraOrientation(int camId, Camera camera)
{
    CameraInfo info = new CameraInfo();
    Camera.getCameraInfo(camId, info);

    currentDisplayRotation = getWindowManager().getDefaultDisplay().getRotation();
    int degrees = 0;
    switch(currentDisplayRotation)
    {
    case Surface.ROTATION_0: degrees = 0; break;
    case Surface.ROTATION_90: degrees = 90; break;
    case Surface.ROTATION_180: degrees = 180; break;
    case Surface.ROTATION_270: degrees = 270; break;
    }

    int result;
    result = (info.orientation + degrees) % 360;
    result = (360 - result) % 360;  //compensate for mirror effect

    if(Build.VERSION.SDK_INT &lt; 14)
        camera.stopPreview();
    camera.setDisplayOrientation(result);
    if(Build.VERSION.SDK_INT &lt; 14)
        camera.startPreview();
}
</code></pre>

<p>Hopefully this will help others</p>
