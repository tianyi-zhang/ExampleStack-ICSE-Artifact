<p>You exception is related to the fact that the <code>HttpServletRequest</code> is <code>null</code>.</p>

<p>Jersey documentation says:</p>

<blockquote>
  <p>3.6. Use of @Context</p>
  
  <p>Previous sections have introduced the use of @Context. Chapter 5 of
  the JAX-RS specification presents all the standard JAX-RS Java types
  that may be used with @Context.</p>
  
  <p>When deploying a JAX-RS <strong>application using servlet</strong> then ServletConfig,
  ServletContext, HttpServletRequest and HttpServletResponse are
  available using @Context.</p>
</blockquote>

<p>I'm guessing that you use <code>jersey-test-framework-provider-grizzly2</code> which doesn't support it.</p>

<p>If you want to have access to <code>HttpServletResponse</code> remove that dependency and add:</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.test-framework&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-test-framework-core&lt;/artifactId&gt;
    &lt;version&gt;2.1&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
    &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;
    &lt;version&gt;3.0.1&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-grizzly2-servlet&lt;/artifactId&gt;
    &lt;version&gt;2.1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>Now you actually want to tell JerseyTest to start the right test server, to do that you have to override a method <code>protected TestContainerFactory getTestContainerFactory()</code>. <strong>Please be sure to replace <code>&lt;your-java-package&gt;</code> with the actual name of your package</strong>. </p>

<pre><code>@Override
protected TestContainerFactory getTestContainerFactory() throws TestContainerException {
    return new TestContainerFactory() {
        @Override
        public TestContainer create(final URI baseUri, final ApplicationHandler application) throws IllegalArgumentException {
            return new TestContainer() {
                private HttpServer server;

                @Override
                public ClientConfig getClientConfig() {
                    return null;
                }

                @Override
                public URI getBaseUri() {
                    return baseUri;
                }

                @Override
                public void start() {
                    try {
                        this.server = GrizzlyWebContainerFactory.create(
                                baseUri, Collections.singletonMap("jersey.config.server.provider.packages", "&lt;your-java-package&gt;")
                        );
                    } catch (ProcessingException e) {
                        throw new TestContainerException(e);
                    } catch (IOException e) {
                        throw new TestContainerException(e);
                    }
                }

                @Override
                public void stop() {
                    this.server.stop();
                }
            };

        }
    };
}
</code></pre>

<p>You can also check <code>org.glassfish.jersey.test.grizzly.GrizzlyTestContainerFactory</code> for better implementation of the factory.</p>
