<p>I had the idea of simply copy the source code from <code>android.support.v4.app.FragmentPagerAdpater</code> into a custom class named 
<code>CustumFragmentPagerAdapter</code>. This gave me the chance to modify the <code>instantiateItem(...)</code> so that every time it is called, it removes / destroys the currently attached fragment before it adds the new fragment received from <code>getItem()</code> method.</p>

<p>Simply modify the <code>instantiateItem(...)</code> in the following way:</p>

<pre><code>@Override
public Object instantiateItem(ViewGroup container, int position) {
    if (mCurTransaction == null) {
        mCurTransaction = mFragmentManager.beginTransaction();
    }
    final long itemId = getItemId(position);

    // Do we already have this fragment?
    String name = makeFragmentName(container.getId(), itemId);
    Fragment fragment = mFragmentManager.findFragmentByTag(name);

    // remove / destroy current fragment
    if (fragment != null) {
        mCurTransaction.remove(fragment);
    }

    // get new fragment and add it
    fragment = getItem(position);
    mCurTransaction.add(container.getId(), fragment,    makeFragmentName(container.getId(), itemId));

    if (fragment != mCurrentPrimaryItem) {
        fragment.setMenuVisibility(false);
        fragment.setUserVisibleHint(false);
    }

    return fragment;
}
</code></pre>
