<p>I believe this is what you're after. You can remove the <code>System.out.println</code> statements if you like. Note that if you leave them in, that the first row and columns are omitted from what is printed.  </p>

<p>Verified against the <a href="http://en.wikipedia.org/wiki/Levenshtein%5Fdistance" rel="nofollow">results on the wikipedia page</a>.</p>

<pre><code>public int getLevenshteinDistance(String a, String b)
{
    // d is a table with m+1 rows and n+1 columns
    char[] s = (a).toCharArray();
    char[] t = (b).toCharArray();
    System.out.println(a + " - " + b);
    int m = s.length;
    int n = t.length;
    int[][] d = new int[m + 1][n + 1];

    int i;
    int j;
    for(i = 0; i &lt; (m + 1); i++)
    {
        d[i][0] = i; //deletion
    }

    for(j = 0; j &lt; (n + 1); j++)
    {
        d[0][j] = j; //insertion
    }

    for (j = 1; j &lt; (n + 1); j++)
    {
        for (i = 1; i &lt; (m + 1); i++)
        {
            if (s[i-1] == t[j-1])
            {
                d[i][j] = d[i-1][j-1];
            }
            else
            {
                d[i][j] = Math.min((d[i-1][j] + 1), //deletion
                        (Math.min((d[i][j-1] + 1), //insertion
                        (d[i-1][j-1] + 1)))); //substitution
            }
            System.out.print(" [" + d[i][j] + "]");
        }
        System.out.println("");
    }

    return d[m][n];
}
</code></pre>

<p>To test:</p>

<pre><code>    String a = "Saturday";
    String b = "Sunday";
    int d = getLevenshteinDistance(a, b);
    System.out.println(d);
    a = "kitten";
    b = "sitting";
    d = getLevenshteinDistance(a, b);
    System.out.println(d);
</code></pre>
