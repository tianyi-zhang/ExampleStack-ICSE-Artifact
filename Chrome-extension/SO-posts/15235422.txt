<p>You can create your own adapter (extends BaseAdapter implements SpinnerAdapter). That way, you can access the TextViews that are displayed in the spinner. (getView and createViewFromResource methods - example: <a href="https://github.com/android/platform_frameworks_base/blob/master/core/java/android/widget/ArrayAdapter.java" rel="nofollow">ArrayAdapter</a>) When you add an empty list item to allow the user to keep the field empty until it becomes mandatory (first item in the spinner), you can store it's TextView as a private member in the adapter. Then, when it comes time to call setError("...") from the Activity or Fragment, you can call it on the adapter who can pass it to the empty TextView. </p>

<pre><code>@Override
public View getView(int position, View convertView, ViewGroup parent) {
    return createViewFromResource(position, convertView, parent, mTextViewId);
}

private View createViewFromResource(int position, View convertView, ViewGroup parent, int resource) {
    View view;
    TextView text;

    if (convertView == null) {
        view = inflater.inflate(resource, parent, false);
    } else {
        view = convertView;
    }

    try {
        text = (TextView) view;
    } catch (ClassCastException e) {
        Log.e(TAG, "You must supply a resource ID for a TextView", e);
        throw new IllegalStateException("MyAdapter requires the resource ID to be a TextView", e);
    }

    MyItem i = getItem(position);
    String s = (null != i) ? i.toString() : "";
    text.setText(s);

    if ("".equals(s) &amp;&amp; null == mEmptyText) {
        this.mEmptyText = text;
    }

    return view;
}

public void setError(String errorMessage) {
    if (null != mEmptyText) {
        mEmptyText.setError(errorMessage);
    } else {
        Log.d(TAG, "mEmptyText is null");
    }
}
</code></pre>
