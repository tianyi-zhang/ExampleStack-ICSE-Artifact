<p><a href="https://svn.apache.org/repos/asf/cxf/branches/2.7.x-fixes/api/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java">These unit tests</a> show you how to use CXF to extract attachments out of an MTOM message.  I'll inline one of the tests in case this link doesn't exist in the future:</p>

<pre><code>private MessageImpl msg;

@Before
public void setUp() throws Exception {
    msg = new MessageImpl();
    Exchange exchange = new ExchangeImpl();
    msg.setExchange(exchange);
}

@Test
public void testDeserializerMtom() throws Exception {
    InputStream is = getClass().getResourceAsStream("mimedata");
    String ct = "multipart/related; type=\"application/xop+xml\"; "
                + "start=\"&lt;soap.xml@xfire.codehaus.org&gt;\"; "
                + "start-info=\"text/xml; charset=utf-8\"; "
                + "boundary=\"----=_Part_4_701508.1145579811786\"";

    msg.put(Message.CONTENT_TYPE, ct);
    msg.setContent(InputStream.class, is);

    AttachmentDeserializer deserializer = new AttachmentDeserializer(msg);
    deserializer.initializeAttachments();

    InputStream attBody = msg.getContent(InputStream.class);
    assertTrue(attBody != is);
    assertTrue(attBody instanceof DelegatingInputStream);

    Collection&lt;Attachment&gt; atts = msg.getAttachments();
    assertNotNull(atts);

    Iterator&lt;Attachment&gt; itr = atts.iterator();
    assertTrue(itr.hasNext());

    Attachment a = itr.next();
    assertNotNull(a);

    InputStream attIs = a.getDataHandler().getInputStream();

    // check the cached output stream
    ByteArrayOutputStream out = new ByteArrayOutputStream();
    IOUtils.copy(attBody, out);
    assertTrue(out.toString().startsWith("&lt;env:Envelope"));

    // try streaming a character off the wire
    assertTrue(attIs.read() == '/');
    assertTrue(attIs.read() == '9');
}
</code></pre>

<p>In your case, the <code>ct</code> will come from the content type header of the response.  The <code>"mimedata"</code> will be the content of the response.</p>
