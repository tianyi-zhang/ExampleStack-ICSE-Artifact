<p>I found a solution to my message splitting problem in <a href="https://github.com/akexorcist/Android-BluetoothSPPLibrary/blob/master/library/BluetoothSPP/src/app/akexorcist/bluetoothspp/BluetoothService.java" rel="nofollow">this BluetoothSPP project by user akexorcist on Github</a>. The relevant function from class <code>ConnectedThread</code> is presented below:</p>

<pre><code>     public void run() {
   byte[] buffer;
   ArrayList&lt;Integer&gt; arr_byte = new ArrayList&lt;Integer&gt;();

   // Keep listening to the InputStream while connected
   while (true) {
      try {
            int data = mmInStream.read();
            if(data == 0x0A) { 
            } else if(data == 0x0D) {
                buffer = new byte[arr_byte.size()];
                for(int i = 0 ; i &lt; arr_byte.size() ; i++) {
                    buffer[i] = arr_byte.get(i).byteValue();
                }
               // Send the obtained bytes to the UI Activity
               mHandler.obtainMessage(BluetoothState.MESSAGE_READ
                        , buffer.length, -1, buffer).sendToTarget();
               arr_byte = new ArrayList&lt;Integer&gt;();
            } else {
               arr_byte.add(data);
            }
       } catch (IOException e) {
           connectionLost();
           // Start the service over to restart listening mode
           BluetoothService.this.start(BluetoothService.this.isAndroid);
           break;
       }
   }
}
</code></pre>

<p>Apparently, though please correct me if I'm wrong, <code>.read()</code> cannot grab and maintain the format of whatever bytes appear on the stream without some assistance. </p>
