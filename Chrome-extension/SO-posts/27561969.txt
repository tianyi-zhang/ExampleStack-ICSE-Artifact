<p>I have faced this problem. Actually We have to manage it.</p>

<p>I have used below method</p>

<p><em>Add checked child index to a list</em></p>

<p>in getchildView, if checked, check the checkedtextview.</p>

<pre><code>((CheckedTextView) convertView).setChecked(getClicked(
                        groupPosition, childPosition));
</code></pre>

<p>Below function will return a boolean whether given child is checked or not</p>

<pre><code>public boolean getClicked(int groupPosition, int childPosition) {
    if (checkedPositions.get(groupPosition) != null) {
        boolean isChecked = checkedPositions.get(groupPosition).get(
                childPosition);
        return isChecked;
    }
    return false;
}
</code></pre>

<p>You can use functions like this to index checked items</p>

<pre><code>public void setClicked(int groupPosition, int childPosition) {

SparseBooleanArray checkedChildPositionsSingle = checkedPositions
        .get(groupPosition);
if (checkedChildPositionsSingle == null) {
    checkedChildPositionsSingle = new SparseBooleanArray();
    checkedChildPositionsSingle.put(childPosition, true);
    checkedPositions.put(groupPosition, checkedChildPositionsSingle);
} else {
    boolean oldState = checkedChildPositionsSingle.get(childPosition);
    if (!oldState) {
        checkedChildPositionsSingle.clear();
        checkedChildPositionsSingle.put(childPosition, !oldState);
    }
}
notifyDataSetChanged();
</code></pre>

<p>}</p>

<p>Added :</p>

<pre><code> @Override
 //in this method you must set the text to see the children on the list
 public View getChildView(int listPosition, int expandedListPosition, boolean isLastChild, View
 convertView, ViewGroup parent) {
     final String expandedListText = (String) getChild(listPosition, expandedListPosition);
     if (convertView == null) {
         LayoutInflater layoutInflater = (LayoutInflater) this.context
                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         convertView = layoutInflater.inflate(R.layout.list_item, null);
     }

    CheckedTextView textView = (CheckedTextView)
   convertView.findViewById(R.id.list_item_text_child);       
    textView.setText(expandedListText);  
((CheckedTextView) convertView).setChecked(getClicked(
                            groupPosition, childPosition)); //Added
    return convertView;

}
</code></pre>

<p>Create a onChildClickListener in class you are creating the adapter</p>

<pre><code>expandableListView.setOnChildClickListener(new OnChildClickListener() {
                        @Override
                        public boolean onChildClick(ExpandableListView parent,
                                View clickedView, int groupPosition,
                                int childPosition, long id) {
                    expandableListAdapter.setClicked(groupPosition,childPosition);
            }
        }
</code></pre>

<p>Note : checkedPositions is an array of SparseBooleanArray</p>

<pre><code>SparseArray&lt;SparseBooleanArray&gt; checkedPositions;
</code></pre>
