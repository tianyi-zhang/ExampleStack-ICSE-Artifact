<p>You will need to decode the file data. In order to save memory, scale down the bitmap to something appropriate for your display (maxSize)</p>

<pre><code>public static Bitmap decodeFile(File f, final int maxSize) {

    Bitmap b = null;
    // Decode image size
    BitmapFactory.Options o = new BitmapFactory.Options();
    o.inJustDecodeBounds = true;

    FileInputStream fis = null;
    try {
        fis = new FileInputStream(f);
        BitmapFactory.decodeStream(fis, null, o);
        fis.close();

        int scale = 1;
        if (o.outHeight &gt; maxSize || o.outWidth &gt; maxSize) {
            scale = (int) Math.pow(2, (int) Math.round(Math.log(maxSize / (double) Math.max(o.outHeight, o.outWidth)) / Math.log(0.5)));
        }

        // Decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options();
        o2.inSampleSize = scale;

        fis = new FileInputStream(f);
        b = BitmapFactory.decodeStream(fis, null, o2);

    } catch (Exception e) {
        Log.e(ImageUtils.TAG, "Error processing bitmap", e);
    } finally {
        FileUtil.closeQuietly(fis);
    }


    return b;
}
</code></pre>

<p>The bitmap can then be used in an ImageView</p>

<p>e.g</p>

<pre><code>mImageView.setImageBitmap(bitmap);
</code></pre>
