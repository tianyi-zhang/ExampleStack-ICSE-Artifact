<p>I'm assuming you talking about line segment not line. First you should find your points distance from your line segment, and you can do it, as the way suggested in <a href="http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment">this similar question</a>, after that find minimum/maximum distance over all inputs.</p>

<p><strong>Edit:</strong> Also from <a href="http://community.topcoder.com/tc?module=Static&amp;d1=tutorials&amp;d2=geometry1" rel="nofollow">this top coder article</a> you can find distance simply:</p>

<pre><code>//Compute the dot product AB ? BC
int dot(int[] A, int[] B, int[] C){
    AB = new int[2];
    BC = new int[2];
    AB[0] = B[0]-A[0];
    AB[1] = B[1]-A[1];
    BC[0] = C[0]-B[0];
    BC[1] = C[1]-B[1];
    int dot = AB[0] * BC[0] + AB[1] * BC[1];
    return dot;
}
//Compute the cross product AB x AC
int cross(int[] A, int[] B, int[] C){
    AB = new int[2];
    AC = new int[2];
    AB[0] = B[0]-A[0];
    AB[1] = B[1]-A[1];
    AC[0] = C[0]-A[0];
    AC[1] = C[1]-A[1];
    int cross = AB[0] * AC[1] - AB[1] * AC[0];
    return cross;
}
//Compute the distance from A to B
double distance(int[] A, int[] B){
    int d1 = A[0] - B[0];
    int d2 = A[1] - B[1];
    return sqrt(d1*d1+d2*d2);
}
//Compute the distance from AB to C
//if isSegment is true, AB is a segment, not a line.
double linePointDist(int[] A, int[] B, int[] C, boolean isSegment){
    double dist = cross(A,B,C) / distance(A,B);
    if(isSegment){
        int dot1 = dot(A,B,C);
        if(dot1 &gt; 0)return distance(B,C);
        int dot2 = dot(B,A,C);
        if(dot2 &gt; 0)return distance(A,C);
    }
    return abs(dist);
}
</code></pre>

<p>I think code has self explanation, if you are familiar with basic geometry, but if you aren't familiar, you should to read the article, if there is any problem for you we can help you.</p>
