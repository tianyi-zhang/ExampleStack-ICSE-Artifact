<p><strong>Note:</strong>  I'm the <a href="http://www.eclipse.org/eclipselink/moxy.php" rel="nofollow">EclipseLink JAXB (MOXy)</a> lead, and a member of the JAXB 2.X (<a href="http://jcp.org/en/jsr/detail?id=222" rel="nofollow">JSR-222</a>) expert group.</p>

<p>Alternatively you could use the <code>@XmlPath</code> extension in MOXy to handle this use case:</p>

<p><strong>DataClass</strong></p>

<p>The <code>@XmlPath</code> annotation can be used with the standard JAXB annotations:</p>

<pre><code>import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import org.eclipse.persistence.oxm.annotations.XmlPath;

@XmlRootElement(name="DataClass")
@XmlType(propOrder={"myElement", "anotherElement"})
public class DataClass {

    private String myElement;
    private String myElementThisAtt;
    private String anotherElement;
    private String anotherElementThisAtt;

    public String getMyElement() {
        return myElement;
    }

    public void setMyElement(String myElement) {
        this.myElement = myElement;
    }

    @XmlPath("myElement/@thisAtt")
    public String getMyElementThisAtt() {
        return myElementThisAtt;
    }

    public void setMyElementThisAtt(String myElementThisAtt) {
        this.myElementThisAtt = myElementThisAtt;
    }

    public String getAnotherElement() {
        return anotherElement;
    }

    public void setAnotherElement(String anotherElement) {
        this.anotherElement = anotherElement;
    }

    @XmlPath("anotherElement/@thisAtt")
    public String getAnotherElementThisAtt() {
        return anotherElementThisAtt;
    }

    public void setAnotherElementThisAtt(String anotherElementThisAtt) {
        this.anotherElementThisAtt = anotherElementThisAtt;
    }

}
</code></pre>

<p><strong>Demo</strong></p>

<pre><code>import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;

public class Demo {

    public static void main(String[] args) throws Exception {
        JAXBContext jc = JAXBContext.newInstance(DataClass.class);

        DataClass dataClass = new DataClass();
        dataClass.setMyElement("This is better");
        dataClass.setMyElementThisAtt("this is what I'm talking about");
        dataClass.setAnotherElement("So is this");
        dataClass.setAnotherElementThisAtt("a different attribute here");

        Marshaller marshaller = jc.createMarshaller();
        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
        marshaller.marshal(dataClass, System.out);
    }
}
</code></pre>

<p><strong>Output</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;DataClass&gt;
   &lt;myElement thisAtt="this is what I'm talking about"&gt;This is better&lt;/myElement&gt;
   &lt;anotherElement thisAtt="a different attribute here"&gt;So is this&lt;/anotherElement&gt;
&lt;/DataClass&gt;
</code></pre>

<p><strong>More Information</strong></p>

<ul>
<li><a href="http://bdoughan.blogspot.com/2010/07/xpath-based-mapping.html" rel="nofollow">http://bdoughan.blogspot.com/2010/07/xpath-based-mapping.html</a></li>
<li><a href="http://bdoughan.blogspot.com/2011/05/specifying-eclipselink-moxy-as-your.html" rel="nofollow">http://bdoughan.blogspot.com/2011/05/specifying-eclipselink-moxy-as-your.html</a></li>
</ul>
