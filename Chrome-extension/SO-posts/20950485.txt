<p>Change to</p>

<pre><code>  holder.srNumberTextView = (TextView) view.findViewById(R.id.srNumberTextView);
</code></pre>

<p>Its the same for other views. Use <code>view.findViewById</code> instead of <code>convertView.findViewById</code>.</p>

<pre><code> layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  // already initialized in the constructor of adapter class
  // no need to initialize in getView
</code></pre>

<p>You need to move </p>

<pre><code> holder.checkBox.setOnCheckedChangeListener
</code></pre>

<p>out of if part</p>

<p>You have</p>

<pre><code>  int getPosition = (Integer) buttonView.getTag();
</code></pre>

<p>Even before you setTag to checkbox.</p>

<p>There might be other mistakes. I pointed a few that i could lay my eyes on.</p>

<pre><code>@Override
public View getView(int position, View convertView, ViewGroup parent)
{

    ViewHolder holder;
    if(convertView == null)
    {

        convertView = layoutInflater.inflate(R.layout.student_list_view_itom, null);
        holder = new ViewHolder();
        holder.textViewRouteId = (TextView) convertView.findViewById(R.id.srNumberTextView); 
        holder.srNumberTextView = (TextView) convertView.findViewById(R.id.srNumberTextView);
        holder.nameTextView = (TextView) convertView.findViewById(R.id.textViewStudentItem);
        holder.phoneNumberTextView = (TextView) convertView.findViewById(R.id.textViewPhoneNumber);
        holder.checkBox = (CheckBox) convertView.findViewById(R.id.checkBoxSelectForStudentList);
        convertView.setTag(holder);

    }else{
            holder = (ViewHolder) convertView.getTag();
         }

    // update your views here
    return convertView;
   }
</code></pre>

<p>Then</p>

<pre><code>static class ViewHolder
{
    protected TextView srNumberTextView,textViewRouteId;
</code></pre>
