<p>i don't know exactly what you're trying to say, but i once needed a version of permutation where i had a set of numbers like 012 and all the permutations were:</p>

<p>012 021 102 120 201 210</p>

<p>in order to achieve this, i looked up on wikipedia <a href="http://en.wikipedia.org/wiki/Permutation" rel="nofollow">http://en.wikipedia.org/wiki/Permutation</a>
to find the algorithm, then i just created a method for it like this: </p>

<pre><code>    public static boolean Permute(int[] a) {
        int k, l, n = a.length -1;
        for (k = n -1; ; k--) {
            if (k == -1)
                return false;
            if (a[k] &lt; a[k + 1])
                break;
        }
        for (l = n; l &gt;= 0; l--) {
            if (a[k] &lt; a[l]) {
                int opt = a[l];
                a[l] = a[k];
                a[k] = opt;
                break;
            }
        }
        for (int i = k + 1, j = n; i &lt; j; i++, j--) {
            int opt = a[i];
            a[i] = a[j];
            a[j] = opt;
        }
        return true;
    }
</code></pre>

<p>I can help you if you're more specific </p>
