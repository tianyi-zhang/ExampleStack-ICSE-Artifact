<p>Create an <code>Application</code> class and in there, create an object that implements the <code>ActivityLifecycleCallbacks</code> interface. In that object, increment an integer in every <code>onStart</code>, and decrement it in every <code>onStop</code>. Also in <code>onStop</code>, if the integer is 0, then send your email. </p>

<p><a href="http://developer.android.com/reference/android/app/Application.ActivityLifecycleCallbacks.html" rel="nofollow">http://developer.android.com/reference/android/app/Application.ActivityLifecycleCallbacks.html</a></p>

<pre><code>package com.your.package;

import android.annotation.TargetApi;
import android.app.Activity;
import android.app.Application;
import android.os.Build;
import android.os.Bundle;


public class ExampleApplication extends Application {
    @Override
    public void onCreate() {
        super.onCreate();
        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
            setupLifecycleCallbacks();
        }
        Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {
            @Override
            public void uncaughtException(Thread paramThread, Throwable paramThrowable) {
                sendEmail();
            }
        });
    }

    @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)
    private void setupLifecycleCallbacks() {
        registerActivityLifecycleCallbacks( new ActivityLifecycleCallbacks() {
            int mActivityCount = 0;
            @Override
            public void onActivityCreated(Activity activity, Bundle savedInstanceState) {

            }

            @Override
            public void onActivityStarted(Activity activity) {
                mActivityCount++;
            }

            @Override
            public void onActivityResumed(Activity activity) {

            }

            @Override
            public void onActivityPaused(Activity activity) {

            }

            @Override
            public void onActivityStopped(Activity activity) {
                mActivityCount--;
                if (mActivityCount == 0){
                    sendEmail();
                }
             }

             @Override
            public void onActivitySaveInstanceState(Activity activity, Bundle outState) {

            }

            @Override
            public void onActivityDestroyed(Activity activity) {

            }
        });
     }

    private void sendEmail() {
        new Thread(new Runnable() {
            public void run() {
                try {
                    GMailSender sender = new GMailSender(
                        "email address",
                        "pw");
                    sender.sendMail("Pause", "The app has paused",
                        "email address",
                        "email address");
                } catch (Exception e) {
                    Toast.makeText(getApplicationContext(), "Error", Toast.LENGTH_LONG).show();
                }
            }
        }).start();
    }
}
</code></pre>
