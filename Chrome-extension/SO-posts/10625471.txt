<p>I think the simplest way to build a model from an instance of <code>ResultSet</code>, could be as follows.</p>

<pre><code>public static void main(String[] args) throws Exception {
    // The Connection is obtained

    ResultSet rs = stmt.executeQuery("select * from product_info");

    // It creates and displays the table
    JTable table = new JTable(buildTableModel(rs));

    // Closes the Connection

    JOptionPane.showMessageDialog(null, new JScrollPane(table));

}
</code></pre>

<p>The method <code>buildTableModel</code>:</p>

<pre><code>public static DefaultTableModel buildTableModel(ResultSet rs)
        throws SQLException {

    ResultSetMetaData metaData = rs.getMetaData();

    // names of columns
    Vector&lt;String&gt; columnNames = new Vector&lt;String&gt;();
    int columnCount = metaData.getColumnCount();
    for (int column = 1; column &lt;= columnCount; column++) {
        columnNames.add(metaData.getColumnName(column));
    }

    // data of the table
    Vector&lt;Vector&lt;Object&gt;&gt; data = new Vector&lt;Vector&lt;Object&gt;&gt;();
    while (rs.next()) {
        Vector&lt;Object&gt; vector = new Vector&lt;Object&gt;();
        for (int columnIndex = 1; columnIndex &lt;= columnCount; columnIndex++) {
            vector.add(rs.getObject(columnIndex));
        }
        data.add(vector);
    }

    return new DefaultTableModel(data, columnNames);

}
</code></pre>

<hr>

<p><strong>UPDATE</strong></p>

<p>Do you like to use <a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/SwingWorker.html"><strong><code>javax.swing.SwingWorker</code></strong></a>? Do you like to use the <a href="http://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html"><strong><code>try-with-resources</code></strong></a> statement?</p>

<pre><code>public class GUI extends JFrame {

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    private final JButton button;
    private final JTable table;
    private final DefaultTableModel tableModel = new DefaultTableModel();

    public GUI() throws HeadlessException {

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        table = new JTable(tableModel);
        add(new JScrollPane(table), BorderLayout.CENTER);

        button = new JButton("Load Data");
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new SwingWorker&lt;Void, Void&gt;() {
                    @Override
                    protected Void doInBackground() throws Exception {
                        loadData();
                        return null;
                    }
                }.execute();
            }
        });
        add(button, BorderLayout.PAGE_START);

        setSize(640, 480);
    }

    private void loadData() {
        LOG.info("START loadData method");

        button.setEnabled(false);

        try (Connection conn = DriverManager.getConnection(url, usr, pwd);
                Statement stmt = conn.createStatement()) {

            ResultSet rs = stmt.executeQuery("select * from customer");
            ResultSetMetaData metaData = rs.getMetaData();

            // Names of columns
            Vector&lt;String&gt; columnNames = new Vector&lt;String&gt;();
            int columnCount = metaData.getColumnCount();
            for (int i = 1; i &lt;= columnCount; i++) {
                columnNames.add(metaData.getColumnName(i));
            }

            // Data of the table
            Vector&lt;Vector&lt;Object&gt;&gt; data = new Vector&lt;Vector&lt;Object&gt;&gt;();
            while (rs.next()) {
                Vector&lt;Object&gt; vector = new Vector&lt;Object&gt;();
                for (int i = 1; i &lt;= columnCount; i++) {
                    vector.add(rs.getObject(i));
                }
                data.add(vector);
            }

            tableModel.setDataVector(data, columnNames);
        } catch (Exception e) {
            LOG.log(Level.SEVERE, "Exception in Load Data", e);
        }
        button.setEnabled(true);

        LOG.info("END loadData method");
    }

}
</code></pre>
