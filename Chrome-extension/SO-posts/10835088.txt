<ul>
<li>Client side (GWT): </li>
</ul>

<p>1- Get the base64 encoded image URI</p>

<pre><code>String imageData= canvas2.toDataUrl();
</code></pre>

<p>2- Send the image data through an RPC call to the server side</p>

<pre><code>jdbc.saveImage(imageData,callback); 
</code></pre>

<ul>
<li>Server Side (GAE): </li>
</ul>

<p>3- Make an HTTP Post request to your web server API </p>

<pre><code>        URL url = new URL("http://myserver.com/my_images_folder/save_image.php");
        URLConnection conn = url.openConnection();
        conn.setReadTimeout(15000); //set a large time out since we're saving images
        conn.setDoOutput(true);
        OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());
        wr.write(data);
        wr.flush();

        // Get the response which contains the image file name
        BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
        String line;
        while ((line = rd.readLine()) != null) {
            resa+=line;
        }
        wr.close();
        System.out.println("close1");
        rd.close();
        System.out.println("Received: "+line);
</code></pre>

<ul>
<li>Server Side (Your Web Server -php API):</li>
</ul>

<p>4- save the image to your file server and return an image file name</p>

<pre><code>    if (isset($GLOBALS["HTTP_RAW_POST_DATA"])){
        $imageData=$GLOBALS['HTTP_RAW_POST_DATA'];

        //using a timestamp to create unique file names
        //you can pass file name in params if you like instead
        $fileName='User_Images_'.time().'.png';

        // Remove the headers (data:,) part.  
        $filteredData=substr($imageData, strpos($imageData, ",")+1);

        // Need to decode base64 encoded image
        $unencodedData=base64_decode($filteredData);

        $fp = fopen( $fileName, 'wb' );
        fwrite( $fp, $unencodedData);
        fclose( $fp );
    $fileName2='http://myserver.com/my_images_folder/'.$fileName;

    //return the file name
    echo($fileName);
 }else{
    echo('no data posted');
 }
</code></pre>

<p>Now that I have a hard permalink to the file I can embed it in emails and do other stuff with it. See reference 3 below for inline embed (which requires a file or a URL, now that we have a hard URL to the image on our web server, we can email it out)</p>
