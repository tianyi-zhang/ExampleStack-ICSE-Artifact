<p>ListView is designed to show a List of custom objects, each object represents a corresponding view item.
In your case, I'd recommend you create a new class which wraps both Teacher and School objects.</p>

<pre><code>public class TeacherSchoolWrapper {
    private Teacher mTeacher;
    private School mSchool;

    public TeacherSchoolWrapper(Teacher teacher, School school) {
        mTeacher = teacher;
        mSchool = school;
    }

    /* Getters and setters go here...*/
}
</code></pre>

<p>When you initialize your data, create a ArrayList of TeacherSchoolWrapper, and then fill in with your teachers and schools' data.</p>

<pre><code>public ArrayList&lt;TeacherSchoolWrapper&gt; initialize(List&lt;Teacher&gt; teachers) {
    ArrayList&lt;TeacherSchoolWrapper&gt; wrappers = new ArrayList&lt;&gt;();
    for (Teacher teacher : teachers) {
        // Create wrappers which contain both teacher and school
        for (School school : teacher.getSchoolList()) {
            wrappers.add(new TeacherSchoolWrapper(teacher, school));
        }
    }
    return wrappers;
}
</code></pre>

<p>Create the adapter class which interprets data.</p>

<pre><code>public class TeacherAdapter extends ArrayAdapter&lt;TeacherSchoolWrapper&gt; {
    public TeacherAdapter(ArrayList&lt;TeacherSchoolWrapper&gt; wrappers) {
        super(this, 0, wrappers);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if (convertView == null) {
            convertView = getLayoutInflater().inflate(android.R.layout.simple_list_item_2, null);
        }
        TeacherSchoolWrapper wrapper = getItem(position);
        TextView textView1 = (TextView) convertView.findViewById(android.R.id.text1);
        TextView textView2 = (TextView) convertView.findViewById(android.R.id.text2);
        textView1.setText(wrapper.getTeacher().getName());
        textView2.setText(wrapper.getSchool().getName());
        return convertView;
    }
}
</code></pre>

<p>Hope this can help you.</p>
