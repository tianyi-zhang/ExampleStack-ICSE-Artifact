<p>Try this,it should work logically.(I didn't try it,btw! :P)   </p>

<pre><code>...
 listView.setOnItemClickListener(new OnItemClickListener() {
            public void onItemClick(AdapterView&lt;?&gt; parent, View view,
                    int position, long id) {


                EfficientAdapter.saveState.put(position,"selected");                


                mHandler.postDelayed(new Runnable() {

                    @Override
                    public void run() {
                        // call any new activity here or do any thing you want here                                 
                    }
               }, 200L);
            }
        });

    ...
    private class EfficientAdapter extends BaseAdapter {

        public static HashMap&lt;Integer,String&gt; saveState=new HashMap&lt;Integer,String&gt;();
        private LayoutInflater mInflater;

        public EfficientAdapter(Context context)
        {
            mInflater = LayoutInflater.from(context);
            for(int i=0;i&lt;5;i++)
            {
               saveState.put(i,"unselected");
            }
        }
        public int getCount() {
            return data.size();
        }
        public Object getItem(int position) {
            return position;
        }
        public long getItemId(int position) {
            return position;
        }
        public View getView(int position, View convertView, ViewGroup parent) {

            ViewHolder holder;

            if (convertView == null || convertView.getTag() == null) {
                convertView = mInflater.inflate(R.layout.places_custom_row_view, null);
                holder = new ViewHolder();

                holder.txtName = (TextView) convertView
                    .findViewById(R.id.name);

                convertView.setTag(holder);
            } else {
                 holder = (ViewHolder) convertView.getTag();
            }            

            if(saveState.get(position).equals("selected"))
               holder.txtName.setBackgroundResource(R.drawable.cellbghover);  
            else
               holder.txtName.setBackgroundResource(R.drawable.cellbgnew);

            holder.txtName.setText(data.get(position)); 

            return convertView;
        }
    }

    static class ViewHolder {

        TextView txtName;
    }
</code></pre>
