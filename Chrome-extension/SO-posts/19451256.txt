<p><strong>TLDR;</strong></p>

<p>@Matt McMinn has already shown a solution for this problem <a href="http://stackoverflow.com/a/14422947/1893766">here</a>, go grab it. I am only re-iterating that solution here.</p>

<hr>

<p>Note that, this issue has already been fixed at platform level in Android 4.2.2. See the below screenshots for word wrap comparison for the same code base but different platform versions on Galaxy Nexus. </p>

<p><img src="http://i.stack.imgur.com/vuOFB.jpg" alt="Word wrap comparison on Android 4.1.2 vs Android 4.2.2"></p>

<p>Hence, if you are not targeting older versions of Android, you may not wish to use this fix at all.</p>

<h2>The code</h2>

<p><strong>MainActivity.java</strong>:</p>

<pre><code>package com.example.nobr;

import android.app.Activity;
import android.os.Bundle;
import android.widget.TextView;
import android.widget.TextView.BufferType;

public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        TextView helloWorld = (TextView) findViewById(R.id.hello_world);
        helloWorld.setText(R.string.hello_world, BufferType.EDITABLE);

        TextView longText = (TextView) findViewById(R.id.long_text);
        longText.setText(R.string.long_text_with_url, BufferType.EDITABLE);
    }
}
</code></pre>

<p><strong>activity_main.xml</strong>:</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp" &gt;

    &lt;com.example.nobr.NonBreakingPeriodTextView
        android:id="@+id/hello_world"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;

    &lt;com.example.nobr.NonBreakingPeriodTextView
        android:id="@+id/long_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignLeft="@+id/hello_world"
        android:layout_below="@+id/hello_world"
        android:layout_marginTop="20dp" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p><strong>NonBreakingPeriodTextView.java</strong>:</p>

<pre><code>package com.example.nobr;

import android.content.Context;
import android.graphics.Paint;
import android.text.Editable;
import android.util.AttributeSet;
import android.util.Log;
import android.widget.TextView;

public class NonBreakingPeriodTextView extends TextView {
    private static final String TAG = "NonBreakingPeriodTextView";

    public NonBreakingPeriodTextView(Context context) {
        super(context);
    }

    public NonBreakingPeriodTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        Editable editable = getEditableText();
        if (editable == null) {
            Log.d(TAG, "non-editable text");
            return;
        }
        int width = getWidth() - getPaddingLeft() - getPaddingRight();
        if (width == 0) {
            Log.d(TAG, "zero-length text");
            return;
        }

        Paint p = getPaint();
        float[] widths = new float[editable.length()];
        p.getTextWidths(editable.toString(), widths);
        float curWidth = 0.0f;
        int lastWSPos = -1;
        int strPos = 0;
        final char newLine = '\n';
        final String newLineStr = "\n";
        boolean reset = false;
        int insertCount = 0;

        /*
         * Traverse the string from the start position, adding each character's width to the total
         * until: 1) A whitespace character is found. In this case, mark the whitespace position. If
         * the width goes over the max, this is where the newline will be inserted. 2) A newline
         * character is found. This resets the curWidth counter. curWidth &gt; width. Replace the
         * whitespace with a newline and reset the counter.
         */

        while (strPos &lt; editable.length()) {
            curWidth += widths[strPos];

            char curChar = editable.charAt(strPos);

            if (curChar == newLine) {
                reset = true;
            } else if (Character.isWhitespace(curChar)) {
                lastWSPos = strPos;
            } else if (curWidth &gt; width &amp;&amp; lastWSPos &gt;= 0) {
                editable.replace(lastWSPos, lastWSPos + 1, newLineStr);
                insertCount++;
                strPos = lastWSPos;
                lastWSPos = -1;
                reset = true;
            }

            if (reset) {
                curWidth = 0.0f;
                reset = false;
            }

            strPos++;
        }

        if (insertCount != 0) {
            setText(editable);
        }
    }
}
</code></pre>

<h2>The result</h2>

<p><strong>On Android 4.1.2 (Galaxy Nexus)</strong></p>

<p><img src="http://i.stack.imgur.com/9YGCp.png" alt="Word wrap on Android 4.1.2 with the fix"></p>

<p><strong>On Android 2.3.3 (AVD, Nexus One clone)</strong></p>

<p><img src="http://i.stack.imgur.com/Jx5wr.png" alt="enter image description here"></p>

<p>Hope this helps.</p>
