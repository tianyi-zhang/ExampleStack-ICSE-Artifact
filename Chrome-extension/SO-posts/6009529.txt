<p>What you will probably want to do is research the glReadPixels() function. I ran a test where I had the screen split with a glsurfaceview and image view and wanted to see if I could grab the pixels from the glview and create a Bitmap and then apply that to the ImageView. After some research, I found using glReadPixels() works, but you have to tranform the pixels before using them for an android bitmap. This is the method I ended up using. I'm confident that I found it exactly this way on another forum.</p>

<pre><code>public Bitmap SaveGLPixels(int x, int y, int w, int h, GL10 gl)

    {  

         int b[]=new int[w*h];

         int bt[]=new int[w*h];

         IntBuffer ib=IntBuffer.wrap(b);

         ib.position(0);

         gl.glReadPixels(x, y, w, h, GL10.GL_RGBA, GL10.GL_UNSIGNED_BYTE, ib);

         for(int i=0; i&lt;h; i++)

         {//remember, that OpenGL bitmap is incompatible with Android bitmap

          //and so, some correction need.        

              for(int j=0; j&lt;w; j++)

              {

                   int pix=b[i*w+j];

                   int pb=(pix&gt;&gt;16)&amp;0xff;

                   int pr=(pix&lt;&lt;16)&amp;0x00ff0000;

                   int pix1=(pix&amp;0xff00ff00) | pr | pb;

                   bt[(h-i-1)*w+j]=pix1;

              }

         }                  
         Bitmap.Config bconfig = Bitmap.Config.RGB_565;
         Bitmap sb=Bitmap.createBitmap(bt, w, h, bconfig);

         return sb;

    }
</code></pre>
