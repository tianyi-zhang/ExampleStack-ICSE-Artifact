<p>Well you have Array of Images,so if you want to display all of them pass <code>ArrayList&lt;photo&gt;</code> to <code>CustomAdpater</code> and using <code>ListView</code> you can Display the whole thing</p>

<p>like
<strong>list_item.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent" &gt;
    &lt;ImageView
        android:id="@+id/icon"
        android:layout_width="80dp"
        android:layout_height="80dp"
        android:contentDescription="@string/image"
        android:paddingLeft="10dp"
        android:paddingRight="10dp" /&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<p>CustomAdpater.java</p>

<pre><code>public class CustomAdpater extends ArrayAdapter&lt;RowItem&gt; {

    Context context;

    public CustomAdpater(Context context, int resourceId,
            ArrayList&lt;Photo&gt; items) {
        super(context, resourceId, items);
        this.context = context;
    }

    /*private view holder class*/
    private class ViewHolder {
        ImageView imageView;
    }

    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder = null;
        Photo rowItem = getItem(position);

        LayoutInflater mInflater = (LayoutInflater) context
                .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
        if (convertView == null) {
            convertView = mInflater.inflate(R.layout.list_item, null);
            holder = new ViewHolder();
            holder.imageView = (ImageView) convertView.findViewById(R.id.icon);
            convertView.setTag(holder);
        } else
            holder = (ViewHolder) convertView.getTag();


        holder.imageView.setImageResource(rowItem.getImage());

        return convertView;
    }
}
</code></pre>
