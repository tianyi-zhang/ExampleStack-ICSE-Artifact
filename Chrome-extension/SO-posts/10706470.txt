<p>This is actually not so easy to do, because SimplePager is not a very extendable class. It doesn't provide access to its private button fields in any way, and it also doesn't assign unique style classes to each of them.</p>

<p>One solution you could use is:</p>

<pre class="lang-java prettyprint-override"><code>final NodeList&lt;Element&gt; tdElems = 
    simplePager.getElement().getElementsByTagName("td");

for (int i = 0; i &lt; tdElems.getLength(); i++) {

  final String toolTipText;

  if (i == 0)
    toolTipText = "First page";
  else if (i == 1)
    toolTipText = "Previous page";
  else if (i == 2)
    continue; /* This is the middle td - no button */
  else if (i == 3)
    toolTipText = "Next page";
  else if (i == 4)
    toolTipText = "Last page";
  else
    continue;

  tdElems.getItem(i).setTitle(toolTipText);
}
</code></pre>

<p>But honestly, this is not a very solid approach - it breaks if the layout of SimplePager changes in the future. I'd rather re-implement SimplePager, and access the button fields directly.</p>
