<p>You can write yourself a quick helper function:</p>

<pre><code>@SuppressWarnings("unchecked")
public static &lt;K,V&gt; Map&lt;K,V&gt; ImmutableMap(Object... keyValPair){
    Map&lt;K,V&gt; map = new HashMap&lt;K,V&gt;();

    if(keyValPair.length % 2 != 0){
        throw new IllegalArgumentException("Keys and values must be pairs.");
    }

    for(int i = 0; i &lt; keyValPair.length; i += 2){
        map.put((K) keyValPair[i], (V) keyValPair[i+1]);
    }

    return Collections.unmodifiableMap(map);
}
</code></pre>

<p>Note the code above isn't going to stop you from overwriting constants of the same name, using <code>CONST_1</code> multiple places in your list will result in the final <code>CONST_1</code>'s value appearing.</p>

<p>Usage is something like:</p>

<pre><code>Map&lt;String,Double&gt; constants = ImmutableMap(
    "CONST_0", 1.0,
    "CONST_1", 2.0
);
</code></pre>
