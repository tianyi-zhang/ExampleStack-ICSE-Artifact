<p>Your second example produces the following output for me.</p>

<pre>Character #0 is a
Character #1 is b
Character #2 is c
Character #3 is ¥
Character #4 is ?
Character #5 is ?
Character #6 is ?
Accumulated characters are abc¥???
</pre>

<p>This code produces a correctly encoded UTF-8 file having the same content.</p>

<pre><code>StringBuilder b = new StringBuilder();
for (char c = 'a'; c &lt; 'd'; c++) {
    b.append(c);
}
b.append('\u00a5'); // Japanese Yen symbol
b.append('\u01FC'); // Roman AE with acute accent
b.append('\u0391'); // GREEK Capital Alpha
b.append('\u03A9'); // GREEK Capital Omega

PrintStream out = new PrintStream("temp.txt", "UTF-8");
for (int i = 0; i &lt; b.length(); i++) {
    out.println("Character #" + i + " is " + b.charAt(i));
}
out.println("Accumulated characters are " + b);
</code></pre>

<p>See also: <a href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow"><em>The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</em></a></p>
