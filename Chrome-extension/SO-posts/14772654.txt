<p>Try with this. </p>

<pre><code>public class TabBar extends FragmentActivity implements
            TabHost.OnTabChangeListener {

        public static Context mContext;
        private TabHost mTabHost;
        private HashMap&lt;String, TabInfo&gt; mapTabInfo = new HashMap&lt;String, TabBar.TabInfo&gt;();
        private TabInfo mLastTab = null;

        private class TabInfo {
            private String tag;
            private Class&lt;?&gt; clss;
            private Bundle args;
            private Fragment fragment;

            TabInfo(String tag, Class&lt;?&gt; clazz, Bundle args) {
                this.tag = tag;
                this.clss = clazz;
                this.args = args;
            }

        }

        class TabFactory implements TabContentFactory {

            private final Context mContext;

            public TabFactory(Context context) {
                mContext = context;
            }

            /**
             * (non-Javadoc)
             * 
             * @see android.widget.TabHost.TabContentFactory#createTabContent(java.lang.String)
             */
            public View createTabContent(String tag) {
                View v = new View(mContext);
                v.setMinimumWidth(0);
                v.setMinimumHeight(0);
                return v;
            }

        }

        /**
         * (non-Javadoc)
         * 
         * @see android.support.v4.app.FragmentActivity#onCreate(android.os.Bundle)
         */
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.tabs_layout);

            initialiseTabHost(savedInstanceState);
            if (savedInstanceState != null) {
                mTabHost.setCurrentTabByTag(savedInstanceState.getString("tab")); 
            }
        }


        protected void onSaveInstanceState(Bundle outState) {
            outState.putString("tab", mTabHost.getCurrentTabTag()); // save the tab
                                                                    // selected
            super.onSaveInstanceState(outState);
        }

        private void initialiseTabHost(Bundle args) {
            mTabHost = (TabHost) findViewById(android.R.id.tabhost);
            mTabHost.setup();
            // mTabHost.getTabWidget().setStripEnabled(false);

            TabInfo tabInfo = null;
            TabBar.addTab(this, this.mTabHost,this.mTabHost.newTabSpec("Tab1"), (tabInfo = new TabInfo("Tab1", MyMapFragment.class, args)), "Favourite",
                    R.drawable.frd_tab_select_custom);
            this.mapTabInfo.put(tabInfo.tag, tabInfo);
            TabBar.addTab(this, this.mTabHost,this.mTabHost.newTabSpec("Tab2"), (tabInfo = new TabInfo(
                            "Tab2", PrflTab.class, args)), "Favourite",
                    R.drawable.me_tab_select_custom);
            this.mapTabInfo.put(tabInfo.tag, tabInfo);
            TabBar.addTab(this, this.mTabHost,
                    this.mTabHost.newTabSpec("Tab3"), (tabInfo = new TabInfo("Tab3", RequestFragment.class, args)), "Favourite",
                    R.drawable.request_tab_select_custom);
            this.mapTabInfo.put(tabInfo.tag, tabInfo);


            // Default to first tab

                this.onTabChanged("Tab1");

            mTabHost.setOnTabChangedListener(this);
        }

        /**
         * @param activity
         * @param tabHost
         * @param tabSpec
         * @param clss
         * @param args
         */
        private static View prepareTabView(Context context, String text,
                int drawable) {
            View view = LayoutInflater.from(context).inflate(
                    R.layout.tab_indicator, null);
            ((ImageView) view.findViewById(R.id.icon)).setImageResource(drawable);
            return view;

        }

        private static void addTab(TabBar activity, TabHost tabHost,
                TabHost.TabSpec tabSpec, TabInfo tabInfo, String title, int drawable) {
            // Attach a Tab view factory to the spec
            tabSpec.setContent(activity.new TabFactory(activity));
            String tag = tabSpec.getTag();
            View view = prepareTabView(tabHost.getContext(), title, drawable);
            tabSpec.setIndicator(view);

            tabInfo.fragment = activity.getSupportFragmentManager().findFragmentByTag(tag);
            if (tabInfo.fragment != null &amp;&amp; !tabInfo.fragment.isDetached()) {
                FragmentTransaction ft = activity.getSupportFragmentManager().beginTransaction();
                ft.detach(tabInfo.fragment);
                ft.commit();
                activity.getSupportFragmentManager().executePendingTransactions();
            }

            tabHost.addTab(tabSpec);
            boolean flag = activity.getIntent().getBooleanExtra("notifi_falg", false);
            if (flag) {
                tabHost.setCurrentTab(2);
            }
        }


        public void onTabChanged(String tag) {
            TabInfo newTab = this.mapTabInfo.get(tag);
            if (mLastTab != newTab) {
                FragmentTransaction ft = this.getSupportFragmentManager().beginTransaction();
                if (mLastTab != null) {
                    if (mLastTab.fragment != null) {
                        ft.detach(mLastTab.fragment);
                    }
                }
                if (newTab != null) {
                    if (newTab.fragment == null) {
                        newTab.fragment = Fragment.instantiate(this,newTab.clss.getName(), newTab.args);
                        ft.add(R.id.tab_1, newTab.fragment, newTab.tag);
                    } else {
                        ft.attach(newTab.fragment);
                    }
                }

                mLastTab = newTab;
                ft.commit();
                this.getSupportFragmentManager().executePendingTransactions();
            }
        }

        @Override
        public void onStop() {
            super.onStop();
        }
    }
</code></pre>
