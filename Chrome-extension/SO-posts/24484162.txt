<p>Download Gson From the following link
<a href="http://mvnrepository.com/artifact/com.google.code.gson/gson/2.2.4" rel="nofollow">Google Gson 2.2.4 jar</a></p>

<p>Add the jar in your libs folder</p>

<p>Create an Object class for your Json Response. For the above response the Objects class is shown below,</p>

<pre><code>import java.util.List;

public class ResponeItem {

public List&lt;Item&gt; items;
public List&lt;Category&gt; categories;
public String category_Timestamp;
public List&lt;Question&gt; questions;
public String question_Timestamp;

public class Item {
    public String id;
    public String Item_Id;
    public String Item_Name;
    public String Price;
    public String Currency;
    public String Category;
    public String Description;
    public String Unit;
    public String food_type;
    public String Image_Large;
    public String Image_Thumb;
    public String Timestamp;
    public String Promotion;
    public String Item_Name_arabic;
    public String Item_Name_russian;
    public String Currency_arabic;
    public String Currency_russian;
    public String Description_arabic;
    public String Description_russian;
    public String Note;
    public String Nutritional_info;
    public String extrafield_1;
    public String extrafield_2;
    public List&lt;String&gt; preferncess;
    public List&lt;String&gt; preferncess_ids;
    public List&lt;String&gt; price;
    public List&lt;String&gt; preferncess_arabic;
}

public class Category {
    public String categoryName;
    public String categoryShortName;
    public String catid;
    public String categoryArabicName;
}

public class Question {
    public String q_id;
    public String q_question;
    public String q_option1;
    public String q_option2;
    public String q_option3;
    public String q_option4;
    public String q_option5;
    public String Timestamp;
    public String q_status;
}

}
</code></pre>

<p>Copy the above class in your project</p>

<p>Call the Webservice like below,</p>

<pre><code>import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import com.google.gson.Gson;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;

public class ResponseActivity extends Activity{


@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(-Your layout id-)

    //Initializations

    new NetworkCallTask().execute("Your-Url");



}
class NetworkCallTask extends AsyncTask&lt;String, Void, InputStream&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Show your progressbar or something..




    }

    @Override
    protected InputStream doInBackground(String... url) {
        DefaultHttpClient client = new DefaultHttpClient();
        HttpGet getRequest = new HttpGet(url[0]);
        try {
            HttpResponse getResponse = client.execute(getRequest);
            final int statusCode = getResponse.getStatusLine()
                    .getStatusCode();
            if (statusCode != HttpStatus.SC_OK) {
                Log.w(getClass().getSimpleName(), "Error " + statusCode
                        + " for URL " + url[0]);
                return null;
            }
            HttpEntity getResponseEntity = getResponse.getEntity();
            return getResponseEntity.getContent();
        } catch (IOException e) {
            getRequest.abort();
            Log.w(getClass().getSimpleName(), "Error for URL " + url[0], e);
        }
        return null;
    }

    @Override
    protected void onPostExecute(InputStream result) {
        super.onPostExecute(result);
        if (result != null) {
            Gson gson = new Gson();
            Reader reader = new InputStreamReader(result);
            ResponeItem response = gson.fromJson(reader,
                    ResponeItem.class);

            //You can access all the objects here
            List&lt;Item&gt; items = response.items;
            List&lt;Category&gt; categories = response.categories;
            String category_Timestamp = response.category_Timestamp;
            List&lt;Question&gt; questions = response.questions;
            String question_Timestamp = response.question_Timestamp;



        } else {
            Log.e(getClass().getSimpleName(), "Server Error");
        }

        // Dissmiss your progressbar

    }
}

}
</code></pre>
