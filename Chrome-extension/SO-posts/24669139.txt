<p>I used <code>insertBeforeStart()</code> method of the <code>HTMLDocument</code> instead</p>

<pre><code>import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.event.HyperlinkEvent;
import javax.swing.text.BadLocationException;
import javax.swing.text.Element;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;

public class TextPaneTesting1 extends javax.swing.JFrame {

    /**
     * Creates new form TextPaneTesting
     */
    static HTMLEditorKit kit = new HTMLEditorKit();
    static HTMLDocument doc = new HTMLDocument();
    static String mainText;

    public TextPaneTesting1() throws IOException {
        initComponents();
        jTextPane1.setEditorKit(kit);
        doc=(HTMLDocument)jTextPane1.getDocument();
        mainText = "&lt;a href = '#'&gt;Link&lt;/a&gt; NotLink &lt;a href = '#'&gt;Link&lt;/a&gt; NotLink &lt;a href = '#'&gt;Link&lt;/a&gt;.";
        jTextPane1.setEditable(false);
        jTextPane1.setText(mainText);
        jTextPane1.setCaretPosition(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextPane1.setContentType("text/UTF-8"); // NOI18N
        jTextPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextPane1.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                jTextPane1HyperlinkUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// &lt;/editor-fold&gt;                        

    private void jTextPane1HyperlinkUpdate(final javax.swing.event.HyperlinkEvent event) {
        if(event.getEventType() == HyperlinkEvent.EventType.ACTIVATED){
            popup = new JPopupMenu();
            JMenuItem listOption = new JMenuItem("Click It");
            listOption.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 12));
            listOption.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    try {
                        updateText(event.getSourceElement());
                    } catch (IOException ex) {
                        Logger.getLogger(TextPaneTesting1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            popup.add(listOption);
            popup.show(jTextPane1, jTextPane1.getMousePosition().x, jTextPane1.getMousePosition().y);
        }
    }

    static void updateText(Element elem) throws IOException{
        try {
            final int begin = elem.getStartOffset();
            final int end = elem.getEndOffset();

            String replaced = "&lt;a href = '#'&gt;Replaced&lt;/a&gt;";

            doc.insertBeforeStart(elem, replaced);
            doc.remove(begin+"Replaced".length(), end - begin);
        } catch (BadLocationException ex) {
            Logger.getLogger(TextPaneTesting1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //&lt;editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "&gt;
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextPaneTesting1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextPaneTesting1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextPaneTesting1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextPaneTesting1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //&lt;/editor-fold&gt;

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TextPaneTesting1().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(TextPaneTesting1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextPane jTextPane1;
    // End of variables declaration                   
    private javax.swing.JPopupMenu popup;
}
</code></pre>
