<p>Write a <code>JSONParser</code> class:</p>

<pre><code>public class JSONParser
{

static InputStream is   = null;
static JSONObject  jObj = null;
static String      json = "";

// constructor
public JSONParser()
{

}

// function get json from url
// by making HTTP POST or GET method
public JSONObject makeHttpRequest(
        String url ,
        String method ,
        List&lt;NameValuePair&gt; params )
{
    Log.d( "JSON" , "making HTTP request" );
    // Making HTTP request
    try
    {

        // check for request method
        if (method == "POST")
        {
            // request method is POST
            // defaultHttpClient
            DefaultHttpClient httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost( url );
            httpPost.setEntity( new UrlEncodedFormEntity( params ) );

            HttpResponse httpResponse = httpClient.execute( httpPost );
            HttpEntity httpEntity = httpResponse.getEntity();
            is = httpEntity.getContent();

        }
        else
            if (method == "GET")
            {
                // request method is GET
                DefaultHttpClient httpClient = new DefaultHttpClient();
                String paramString =
                        URLEncodedUtils.format( params , "utf-8" );
                url += "?" + paramString;
                HttpGet httpGet = new HttpGet( url );

                HttpResponse httpResponse = httpClient.execute( httpGet );
                HttpEntity httpEntity = httpResponse.getEntity();
                is = httpEntity.getContent();
            }

    }
    catch (UnsupportedEncodingException e)
    {
        e.printStackTrace();
    }
    catch (ClientProtocolException e)
    {
        e.printStackTrace();
    }
    catch (IOException e)
    {
        e.printStackTrace();
    }

    try
    {
        BufferedReader reader =
                new BufferedReader( new InputStreamReader(
                        is ,
                        "iso-8859-1" ) , 8 );
        StringBuilder sb = new StringBuilder();
        String line = null;
        while ( ( line = reader.readLine() ) != null)
        {
            sb.append( line + "\n" );
        }
        is.close();
        json = sb.toString();
    }
    catch (Exception e)
    {
        Log.e( "Buffer Error" , "Error converting result " + e.toString() );
    }

    // try parse the string to a JSON object
    try
    {
        jObj = new JSONObject( json );
    }
    catch (JSONException e)
    {
        Log.e( "JSON Parser" , "Error parsing data " + e.toString() );
    }

    // return JSON String
    return jObj;

}
}
</code></pre>

<p>Using this fetch a JSON object which you can easily parse for getting necessary values!</p>

<p><strong>If the json objects has many other <code>jsonArray</code> in it then put it in a loop and parse.</strong></p>
