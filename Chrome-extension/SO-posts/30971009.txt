<p>You might want to try a more updated library instead (I'm not sure about your version).</p>

<p>Note: You should always remove your consumer and consumer key when posting in public sites. (:</p>

<p>On you onCreate method , add in this</p>

<pre><code>    twitter = new TwitterFactory().getInstance();

    twitter.setOAuthConsumer("Consumer Key", "Consumer Secret");
</code></pre>

<p>To invoke my tokenGet class,</p>

<pre><code>  new TokenGet().execute();
</code></pre>

<p>And the tokenGet method</p>

<pre><code>    private class TokenGet extends AsyncTask&lt;String, String, String&gt; {

    @Override
    protected String doInBackground(String... args) {

        try {
            requestToken = twitter.getOAuthRequestToken();
            oauth_url = requestToken.getAuthorizationURL();
        } catch (TwitterException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return oauth_url;
    }
    @Override
    protected void onPostExecute(String oauth_url) {
        if(oauth_url != null){
            Log.e("URL", oauth_url);
            auth_dialog = new Dialog(getActivity());
            auth_dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);

            auth_dialog.setContentView(R.layout.auth_dialog);
            web = (WebView)auth_dialog.findViewById(R.id.webv);
            web.getSettings().setJavaScriptEnabled(true);
            web.loadUrl(oauth_url);
            web.setWebViewClient(new WebViewClient() {
                boolean authComplete = false;
                @Override
                public void onPageStarted(WebView view, String url, Bitmap favicon){
                    super.onPageStarted(view, url, favicon);
                }

                @Override
                public void onPageFinished(WebView view, String url) {
                    super.onPageFinished(view, url);
                    if (url.contains("oauth_verifier") &amp;&amp; authComplete == false){
                        authComplete = true;
                        Log.e("Url",url);
                        Uri uri = Uri.parse(url);
                        oauth_verifier = uri.getQueryParameter("oauth_verifier");

                        auth_dialog.dismiss();
                        new AccessTokenGet().execute();
                    }else if(url.contains("denied")){
                        auth_dialog.dismiss();
                        Toast.makeText(getActivity(), "Sorry !, Permission Denied", Toast.LENGTH_SHORT).show();


                    }
                }
            });
            auth_dialog.show();
            auth_dialog.setCancelable(true);



        }else{

            Toast.makeText(getActivity(), "Sorry !, Network Error or Invalid Credentials", Toast.LENGTH_SHORT).show();


        }
    }
}

private class AccessTokenGet extends AsyncTask&lt;String, String, Boolean&gt; {


    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        progress = new ProgressDialog(getActivity());
        progress.setMessage("Fetching Data ...");
        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);
        progress.setIndeterminate(true);
        progress.show();

    }


    @Override
    protected Boolean doInBackground(String... args) {

        try {


            accessToken = twitter.getOAuthAccessToken(requestToken, oauth_verifier);
            SharedPreferences.Editor edit = pref.edit();
            edit.putString("ACCESS_TOKEN", accessToken.getToken());
            edit.putString("ACCESS_TOKEN_SECRET", accessToken.getTokenSecret());

            edit.commit();


        } catch (TwitterException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();


        }

        return true;
    }
    @Override
    protected void onPostExecute(Boolean response) {
        if(response){
            Intent i = new Intent(getActivity(),MainMenu.class);
</code></pre>

<p>get your access token here</p>

<pre><code>            i.putExtra("ACCESS_TOKEN", accessToken.getToken());
            i.putExtra("ACCESS_TOKEN_SECRET", accessToken.getTokenSecret());
            startActivity(i);
        }
    }


}
</code></pre>

<p>I'm using 4.0.3 version of twitter4j. This is working for my case.
I took it from some tutorial site with some mods on my end but i cannot remember the url now.</p>
