<p>try this.<br>
implement custom clicklistener it will work pefectly.</p>

<pre><code>// creating interface to handle clicks for Recycler view items
public interface ClickListener
{
    void onClick(View view,int position);
    void onLongClick(View view,int position);
}
public static class CustomRecyclerTouchListener implements RecyclerView.OnItemTouchListener
{
    private GestureDetector gestureDetector;
    private MainActivity.ClickListener clickListener;
    public CustomRecyclerTouchListener(Context context,final RecyclerView recyclerView,final MainActivity.ClickListener clickListener)
    {
        this.clickListener=clickListener;
        gestureDetector=new GestureDetector(context,new GestureDetector.SimpleOnGestureListener()
        {
            @Override
            public boolean onSingleTapUp(MotionEvent e) {
                return true;
            }
            @Override
            public void onLongPress(MotionEvent e) {
               View child=recyclerView.findChildViewUnder(e.getX(),e.getY());
                if(child!=null &amp;&amp; clickListener !=null)
                {
                    clickListener.onLongClick(child,recyclerView.getChildPosition(child));
                }
            }
        });
    }
    @Override
    public boolean onInterceptTouchEvent(RecyclerView recyclerView, MotionEvent motionEvent) {
        View child=recyclerView.findChildViewUnder(motionEvent.getX(),motionEvent.getY());
        if(child!=null &amp;&amp; clickListener!=null &amp;&amp; gestureDetector.onTouchEvent(motionEvent))
        {
            clickListener.onClick(child,recyclerView.getChildPosition(child));
        }
        return false;
    }
    @Override
    public void onTouchEvent(RecyclerView recyclerView, MotionEvent motionEvent) {
    }
    @Override
    public void onRequestDisallowInterceptTouchEvent(boolean b) {
    }
}
}
</code></pre>

<p>Then implement like this.</p>

<pre><code>recyclerView.addOnItemTouchListener(new CustomRecyclerTouchListener(getApplicationContext(), recyclerView, new ClickListener() {
        @Override
        public void onClick(View view, int position) {
            User user=users.get(position);
            Toast.makeText(MainActivity.this,user.getName()+" is clicked",Toast.LENGTH_SHORT).show();
        }
        @Override
        public void onLongClick(View view, int position) {
            User user=users.get(position);
            Toast.makeText(MainActivity.this,user.getName()+" is long clicked",Toast.LENGTH_SHORT).show();
        }
    }));
</code></pre>

<p>For more details refer here:- <a href="http://coderzpassion.com/android-working-with-recycler-view/" rel="nofollow">http://coderzpassion.com/android-working-with-recycler-view/</a></p>
