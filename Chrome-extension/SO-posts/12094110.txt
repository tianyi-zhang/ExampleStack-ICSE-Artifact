<p>You are trying to call setSelected on a String. You need to call it on the checkbox. the variable "list" is an ArrayList of Strings.</p>

<p>In both cases, you are trying to call Checkbox methods on String types. You need to call them on your checkboxes.</p>

<p>**EDIT</p>

<p>What you need to do in getView is the following:</p>

<ol>
<li>if the convertView is not null, save the state of it to your "viewholder" class by calling the appropriate methods on the children of convertView. You are trying to do this if the convertView IS null, which is wrong.</li>
<li>If the convertView is null, then it isn't a recycled view, and there is nothing to save.</li>
</ol>

<p>basically, your code should look like this:</p>

<pre><code>@Override
public View getView(final int position, View convertView, ViewGroup parent) {
    ViewHolder viewHolder = null;
    if (convertView == null) {
        LayoutInflater inflator = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        convertView = inflator.inflate(R.layout.listitem, parent, false);
    } else {
        //you should change viewHolder to simply store a boolean, rather than the entire checkbox. It should just store whether or not the checkbox was checked.
        viewHolder = new ViewHolder();
        viewHolder.text = (TextView) convertView.findViewById(R.id.listcontent);
        viewHolder.isChecked = ((CheckBox) convertView.findViewById(R.id.cb)).isChecked();
        //do whatever else here
    }
    return convertView;
}
</code></pre>
