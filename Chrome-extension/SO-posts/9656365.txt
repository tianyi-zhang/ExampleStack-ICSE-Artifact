<p>can you post the rest of your activity? Especially the portion that you are using to load the list the first time.</p>

<p>Probably it is unnecessary to restart the entire activity. You just need to move the portion of your code that populates the list for you into its own method. Then you can call that method when the user wants to refresh.</p>

<p>If nothing else you should change:</p>

<pre><code> Intent reload = new Intent(getApplicationContext(), TwitterActivity.class);
</code></pre>

<p>to</p>

<pre><code>Intent reload = new Intent(TwitterActivity.this, TwitterActivity.class);
</code></pre>

<p>EDIT:
You need to move your try / catch block into a new method called refresh(). Then call that method anytime you want to reload the list. like this:</p>

<p>It would also be a bood idea to move your networking out of the main thread.</p>

<pre><code>public class TwitterActivity extends ListActivity {

@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);

    setContentView(R.layout.twitteract);


    Button refresh = (Button) findViewById(R.id.btn_refresh);

    //Listening to button event
    refresh.setOnClickListener(new View.OnClickListener() {

        public void onClick(View arg0) {
            refresh();


        }
    });



    refresh();



}

private void refresh(){

     try{
        // Create a new HTTP Client
        DefaultHttpClient defaultClient = new DefaultHttpClient();
        // Setup the get request
        HttpGet httpGetRequest = new HttpGet("https://api.twitter.com/1/statuses/user_timeline.json?screen_name=evostikleague&amp;count=10");

        // Execute the request in the client
        HttpResponse httpResponse = defaultClient.execute(httpGetRequest);
        // Grab the response
        BufferedReader reader = new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent(), "UTF-8"));
        String json = reader.readLine();

        Log.v(json,"jsonfeed");




        List&lt;String&gt; items = new ArrayList&lt;String&gt;();

          //items.add(json);


        JSONArray jArray = new JSONArray(json);


        for (int i=0; i &lt; jArray.length(); i++)
        {    JSONObject oneObject = jArray.getJSONObject(i);
            items.add(oneObject.getString("text"));
             Log.i("items", "items");
        }

        setListAdapter ( new ArrayAdapter&lt;String&gt;(this, R.layout.single_item, items));
        ListView list = getListView();
        list.setTextFilterEnabled(true);


        list.setOnItemClickListener(new OnItemClickListener(){

            public void onItemClick(AdapterView&lt;?&gt; arg0, View arg1, int arg2,
                    long arg3) {
                // TODO Auto-generated method stub
                Toast.makeText(getApplicationContext(), ((TextView) arg1).getText(),1000).show();
            }



        });


    } catch(Exception e){
        // In your production code handle any errors and catch the individual exceptions
        e.printStackTrace();
    }




}


@Override
public boolean onCreateOptionsMenu(Menu menu) {
    MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu, menu);
    return true;
}

@Override
public boolean onOptionsItemSelected(MenuItem item) {

    if (item.getItemId() == R.id.home) {

        startActivity(new Intent(TwitterActivity.this, HomeActivity.class));

        return(true);
  }


    if (item.getItemId() == R.id.match) {

        startActivity(new Intent(TwitterActivity.this, MatchActivity.class));

        return(true);
  }



    if (item.getItemId() == R.id.teams) {

        startActivity(new Intent(TwitterActivity.this, TeamsActivity.class));

        return(true);
  }



    if (item.getItemId() == R.id.twitter) {

        startActivity(new Intent(TwitterActivity.this, TwitterActivity.class));

        return(true);
  }

    if (item.getItemId() == R.id.info) {

        startActivity(new Intent(TwitterActivity.this, InfoActivity.class));

        return(true);
  }


    return(super.onOptionsItemSelected(item));


}

}
</code></pre>
