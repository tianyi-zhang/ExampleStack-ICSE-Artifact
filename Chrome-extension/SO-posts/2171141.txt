<p>The task you are trying to accomplish is tantamount to drawing a random point from the N-dimensional unit simplex.</p>

<p><a href="http://en.wikipedia.org/wiki/Simplex#Random_sampling">http://en.wikipedia.org/wiki/Simplex#Random_sampling</a> might help you.</p>

<p>A naive solution might go as following:</p>

<pre><code>public static double[] getArray(int n)
    {
        double a[] = new double[n];
        double s = 0.0d;
        Random random = new Random();
        for (int i = 0; i &lt; n; i++)
        {
           a [i] = 1.0d - random.nextDouble();
           a [i] = -1 * Math.log(a[i]);
           s += a[i];
        }
        for (int i = 0; i &lt; n; i++)
        {
           a [i] /= s;
        }
        return a;
    }
</code></pre>

<p>To draw a point <em>uniformly</em> from the N-dimensional unit simplex, we must take a vector of <em>exponentially</em> distributed random variables, then normalize it by the sum of those variables. To get an exponentially distributed value, we take a negative <code>log</code> of uniformly distributed value.</p>
