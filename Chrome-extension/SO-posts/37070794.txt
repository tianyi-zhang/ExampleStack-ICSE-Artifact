<p>Try this code </p>

<p>1) MainActivity.class</p>

<pre><code>public class MainActivity extends AppCompatActivity {

    private static final String TAG = "userList";
    private RecyclerView mRecyclerView;
    private MyRecyclerAdapter adapter;
    private TextView ParticipantsCounts;
    private ArrayList&lt;HashMap&lt;String, String&gt;&gt; list;
    private HashMap&lt;String, String&gt; listsub;
    private Context context;
    private SwipeRefreshLayout swipeRefreshLayout;

    private final String urlmain = "http://bmcctroika.hol.es/get-data.php";
    private ProgressDialog pDialog;
    private Integer result = 0;
    private HttpURLConnection urlConnection;
    private URL url;
    private int statusCode;
    private StringBuilder response;
    private BufferedReader r;
    private String line;
    private JSONArray posts;
    private SearchView search;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_main);
        context = MainActivity.this;

        search = (SearchView) findViewById(R.id.search);

        // Initialize recycler view
        mRecyclerView = (RecyclerView) findViewById(R.id.recycler_view);
        ParticipantsCounts = (TextView) findViewById(R.id.ParticipantsCount);

        // Downloading data from below url
        new AsyncHttpTask().execute(urlmain);

        swipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.swipe_refresh_layout);
        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                refreshitems();
                swipeRefreshLayout.setRefreshing(false);
            }
        });
    }

    private void refreshitems() {

        new AsyncHttpTask().execute(urlmain);
    }

    public class AsyncHttpTask extends AsyncTask&lt;String, Void, Integer&gt; {

        @Override
        protected void onPreExecute() {

            pDialog = new ProgressDialog(context);
            pDialog.setMessage("Please wait");
            pDialog.setIndeterminate(false);
            pDialog.setCancelable(false);
            pDialog.show();
        }

        @Override
        protected Integer doInBackground(String... params) {

            data1(params);

            return result; //"Failed to fetch data!";
        }

        @Override
        protected void onPostExecute(Integer result) {

            pDialog.dismiss();

            // Download complete.
            if (result == 1) {

                ParticipantsCounts.setText("No. of Participants : " + String.valueOf(posts.length()));

                if (list.size() &gt; 0) {
                    mRecyclerView.setLayoutManager(new LinearLayoutManager(mRecyclerView.getContext()));
                    adapter = new MyRecyclerAdapter(mRecyclerView.getContext(), list);
                    mRecyclerView.setAdapter(adapter);

                    search.setOnQueryTextListener(listener);

                } else {
                    Toast.makeText(context, "No list found!", Toast.LENGTH_SHORT).show();

                }
            } else {
                Toast.makeText(context, "Failed to fetch data!", Toast.LENGTH_SHORT).show();
            }
        }
    }

    SearchView.OnQueryTextListener listener = new SearchView.OnQueryTextListener() {
        @Override
        public boolean onQueryTextSubmit(String query) {
            return false;
        }

        @Override
        public boolean onQueryTextChange(String query) {
            query = query.toLowerCase();

            final ArrayList&lt;HashMap&lt;String, String&gt;&gt; filteredList = new ArrayList&lt;&gt;();

            for (int i = 0; i &lt; list.size(); i++) {

                final String text = list.get(i).toString().toLowerCase();
                if (text.contains(query)) {

                    filteredList.add(list.get(i));
                }
            }

            mRecyclerView.setLayoutManager(new LinearLayoutManager(mRecyclerView.getContext()));
            adapter = new MyRecyclerAdapter(mRecyclerView.getContext(), filteredList);
            mRecyclerView.setAdapter(adapter);
            adapter.notifyDataSetChanged();
            return true;
        }
    };


    private void data1(String... params) {

        try {
            url = new URL(params[0]);
            urlConnection = (HttpURLConnection) url.openConnection();
            statusCode = urlConnection.getResponseCode();

            // 200 represents HTTP OK
            if (statusCode == 200) {
                r = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
                response = new StringBuilder();

                while ((line = r.readLine()) != null) {
                    response.append(line);
                }

                parseResult(response.toString());
                result = 1; // Successful

            } else {
                result = 0; //"Failed to fetch data!";
            }
        } catch (Exception e) {
            Log.d(TAG, e.getLocalizedMessage());
        }
    }


    private void parseResult(String result) {
        try {
            JSONObject response = new JSONObject(result);
            posts = response.optJSONArray("result");
            list = new ArrayList&lt;&gt;();
            Log.e("posts", "posts" + posts.length());
            for (int i = 0; i &lt; posts.length(); i++) {
                JSONObject post = posts.optJSONObject(i);
                listsub = new HashMap&lt;&gt;();
                listsub.put("fullname", post.optString("fullname"));
                listsub.put("contactno", post.optString("contactno"));
                listsub.put("emailaddress", post.optString("emailaddress"));
                listsub.put("eventname", post.optString("eventname"));
                listsub.put("collegename", post.optString("collegename"));
                list.add(listsub);
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
}
</code></pre>

<p>2) activity_main.xml</p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"&gt;


    &lt;SearchView
        android:id="@+id/search"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="center_vertical"
        android:layout_marginTop="10dp"
        android:background="@android:color/holo_blue_dark"
        android:hint="Search here"
        android:paddingLeft="20dp"
        android:paddingRight="20dp"
        android:textColor="@android:color/black"
        android:textColorHint="@android:color/black"
        android:textSize="15dp" /&gt;

    &lt;android.support.v4.widget.SwipeRefreshLayout
        android:id="@+id/swipe_refresh_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"&gt;

        &lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:layout_margin="10dp"&gt;

            &lt;TextView
                android:id="@+id/ParticipantsCount"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textColor="@android:color/black"
                android:textSize="15dp" /&gt;

            &lt;android.support.v7.widget.RecyclerView
                android:id="@+id/recycler_view"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"&gt;

            &lt;/android.support.v7.widget.RecyclerView&gt;
        &lt;/LinearLayout&gt;
    &lt;/android.support.v4.widget.SwipeRefreshLayout&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>3) MyRecyclerAdapter.class</p>

<pre><code>public class MyRecyclerAdapter extends RecyclerView.Adapter&lt;MyRecyclerAdapter.ViewHolder&gt; {

    private ArrayList&lt;HashMap&lt;String, String&gt;&gt; list;
    private HashMap&lt;String, String&gt; listsub;
    private Context mContext;
    View view;

    public static class ViewHolder extends RecyclerView.ViewHolder {
        public final View mView;

        public TextView textView, contactTV, emailTV, collegename, eventname;


        public ViewHolder(View view) {
            super(view);

            mView = view;

            this.textView = (TextView) view.findViewById(R.id.title);
            this.contactTV = (TextView) view.findViewById(R.id.contactTV);
            this.emailTV = (TextView) view.findViewById(R.id.emailTV);
            this.eventname = (TextView) view.findViewById(R.id.eventname);
            this.collegename = (TextView) view.findViewById(R.id.collegename);

        }
    }

    public MyRecyclerAdapter(Context context, ArrayList&lt;HashMap&lt;String, String&gt;&gt; feedItemList) {
        list = feedItemList;
        this.mContext = context;
    }

    @Override
    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {

        view = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.list_row, parent, false);

        return new ViewHolder(view);
    }

    @Override
    public void onBindViewHolder(final ViewHolder holder, final int postion) {


        listsub = list.get(postion);

        //Setting text view title
        holder.textView.setText(listsub.get("fullname"));
        holder.contactTV.setText(listsub.get("contactno"));
        holder.emailTV.setText(listsub.get("emailaddress"));
        holder.eventname.setText(listsub.get("eventname"));
        holder.collegename.setText(listsub.get("collegename"));

    }


    @Override
    public int getItemCount() {
        return list.size();
    }

}
</code></pre>

<p>4) list_row.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:layout_margin="10dp"&gt;


    &lt;TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/title"
        android:textSize="13dp"
        android:textColor="@android:color/black" /&gt;

       &lt;TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/contactTV"
        android:textSize="13dp"
        android:textColor="@android:color/black" /&gt;

    &lt;TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/emailTV"
        android:textSize="13dp"
        android:textColor="@android:color/black" /&gt;

    &lt;TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/eventname"
        android:textSize="13dp"
        android:textColor="@android:color/black" /&gt;

    &lt;TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/collegename"
        android:textSize="13dp"
        android:textColor="@android:color/black" /&gt;

    &lt;TextView
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="@android:color/black" /&gt;

&lt;/LinearLayout&gt;
</code></pre>
