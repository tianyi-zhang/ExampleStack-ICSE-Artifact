<p>Start with really simplistic rotating Queue implementation with "C/C++ like" attitude and fixed size.</p>

<pre><code>class SimpleQueue&lt;E&gt;
{

int index   = 0;
int head    = 0;
int size    = 100;
int counter = 0;
E[] data    ;


@SuppressWarnings("unchecked")
SimpleQueue()
{
    data = (E[]) new Object[size];
}

public void add(E e)
{
    data[index]=e;
    index=(index+1)%size;
    counter++;
}

public E poll()
{
    E value = data[head];
    head=(head+1)%size;
    counter--;
    return value;
}

public boolean empty()
{ return counter==0; }

//Test
public static void main(String[] args)
{
    SimpleQueue&lt;Integer&gt; s = new SimpleQueue&lt;Integer&gt;();

    System.out.println(s.empty());

    for(int i=0; i&lt; 10; i++)
        s.add(i);

    System.out.println(s.empty());

    for(int i=0; i&lt;10; i++)
        System.out.print(s.poll()+",");

    System.out.println("\n"+s.empty());

}
}
</code></pre>

<p>And then improve it.</p>
