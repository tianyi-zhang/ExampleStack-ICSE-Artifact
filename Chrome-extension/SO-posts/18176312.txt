<p>Assuming you are using the Bloomberg Java API, for historical data you need to use the <code>"//blp/refdata"</code> service and send a <code>"HistoricalDataRequest"</code>. Several examples are given in the Developer's guide, available on <a href="http://www.openbloomberg.com/open-api/" rel="nofollow">the project page</a>.</p>

<p>Alternatively, you can use <a href="https://github.com/assylias/jBloomberg" rel="nofollow">jBloomberg*</a> which is simpler to use because it handles the messy details for you. To retrieve historical data, you can follow the example given in <a href="http://assylias.github.io/jBloomberg/apidocs/index.html" rel="nofollow">the javadoc</a>:</p>

<pre><code>BloombergSession session = new DefaultBloombergSession();
session.start();

RequestBuilder&lt;HistoricalData&gt; hrb = new HistoricalRequestBuilder("SPX Index",
     "PX_LAST", DateTime.now().minusDays(7),
     DateTime.now())
     .fill(HistoricalRequestBuilder.Fill.NIL_VALUE)
     .days(HistoricalRequestBuilder.Days.ALL_CALENDAR_DAYS);
HistoricalData result = session.submit(hrb).get();
Map&lt;DateTime, TypedObject&gt; data = result.forSecurity("SPX Index").forField("PX_LAST").get();
for (Map.Entry&lt;DateTime, TypedObject&gt; e : data.entrySet()) {
    DateTime dt = e.getKey();
    double price = e.getValue().asDouble();
    System.out.println("[" + dt + "] " + price);
}
</code></pre>

<p>*Disclaimer: I am the author of jBloomberg</p>
