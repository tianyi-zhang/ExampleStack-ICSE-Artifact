<p>If you need to <a href="http://littletutorials.com/2008/03/10/getting-file-system-details-in-java/" rel="nofollow">Getting file system details in Java</a> try This:</p>

<pre><code>import javax.swing.*;
import java.awt.*;
import java.awt.Color;
import java.awt.event.*;
import java.io.File;
import javax.swing.filechooser.FileSystemView;

public class Main {

    public static void main(String[] args) {

        System.out.println("File system roots returned byFileSystemView.getFileSystemView():");
        FileSystemView fsv = FileSystemView.getFileSystemView();
        File[] roots = fsv.getRoots();
        for (int i = 0; i &lt; roots.length; i++) {
            System.out.println("Root: " + roots[i]);
        }

        System.out.println("Home directory: " + fsv.getHomeDirectory());

        System.out.println("File system roots returned by File.listRoots():");
        File[] f = File.listRoots();
        for (int i = 0; i &lt; f.length; i++) {
            System.out.println("Drive: " + f[i]);
            System.out.println("Display name: " + fsv.getSystemDisplayName(f[i]));
            System.out.println("Is drive: " + fsv.isDrive(f[i]));
            System.out.println("Is floppy: " + fsv.isFloppyDrive(f[i]));
            System.out.println("Readable: " + f[i].canRead());
            System.out.println("Writable: " + f[i].canWrite());
            System.out.println("Total space: " + f[i].getTotalSpace());
            System.out.println("Usable space: " + f[i].getUsableSpace());
        }
    }
}
</code></pre>

<p>Quoted from <a href="http://stackoverflow.com/a/9441330/1743852"><strong>this answer</strong></a>:</p>

<blockquote>
  <p>Using JNA, you can call Win32 Kernel32's GetVolumeInformation() to
  retrieve lpFileSystemNameBuffer parameter which receives the name of
  the file system, for example, the FAT file system or the NTFS file
  system</p>
</blockquote>
