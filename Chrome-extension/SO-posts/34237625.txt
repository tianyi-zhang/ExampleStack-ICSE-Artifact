<p>Expandable listview adpater</p>

<pre><code>public class ExpandableAdapter  extends BaseExpandableListAdapter {

private Context _context;
ArrayList&lt;Group&gt; list;

public ExpandableAdapter(Context context, ArrayList&lt;Group&gt; list) {
    this._context = context;
   this.list = list;
}

@Override
public Object getChild(int groupPosition, int childPosititon) {
    return list.get(groupPosition).getMembers().get(childPosititon);

}

@Override
public long getChildId(int groupPosition, int childPosition) {
    return childPosition;
}

@Override
public View getChildView(int groupPosition, final int childPosition,
                         boolean isLastChild, View convertView, ViewGroup parent) {



    if (convertView == null) {
        LayoutInflater infalInflater = (LayoutInflater) this._context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        convertView = infalInflater.inflate(R.layout.expand_child, null);
    }

    TextView txtListChild = (TextView) convertView.findViewById(R.id.text1);

    txtListChild.setText(list.get(groupPosition).getMembers().get(childPosition).getName());
    return convertView;
}

@Override
public int getChildrenCount(int groupPosition) {
     return list.get(groupPosition).getMembers().size();
}

@Override
public Object getGroup(int groupPosition) {
     return list.get(groupPosition);
}

@Override
public int getGroupCount() {
     return list.size();
}

@Override
public long getGroupId(int groupPosition) {
    return groupPosition;
}

@Override
public View getGroupView(int groupPosition, boolean isExpanded,
                         View convertView, ViewGroup parent) {

    if (convertView == null) {
        LayoutInflater infalInflater = (LayoutInflater) this._context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        convertView = infalInflater.inflate(android.R.layout.simple_expandable_list_item_2, null);
    }

    TextView lblListHeader = (TextView) convertView
            .findViewById(android.R.id.text1);
    lblListHeader.setTypeface(null, Typeface.BOLD);
    lblListHeader.setText(list.get(groupPosition).getGroupName());

    return convertView;
}

@Override
public boolean hasStableIds() {
    return false;
}

@Override
public boolean isChildSelectable(int groupPosition, int childPosition) {
    return true;
}
</code></pre>

<p>}</p>
