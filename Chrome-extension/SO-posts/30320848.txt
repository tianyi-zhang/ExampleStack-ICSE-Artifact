<p>Yeah, I didn't mention about it. However, please note that applying different write types works under the condition that the characteristic you write the value to must be writable which is the bluetooth device-specific logic. Find out first of what type your characteristic is because it may have the same type that you demand. Once it meets the condition of being writable every WRITE_TYPE should work for you.</p>

<p>By analyzing BluetoothGatt's writeCharacteristic() method it is clearly visible:</p>

<pre><code> public boolean writeCharacteristic(BluetoothGattCharacteristic characteristic) {
    if ((characteristic.getProperties() &amp; BluetoothGattCharacteristic.PROPERTY_WRITE) == 0
        &amp;&amp; (characteristic.getProperties() &amp;
            BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE) == 0) return false;

    if (VDBG) Log.d(TAG, "writeCharacteristic() - uuid: " + characteristic.getUuid());
    if (mService == null || mClientIf == 0 || characteristic.getValue() == null) return false;

    BluetoothGattService service = characteristic.getService();
    if (service == null) return false;

    BluetoothDevice device = service.getDevice();
    if (device == null) return false;

    synchronized(mDeviceBusy) {
        if (mDeviceBusy) return false;
        mDeviceBusy = true;
    }

    try {
        mService.writeCharacteristic(mClientIf, device.getAddress(),
            service.getType(), service.getInstanceId(),
            new ParcelUuid(service.getUuid()), characteristic.getInstanceId(),
            new ParcelUuid(characteristic.getUuid()),
            characteristic.getWriteType(), AUTHENTICATION_NONE,
            characteristic.getValue());
    } catch (RemoteException e) {
        Log.e(TAG,"",e);
        mDeviceBusy = false;
        return false;
    }

    return true;
}
</code></pre>

<p>I know it is my second answer but it provides elaboration to my first post. I hope you helped you somehow.</p>
