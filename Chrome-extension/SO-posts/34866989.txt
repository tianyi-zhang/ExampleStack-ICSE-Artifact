<p>So after looking around and debugging I found that for some reason FernFlower decides to completely ignore some of the data in the LocalVariableTable.</p>

<p>Here is ferns original code for decoding the LocalVariableTable:</p>

<pre><code>public void initContent(ConstantPool pool) throws IOException {
    DataInputFullStream data = stream();

    int len = data.readUnsignedShort();
    if (len &gt; 0) {
        mapVarNames = new HashMap&lt;Integer, String&gt;(len);
        for (int i = 0; i &lt; len; i++) {
            data.discard(4);
            int nameIndex = data.readUnsignedShort();
            data.discard(2);
            int varIndex = data.readUnsignedShort();
            mapVarNames.put(varIndex, pool.getPrimitiveConstant(nameIndex).getString());
        }
    } else {
        mapVarNames = Collections.emptyMap();
    }
}
</code></pre>

<p>If you want type information you need to add the following:</p>

<pre><code>@Override
public void initContent(ConstantPool pool) throws IOException {
    DataInputFullStream data = stream();

    int len = data.readUnsignedShort();
    if (len &gt; 0) {
        mapVarNames = new HashMap&lt;Integer, String&gt;(len);
        mapVarTypes = new HashMap&lt;Integer, String&gt;(len);
        for (int i = 0; i &lt; len; i++) {
            int start  = data.readUnsignedShort();
            int end    = start + data.readUnsignedShort();
            int nameIndex = data.readUnsignedShort();
            int typeIndex = data.readUnsignedShort();
            int varIndex = data.readUnsignedShort();
            mapVarNames.put(varIndex, pool.getPrimitiveConstant(nameIndex).getString());
            mapVarTypes.put(varIndex, pool.getPrimitiveConstant(typeIndex).getString());
        }
    } else {
        mapVarNames = Collections.emptyMap();
        mapVarTypes = Collections.emptyMap();
    }
}
</code></pre>

<p>It now outputs the same code as Jode with proper variable types :)</p>

<p>I wonder why FernFlower chose to ignore this information.</p>
