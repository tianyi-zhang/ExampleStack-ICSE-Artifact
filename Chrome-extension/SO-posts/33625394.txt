<p>As I am trying this also and I can find a solution by myself</p>

<p>1: make sure video url is <a href="https://drive.google.com/file/d/VIDEO-ID/preview" rel="nofollow">https://drive.google.com/file/d/VIDEO-ID/preview</a>"</p>

<p>2: I download web content from the above url and get direct video url:</p>

<pre><code>public String downloadUrl(String myurl) throws IOException {
        InputStream is = null;
        try {
            URL url = new URL(myurl);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setReadTimeout(10000);
            conn.setConnectTimeout(15000);
            conn.setRequestMethod("GET");
            conn.setDoInput(true);
            conn.connect();
            is = conn.getInputStream();
            String contentAsString = readIt(is);
            return contentAsString;
        } finally {
            if (is != null) {
                is.close();
            }
        }
    }
</code></pre>

<p>//Get direct video url from stream output</p>

<pre><code>public String readIt(InputStream stream) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(stream, "UTF-8"));
        StringBuilder sb = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            if (line.contains("fmt_stream_map")) {
                sb.append(line + "\n");
                break;
            }
        }
        reader.close();
        String result = decode(sb.toString());
        String[] url = result.split("\\|");
        return url[1]; 
    }
</code></pre>

<p>//We need a function to decode url to normal use</p>

<pre><code>public String decode(String in) {
        String working = in;
        int index;
        index = working.indexOf("\\u");
        while (index &gt; -1) {
            int length = working.length();
            if (index &gt; (length - 6)) break;
            int numStart = index + 2;
            int numFinish = numStart + 4;
            String substring = working.substring(numStart, numFinish);
            int number = Integer.parseInt(substring, 16);
            String stringStart = working.substring(0, index);
            String stringEnd = working.substring(numFinish);
            working = stringStart + ((char) number) + stringEnd;
            index = working.indexOf("\\u");
        }
        return working;
    }
</code></pre>

<p>After i use thes three function now I can get a direct video url that return by <code>readtIt(InputStream stream)</code> as a string and I can use it for parsing to VideoView.</p>
