<p>Try this code. The following code takes an <code>ArrayList</code> input and outputs an <code>ArrayList</code> as well so it still works along the same basis of your code. The actual sort is handled in a different class <code>MergeSort</code> and is passes into <code>ForMergeSort</code>. Hope this helps</p>

<p><strong>MergeSort.java</strong></p>

<pre><code>public class MergeSort 
{
    private int[] array;
    private int[] tempMergArr;
    private int length;

    public void sort(int[] inputArr)
    {

    }

    public int[] getSortedArray(int[] inputArr)
    {
        this.array = inputArr;
        this.length = inputArr.length;
        this.tempMergArr = new int[length];
        doMergeSort(0, length - 1);

        for(int i=0;i&lt;length;i++)
        {
            int correctNumber = i+1;
            System.out.println("Value "+correctNumber+" of the sorted array which was sorted via the Merge Sort is: "+inputArr[i]);
        }

        return inputArr;
    }

    private void doMergeSort(int lowerIndex, int higherIndex) 
    {
        if (lowerIndex &lt; higherIndex) 
        {
            int middle = lowerIndex + (higherIndex - lowerIndex) / 2;
            doMergeSort(lowerIndex, middle);
            doMergeSort(middle + 1, higherIndex);
            mergeParts(lowerIndex, middle, higherIndex);
        }
    }

    private void mergeParts(int lowerIndex, int middle, int higherIndex) 
    {
        for (int i = lowerIndex; i &lt;= higherIndex; i++) 
        {
            tempMergArr[i] = array[i];
        }
        int i = lowerIndex;
        int j = middle + 1;
        int k = lowerIndex;

        while (i &lt;= middle &amp;&amp; j &lt;= higherIndex) 
        {
            if (tempMergArr[i] &lt;= tempMergArr[j]) 
            {
                array[k] = tempMergArr[i];
                i++;
            } 

            else 
            {
                array[k] = tempMergArr[j];
                j++;
            }

            k++;
        }

        while (i &lt;= middle) 
        {
            array[k] = tempMergArr[i];
            k++;
            i++;
        }
    }
}
</code></pre>

<p><strong>ForMergeSort.java</strong></p>

<pre><code>import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class ForMergeSort
{
    ArrayList&lt;Integer&gt; arrayList = new ArrayList&lt;Integer&gt;();
    ArrayList&lt;Integer&gt; sortedArrayList = new ArrayList&lt;Integer&gt;();
    MergeSort mS = new MergeSort();

    public void buildArrayList()
    {
        Scanner input = new Scanner(System.in);
        System.out.println("Enter the number of elements to sort: ");
        int toSort = input.nextInt();
        System.out.println("Enter the numbers: ");
        for(int i =0; i&lt;toSort; i++)
        {
            int number = input.nextInt();
            arrayList.add(number);
        }
    }

    public void runMergeSort(ArrayList&lt;Integer&gt; arrayList)
    {
        int[] arrayOfValues = new int[arrayList.size()];

        int i = 0;
        for(int a:arrayList)
        {
            arrayOfValues[i] = a;
            i++;
        }

        MergeSort mS = new MergeSort();

        for(int intOfArray:mS.getSortedArray(arrayOfValues))
        {
            sortedArrayList.add(intOfArray);
        }

        System.out.println(sortedArrayList.toString());
    }

    public static void main(String[] args)
    {
        ForMergeSort fMS = new ForMergeSort();
        fMS.buildArrayList();
        fMS.runMergeSort(fMS.arrayList);
    }
}
</code></pre>
