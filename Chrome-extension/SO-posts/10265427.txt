<p>Well your answer is in your implementation itself. If you notice, in your <code>onContextItemSelected()</code>
, the following statement brings in the info of the item you have selected in your main listview.</p>

<blockquote>
  <p>AdapterContextMenuInfo info = (AdapterContextMenuInfo) item.getMenuInfo();</p>
</blockquote>

<p>You can use info.position to find out the position of your item in the list and then get the object from your ArrayList using songsList.get(info.position).</p>

<pre><code>@Override
public boolean onContextItemSelected(MenuItem item) {
    AdapterContextMenuInfo info = (AdapterContextMenuInfo) item.getMenuInfo();

    switch (item.getItemId()) {
    case R.id.delete: 
        Toast.makeText(this, "Delete Called.", Toast.LENGTH_SHORT).show();
        //Make sure songsList is a global variable so that it can be accessed here.
        HashMap&lt;String, String&gt; song = songsList.get(info.position);
        //Call your delete function to delete the song.

        return true;
    case R.id.share:
        Toast.makeText(this, "Share Called.", Toast.LENGTH_SHORT).show();

        default:
            return super.onContextItemSelected(item);
    }
}
</code></pre>
