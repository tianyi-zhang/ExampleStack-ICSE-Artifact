<p>Peharps you could use this code snippet:</p>

<pre><code>    public static void main(String[] args) {    
    String[] cmd = { "/bin/sh", "-c", "script.sh" };
    BufferedReader bri = null, bre = null;
    int exitC = 0;
    try {
        Process p = Runtime.getRuntime().exec(cmd);
        exitC = p.waitFor();
        bri = new BufferedReader(new InputStreamReader(p.getInputStream()));
        bre = new BufferedReader(new InputStreamReader(p.getErrorStream()));
        String line = "";
        while ((line = bri.readLine()) != null) {
            System.out.println(line);               
        }
        while ((line = bre.readLine()) != null) {
            System.out.println(line);
        }
        bri.close();
        bre.close();
    } catch (Exception e) {
        e.printStackTrace();
    } 
    System.out.println("Exit Code: "+ exitC);
}
</code></pre>

<p>Or if you want to you use processBuilder.start()</p>

<pre><code>    String file = "script.sh";
    File shellScriptFile= new File(file);
    Runtime run = Runtime.getRuntime();
    ProcessBuilder processBuilder = new ProcessBuilder(shellScriptFile.getAbsolutePath(), "Argument-ONE" , "Argument-TWO");
    try {
        Process process = processBuilder.start();
        int exitC = process.waitFor();
        BufferedReader bri = new BufferedReader(new InputStreamReader(process.getInputStream()));
        String inputLine = "";
        while ((inputLine = bri.readLine()) != null) {
            System.out.println(inputLine);
        }
        BufferedReader bre = new BufferedReader(new InputStreamReader(process.getErrorStream()));
        String errorLine = "";
        while ((errorLine = bre.readLine()) != null) {
            System.out.println(errorLine);
        }
        System.out.println("Exit Code:" + exitC);
    } catch (IOException e){
        //captured Exception Here
        //e.printStackTrace();
    }
</code></pre>

<p>The difference is that ProcessBuilder.start() checks if it is a valid operating system command, those valid commands are system-dependent </p>
