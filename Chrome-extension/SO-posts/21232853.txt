<p>The constraint</p>

<pre><code>gbc_CheckPanel.fill = GridBagConstraints.BOTH;
</code></pre>

<p>tells the GridBagLayout to let this component use any available extra space (also depending on its preferred- and maximum size). Using <code>GridBagConstraints.NONE</code> or <code>GridBagConstraints.VERTICAL</code> could solve this, but you still have to decide which component will receive the extra space.</p>

<p>EDIT: Based on the comments, it is still not clear how the other components are inserted, and how the distribution of extra space is specified. In this example, the <code>weighty</code> fields are used to say that the table should receive all extra space. Maybe it helps to identify differences to the original program:</p>

<pre><code>import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class CheckboxConstraints
{
    public static void main(String[] args)
    {
        SwingUtilities.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                createAndShowGUI();
            }
        });
    }

    private static void createAndShowGUI()
    {
        JFrame f = new JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JPanel centerPanel = new JPanel(new GridBagLayout());
        centerPanel.setBackground(Color.RED);

        fill(centerPanel);
        f.getContentPane().setLayout(new GridLayout(1,1));
        f.getContentPane().add(centerPanel);

        f.setSize(500, 300);
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    private static void fill(JPanel centerPanel)
    {
        addSearchBar(centerPanel);
        addCheckBoxPanel(centerPanel);
        addTable(centerPanel);
    }


    private static void addSearchBar(JPanel centerPanel)
    {
        GridBagConstraints gbc = null;
        gbc = new GridBagConstraints();
        gbc.gridwidth = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0;
        gbc.weighty = 0;
        centerPanel.add(new JButton("Search"), gbc);

        gbc = new GridBagConstraints();
        gbc.gridwidth = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1;
        gbc.weighty = 0;
        centerPanel.add(new JTextField(), gbc);
    }

    private static void addCheckBoxPanel(JPanel centerPanel)
    {
        JPanel checkPanel = new JPanel();
        checkPanel.setBackground(Color.WHITE);
        GridBagConstraints gbc_CheckPanel = new GridBagConstraints();
        gbc_CheckPanel.gridwidth = 2;
        gbc_CheckPanel.fill = GridBagConstraints.BOTH;
        gbc_CheckPanel.gridx = 0;
        gbc_CheckPanel.gridy = 1;
        gbc_CheckPanel.weighty = 0;
        centerPanel.add(checkPanel, gbc_CheckPanel);
        checkPanel.setLayout(new GridLayout(0, 6, 0, 0));

        checkPanel.add(new JCheckBox("C0"));
        checkPanel.add(new JCheckBox("C1"));
        checkPanel.add(new JCheckBox("C2"));
        checkPanel.add(new JCheckBox("C3"));
        checkPanel.add(new JCheckBox("C4"));
        checkPanel.add(new JCheckBox("C5"));
    }

    private static void addTable(JPanel centerPanel)
    {
        JTable table = new JTable(new Object[][] {
            {"C00", "C01" },
            {"C00", "C01" },
        }, new Object[]{ "H0", "H1" });
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weighty = 1.0;
        JScrollPane scrollPane = new JScrollPane(table);
        centerPanel.add(scrollPane, gbc);
    }

}
</code></pre>
