<p>class ViewHolder  </p>

<pre><code>import android.util.SparseArray;
import android.view.View;

@SuppressWarnings("unchecked")
public class ViewHolder
{

private static final String TAG = "View Holder";

public static &lt;T extends View&gt; T get(View view, int id) 
{
    SparseArray&lt;View&gt; viewHolder = (SparseArray&lt;View&gt;) view.getTag();
    if (viewHolder == null) 
    {
        viewHolder = new SparseArray&lt;View&gt;();
        view.setTag(viewHolder);
    }
    View childView = viewHolder.get(id);
    if (childView == null) 
    {
        childView = view.findViewById(id);
        viewHolder.put(id, childView);
    }
    return (T) childView;
}

public static &lt;T extends View&gt; T get(View view, int id, int position) 
{
    SparseArray&lt;View&gt; viewHolder = (SparseArray&lt;View&gt;) view.getTag();
    if (viewHolder == null) 
    {
        viewHolder = new SparseArray&lt;View&gt;();
        view.setTag(viewHolder);
    }
    View childView = viewHolder.get(id);

    if (childView == null) 
    {
        childView = view.findViewById(id);
        viewHolder.put(id, childView);
    }
    childView.setTag(position);
    return (T) childView;
}
}
</code></pre>

<p>class Admin  </p>

<pre><code>public class Admin extends ListActivity
{
    private DBAdapter mDbAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.admin);

        mDbAdapter =  = new DBAdapter(this);
        mDbAdapter.open();

        getListView().setAdapter(new PlayerAdapter(this, mDbAdapter..getAllPlayers()));
    }

    private class PlayerAdapter extends BaseAdapter implements OnClickListener
    {
        private Cursor mPlayers;
        private Context mContext;

        public PlayerAdapter(Context context, Cursor players)
        {
            mContext = context; 
            mPlayers = players;
        }

        @Override
        public int getCount()
        {
            return mPlayers.getCount();
        }

        @Override
        public PlayerInfo getItem(int position)
        {
            if (mPlayers.moveToPosition(position))
            {
                String name = mPlayers.getString(mPlayers.getColumnIndex("USERNAME"));
                String password = mPlayers.getString(mPlayers.getColumnIndex("PASSWORD"));
                String email = mPlayers.getString(mPlayers.getColumnIndex("EMAIL");

                return new PlayerInfo(name, password, email);
            }

            return null;
        }

        @Override
        public long getItemId(int position)
        {
            mPlayers.moveToPosition(position);
            return mPlayers.getLong(mPlayers.getColumnIndex("_id");
        }

        @Override
        public View getView(int position, View convertView, ViewGroup parent)
        {
            if (convertView == null)
            {
                convertView = LayoutInflater.from(mContext)
                            .inflate(R.layout.list_items, parent, false);
            }

            PlayerInfo playerInfo = getItem(position);
            TextView nameTextView = ViewHolder.get(convertView, R.id.AdminUsername);
            TextView passwordTextView = ViewHolder.get(convertView, R.id.AdminPassword);
            TextView emailTextView = ViewHolder.get(convertView, R.id.AdminEmail);
            Button deleteButton = ViewHolder.get(convertView, R.id.PlayerDelete, position);
            deleteButton.setOnClickListener(this);

            nameTextView.setText(playerInfo.getName());
            passwordTextView.setText(playerInfo.getPassword());
            emailTextView.setText(playerInfo.getEmail());
            return convertView;
        }

        @Override
        public void onClick(View v)
        {
             int position = (Integer) v.getTag();
                mPlayers.moveToPosition(position);
                long id = mPlayers.getLong(mPlayers.getColumnIndex("_id"));
                mDbAdapter.deletePlayer(id);
                mPlayers = mDbAdapter.getAllPlayers();
                notifyDataSetChanged();
                break;
        }
    }

}

    public class PlayerInfo
    {
        private String mName;
        private String mPassword;
        private String mEmail;

        public PlayerInfo(String name, String password, String email)
        {
            mName = name;
            mPassword = password;
            mEmail = email;
        }

        public String getName()
        {
            return mName;
        }

        public String getPassword()
        {
            return mPassword;
        }

        public String getEmail()
        {
            return mEmail;
        }

    }
}  
</code></pre>

<p>list_items xml  </p>

<pre><code>    &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:orientation="horizontal"
android:weightSum="4"
android:padding="5dp" &gt;

&lt;LinearLayout
    android:layout_width="0dp"
    android:layout_height="wrap_content"
    android:layout_weight="3"
    android:orientation="vertical" &gt;

    &lt;TextView
        android:id="@+id/AdminUsername"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textIsSelectable="false" /&gt;

    &lt;TextView 
        android:id="@+id/AdminPassword"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textIsSelectable="false" /&gt;

    &lt;TextView 
        android:id="@+id/AdminEmail"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textIsSelectable="false" /&gt;


&lt;/LinearLayout&gt;

&lt;Button
        android:id="@+id/PlayerDelete"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:text="Delete" /&gt;

&lt;/LinearLayout&gt;
</code></pre>
