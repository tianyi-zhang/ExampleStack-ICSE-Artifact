<p>This works for me</p>

<p>ServerTime_IQProvider.class</p>

<pre><code>    public class ServerTime_IQProvider implements IQProvider{
    public static final String NAMESPACE = "urn:xmpp:mrpresence";
    public static final String ELEMENT_NAME = "servertime";
    public static final String UTC = "utc";
    public static final String LOCAL = "local";
    private Map&lt;String, String&gt; list = new HashMap&lt;String, String&gt;();

    @Override
    public IQ parseIQ(XmlPullParser parser) throws Exception
    {
        boolean stop = false;
        String name = parser.getName();

        while(false == stop)
        {
            int i   =   parser.getEventType();

            switch (i)
            {
            case XmlPullParser.START_TAG:
            {
                if(ELEMENT_NAME.equals(name))
                {
                    list.put(UTC, parser.getAttributeValue("", UTC));
                    list.put(LOCAL, parser.getAttributeValue("", LOCAL));
                }
                parser.next();

                break;
            }
            case XmlPullParser.END_TAG:
            {
                stop = ELEMENT_NAME.equals(name);
                break;
            }
            }
        }

        name = null;
        return new ServerTime_IQ(list);
    }
}
</code></pre>

<p>WebServiceIQ.class</p>

<pre><code>    public class ServerTime_IQ extends IQ{
    public static final String ID = "servertime";
    private Map&lt;String, String&gt; list;

    public ServerTime_IQ(Map&lt;String, String&gt; l)
    {
        list = l;
    }

    @Override
    public String getChildElementXML()
    {
        StringBuilder builder = new StringBuilder("&lt;"+ServerTime_IQProvider.ELEMENT_NAME+" xmlns=\""+ServerTime_IQProvider.NAMESPACE+"\" ");
        builder.append(ServerTime_IQProvider.UTC+"=\""+getServerTime_UTC()+"\" ");
        builder.append(ServerTime_IQProvider.LOCAL+"=\""+getServerTime_Local()+"\" ");
        builder.append("/&gt;");
        return builder.toString();
    }

    public String getServerTime_UTC()
    {
        return list.get(ServerTime_IQProvider.UTC);
    }

    public String getServerTime_Local()
    {
        return list.get(ServerTime_IQProvider.LOCAL);
    }
}
</code></pre>

<p>Then add the ServerTime provider to the IQProvider's list</p>

<pre><code>ProviderManager.addIQProvider(ServerTime_IQProvider.ELEMENT_NAME,ServerTime_IQProvider.NAMESPACE, new ServerTime_IQProvider());
</code></pre>

<p>Packet filter for ServerTime_IQ packet</p>

<pre><code>connection.addPacketListener(new PacketListener() {
        @Override
        public void processPacket(Packet packet) {
            System.out.println("################# Custom packet received");

            ServerTime_IQ IQ    =   (ServerTime_IQ)packet;
            //Do your stuff

        }
    }, new PacketTypeFilter(ServerTime_IQ.class));
</code></pre>

<p>This is the very first answer submitted by me here, Seniors please make edits if necessary.</p>
