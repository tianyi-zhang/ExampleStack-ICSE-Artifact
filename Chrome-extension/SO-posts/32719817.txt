<p>Here's how I would do it:  </p>

<p>Create a custom XML for the <code>EditText</code> with <code>ProgressBar</code>.  </p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content" &gt;
    &lt;EditText 
        android:layout_width="match_parent"
        android:id="@+id/edit"
        android:layout_height="wrap_content"
        android:drawableLeft="@drawable/ic_launcher" 
        android:singleLine="true" /&gt;
    &lt;ProgressBar
        style="?android:attr/progressBarStyleLarge"
        android:id="@+id/progress"
        android:visibility="invisible"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignTop="@id/edit"
        android:layout_alignBottom="@id/edit"
        android:layout_alignRight="@id/edit"/&gt;
&lt;/RelativeLayout&gt;  
</code></pre>

<p>Then, include it in the activity</p>

<pre><code>&lt;include
        android:id="@+id/field1"
        layout="@layout/progress_edittext"
        android:layout_centerInParent="true"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" /&gt;  
</code></pre>

<p>and then retrieve it in <code>onCreate()</code>  </p>

<pre><code>public class MainActivity extends ActionBarActivity {
    private View field1;
    private EditText edit;
    private ProgressBar progress;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        field1 = findViewById(R.id.field1);
        edit = (EditText) field1.findViewById(R.id.edit);
        progress = (ProgressBar) field1.findViewById(R.id.progress);
        edit.addTextChangedListener(new TextWatcher() {
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                progress.setVisibility(View.VISIBLE);
            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                    int after) {}

            @Override
            public void afterTextChanged(Editable s) {
                // YOUR LOGIC GOES HERE
            }
        });
    }
}
</code></pre>
