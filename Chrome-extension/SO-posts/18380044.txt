<p>I had the same problem and after the i figured it out that the problem was in HttpPost reference.So, I changed it in HttpGet and my problem solved.</p>

<p>try this code:</p>

<pre><code>public static JSONObject getJSONfromURL(String url){
//initialize
InputStream is = null;
String result = "";
JSONObject JArray = null;

//http post
try{
    HttpClient httpclient = new DefaultHttpClient();
    HttpGet httpget = new HttpGet(url);
    HttpResponse response = httpclient.execute(httpget);
    HttpEntity entity = response.getEntity();
    is = entity.getContent();
}catch(Exception e){
    Log.e("log_tag", "Error in http connection " + e.toString());
}

// convert response to string
try{
    BufferedReader reader = new BufferedReader(new InputStreamReader(is, "iso-8859-1"),8);
    StringBuilder sb = new StringBuilder();
    String line = null;
    while ((line = reader.readLine()) != null){
        sb.append(line + "\n");
    }
    is.close();
    result = sb.toString();
    //client_Address1.setText(result);
}catch(Exception e){
    Log.e("log_tag", "Error converting result " + e.toString());
}


// try parse the string to a JSON object

try{
        JArray = new JSONObject(result);
}catch(JSONException e){
    Log.e("log_tag", "Error parsing data " + e.toString());
}
return JArray;
 }


 public void SetValues(String url){
JSONObject json = getJSONfromURL(url);

// get the element that holds the addresses
try{
    JSONArray addresses = json.getJSONArray("Address");

    // get the proper items
    JSONObject e = addresses.getJSONObject(0);
    client_Address1.setText(e.getString("addressLineOne"));
    client_Address2.setText(e.getString("addressLineTwo"));
    client_Address3.setText(e.getString("addressCity") + ", " + e.getString("addressState") + " " + e.getString("addressZip"));
    client_Id.setText(e.getString("clientID"));
}catch(JSONException e){
Log.e("log_tag", "Error parsing data " + e.toString());
}
}
</code></pre>
