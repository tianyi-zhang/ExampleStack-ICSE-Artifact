<p>Try this :</p>

<pre><code> LayoutInflater inflater = getLayoutInflater();
View layout = inflater.inflate(R.layout.custom_toast,
                               (ViewGroup) findViewById(R.id.toast_layout_root));

TextView text = (TextView) layout.findViewById(R.id.text);
text.setText("This is a custom toast");

Toast toast = new Toast(getApplicationContext());
toast.setGravity(Gravity.TOP|Gravity.LEFT, 0, 0);
toast.setDuration(Toast.LENGTH_LONG);
toast.setView(layout);
toast.show();
</code></pre>

<p>A standard toast notification appears near the bottom of the screen, centered horizontally. You can change this position with the <code>setGravity(int, int, int)</code> method. This accepts three parameters: a Gravity constant, an x-position offset, and a y-position offset.</p>

<p>For example, if you decide that the toast should appear in the top-left corner, you can set the gravity like this:</p>

<pre><code>toast.setGravity(Gravity.TOP|Gravity.LEFT, 0, 0);
</code></pre>

<p>If you want to nudge the position to the right, increase the value of the second parameter. To nudge it down, increase the value of the last parameter. </p>

<p>Offical Document Source <a href="http://developer.android.com/guide/topics/ui/notifiers/toasts.html#Positioning" rel="nofollow">Here</a></p>

<p>For custom <code>Toast</code> check <a href="http://www.learn-android-easily.com/2013/05/customiozing-toast-in-android.html" rel="nofollow">here</a></p>

<p>For making custom position follow <a href="https://boltingupandroid.wordpress.com/2012/08/08/repositioning-toast-messages/" rel="nofollow">this</a> </p>

<p><strong>EDIT : <em>For making position on particular <code>View</code> try this</em>:</strong></p>

<p>This code in your <code>onCreate()</code> method</p>

<pre><code> editText1 = (EditText)rootView.findViewById(R.id.editText1);
 button1 = (Button)rootView.findViewById(R.id.button1);

 button1.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
            makeToast("Hello", editText1);
        }
 });
</code></pre>

<p>And add this <code>makeToast(String,View)</code> method</p>

<pre><code>public void makeToast(String text, View v) {

    Toast.makeText(getActivity(), text, Toast.LENGTH_SHORT).show();

    int xOffset = 0;
    int yOffset = 0;
    Rect gvr = new Rect();

    View parent = v;// // v is the editText,
    // parent is the rectangle holding it.

    if (parent.getGlobalVisibleRect(gvr)) {

        View root = v.getRootView();

        int halfwayWidth = root.getRight() / 2;
        int halfwayHeight = root.getBottom() / 2;
        // get the horizontal center
        int parentCenterX = ((gvr.right - gvr.left) / 2) + gvr.left;
        // get the vertical center
        int parentCenterY = (gvr.bottom - gvr.top) / 2 + gvr.top;

        if (parentCenterY &lt;= halfwayHeight) {
            yOffset = -(halfwayHeight - parentCenterY);// this image is
                                                        // above the center
                                                        // of gravity, i.e.
                                                        // the halfwayHeight
        } else {
            yOffset = parentCenterY - halfwayHeight;
        }
        if (parentCenterX &lt; halfwayWidth) { // this view is left of center
                                            // xOffset = -(halfwayWidth -
                                            // parentCenterX); } if
                                            // (parentCenterX &gt;=
                                            // halfwayWidth) {
            // this view is right of center
            xOffset = parentCenterX - halfwayWidth;
        }
    }
    Toast toast = Toast.makeText(getActivity(), text, Toast.LENGTH_SHORT);
    toast.setGravity(Gravity.CENTER, xOffset, yOffset);
    toast.show();

}
</code></pre>
