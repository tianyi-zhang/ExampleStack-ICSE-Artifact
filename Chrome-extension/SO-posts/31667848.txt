<p>You can use like this </p>

<pre><code>public class ImageDownload implements Target {

    public static final String TAG = "tag";

    private String name;

    public ImageDownload(String fileName) {

        name = fileName.substring(fileName.lastIndexOf("/"));

    }

    @Override
    public void onBitmapFailed(Drawable arg0) {
        // TODO Auto-generated method stub

    }

    @Override
    public void onBitmapLoaded(final Bitmap bitmap, LoadedFrom arg1) {
        Log.e("ImageDownlaod", "inside Download ");

        new Thread(new Runnable() {
            @Override
            public void run() {

                File file = new File(Environment.getExternalStorageDirectory()
                        .getPath() + "/" + FACTOR_APP + "/" + name);
                try {
                    file.createNewFile();
                    FileOutputStream ostream = new FileOutputStream(file);

                    bitmap.compress(Bitmap.CompressFormat.JPEG, 100, ostream);
                    ostream.close();

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();

    }

    @Override
    public void onPrepareLoad(Drawable arg0) {
        // TODO Auto-generated method stub

    }



}
</code></pre>

<p>and you can use this class as </p>

<pre><code>public void downLoadImagesWithPicasso() {

                Picasso.with(this).load(thumbnailPath)
                        .into(new ImageDownload(thumbnailPath));


    }
</code></pre>
