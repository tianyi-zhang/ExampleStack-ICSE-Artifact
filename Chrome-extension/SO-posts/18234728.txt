<p>You can check this easily by looking at the source of <a href="http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/AbstractMap.java#AbstractMap.equals%28java.lang.Object%29" rel="nofollow">HashMap#Equals()</a>. The values are compared for non-null keys. </p>

<pre><code>public boolean equals(Object o) {
    if (o == this)
        return true;

    if (!(o instanceof Map))
        return false;
    Map&lt;K,V&gt; m = (Map&lt;K,V&gt;) o;
    if (m.size() != size())
        return false;

    try {
        Iterator&lt;Entry&lt;K,V&gt;&gt; i = entrySet().iterator();
        while (i.hasNext()) {
            Entry&lt;K,V&gt; e = i.next();
            K key = e.getKey();
            V value = e.getValue();
            if (value == null) {
                if (!(m.get(key)==null &amp;&amp; m.containsKey(key)))
                    return false;
            } else {
                if (!value.equals(m.get(key)))
                    return false;
            }
        }
    } catch (ClassCastException unused) {
        return false;
    } catch (NullPointerException unused) {
        return false;
    }

    return true;
}
</code></pre>

<p><strong>Edit:</strong></p>

<p><em>Explanation:</em> An Entry is a <code>{key,value}</code> pair. HashMap maintains these <code>Entry</code>s in an EntrySet. Now to compare two maps: I can just iterate through all the <code>Entry</code>s and and keep comparing <code>Entry.value with anothermap.get(Entry.key)</code>. So, in essence the <code>equals()</code> of you value objects will matter when comparing maps.</p>
