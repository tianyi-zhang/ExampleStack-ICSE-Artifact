<p>Rather than using <code>TableColumn#getWidth()</code> you should work with <code>TableItem#getBounds()</code> to determine the column you are in.</p>

<p>Here is an example:</p>

<pre><code>public static void main(String[] args)
{
    Display display = new Display();
    Shell shell = new Shell(display);
    shell.setText("StackOverflow");
    shell.setLayout(new FillLayout());

    ScrolledComposite comp = new ScrolledComposite(shell, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);
    comp.setLayout(new FillLayout());

    final Table table = new Table(comp, SWT.BORDER | SWT.FULL_SELECTION);
    table.setHeaderVisible(true);
    table.setLinesVisible(true);
    for (int i = 0; i &lt; 4; i++)
    {
        TableColumn column = new TableColumn(table, SWT.NONE);
        column.setText("Column " + i);
    }
    for (int i = 0; i &lt; 64; i++)
    {
        TableItem item = new TableItem(table, SWT.NONE);
        for (int j = 0; j &lt; table.getColumnCount(); j++)
        {
            item.setText(j, "Item " + i + "-" + j);
        }
    }
    for (int i = 0; i &lt; table.getColumnCount(); i++)
    {
        table.getColumn(i).pack();
    }
    table.addListener(SWT.MouseDown, new Listener()
    {
        public void handleEvent(Event event)
        {
            Point pt = new Point(event.x, event.y);
            TableItem item = table.getItem(pt);
            if (item == null)
                return;
            for (int i = 0; i &lt; table.getColumnCount(); i++)
            {
                Rectangle rect = item.getBounds(i);
                if (rect.contains(pt))
                {
                    int index = table.indexOf(item);
                    System.out.println("Item " + index + "-" + i);
                }
            }
        }
    });

    comp.setContent(table);
    comp.setExpandHorizontal(true);
    comp.setExpandVertical(true);
    comp.setMinSize(table.computeSize(SWT.DEFAULT, SWT.DEFAULT));

    shell.pack();
    shell.setSize(400, 600);
    shell.open();

    while (!shell.isDisposed())
    {
        if (!display.readAndDispatch())
            display.sleep();
    }
    display.dispose();
}
</code></pre>

<p>It will display the selected table cell (row and column).</p>

<hr>

<p><strong>UPDATE</strong></p>

<p>If you want to listen for click events on the table headers, replace the first <code>for</code> loop with this:</p>

<pre><code>for (int i = 0; i &lt; 4; i++)
{
    final TableColumn column = new TableColumn(table, SWT.NONE);
    column.setText("Column " + i);
    column.addListener(SWT.Selection, new Listener()
    {
        @Override
        public void handleEvent(Event arg0)
        {
            System.out.println(column.getText());
        }
    });
}
</code></pre>

<hr>

<p><strong>UPDATE 2</strong></p>

<p>Detecting right click on the <code>Table</code> header is a bit more tricky. There is a bug report <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=23103" rel="nofollow">here</a> saying that <code>SWT.MenuDetect</code> cannot be used on <code>TableColumn</code>s</p>

<p>However, there is a workaround:</p>

<pre><code>public static void main(String[] args)
{
    final Display display = new Display();
    Shell shell = new Shell(display);
    shell.setText("StackOverflow");
    shell.setLayout(new FillLayout());

    ScrolledComposite comp = new ScrolledComposite(shell, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);
    comp.setLayout(new FillLayout());

    final Table table = new Table(comp, SWT.BORDER | SWT.FULL_SELECTION);
    table.setHeaderVisible(true);
    table.setLinesVisible(true);
    for (int i = 0; i &lt; 4; i++)
    {
        final TableColumn column = new TableColumn(table, SWT.NONE);
        column.setText("Column " + i);
    }
    for (int i = 0; i &lt; 64; i++)
    {
        TableItem item = new TableItem(table, SWT.NONE);
        for (int j = 0; j &lt; table.getColumnCount(); j++)
        {
            item.setText(j, "Item " + i + "-" + j);
        }
    }
    for (int i = 0; i &lt; table.getColumnCount(); i++)
    {
        table.getColumn(i).pack();
    }

    table.addListener(SWT.MenuDetect, new Listener()
    {
        @Override
        public void handleEvent(Event event)
        {
            Point pt = display.map(null, table, new Point(event.x, event.y));
            Rectangle clientArea = table.getClientArea();
            boolean header = clientArea.y &lt;= pt.y &amp;&amp; pt.y &lt; (clientArea.y + table.getHeaderHeight());

            if (header)
            {
                TableItem item = table.getItem(0);
                for (int i = 0; i &lt; table.getColumnCount(); i++)
                {
                    Rectangle rect = item.getBounds(i);
                    if (pt.x &gt;= rect.x &amp;&amp; pt.x &lt;= rect.x + rect.width)
                    {
                        System.out.println("Header " + i);
                    }
                }
            }
        }
    });

    comp.setContent(table);
    comp.setExpandHorizontal(true);
    comp.setExpandVertical(true);
    comp.setMinSize(table.computeSize(SWT.DEFAULT, SWT.DEFAULT));

    shell.pack();
    shell.setSize(400, 600);
    shell.open();

    while (!shell.isDisposed())
    {
        if (!display.readAndDispatch())
            display.sleep();
    }
    display.dispose();
}
</code></pre>
