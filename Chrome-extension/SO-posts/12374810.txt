<p>Here is the final solution.
The last answer of this question (http://stackoverflow.com/questions/2668547/stackoverflowerror-being-caused-by-a-tablemodellistener) helped me alot :</p>

<pre><code>/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nysemarketpick;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Administrator
 */
public class PortfolioForm extends javax.swing.JFrame {

    //Create table column names
    private String[] columnNames = {"Stock Symbol", "Stock Name", "Shares", "Price (in dollars)", "Total"};

    //Create table data
    private Object[][] rowData = {
        {null, null, null, null, null}
    };

    //Create a table model
    private MyTableModel myTableModel = new MyTableModel(rowData, columnNames);

    //Create a table
    private JTable jTable1 = new JTable(myTableModel);


    /**
     * Creates new form PortfolioForm
     */
    public PortfolioForm() {
        initComponents();
        add(new JScrollPane(jTable1), BorderLayout.CENTER);

        //Initialize table selection mode
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        //Allow row selection
        jTable1.setRowSelectionAllowed(true);

        //Load data
        loadData();

        //add listeners
        jbtAddRow.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                if (jTable1.getSelectedRow() &gt;= 0)
                    myTableModel.insertRow(jTable1.getSelectedRow(), new Vector());
                else
                    myTableModel.addRow(new Vector());

            }

        });
        jbtDeleteRow.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                if ((jTable1.getSelectedRow() &gt;= 0) &amp;&amp; (myTableModel.getValueAt(jTable1.getSelectedRow(), 1) != null))
                {
                    System.out.println(myTableModel.getValueAt(jTable1.getSelectedRow(), 1));
                    myTableModel.removeRow(jTable1.getSelectedRow());
                }
            }

        });
        jbtSave.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                try
                {
                    ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("portfolio.dat"));
                    out.writeObject(myTableModel.getDataVector());
                    out.writeObject(getColumnNames());
                    out.close();
                }
                catch(Exception ex)
                {
                    ex.printStackTrace();
                }

                disposeForm();
            }

        });
        jbtClear.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                myTableModel.setRowCount(0);
            }

        });
        jbtTotal.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                double sum = 0;
                int numberOfRows = myTableModel.getRowCount();
                for (int i = 0; i &lt; numberOfRows; i++)
                {
                    sum = sum + (Double)myTableModel.getValueAt(i, 4);
                }
                jLabelTotal.setText(String.valueOf(sum));
            }

        });
        jbtTotals.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                Double myDouble;
                for (int i = 0; i &lt; myTableModel.getRowCount(); i++)
                {
                    myDouble = (Integer)myTableModel.getValueAt(i, 2) * (Double)myTableModel.getValueAt(i, 3);
                    myTableModel.setValueAt(myDouble, i, 4);
                }
            }

        });


        myTableModel.addTableModelListener(new TableModelListener(){

            @Override
            public void tableChanged(TableModelEvent e) {

                myTableModel.removeTableModelListener(this);
                if (myTableModel.getRowCount() &gt; 0)
                {
                    if (e.getColumn() == 0)
                    {
                        Object data = myTableModel.getValueAt(e.getFirstRow(), e.getColumn());
                        String stockSymbol = (String)data;
                        XMLService2 myService = new XMLService2(stockSymbol);
                        String stockName = XMLService2.getStockName();
                        myTableModel.setValueAt(stockName, e.getFirstRow(), e.getColumn() + 1);
                    }

                }
                myTableModel.addTableModelListener(this);
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jbtAddRow = new javax.swing.JButton();
        jbtDeleteRow = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jbtSave = new javax.swing.JButton();
        jbtClear = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabelTotal = new javax.swing.JLabel();
        jbtTotal = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jbtTotals = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(600, 400));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Row functions"));
        jPanel2.setLayout(new java.awt.GridLayout(2, 1));

        jbtAddRow.setText("Add New Row");
        jPanel2.add(jbtAddRow);

        jbtDeleteRow.setText("Delete Selected Row");
        jPanel2.add(jbtDeleteRow);

        jPanel1.add(jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Table functions"));
        jPanel3.setMinimumSize(new java.awt.Dimension(200, 111));
        jPanel3.setPreferredSize(new java.awt.Dimension(150, 100));
        jPanel3.setLayout(new java.awt.GridLayout(3, 1));

        jbtSave.setText("Save &amp; Close");
        jPanel3.add(jbtSave);

        jbtClear.setText("Clear");
        jPanel3.add(jbtClear);

        jPanel1.add(jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Total Position"));
        jPanel4.setLayout(new java.awt.GridLayout(2, 1));

        jLabelTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.add(jLabelTotal);

        jbtTotal.setText("Calculate");
        jPanel4.add(jbtTotal);

        jPanel1.add(jPanel4);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jbtTotals.setText("Calculate Totals");

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 145, Short.MAX_VALUE)
            .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel5Layout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jbtTotals)
                    .add(0, 0, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 336, Short.MAX_VALUE)
            .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel5Layout.createSequentialGroup()
                    .add(0, 153, Short.MAX_VALUE)
                    .add(jbtTotals)
                    .add(0, 154, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel5, java.awt.BorderLayout.EAST);
    }// &lt;/editor-fold&gt;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //&lt;editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "&gt;
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PortfolioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PortfolioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PortfolioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PortfolioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //&lt;/editor-fold&gt;

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PortfolioForm().setVisible(true);
            }
        });
    }

    //---Other methods
    private Vector getColumnNames()
    {
        Vector&lt;String&gt; columnNames = new Vector&lt;String&gt;();

        for (int i = 0; i &lt; jTable1.getColumnCount(); i++)
            columnNames.add(jTable1.getColumnName(i));

        return columnNames;
    }

    private void disposeForm()
    {
        this.dispose();
    }

    private void loadData()
    {
        try
        {
            ObjectInputStream in = new ObjectInputStream(new FileInputStream("portfolio.dat"));
            Vector rows = (Vector)in.readObject();
            Vector columns = (Vector)in.readObject();
            myTableModel.setDataVector(rows, columns);
            in.close();
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }

    }
    // Variables declaration - do not modify
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jbtAddRow;
    private javax.swing.JButton jbtClear;
    private javax.swing.JButton jbtDeleteRow;
    private javax.swing.JButton jbtSave;
    private javax.swing.JButton jbtTotal;
    private javax.swing.JButton jbtTotals;
    // End of variables declaration
}
</code></pre>
