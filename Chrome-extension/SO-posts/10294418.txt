<p>GLSurfaceView being a SurfaceView has a little bit different way of being represented in a window. </p>

<blockquote>
  <p>"the SurfaceView punches a hole in its window to allow its surface to
  be displayed. The view hierarchy will take care of correctly
  compositing with the Surface any siblings of the SurfaceView that
  would normally appear on top of it. This can be used to place overlays
  such as buttons on top of the Surface, though note however that it can
  have an impact on performance since a full alpha-blended composite
  will be performed each time the Surface changes."</p>
</blockquote>

<p>First step you need to draw AdMobView in a separate window (layer) on top of your main window.
Here is an example of how you do it:</p>

<pre><code>View topLocker = lockDownWindow.getChildAt(0);

WindowManager.LayoutParams windowParams = new WindowManager.LayoutParams();
windowParams.gravity = Gravity.TOP;
windowParams.x = 0;
windowParams.y = 0;
windowParams.height = WindowManager.LayoutParams.MATCH_PARENT;
windowParams.width = WindowManager.LayoutParams.MATCH_PARENT;
windowParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
    | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN
    | WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS;
windowParams.format = PixelFormat.TRANSLUCENT;
windowParams.windowAnimations = 0;

WindowManager wm = getWindowManager();
wm.addView(yourAwesomView, windowParams);
</code></pre>

<p>"yourAwesomeView" here is a layout containing adView. Beware you have to properly configure flags for window to let your touches slip to background window. Also you're resposible for removing this window.</p>

<p>Another advice I may have is to try disabling default background in your theme since your GLSurfaceView is on top of it, you don't want extra draws behind it.</p>

<p>in your theme add </p>

<pre><code>&lt;item name="android:windowBackground"&gt;@null&lt;/item&gt;
</code></pre>

<p>Hope this helps.</p>
