<p>Very, very good, thanks to everyone who contributed to this discussion. So if you don't want to deal with inconvenience of extending the class you can do the following (implemented for the right drawable only)</p>

<pre><code>this.keyword = (AutoCompleteTextView) findViewById(R.id.search);
this.keyword.setOnTouchListener(new RightDrawableOnTouchListener(keyword) {
        @Override
        public boolean onDrawableTouch(final MotionEvent event) {
            return onClickSearch(keyword);
        }
    });

private boolean onClickSearch(final View view) {
    // do something
    event.setAction(MotionEvent.ACTION_CANCEL);
    return false;
}
</code></pre>

<p>And here's bare-bone listener implementation based on @Mark's answer</p>

<pre><code>public abstract class RightDrawableOnTouchListener implements OnTouchListener {
    Drawable drawable;
    private int fuzz = 10;

    /**
     * @param keyword
     */
    public RightDrawableOnTouchListener(TextView view) {
        super();
        final Drawable[] drawables = view.getCompoundDrawables();
        if (drawables != null &amp;&amp; drawables.length == 4)
            this.drawable = drawables[2];
    }

    /*
     * (non-Javadoc)
     * 
     * @see android.view.View.OnTouchListener#onTouch(android.view.View, android.view.MotionEvent)
     */
    @Override
    public boolean onTouch(final View v, final MotionEvent event) {
        if (event.getAction() == MotionEvent.ACTION_DOWN &amp;&amp; drawable != null) {
            final int x = (int) event.getX();
            final int y = (int) event.getY();
            final Rect bounds = drawable.getBounds();
            if (x &gt;= (v.getRight() - bounds.width() - fuzz) &amp;&amp; x &lt;= (v.getRight() - v.getPaddingRight() + fuzz)
                    &amp;&amp; y &gt;= (v.getPaddingTop() - fuzz) &amp;&amp; y &lt;= (v.getHeight() - v.getPaddingBottom()) + fuzz) {
                return onDrawableTouch(event);
            }
        }
        return false;
    }

    public abstract boolean onDrawableTouch(final MotionEvent event);

}
</code></pre>
