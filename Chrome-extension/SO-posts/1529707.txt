<p>Adapt this example: <a href="http://www.javaworld.com/javaworld/javatips/jw-javatip49.html?page=1">How to extract Java resources from JAR and zip archive</a></p>

<p>Or try this code:</p>

<blockquote>
  <h1>Extract the Contents of ZIP/JAR Files Programmatically</h1>
  
  <p>Suppose <code>jarFile</code> is the jar/zip file to be extracted. <code>destDir</code> is the path where it will be extracted:</p>

<pre><code>java.util.jar.JarFile jar = new java.util.jar.JarFile(jarFile);
java.util.Enumeration enumEntries = jar.entries();
while (enumEntries.hasMoreElements()) {
    java.util.jar.JarEntry file = (java.util.jar.JarEntry) enumEntries.nextElement();
    java.io.File f = new java.io.File(destDir + java.io.File.separator + file.getName());
    if (file.isDirectory()) { // if its a directory, create it
        f.mkdir();
        continue;
    }
    java.io.InputStream is = jar.getInputStream(file); // get the input stream
    java.io.FileOutputStream fos = new java.io.FileOutputStream(f);
    while (is.available() &gt; 0) {  // write contents of 'is' to 'fos'
        fos.write(is.read());
    }
    fos.close();
    is.close();
}
</code></pre>
</blockquote>

<p><strong>Source</strong>: <a href="http://www.devx.com/tips/Tip/22124">http://www.devx.com/tips/Tip/22124</a></p>
