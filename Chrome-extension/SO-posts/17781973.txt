<p>Caused by <code>Caused by: android.view.ViewRootImpl$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views.</code>. You are performing changes on UI from a non-UI thread. At least this line here does it (in AsyncTask <code>doInBackground</code>):</p>

<pre><code>            String text = jObj.get("masterPerosActive").toString();
            edt.setText(text);
</code></pre>

<p>Since you are using an AsyncTask, why not perform UI changes in <code>onPostExecute()</code> method so that your <code>RequestLogInServer</code> class would change to (only last lines touched):</p>

<pre><code>public class RequestLogInFromServer extends AsyncTask&lt;Object, Object, String&gt; {
    TextView txt = (TextView) findViewById(R.id.textView1);
    EditText edt = (EditText) findViewById(R.id.editText1);

    @Override
    protected Object doInBackground(Object... params) {

        HttpClient httpClient = new DefaultHttpClient();
        HttpPost httpPost = new HttpPost("http://shopstable.turkcell.com.tr/timmenu/getPerosConfig.do");
        httpPost.setHeader("Content-type", "application/json");

        try {

            HttpResponse response = httpClient.execute(httpPost);
            HttpEntity resEntity = response.getEntity();
            is = resEntity.getContent();
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
            // strJson = null;
        }
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(is, "UTF-8"), 8); // iso-8859-1 //
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "/n");
            }
            is.close();
            strJson = sb.toString();
        } catch (Exception e) {

        }

        try {
            if (strJson != null) {
                jObj = new JSONObject(strJson);
                String text = jObj.get("masterPerosActive").toString();
                return text;

            } else {
                jObj = null;
            }
        } catch (JSONException e) {
        }
        return null;
    }

    protected void onPostExecute(String result) {
         if(result != null) {
             edt.setText(result);
         } else {
             // show a message/label that something went wrong
         }
     }
}
</code></pre>
