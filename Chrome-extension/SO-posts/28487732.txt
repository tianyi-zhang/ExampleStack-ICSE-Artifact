<p>What can I advice you is try Caching your Bitmaps in internal Storage. like I did as follows.</p>

<p>ImageCacheHelper.</p>

<pre><code>public class ImageCacheHelper {

    Context ctx;


    public ImageCacheHelper(Context ctx)
    {
        this.ctx=ctx;
    }


    public String saveToInternalSorage(Bitmap bitmapImage,String fileName){
        ContextWrapper cw = new ContextWrapper(ctx.getApplicationContext());
         // path to /data/data/yourapp/app_data/imageDir
        File directory = cw.getDir("imageDir", Context.MODE_PRIVATE);
        // Create imageDir
        File mypath=new File(directory,fileName);

        FileOutputStream fos = null;
        try {           

            fos = new FileOutputStream(mypath);

       // Use the compress method on the BitMap object to write image to the OutputStream
            bitmapImage.compress(Bitmap.CompressFormat.PNG, 100, fos);
            fos.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return directory.getAbsolutePath();
    }

    public Bitmap loadImageFromStorage(String fileName)
    {

        try {
            ContextWrapper cw=new ContextWrapper(ctx);
            File directory = cw.getDir("imageDir", Context.MODE_PRIVATE);
            File myFile=new File(directory,fileName);

            InputStream istr=new BufferedInputStream(new FileInputStream(myFile));
            Bitmap image=BitmapFactory.decodeStream(istr);
            return image;
        } 
        catch (Exception e) 
        {
            e.printStackTrace();
            return null;
        }

    }

}
</code></pre>

<p>then in your getView method's </p>

<pre><code>        @Override
            public View getView(int position, View convertView, ViewGroup parent) {
            if(convertView==null){.....}
            else {.....}

           Bitmap imageAnswer = new ImageCacheHelper(cContext)
    .loadImageFromStorage(cQuestions.get(position)
            .getImageUrl.toString());
    if(imageAnswer==null)
    imgDownloader.execute(tempView);
    else
        tempView.iView.setImageBitmap(imageAnswer);
    }
</code></pre>

<p>and in your AsyncTask object to get your bitmap</p>

<pre><code>private class imageDownloader extends AsyncTask&lt;ViewHolder, Void, Bitmap&gt; {

        ViewHolder v;

        @Override
        protected Bitmap doInBackground(ViewHolder... params) {
            // TODO Auto-generated method stub


                and writing to storage


                    v = params[0];
                    InputStream is = (InputStream) new URL(params[0].ImageUrl)
                            .getContent();
                    Bitmap b = BitmapFactory.decodeStream(is);
                    new ImageCacheHelper(cContext).saveToInternalSorage(b,
                            cQuestions.get(params[0].position)
                                    .getImageId.toString()); 

   }
}
</code></pre>

<p>....</p>

<p>Hope I helped you my friend.</p>
