<p>This is a really simple and basic example, but you can modify it as you like:</p>

<p><strong>PropertyConfigurator.java</strong></p>

<pre><code>public class PropertiesConfigurator
{

    Properties properties = new Properties();

    String configInputPath = null;

    InputStream configInputStream = null;



    public PropertiesConfigurator(String configInputPath)
    {
        this.configInputPath = configInputPath;
    }



    public PropertiesConfigurator load() throws IOException, PropertyException
    {
        try
        {

            this.configInputStream = new FileInputStream(this.configInputPath);

            // load a properties file
            this.properties.load(this.configInputStream);

            validate();

        }
        catch (IOException ex)
        {
            System.out.println("Failed load properties file: " + this.configInputPath);
            throw ex;
        }
        catch (PropertyException ex)
        {
            System.out.println("One or more properties are empty");
            throw ex;
        }
        finally
        {
            if (this.configInputStream != null)
            {
                try
                {
                    this.configInputStream.close();
                }
                catch (IOException ex)
                {
                    System.out.println("Failed to close input stream");
                    throw ex;
                }
            }
        }

        return this;
    }



    private void validate() throws PropertyException
    {
        Enumeration&lt;?&gt; e = this.properties.propertyNames();
        while (e.hasMoreElements())
        {
            String key = (String) e.nextElement();
            String value = this.properties.getProperty(key);

            if (value.isEmpty())
            {
                System.out.println(String.format("Property %s is empty!", key));
                throw new PropertyException("One or more properties are empty");
            }
        }
    }



    public String getProperty(String key)
    {
        return this.properties.getProperty(key);
    }



    @Override
    public boolean equals(Object o)
    {
        if (this == o)
            return true;
        if (!(o instanceof PropertiesConfigurator))
            return false;

        PropertiesConfigurator that = (PropertiesConfigurator) o;

        if (properties != null ? !properties.equals(that.properties) : that.properties != null)
            return false;
        if (configInputPath != null ? !configInputPath.equals(that.configInputPath) : that.configInputPath != null)
            return false;
        return configInputStream != null ?
                configInputStream.equals(that.configInputStream) :
                that.configInputStream == null;

    }



    @Override
    public int hashCode()
    {
        int result = properties != null ? properties.hashCode() : 0;
        result = 31 * result + (configInputPath != null ? configInputPath.hashCode() : 0);
        result = 31 * result + (configInputStream != null ? configInputStream.hashCode() : 0);
        return result;
    }
}
</code></pre>

<p><strong>PropertyException.java</strong></p>

<pre><code>public class PropertyException extends Exception
{
    public PropertyException()
    {
    }



    public PropertyException(String message)
    {
        super(message);
    }



    public PropertyException(String message, Throwable throwable)
    {
        super(message, throwable);
    }
}
</code></pre>

<p><strong>MainRunner.java</strong></p>

<pre><code>public class MainRunner
{

    public static void main(String[] args)
    {
        try
        {
            String configFilePath = "application.properties";
            PropertiesConfigurator propertiesConfigurator = new PropertiesConfigurator(configFilePath).load();

            String prop1 = propertiesConfigurator.getProperty("keyprop1");

            // Do whatever you want with prop1
            // ...
        }

        catch (PropertyException ex)
        {
            System.out.println("Failed to load properties");
            System.exit(1);
        }

        catch (Exception ex)
        {
            System.out.println("Error in main application");
            System.exit(1);
        }
    }
}
</code></pre>

<p><strong>Example of application.properties</strong></p>

<pre><code>keyprop1=value1
keyprop2=value2
</code></pre>

<p>Again, it's very basic and you should definitely improve this code and add your logic, validation, etc.</p>
