<p>Got the solution from the web. 
Here is method that can get the list of classes from a package from JAR file.</p>

<pre><code> public static List&lt;String&gt; getJarFileListing(String jarLocation, String filter) {
        List&lt;String&gt; files = new ArrayList&lt;String&gt;();
        if (jarLocation == null) {
            return files; // Empty.
        }

        // Lets stream the jar file 
        JarInputStream jarInputStream = null;
        try {
            jarInputStream = new JarInputStream(new FileInputStream(jarLocation));
            JarEntry jarEntry;

            // Iterate the jar entries within that jar. Then make sure it follows the
            // filter given from the user.
            do {
                jarEntry = jarInputStream.getNextJarEntry();
                if (jarEntry != null) {
                    String fileName = jarEntry.getName();

                    // The filter could be null or has a matching regular expression.
                    if (filter == null || fileName.matches(filter)) {
                        files.add(fileName);
                    }
                }
            }
            while (jarEntry != null);
            jarInputStream.close();
        }
        catch (IOException ioe) {
            throw new RuntimeException("Unable to get Jar input stream from '" + jarLocation + "'", ioe);
        }
        return files;
    }
</code></pre>

<p>And call the above function..</p>

<pre><code>    public static void main(String args[]) throws IOException{
    List&lt;String&gt; listOfFiles = getJarFileListing("C:\Users\abc\xyz.jar","^com/xyz/test/scripts(.*)");
    /* Reflection API code */
    }
    }
</code></pre>
