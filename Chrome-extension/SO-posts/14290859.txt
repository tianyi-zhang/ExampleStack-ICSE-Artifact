<p>For those questions having the source code on hand is very useful as with sufficient IDE support you can simply browse through the implementation. When looking at the source code of <a href="http://javasourcecode.org/html/open-source/jdk/jdk-6u23/java/util/TreeMap.html">TreeMap</a> it can be seen, that all three methods construct a new map by using the <a href="http://javasourcecode.org/html/open-source/jdk/jdk-6u23/java/util/TreeMap.NavigableSubMap.html">constructor of AscendingSubMap</a>:</p>

<pre><code>public NavigableMap&lt;K,V&gt; subMap(K fromKey, boolean fromInclusive,
                                K toKey,   boolean toInclusive) {
    return new AscendingSubMap(this,
                               false, fromKey, fromInclusive,
                               false, toKey,   toInclusive);
}
</code></pre>

<p>Which does nothing else then to pass the parameters up with the super constructor to the class <a href="http://javasourcecode.org/html/open-source/jdk/jdk-6u23/java/util/TreeMap.NavigableSubMap.html"><code>NavigableSubMap</code></a>:</p>

<pre><code>super(m, fromStart, lo, loInclusive, toEnd, hi, hiInclusive);
</code></pre>

<p>So all three methods are based on the following constructor:</p>

<pre><code>NavigableSubMap(TreeMap&lt;K,V&gt; m,
                boolean fromStart, K lo, boolean loInclusive,
                boolean toEnd,     K hi, boolean hiInclusive) {
    if (!fromStart &amp;&amp; !toEnd) {
        if (m.compare(lo, hi) &gt; 0)
            throw new IllegalArgumentException("fromKey &gt; toKey");
    } else {
        if (!fromStart) // type check
            m.compare(lo, lo);
        if (!toEnd)
            m.compare(hi, hi);
    }

    this.m = m;
    this.fromStart = fromStart;
    this.lo = lo;
    this.loInclusive = loInclusive;
    this.toEnd = toEnd;
    this.hi = hi;
    this.hiInclusive = hiInclusive;
}
</code></pre>

<p>All I can see here are invocations to <code>compare</code> for type and assertion checking reasons. Hence, it should be pretty much <em>O(1)</em>.</p>

<p>You can always <a href="http://www.docjar.com/">browse the source code online</a>, but I really recommend to get the source files and link them to your IDE of choice.</p>
