<p>Max is a primitive type.  All Java primitive types are passed by value so changing them inside a function does not effect their value in the caller.</p>

<p>You need to return the new max.  Also, your recursive code is a bit wonky.</p>

<p>Try this...</p>

<pre><code>public class BinaryTree {

    public static void main(String args[])
    {
        Node root = new Node(1);
        Node two = new Node(2);
        Node three = new Node(3);
        Node four = new Node(4);
        Node five = new Node(5);
        Node six = new Node(6);
        Node seven = new Node(7);
        Node eight = new Node(8);

        root.left = two;
        root.right = three;
        two.left = four;
        two.right = five;
        three.left = six;
        three.right = seven;
        five.left = eight;
        findDepth(root,0,0);

    }


    public static int findDepth(Node root,int level)
    {

        if(root==null){
            return level;
        }else{
            return Math.Max(findDepth(root.left,level+1,max),
                            findDepth(root.right,level+1,max));
        }
    }

}

// The Node class

public class Node {

    int data;
    Node left;
    Node right;

    public Node(int i) {
        this.data = i;
    }

}
</code></pre>

<p>When you call it to start with it should be called as findDepth(treeRoot,0);</p>

<p>What the recursive logic is saying is "as we go down the tree, increment level by 1 for each layer.  When we hit the bottom, return level.  Then for every node above the bottom, take the levels returned by the two nodes below us and return the deeper level.</p>
