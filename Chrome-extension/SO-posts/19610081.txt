<p>You can use Expendable list which will allow you to show group and kind of sub-group. To do so you need to create a BaseExpandableListAdapter. You need to override two methods of this class.</p>

<pre><code>@Override
    public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {
        // TODO Auto-generated method stub
         if (convertView == null) {
                LayoutInflater inflater =  (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                convertView = inflater.inflate(R.layout.group_row, null);
               }
        //TextView tv=new TextView(context);
         TextView tv = (TextView) convertView.findViewById(R.id.tvGroupName);
        //tv.setText(parentList[groupPosition]);
         tv.setText(category_list.get(groupPosition).toString());
        //tv.setPadding(70,0,0,10);
        //return tv;
         return convertView;

    }

@Override
    public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {
        // TODO Auto-generated method stub
         if (convertView == null) {
                LayoutInflater inflater =  (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                convertView = inflater.inflate(R.layout.child_row, null);
               }
        //TextView tv=new TextView(context);
         TextView tv = (TextView) convertView.findViewById(R.id.tvPlayerName);

        //tv.setText(childList[groupPosition][childPosition]);
         tv.setText((String)((ArrayList)sub_category_list.get(groupPosition)).get(childPosition));

        //tv.setPadding(70,0,0,10);
        //return tv;
        return convertView;
    }
</code></pre>
