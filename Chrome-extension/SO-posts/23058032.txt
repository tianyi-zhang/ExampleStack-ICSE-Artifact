<p>Try to add this <code>
                    // Edited by @Gorcyn
                    {
                        childView.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_HIGH);
                        childView.setDrawingCacheEnabled(true);
                    }</code></p>

<p>in class FancyCoverFlowItemWrapper in method  protected void dispatchDraw(Canvas canvas), so it looks like :</p>

<pre><code>@TargetApi(Build.VERSION_CODES.HONEYCOMB)
@Override
protected void dispatchDraw(Canvas canvas) {
    View childView = getChildAt(0);

    if (childView != null) {

        // If on honeycomb or newer, cache the view.
        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
            if (childView.isDirty() &amp;&amp; !childView.isDrawingCacheEnabled()) {
                childView.draw(this.wrappedViewDrawingCanvas);

                // Edited by @Gorcyn
                {
                    childView.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_HIGH);
                    childView.setDrawingCacheEnabled(true);
                }
                if (this.isReflectionEnabled) {
                    this.createReflectedImages();
                }
            }
        } else {
            childView.draw(this.wrappedViewDrawingCanvas);
        }
    }

    canvas.drawBitmap(this.wrappedViewBitmap, (this.getWidth() - childView.getWidth()) / 2, 0, this.paint);
}
</code></pre>
