<p>You can do that by using canvas like in the below:</p>

<pre><code>    public static class SwipeFragment extends Fragment
        {
            @Override
            public View onCreateView(LayoutInflater inflater, ViewGroup container,Bundle savedInstanceState)
            {
                View swipeView = inflater.inflate(R.layout.swipe_fragment, container, false);
                ImageView imageView = (ImageView) swipeView.findViewById(R.id.imageView);
                Bundle bundle = getArguments();
                int position = bundle.getInt("position");
                String imageFileName = IMAGE_NAME[position];
                int imgResId = getResources().getIdentifier(imageFileName, "drawable", "com.example.shrishyl.circleview");
                Bitmap imageBitmap= BitmapFactory.decodeResource(getResources(),  imgResId);
              Bitmap circleImage=   CircularImage.addPicture(imageBitmap);//By calling this method your image will be converted a circular image
imageView.setImageBitmap(circleImage);//Here you will set the imageview to the Circular image which was returned by the addPicture Function() in CircularImage class

                return swipeView;
            }
            static SwipeFragment newInstance(int position)
            {
                SwipeFragment swipeFragment = new SwipeFragment();
                Bundle bundle = new Bundle();
                bundle.putInt("position", position);
                swipeFragment.setArguments(bundle);
                return swipeFragment;
            }
        }



  }
        public class CircularImage{
      public static Bitmap addPicture(Bitmap bitmap){
          Bitmap result = null;
          try {
              result = Bitmap.createBitmap(200, 200, Bitmap.Config.ARGB_8888);
              Canvas canvas = new Canvas(result);// Canvas is class used for drawing , here you will be writing into the result Bitmap

              int color = 0xff424242;
              Paint paint = new Paint();
              Rect rect = new Rect(0, 0, 200, 200);

              paint.setAntiAlias(true);
              canvas.drawARGB(0, 0, 0, 0);
              paint.setColor(color);
              canvas.drawCircle(50, 50, 50, paint);//This draws a circle
              paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
              canvas.drawBitmap(bitmap, rect, rect, paint);// this puts the image into the circle
          } catch (NullPointerException e) {
          } catch (OutOfMemoryError o) {
          }
          return result;
      }
}
</code></pre>

<p>What you are doing in here is simple you are creating Bitmap intially and the drawing a circle inside it. Later you draw a bitmap inside the circle. So in your case just call this function and pass the Bitmap you want to add to the circle hole as a Parameter . It should work for you. ThankYou</p>
