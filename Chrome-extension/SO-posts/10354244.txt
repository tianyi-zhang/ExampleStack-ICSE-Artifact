<p>Yes broadcast receiver is best way for listening to incoming texts.if an incoming sms recvied use IntentService for your work what u want to do on sms recived.u can register a reciver for incoming sms as:</p>

<p><strong>manifest file</strong></p>

<pre><code>&lt;receiver class="SMSApp"&gt;  
   &lt;intent-filter&gt;  
      &lt;action android:value="android.provider.Telephony.SMS_RECEIVED" /&gt;  
     &lt;/intent-filter&gt;  
&lt;/receiver&gt;  
&lt;uses-permission android:name="android.permission.RECEIVE_SMS" /&gt;
</code></pre>

<p><strong>Java File</strong></p>

<pre><code>    public class SMSApp extends BroadcastReceiver{
    private static final String LOG_TAG = "SMSApp"; 
    /* package */
    static final String ACTION = "android.provider.Telephony.SMS_RECEIVED"; 
    public void onReceive(Context context, Intent intent){ 
        if (intent.getAction().equals(ACTION)){ 
          Bundle bundle = intent.getExtras();
          if (bundle != null){
               Object[] pdus = (Object[]) bundle.get("pdus");
               SmsMessage[] messages = new SmsMessage[pdus.length];
               for (int i = 0; i &lt; pdus.length; i++){
                 messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
               }
               for (SmsMessage message : messages){
                    String strFrom = message.getDisplayOriginatingAddress();
                    String strMsg = message.getDisplayMessageBody();
               }
            }    
        } 
    } 
}    
</code></pre>

<p>and <strong>second way</strong> you can register a <a href="http://developer.android.com/reference/android/database/ContentObserver.html" rel="nofollow">ContentObserver</a> for <code>content://sms/inbox</code> for listening incoming sms in inbox</p>
