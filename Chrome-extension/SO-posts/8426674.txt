<p>right,</p>

<p>dont know if you have sorted this or not, I have mashed some bits together that I think do what you ask, if not then hey ho.</p>

<p>I have an activity that loads in the horizontal scroller, this might not be the best way but it works for me:</p>

<p>HolderActivity class (the one that loads in the HorizontalScrollView class) I have:</p>

<pre><code>int selectedItem;
public boolean onLongClick(View v, int position) {
    selectedItem = position;
    openContextMenu(v);
    return true;
}

public boolean onItemClick(int position) {)//do what you want here on click (press)


@Override
public void onCreateContextMenu(ContextMenu menu, View v,
    ContextMenuInfo menuInfo) {

     String[] menuItems = {"Menu item 1 text", "Cancel"};
     for (int i = 0; i&lt;menuItems.length; i++) {
       menu.add(Menu.NONE, i, i, menuItemsRemove[i]);
    }
     menu.setHeaderTitle("My menu title");
}
</code></pre>

<p>in your HorizontalScrollView class's constructor pass I pass through a context in there like so:</p>

<pre><code>public MyScroller(Context context) {
    super(context);
    this.context = context;
}
</code></pre>

<p>I have a method for creating the items from an ArrayList called setFeatureItems like so:</p>

<pre><code>public void setFeatureItems(ArrayList&lt;MyListEntity&gt; items){}
</code></pre>

<p>Within this method I add a GestureDetector passing the context to it to each item like so:</p>

<pre><code>mGestureDetector = new GestureDetector(context, new MyGestureDetector());
</code></pre>

<p>And the MyGestureDetector nested class  which has the reference to the all important parentActivity is like this:</p>

<pre><code>class MyGestureDetector extends SimpleOnGestureListener {

        @Override
        public void onLongPress(MotionEvent arg0) {
            parentActivity.onLongClick(MyScroller.this, mActiveFeature);
        };

        @Override
        public boolean onSingleTapUp(MotionEvent arg0) {
            parentActivity.onItemClick(mActiveFeature);
            return true;
        };

        @Override
        public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
            try {
                //right to left
                if(e1.getX() - e2.getX() &gt; SWIPE_MIN_DISTANCE &amp;&amp; Math.abs(velocityX) &gt; SWIPE_THRESHOLD_VELOCITY) {
                    int featureWidth = getMeasuredWidth();
                    mActiveFeature = (mActiveFeature &lt; (mItems.size() - 1))? mActiveFeature + 1:mItems.size() -1;
                    smoothScrollTo(mActiveFeature*featureWidth, 0);
                    return true;
                }
                //left to right
                else if (e2.getX() - e1.getX() &gt; SWIPE_MIN_DISTANCE &amp;&amp; Math.abs(velocityX) &gt; SWIPE_THRESHOLD_VELOCITY) {
                    int featureWidth = getMeasuredWidth();
                    mActiveFeature = (mActiveFeature &gt; 0)? mActiveFeature - 1:0;
                    smoothScrollTo(mActiveFeature*featureWidth, 0);
                    return true;
                }
            } catch (Exception e) {
                    Log.e("Fling", "There was an error processing the Fling event:" + e.getMessage());
            }
            return false;
        }
}
</code></pre>

<p>I have cut this from an existing proj so there might be remnants where I have not made it generic enough, I hope this makes sense or helps, let me know If i can add any more detail</p>
