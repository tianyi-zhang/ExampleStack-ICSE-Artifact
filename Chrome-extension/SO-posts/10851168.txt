<p>Try this:</p>

<pre><code>ZipInputStream zis = null;
try {

    zis = new ZipInputStream(new FileInputStream(zipFilePath));
    ZipEntry entry;

    while ((entry = zis.getNextEntry()) != null) {

        // Create a file on HDD in the destinationPath directory
        // destinationPath is a "root" folder, where you want to extract your ZIP file
        File entryFile = new File(destinationPath, entry.getName());
        if (entry.isDirectory()) {

            if (entryFile.exists()) {
                logger.log(Level.WARNING, "Directory {0} already exists!", entryFile);
            } else {
                entryFile.mkdirs();
            }

        } else {

            // Make sure all folders exists (they should, but the safer, the better ;-))
            if (entryFile.getParentFile() != null &amp;&amp; !entryFile.getParentFile().exists()) {
                entryFile.getParentFile().mkdirs();
            }

            // Create file on disk...
            if (!entryFile.exists()) {
                entryFile.createNewFile();
            }

            // and rewrite data from stream
            OutputStream os = null;
            try {
                os = new FileOutputStream(entryFile);
                IOUtils.copy(zis, os);
            } finally {
                IOUtils.closeQuietly(os);
            }
        }
    }
} finally {
    IOUtils.closeQuietly(zis);
}
</code></pre>

<p>Note, that it uses <a href="http://commons.apache.org/io/" rel="nofollow">Apache Commons IO</a> to handle stream copying / closing.</p>
