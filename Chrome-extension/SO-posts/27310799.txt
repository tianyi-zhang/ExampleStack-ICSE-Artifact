<p>This function will return you bitmap of current activity. so you have to store if you want to use later on, or if you want in the same application then you can use with the bitmap object</p>

<pre><code>public static Bitmap captureScreenshot(Activity activity) {
    View view = activity.getWindow().getDecorView();
    view.setDrawingCacheEnabled(true);
    view.buildDrawingCache();
    Bitmap bitmap = view.getDrawingCache();
    Rect rect = new Rect();
    activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(rect);
    int statusBarHeight = rect.top;
    @SuppressWarnings("deprecation")
    int width = activity.getWindowManager().getDefaultDisplay().getWidth();
    @SuppressWarnings("deprecation")
    int height = activity.getWindowManager().getDefaultDisplay().getHeight();
    Bitmap bitmap2 = Bitmap.createBitmap(bitmap, 0, statusBarHeight, width, height - statusBarHeight);
    view.destroyDrawingCache();
    return bitmap2;
}
</code></pre>

<p>And here is the function for save bitmap : </p>

<pre><code>private void saveImagetoSDCard(Bitmap bitmap) 
{
    Bitmap bit=takeScreenshot(DisplayImage.this);

    try 
    {
        String file_path = Environment.getExternalStorageDirectory().getAbsolutePath();
        File storagePath = new File(Environment.getExternalStorageDirectory() + "/MyCameraApp/");
        file = new File(storagePath, "Yudiz_krrish.png");

        Log.d("TAG","File path after editing :"+file.getPath().toString());
        FileOutputStream fOut = null;

        fOut = new FileOutputStream(file);
        bit.compress(Bitmap.CompressFormat.PNG, 85, fOut);

        fOut.flush();
        fOut.close();
        btn_changeSettiong.setVisibility(View.VISIBLE);
        btn_saveImage.setVisibility(View.VISIBLE);

    } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }

}
</code></pre>
