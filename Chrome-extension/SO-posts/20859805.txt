<p>You'll have to override the PhotoView library itself. If you look at the source code, the <code>PhotoViewAttacher</code> class is the one that handles the onTouch events.</p>

<p>You'll have to add the special funcionality you're looking for at this part of the code (specially, the <code>ACTION_DOWN</code>) event:</p>

<pre><code>@Override
    public final boolean onTouch(View v, MotionEvent ev) {
        boolean handled = false;

        if (mZoomEnabled &amp;&amp; hasDrawable((ImageView) v)) {
            ViewParent parent = v.getParent();
            switch (ev.getAction()) {
                case ACTION_DOWN:
                    // First, disable the Parent from intercepting the touch
                    // event
                    if (null != parent)
                        parent.requestDisallowInterceptTouchEvent(true);
                    else
                        Log.i(LOG_TAG, "onTouch getParent() returned null");

                    // If we're flinging, and the user presses down, cancel
                    // fling
                    cancelFling();
                    break;

                case ACTION_CANCEL:
                case ACTION_UP:
                    // If the user has zoomed less than min scale, zoom back
                    // to min scale
                    if (getScale() &lt; mMinScale) {
                        RectF rect = getDisplayRect();
                        if (null != rect) {
                            v.post(new AnimatedZoomRunnable(getScale(), mMinScale,
                                    rect.centerX(), rect.centerY()));
                            handled = true;
                        }
                    }
                    break;
            }

            // Check to see if the user double tapped
            if (null != mGestureDetector &amp;&amp; mGestureDetector.onTouchEvent(ev)) {
                handled = true;
            }

            if (!handled &amp;&amp; null != parent) {
                parent.requestDisallowInterceptTouchEvent(false);
            }

            // Finally, try the Scale/Drag detector
            if (null != mScaleDragDetector
                    &amp;&amp; mScaleDragDetector.onTouchEvent(ev)) {
                handled = true;
            }
        }

        return handled;
    }
</code></pre>
