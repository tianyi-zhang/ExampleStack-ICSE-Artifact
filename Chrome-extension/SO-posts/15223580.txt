<p>Well....<br>
I got your problem solution...<br>
The method you wrote <code>getJSONFromUrl()</code>..<br>
I am sure it contains <code>HttpPost</code> object..<br>
change that to <code>HttpGet</code> and it will start working...</p>

<p><strong>EDIT</strong></p>

<p>Here is the code I tried with </p>

<pre><code>public class MainActivity extends Activity {

    private static String url = "https://graph.facebook.com/fql?q=SELECT%20url,%20normalized_url,%20share_count,%20like_count,%20comment_count,%20total_count,%20commentsbox_count,%20comments_fbid,%20click_count%20FROM%20link_stat%20WHERE%20url=%27https://www.facebook.com/BillionHands%27";

    // JSON Node names
    private static final String TAG_DATA = "data";
    private static final String TAG_SHARE = "share_count";
    private static final String TAG_LIKE = "like_count";
    private TextView LikeTv;
    public String like;

    JSONArray data = null;
    @SuppressLint("NewApi")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
        StrictMode.setThreadPolicy(policy);
        // Creating JSON Parser instance
        JSONParser jParser = new JSONParser();

        // getting JSON string from URL
        JSONObject json = jParser.getJSONfromURL(url);

        try {
            // Getting Array of Contacts
            Log.d("JSON ","DATA "+json);
            data = json.getJSONArray(TAG_DATA);


            JSONObject c = data.getJSONObject(0);

            // Storing each json item in variable
            String share = c.getString(TAG_SHARE);
            like = c.getString(TAG_LIKE);
            Log.i("Like Count",like);

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.activity_main, menu);
        return true;
    }

}

class JSONParser
{
    public JSONObject getJSONfromURL(String url) {
    InputStream is = null;
    String result = "";
    JSONObject jArray = null;

    // http post
    try {
        HttpClient httpclient = new DefaultHttpClient();
        HttpGet httpget = new HttpGet(url);
        HttpResponse response = httpclient.execute(httpget);
        HttpEntity entity = response.getEntity();
        is = entity.getContent();

    } catch (Exception e) {
        Log.e("log_tag", "Error in http connection " + e.toString());
    }

    // convert response to string
    try {
        BufferedReader reader = new BufferedReader(new InputStreamReader(
                is, "iso-8859-1"), 8);
        StringBuilder sb = new StringBuilder();
        String line = null;
        while ((line = reader.readLine()) != null) {
            sb.append(line + "\n");
        }
        is.close();
        result = sb.toString();
    } catch (Exception e) {
        Log.e("log_tag get data string ",
                "Error converting result " + e.toString());
    }

    try {

        jArray = new JSONObject(result);
    } catch (JSONException e) {
        Log.e("log_tag create object ",
                "Error parsing data " + e.toString());
    }

    return jArray;
}
}
</code></pre>
