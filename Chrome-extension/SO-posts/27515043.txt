<p>You have to use a custom Adapter that inflate a custom composite View for each cell.</p>

<p>In a new CustomAdapter.java (Item is your data POJO: see below)</p>

<pre><code>public class CustomAdapter extends BaseAdapter {
    private final Context mContext;
    private final List&lt;Item&gt; mItemList;

    public CustomAdapter(Context context, List&lt;Item&gt; itemList) {
        mContext = context;
        mItemList = itemList;
    }

    @Override
    public int getCount() {
        return mItemList.size();
    }

    @Override
    public Item getItem(int position) {
        return mItemList.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        CustomViewHolder holder;
        if (convertView == null) {
            convertView = LayoutInflater.from(mContext).inflate(R.layout.custom_cell, parent, false);
            CustomViewHolder holder = new CustomViewHolder();
            holder.itemNameTextView = (TextView) convertView.findViewById(R.id.textview_item_name);
            holder.itemQuantityTextView = (TextView) convertView.findViewById(R.id.textview_item_quantity);
            convertView.setTag(holder);
        } else {
            holder = (CustomViewHolder) convertView.getTag();
        }
        Item item = getItem(position);
        holder.itemNameTextView.setText(item.getName());
        holder.itemQuantityTextView.setText(item.getQuantity());
        return convertView;
    }

    private static class CustomViewHolder {
        public TextView itemNameTextView;
        public TextView itemQuantityTextView;
    }
}
</code></pre>

<p>with custom_cell.xml being : </p>



<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:gravity="center_vertical"
    android:paddingStart="?android:attr/listPreferredItemPaddingStart"
    android:paddingEnd="?android:attr/listPreferredItemPaddingEnd"
    android:minHeight="?android:attr/listPreferredItemHeightSmall"&gt;

    &lt;TextView
        android:id="@+id/textview_item_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_toLeftOf="@+id/textview_item_quantity"
        android:singleLine="true"/&gt;

    &lt;TextView
        android:id="@+id/textview_item_quantity"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentRight="true"/&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<p>This is the Item POJO : </p>

<pre><code>public class Item {
    private final String mName;
    private final String mQuantity;

    public Item(String itemName, String itemQuantity) {
        mName = itemName;
        mQuantity = itemQuantity;
    }

    public String getName() {
        return mName;
    }

    public String getQuantity() {
        return mQuantity;
    }
}
</code></pre>

<p>Use it with your ListView by doing : </p>

<pre><code>listView.setAdapater(new CustomAdapter(this, itemList));
</code></pre>
