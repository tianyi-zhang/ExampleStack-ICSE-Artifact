<p>1) create your own class which will have the <code>channelName</code> and <code>channelDescription</code> attributes, use getters and setters</p>

<p>2) Extend <code>BaseAdapter</code> </p>

<p>3) Use <code>ArrayList&lt;yourClass&gt;</code> for the adapter data</p>

<p><strong>EDIT</strong> example:</p>

<pre><code>public class MyClass{

  private String channelName, channelDescription;

    public MyClass(){
   /* default constructor */
    }

 public void setName(String channelName){
    this.channelName = channelName;
   }
    public void setDesc(String channelDescription){
    this.channelName = channelDescription;
   }

   public String getName(){
    return this.channelName;
   }
   public String getDesc(){
    return this.channelDescription;
   }
}
</code></pre>

<p>setting up data in your <code>Activity</code>:</p>

<pre><code> ArrayList&lt;MyClass&gt; data = new ArrayList&lt;MyClass&gt;();
 for(int i=0;i&lt;10;i++){
  MyClass mc = new MyClass();
  mc.setName("Name " + i);
  mc.setDesc("Desc " + i);
  data.add(mc);
 }

 myListView.setAdapter(new MyAdapter(this, data));
</code></pre>

<p>MyAdapter class:</p>

<pre><code>  public class MyAdapter extends BaseAdapter {

private ArrayList&lt;MyClass&gt; data;
private LayoutInflater inflater;
private ViewHolder holder;

static class ViewHolder {
    TextView tvName, tvDesc;
}

public MyAdapter(ArrayList&lt;MyClass&gt; data, Context c) {
    this.data = data;
    inflater = LayoutInflater.from(c);
}

@Override
public int getCount() {
    return data.size();
}

@Override
public Object getItem(int position) {
    return data.get(position);
}

@Override
public long getItemId(int position) {
    return position;
}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    MyClass item = (MyClass) getItem(position);
    if (convertView == null) {
        holder = new ViewHolder();
        convertView = inflater.inflate(R.layout.your_list_row, null);

        holder.tvName = (TextView) convertView
                .findViewById(R.id.tvItemName);
         holder.tvDesc = (TextView) convertView
                .findViewById(R.id.tvItemDesc);

        convertView.setTag(holder);
    } else {
        holder = (ViewHolder) convertView.getTag();
    }

    holder.tvName.setText(item.getName());
    holder.tvDesc.setText(item.getDesc());
    return convertView;
}

 }
</code></pre>
