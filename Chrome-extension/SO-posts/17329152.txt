<p>I've Implemented this kind of feature in my application. </p>

<p>A brief explanation. 
Implement your own class that extends Filter, like the next class:</p>

<pre><code>private class PlanetFilter extends Filter {
@Override
    protected FilterResults performFiltering(CharSequence constraint) {
        FilterResults results = new FilterResults();
        // We implement here the filter logic
        if (constraint == null || constraint.length() == 0) {
            // No filter implemented we return all the list
            results.values = planetList;
            results.count = planetList.size();
        }
        else {
            // We perform filtering operation
            List&lt;Planet&gt; nPlanetList = new ArrayList&lt;Planet&gt;();

            for (Planet p : planetList) {
                if (p.getName().toUpperCase().startsWith(constraint.toString().toUpperCase()))
                    nPlanetList.add(p);
            }

            results.values = nPlanetList;
            results.count = nPlanetList.size();

        }
        return results;
    }
}
</code></pre>

<p>In your base adapter implements Filterable interface and it has to implement getFilter() method:</p>

<pre><code>@Override
public Filter getFilter() {
    if (planetFilter == null)
        planetFilter = new PlanetFilter();

    return planetFilter;
}
</code></pre>

<p>And to tie all together, use <code>textWatcher</code> on your <code>edittext</code>, where you enter the text.</p>

<pre><code>editTxt.addTextChangedListener(new TextWatcher() {

    @Override
    public void onTextChanged(CharSequence s, int start, int before, int count) {
        System.out.println("Text ["+s+"]");
        aAdpt.getFilter().filter(s.toString());                           
    }

    @Override
    public void beforeTextChanged(CharSequence s, int start, int count,
            int after) {

    }

    @Override
    public void afterTextChanged(Editable s) {
    }
});
</code></pre>

<p><strong>That code is taken from the next <a href="http://www.survivingwithandroid.com/2012/10/android-listview-custom-filter-and.html" rel="nofollow">tutorial</a>.</strong></p>
