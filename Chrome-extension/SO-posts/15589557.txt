<p>This is actually what hasanghaforian said, but a little bit more conrect.</p>

<p>Your abstract Activity which enables holds the properties which are the same for Upload and Main could be the following</p>

<pre><code>public abstract class AbstractMediaPickerActivity extends Activity {

    protected static int RESULT_LOAD_IMAGE = 1;

    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    protected void startMediaPicker() {
        Intent i = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult(i, RESULT_LOAD_IMAGE);
    }

    protected abstract void onImagePicked(String picturePath);

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == RESULT_LOAD_IMAGE &amp;&amp; resultCode == RESULT_OK &amp;&amp; null != data) {
            Uri selectedImage = data.getData();
            String[] filePathColumn = { MediaStore.Images.Media.DATA };

            Cursor cursor = getContentResolver().query(selectedImage, filePathColumn, null, null, null);
            cursor.moveToFirst();

            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
            String picturePath = cursor.getString(columnIndex);

            cursor.close();

            onImagePicked(picturePath);

        }

    }
}
</code></pre>

<p>Your both other classes are inherited by the AbstractMediaPickerActivity</p>

<pre><code>public class MainActivity extends AbstractMediaPickerActivity {


    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button btnGallery = (Button) findViewById(R.id.btnGallery);
        btnGallery.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View arg0) {
                startMediaPicker();
            }
        });
    }

    protected void onImagePicked(String picturePath) {
        Intent uploadActivity = new Intent(Main.this, Upload.class);
        uploadActivity.putExtra("picturePath", picturePath);
        startActivity(uploadActivity);
    }

}


public class Upload extends AbstractMediaPickerActivity {


    /** Called when the activity is first created. */

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_upload);
        Bundle extras = getIntent().getExtras();
        String picturePathView = extras.getString("picturePath");
        ImageView imageView = (ImageView) findViewById(R.id.imgView);
        findViewById(R.id.imgView).setScrollBarStyle(
                View.SCROLLBARS_INSIDE_INSET);
        imageView.setImageBitmap(BitmapFactory.decodeFile(picturePathView));

        Button btnGallery = (Button) findViewById(R.id.btnGallery);
        btnGallery.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View arg0) {

                startMediaPicker();
            }
        });
    }

    @Override
    protected void onImagePicked(String picturePath) {
           ImageView imageView = (ImageView) findViewById(R.id.imgView);
            findViewById(R.id.imgView).setScrollBarStyle(
                    View.SCROLLBARS_INSIDE_INSET);
            imageView.setImageBitmap(BitmapFactory.decodeFile(picturePath));    
    }

}
</code></pre>
