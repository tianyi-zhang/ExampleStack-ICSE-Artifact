<p>As Martin points out, you need to select a node, and not the string value of it:</p>

<pre><code>DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
domFactory.setNamespaceAware(true);
DocumentBuilder builder = domFactory.newDocumentBuilder();
Document doc = builder.parse("chart.xml");
XPath xpath = XPathFactory.newInstance().newXPath();
Node n = (Node) xpath.evaluate("row[@id='1']", doc.getDocumentElement(), 
                               XPathConstants.NODE);
</code></pre>

<p>Then you can use the following serialization helper method (borrowed from <a href="http://stackoverflow.com/questions/3300839/get-a-nodes-inner-xml-as-string-in-java-dom">Get a node&#39;s inner XML as String in Java DOM</a>):</p>

<pre><code>public static String innerXml(Node node) {
    DOMImplementationLS lsImpl = (DOMImplementationLS)node.getOwnerDocument()
                                                          .getImplementation()
                                                          .getFeature("LS", "3.0");
    LSSerializer lsSerializer = lsImpl.createLSSerializer();
    lsSerializer.getDomConfig().setParameter("xml-declaration", false);
    NodeList childNodes = node.getChildNodes();
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i &lt; childNodes.getLength(); i++) {
       sb.append(lsSerializer.writeToString(childNodes.item(i)));
    }
    return sb.toString(); 
}
</code></pre>

<p>Like this:</p>

<pre><code>String xmlStr = "";
if (n != null) {
    xmlStr = innerXml(node);
}
</code></pre>
