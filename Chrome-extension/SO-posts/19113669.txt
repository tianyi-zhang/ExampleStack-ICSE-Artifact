<p>i have tried some tricks to dispatch the end call clicks, but none worked.</p>

<p>however, based on <a href="http://stackoverflow.com/a/8380418/878126"><strong>this link</strong></a> and <a href="http://grepcode.com/file_/repository.grepcode.com/java/ext/com.google.android/android/1.5_r4/com/android/internal/telephony/ITelephony.java/?v=source" rel="nofollow"><strong>this link</strong></a> , the next code will cause the phone call to hang, though i treat this as a hack :</p>

<pre><code>try {
final String serviceManagerName = "android.os.ServiceManager";
final String serviceManagerNativeName = "android.os.ServiceManagerNative";
final String telephonyName = "com.android.internal.telephony.ITelephony";

Class&lt;?&gt; telephonyClass;
Class&lt;?&gt; telephonyStubClass;
Class&lt;?&gt; serviceManagerClass;
Class&lt;?&gt; serviceManagerNativeClass;
Method telephonyEndCall;
Object telephonyObject;
Object serviceManagerObject;

telephonyClass = Class.forName(telephonyName);
telephonyStubClass = telephonyClass.getClasses()[0];
serviceManagerClass = Class.forName(serviceManagerName);
serviceManagerNativeClass = Class.forName(serviceManagerNativeName);

final Method getService = serviceManagerClass.getMethod("getService", String.class);

final Method tempInterfaceMethod = serviceManagerNativeClass.getMethod("asInterface", IBinder.class);

final Binder tmpBinder = new Binder();
tmpBinder.attachInterface(null, "fake");

serviceManagerObject = tempInterfaceMethod.invoke(null, tmpBinder);
final IBinder retbinder = (IBinder) getService.invoke(serviceManagerObject, "phone");
final Method serviceMethod = telephonyStubClass.getMethod("asInterface", IBinder.class);

telephonyObject = serviceMethod.invoke(null, retbinder);
// telephonyCall = telephonyClass.getMethod("call", String.class);
telephonyEndCall = telephonyClass.getMethod("endCall");
// telephonyAnswerCall = telephonyClass.getMethod("answerRingingCall");

telephonyEndCall.invoke(telephonyObject);

} catch (final Exception e) {
e.printStackTrace();
}
</code></pre>
