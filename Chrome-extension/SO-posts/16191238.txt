<p>You can use <a href="http://developer.android.com/guide/topics/providers/content-provider-basics.html" rel="nofollow">content provider</a> for this</p>

<pre><code>ListAdapter list;
        list=readContacts();
        ListView lv=(ListView) findViewById(R.id.listView1);
        lv.setAdapter(list);
</code></pre>

<p>And the <code>readContacts()</code> is</p>

<pre><code>public ListAdapter readContacts(){
        ContentResolver cr = getContentResolver();
        ListAdapter cd = new ArrayList&lt;Contact_getActivity&gt;();
        Cursor cur = cr.query(ContactsContract.Contacts.CONTENT_URI,
                null, null, null, ContactsContract.Contacts.DISPLAY_NAME);

        if (cur.getCount() &gt; 0) {
            while (cur.moveToNext()) {
                String id = cur.getString(cur.getColumnIndex(ContactsContract.Contacts._ID));
                String name = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
                if (Integer.parseInt(cur.getString(cur.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER))) &gt; 0) {

                    // get the phone number
                    Cursor pCur = cr.query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,null,
                            ContactsContract.CommonDataKinds.Phone.CONTACT_ID +" = ?",
                            new String[]{id}, null);
                    while (pCur.moveToNext()) {
                        String phone = pCur.getString(
                                pCur.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
                        //                         if (!Utils.isEmpty(phone)) {
                        //                             cd.add(new ContactData(id, name, phone));
                        //                         }
                    }
                    pCur.close();


                }
            }
        }
        return cd;

    }
</code></pre>
