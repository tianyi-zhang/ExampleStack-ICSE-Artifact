<p>what you are trying to do is implementing endless recyclerview. </p>

<p>in your recyclerview adapter write like this</p>

<pre><code> public class DataAdapter extends RecyclerView.Adapter {
 private final int VIEW_TYPE_ITEM = 1;
 private final int VIEW_TYPE_LOADING = 0;
 private final int VIEW_TYPE_BANNER = 2;

 ......
 ......

 @Override
 public int getItemViewType(int position) {
 if (jokes.get(position) != null) {
    if (position % 5 == 0 &amp;&amp; position != 0) {
        return VIEW_TYPE_BANNER;
    }
    return VIEW_TYPE_ITEM;
} else {
    return VIEW_TYPE_LOADING;
   }
  }
}


 @Override
  public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent,int viewType) {
 RecyclerView.ViewHolder vh;
 if (viewType == VIEW_TYPE_ITEM) {
 View v = LayoutInflater.from(parent.getContext()).inflate(
 R.layout.list_row, parent, false);
 vh = new StudentViewHolder(v);
 } 
 if(viewType == VIEW_TYPE_LOADING){
 View v = LayoutInflater.from(parent.getContext()).inflate(
 R.layout.progress_item, parent, false);
 vh = new ProgressViewHolder(v);
 }
 if(viewType == VIEW_TYPE_BANNER){
 //load your banner layout
 }
 return vh;
 }

 @Override
 public int getItemCount() {
 return studentList.size();
 }
</code></pre>

<p>and maintain your logic of whether you should enable item or banner or loading from your main activity file </p>
