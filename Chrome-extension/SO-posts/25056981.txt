<p>First, get <strong>screen size</strong> of the device:</p>

<pre><code>     public void getScreenSize() {

        Display display = getWindowManager().getDefaultDisplay();
        Point sizepoint = new Point();
        display.getSize(sizepoint);
        width = sizepoint.x;
        height = sizepoint.y;
    }
</code></pre>

<p>Then use these instructions to list the <strong>preview sizes</strong> supported by the device::</p>

<pre><code>   Parameters p = Camera.getParameters();
   List&lt;Size&gt; size = p.getSupportedPreviewSizes();
   Size size_to_use  = getOptimalSize(size, width, height);

and finally set the preview sizes to the camera preview:

            p.setPreviewSize(size_to_use.width, size_to_use.height);
            myCamera.setParameters(p); 
</code></pre>

<p>Below, the getOptimalSize method (got from the net).</p>

<pre><code>    private Size getOptimalSize(List&lt;Size&gt; sizes, int w, int h) {


        final double ASPECT_TOLERANCE = 0.2;        
        double targetRatio = (double) w / h;         
        if (sizes == null)             
            return null;          
        Size optimalSize = null;         
        double minDiff = Double.MAX_VALUE;          
        int targetHeight = h;          

        for (Size size : sizes) 
        {             

            double ratio = (double) size.width / size.height;            
            if (Math.abs(ratio - targetRatio) &gt; ASPECT_TOLERANCE)                
                continue;             
            if (Math.abs(size.height - targetHeight) &lt; minDiff) 
            {                 
                optimalSize = size;                 
                minDiff = Math.abs(size.height - targetHeight);             
            }         
        }          
        // Cannot find the one match the aspect ratio, ignore the requirement     

        if (optimalSize == null)
        {
            minDiff = Double.MAX_VALUE;             
            for (Size size : sizes) {
                if (Math.abs(size.height - targetHeight) &lt; minDiff)
                {
                    optimalSize = size;
                    minDiff = Math.abs(size.height - targetHeight); 
                }
            }
        }


        return optimalSize;     
    }
</code></pre>
