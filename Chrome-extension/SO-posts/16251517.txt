<p>your <code>Json</code> is <code>JSONArray</code> not <code>JSONObject</code>.</p>

<p>For references, <code>JSONObject</code> is covered by <code>{}</code> and <code>JSONArray</code> covered by <code>[]</code>.</p>

<p>your return string is started from <code>[]</code>. so it is <code>JSONArray</code> , so create a <code>JSONArray</code> Object.</p>

<p>change your code,</p>

<pre><code>JSONArray jsonArray = new JSONArray(json);
for (int i=0; i &lt; jsonArray.length(); i++)
{
    JSONObject oneObject = jsonArray.getJSONObject(i);

    String oneObjectsItem = oneObject.getString("Key1");
    String oneObjectsItem2 = oneObject.getString("Key2");
}
</code></pre>

<p>Note :-  Check <code>null</code> values. </p>

<pre><code>                 oneObject.isNull("key1")
</code></pre>

<p>and then assign value.</p>

<p>Here is full code .</p>

<pre><code>package com.example.library;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

public class JSONParser {

    static InputStream is = null;
    static JSONArray jarray = null;
    static String json = "";

    // constructor
    public JSONParser() {

    }

    public JSONArray getJSONFromUrl(String url) {

        // Making HTTP request
        try {
            // defaultHttpClient
            DefaultHttpClient httpClient = new DefaultHttpClient();
            HttpGet httpGet= new HttpGet(url);

            HttpResponse httpResponse = httpClient.execute(httpGet);
            HttpEntity httpEntity = httpResponse.getEntity();
            is = httpEntity.getContent();          

        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    is, "iso-8859-1"), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
            is.close();
            json = sb.toString();
        } catch (Exception e) {
            Log.e("Buffer Error", "Error converting result " + e.toString());
        }

        // try parse the string to a JSONArray 
        try {
            jarray = new JSONArray(json); 
        } catch (JSONException e) {
            Log.e("JSON Parser", "Error parsing data " + e.toString());
        }

        // return JSON String
        return jarray;

    }
}
</code></pre>
