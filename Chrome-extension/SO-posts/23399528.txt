<p>Read your log, the error is on the method setupWidgets. If you want to work with fragments, the UI is created on fragment class PlaceholderFragment. Move all methods from activities into fragment class. See the code below.</p>

<pre><code>package com.example.shopez;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;

import android.app.Activity;
import android.app.Fragment;
import android.content.Context;
import android.os.Bundle;
import android.text.method.ScrollingMovementMethod;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class MainActivity extends Activity {

    final static String FILENAME = "notes.txt";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if (savedInstanceState == null) {
            getFragmentManager().beginTransaction()
                    .add(R.id.container, new PlaceholderFragment()).commit();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment implements
            OnClickListener {

        TextView mtextOutput;
        EditText mtextInput;

        public PlaceholderFragment() {
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_main, container,
                    false);
            Button save = (Button) rootView.findViewById(R.id.save);
            save.setOnClickListener(this);

            mtextOutput = (TextView) rootView.findViewById(R.id.textView);
            mtextInput = (EditText) rootView.findViewById(R.id.textInput);
            mtextOutput.setMovementMethod(new ScrollingMovementMethod());

            return rootView;
        }

        @Override
        public void onActivityCreated(Bundle savedInstanceState) {
            super.onActivityCreated(savedInstanceState);
            loadTextFromFile();
        }

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
            if (v.getId() == R.id.save) {
                String text = mtextInput.getText().toString();
                mtextInput.setText("");

                mtextOutput.setText(text + "\n"
                        + mtextOutput.getText().toString());
                try {
                    FileOutputStream fo = getActivity().openFileOutput(
                            FILENAME, Context.MODE_APPEND);
                    fo.write(text.getBytes());
                    fo.write("\n".getBytes());

                } catch (FileNotFoundException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }

            }
        }

        private void loadTextFromFile() {
            File f = new File(getActivity().getFilesDir(), FILENAME);
            try {
                BufferedReader br = new BufferedReader(new FileReader(f));

                String line;
                while ((line = br.readLine()) != null) {
                    mtextOutput.setText(line + "\n" + mtextOutput.getText());
                }
                br.close();
            } catch (FileNotFoundException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();

            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }

}
</code></pre>

<p>The applications doesn't works because missing file, but doesn't crashed. I hope you serve.</p>
