<p>Check my working code:</p>

<p>First you need to convert your <code>drawable</code> image to <code>Bitmap</code> using this method.</p>

<pre><code> public static Bitmap drawableToBitmap(Drawable drawable) {
    if (drawable instanceof BitmapDrawable) {
        return ((BitmapDrawable) drawable).getBitmap();
    }

    final int width = !drawable.getBounds().isEmpty() ? drawable
            .getBounds().width() : drawable.getIntrinsicWidth();

    final int height = !drawable.getBounds().isEmpty() ? drawable
            .getBounds().height() : drawable.getIntrinsicHeight();

    final Bitmap bitmap = Bitmap.createBitmap(width &lt;= 0 ? 1 : width,
            height &lt;= 0 ? 1 : height, Bitmap.Config.ARGB_8888);

    Log.v("Bitmap width - Height :", width + " : " + height);
    Canvas canvas = new Canvas(bitmap);
    drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
    drawable.draw(canvas);

    return bitmap;
}
</code></pre>

<p>After getting your bitmap object you need to convert it to <code>byte</code> array using.</p>

<pre><code>ByteArrayOutputStream stream = new ByteArrayOutputStream();
bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);
byte[] byteArray = stream.toByteArray();
</code></pre>
