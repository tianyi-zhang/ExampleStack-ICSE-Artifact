<p>With Windows API you can call <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms647464%28v=vs.85%29.aspx" rel="nofollow">VerQueryValue</a> to get that information. <a href="https://github.com/twall/jna" rel="nofollow">JNA</a> has a class for accessing this API called <a href="http://twall.github.io/jna/3.4.0/javadoc/com/sun/jna/platform/win32/Version.html" rel="nofollow">Version</a>.</p>

<p>This other question has some code samples that can get you started:</p>

<p><a href="http://stackoverflow.com/questions/6918022/get-version-info-for-exe">Get Version Info for .exe</a></p>

<p>And this one has a C code sample of reading product name that you can translate into JNA:</p>

<p><a href="http://stackoverflow.com/questions/316626/how-do-i-read-from-a-version-resource-in-visual-c">How do I read from a version resource in Visual C++</a></p>

<p>This obviously only works on Windows. If you want something portable, you might be able to use <a href="http://pecoff4j.sourceforge.net/" rel="nofollow">pecoff4j</a> to parse the executable on your own. It claims to be able to parse the version information in the resource section of the PE (Portable Executable).</p>

<hr>

<p>It seems pecoff4j doesn't support parsing version strings, so I <a href="https://github.com/kichik/pecoff4j" rel="nofollow">forked it on GitHub</a> to add support for it. This code should now work:</p>

<pre><code>import java.io.IOException;

import org.boris.pecoff4j.PE;
import org.boris.pecoff4j.ResourceDirectory;
import org.boris.pecoff4j.ResourceEntry;
import org.boris.pecoff4j.constant.ResourceType;
import org.boris.pecoff4j.io.PEParser;
import org.boris.pecoff4j.io.ResourceParser;
import org.boris.pecoff4j.resources.StringFileInfo;
import org.boris.pecoff4j.resources.StringTable;
import org.boris.pecoff4j.resources.VersionInfo;
import org.boris.pecoff4j.util.ResourceHelper;

public class Main {

    public static void main(String[] args) throws IOException {
        PE pe = PEParser.parse("C:/windows/system32/notepad.exe");
        ResourceDirectory rd = pe.getImageData().getResourceTable();

        ResourceEntry[] entries = ResourceHelper.findResources(rd, ResourceType.VERSION_INFO);
        for (int i = 0; i &lt; entries.length; i++) {
            byte[] data = entries[i].getData();
            VersionInfo version = ResourceParser.readVersionInfo(data);

            StringFileInfo strings = version.getStringFileInfo();
            StringTable table = strings.getTable(0);
            for (int j = 0; j &lt; table.getCount(); j++) {
                String key = table.getString(j).getKey();
                String value = table.getString(j).getValue();
                System.out.println(key + " = " + value);
            }
        }
    }

}
</code></pre>

<p>It will print all the information you need:</p>

<pre><code>CompanyName = Microsoft Corporation
FileDescription = Notepad
FileVersion = 6.1.7600.16385 (win7_rtm.090713-1255)
InternalName = Notepad
LegalCopyright = © Microsoft Corporation. All rights reserved.
OriginalFilename = NOTEPAD.EXE
ProductName = Microsoft® Windows® Operating System
ProductVersion = 6.1.7600.16385
</code></pre>
