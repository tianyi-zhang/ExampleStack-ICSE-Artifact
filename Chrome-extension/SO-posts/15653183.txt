<p>First of all start by deleting all the "garbage" at the first of the file (which includes description, instruction etc..)</p>

<p>One possible usage is to change <code>SWN3</code> an make the method <code>extract</code> in it return a <code>Double</code>:</p>

<pre><code>public Double extract(String word)
{
    Double total = new Double(0);
    if(_dict.get(word+"#n") != null)
         total = _dict.get(word+"#n") + total;
    if(_dict.get(word+"#a") != null)
        total = _dict.get(word+"#a") + total;
    if(_dict.get(word+"#r") != null)
        total = _dict.get(word+"#r") + total;
    if(_dict.get(word+"#v") != null)
        total = _dict.get(word+"#v") + total;
    return total;
}
</code></pre>

<p>Then, giving a String that you want to tag, you can split it so it'll have only words (with no signs and unknown chars) and using the result returned from <code>extract</code> method on each word, you can decide what is the average weight of the String:</p>

<pre><code>String[] words = twit.split("\\s+"); 
double totalScore = 0, averageScore;
for(String word : words) {
    word = word.replaceAll("([^a-zA-Z\\s])", "");
    if (_sw.extract(word) == null)
        continue;
    totalScore += _sw.extract(word);
}
verageScore = totalScore;

if(averageScore&gt;=0.75)
    return "very positive";
else if(averageScore &gt; 0.25 &amp;&amp; averageScore&lt;0.5)
    return  "positive";
else if(averageScore&gt;=0.5)
    return  "positive";
else if(averageScore &lt; 0 &amp;&amp; averageScore&gt;=-0.25)
    return "negative";
else if(averageScore &lt; -0.25 &amp;&amp; averageScore&gt;=-0.5)
    return "negative";
else if(averageScore&lt;=-0.75)
    return "very negative";
return "neutral";
</code></pre>

<p>I found this way easier and it works fine for me.</p>

<hr>

<p><strong>UPDATE:</strong></p>

<p>I changed <code>_dict</code> to <code>_dict = new HashMap&lt;String, Double&gt;();</code> So it will have a <code>String</code> key and a <code>Double</code> value.</p>

<p>So I replaced <code>_dict.put(word, sent);</code> wish <code>_dict.put(word, score);</code></p>
