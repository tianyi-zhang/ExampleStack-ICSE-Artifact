<p>You getting file name inside <code>OK</code> of <code>Dialog</code> so that you need to save your file only if your click <code>OK</code>. Try this,</p>

<pre><code>@Override
    public void onClick(View arg0) {

        // / for creating a dialog
        LayoutInflater li = LayoutInflater.from(context);
        View promptsView = li.inflate(R.layout.prompts, null);

        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(
                context);

        // set prompts.xml to alertdialog builder
        alertDialogBuilder.setView(promptsView);

        final EditText userInput = (EditText) promptsView
                .findViewById(R.id.editTextDialogUserInput);

        // set dialog message
        alertDialogBuilder
                .setCancelable(false)
                .setPositiveButton("OK",
                        new DialogInterface.OnClickListener() {
                            public void onClick(DialogInterface dialog,
                                    int id) {
                                // get user input and set it to result
                                // edit text
                                String userinputResult = userInput
                                        .getText().toString();

                                SimpleDateFormat formatter = new SimpleDateFormat(
                                        "yyyy/MM/dd\\HH:mm:ss");
                                Date now = new Date();
                                fileName = formatter.format(now) + "//"
                                        + userinputResult;

                                txtatePicker.setText(fileName);
                                // / for saving the file on the SD
                                writeFile(fileName);
                            }
                        })
                .setNegativeButton("Cancel",
                        new DialogInterface.OnClickListener() {
                            public void onClick(DialogInterface dialog,
                                    int id) {
                                dialog.cancel();
                            }
                        });

        // create alert dialog
        AlertDialog alertDialog = alertDialogBuilder.create();

        // show it
        alertDialog.show();



    }




    private void writeFile(String fileName){
         try {
                String sdPath = Environment.getExternalStorageDirectory()
                        .getAbsolutePath() + "/" + fileName + ".txt";

                File myFile = new File(sdPath);
                myFile.createNewFile();

                Toast.makeText(getBaseContext(),
                        "the second step in saving file",
                        Toast.LENGTH_SHORT).show();

                FileOutputStream fOut = new FileOutputStream(myFile);
                OutputStreamWriter myOutWriter = new OutputStreamWriter(
                        fOut);

                // append or write
                myOutWriter.append(edit_txt_note.getText());
                myOutWriter.close();
                fOut.close();
                edit_txt_note.setText("");
                Toast.makeText(getBaseContext(),
                        "Done Writing SD" + fileName, Toast.LENGTH_SHORT)
                        .show();

            } catch (Exception e) {

                Toast.makeText(getBaseContext(), e.getMessage(),
                        Toast.LENGTH_SHORT).show();
            }
    }
</code></pre>
