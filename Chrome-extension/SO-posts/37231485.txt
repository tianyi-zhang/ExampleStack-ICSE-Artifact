<p>This behavior is really obtained by creating a <code>CoordinatorLayout.Behavior&lt;View&gt;</code>. So instead of extending from <code>FloatingActionButton.Behavior</code> extend from <code>CoordinatorLayout.Behavior&lt;FloatingActionMenu&gt;</code> directly.</p>

<p>Here is the equivalent code that will work with the <code>FloatingActionMenu</code>.</p>

<pre><code>public class ScrollFAMBehaviour extends CoordinatorLayout.Behavior&lt;FloatingActionMenu&gt;{
    private static final Interpolator INTERPOLATOR = new FastOutSlowInInterpolator();
    private boolean isAnimatingOut = false;

    public ScrollFAMBehaviour(Context context, AttributeSet attrs) {
        super();
    }

    @Override
    public boolean onStartNestedScroll(CoordinatorLayout coordinatorLayout, FloatingActionMenu child, View directTargetChild, View target, int nestedScrollAxes) {
        return nestedScrollAxes == ViewCompat.SCROLL_AXIS_VERTICAL || super.onStartNestedScroll(coordinatorLayout, child, directTargetChild, target, nestedScrollAxes);
    }

    @Override
    public void onNestedScroll(CoordinatorLayout coordinatorLayout, FloatingActionMenu child, View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) {
        super.onNestedScroll(coordinatorLayout, child, target, dxConsumed, dyConsumed, dxUnconsumed, dyUnconsumed);

        if (dyConsumed &gt; 0 &amp;&amp; !this.isAnimatingOut &amp;&amp; child.getVisibility() == View.VISIBLE) {
            this.animateOut(child);
        } else if (dyConsumed &lt; 0 &amp;&amp; child.getVisibility() != View.VISIBLE) {
            this.animateIn(child);
        }
    }

    private void animateOut(final FloatingActionMenu menu) {
        ViewCompat.animate(menu).scaleX(0.0F).scaleY(0.0F).alpha(0.0F).setInterpolator(INTERPOLATOR).withLayer().setListener(new ViewPropertyAnimatorListener() {

            public void onAnimationStart(View view) {
                ScrollFAMBehaviour.this.isAnimatingOut = true;
            }

            public void onAnimationCancel(View view) {
                ScrollFAMBehaviour.this.isAnimatingOut = false;
            }

            public void onAnimationEnd(View view) {
                ScrollFAMBehaviour.this.isAnimatingOut = false;

                view.setVisibility(View.GONE);
            }
        }).start();
    }

    private void animateIn(FloatingActionMenu menu) {
        menu.setVisibility(View.VISIBLE);

        ViewCompat.animate(menu).scaleX(1.0F).scaleY(1.0F).alpha(1.0F).setInterpolator(INTERPOLATOR).withLayer().setListener(null).start();
    }
}
</code></pre>
