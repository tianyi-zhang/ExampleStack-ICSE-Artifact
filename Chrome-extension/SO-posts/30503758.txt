<p>You need to set the height within the view pager, not the xml. </p>

<pre><code>import android.content.Context;
import android.support.v4.view.ViewPager;
import android.util.AttributeSet;
import android.view.View;

public class CustomViewPager extends ViewPager {

    public CustomViewPager(Context context) {
        super(context);
    }

public CustomViewPager(Context context, AttributeSet attrs){

        super(context, attrs);
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {

        super.onMeasure(widthMeasureSpec, heightMeasureSpec);

        int height = 0;
        for(int i = 0; i &lt; getChildCount(); i++) {

            View child = getChildAt(i);

            child.measure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));

            int h = child.getMeasuredHeight();

            if(h &gt; height) height = h;

        }

        heightMeasureSpec = MeasureSpec.makeMeasureSpec(height, MeasureSpec.EXACTLY);

        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
    }
}
</code></pre>

<p>Playing around with onMeasure method will get you what you need, the Viewpager is controlling the height +  width of its children</p>

<p>If that doesn't work , you can overide the getPageHeight and GetPagewidth methods of the View Pager</p>

<pre><code>  @Override
        public float getPageHeight(int position) {
         //Return different height based on position.
        // Height is returned as a float
             if(position == 1)
              {
                  return (0.35f);
               }
             else{
                  retrun 0.50f;
                  }
        }
</code></pre>
