<p>Use CustomAdapter for listview and add items in collection for example an ArrayList. </p>

<pre><code>CustomAdapter adapter=new CustomAdapter(getApplicationContext(),R.id.listview_id,itemlist);
</code></pre>

<p>list_item.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="fill_parent"
android:orientation="horizontal"
  &gt;


 &lt;TextView android:id="@+id/item1"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:padding="10dip"
    android:textSize="16sp"
    android:textStyle="bold"
    android:textColor="#000000"
    /&gt;     

  &lt;TextView android:id="@+id/item2"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:padding="10dip"
    android:textSize="16sp"
    android:textStyle="bold"
    android:textColor="#000000"
    /&gt;  

&lt;/LinearLayout&gt;
</code></pre>

<p>CustomAdapter.java</p>

<pre><code>public class CustomAdapter extends CustomAdapter&lt;String&gt;{

//Declare variables variables here..

public CustomAdapter(Context context, int resource,
        List&lt;String&gt; objects) {
    //initialize and set constructor values here..
}

public static class ViewHolder {
    TextView textitem1;
    TextView textitem2

}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    // TODO Auto-generated method stub
    View row = convertView;
    ViewHolder holder = null;
    if(null == row) {
        LayoutInflater inflater = (LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        row = inflater.inflate(R.layout.list_item, parent, false);
        holder = new ViewHolder();
        holder.textitem1 = (TextView) row.findViewById(R.id.item1);
        holder.textitem2 = (TextView) row.findViewById(R.id.item2);

        row.setTag(holder);
    } 

    return view;
}
}
</code></pre>
