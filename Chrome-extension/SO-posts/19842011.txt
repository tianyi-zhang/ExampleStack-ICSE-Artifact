<p>I may need to see more of your abstract class definition. The error, may be coming from the DatabaseFieldConfig.fromField call. The error message indicates that it's trying to find a database type definition for android.content.Context. Is there a field declared in your abstract class that is of that type? Here's the code that produces the error message you're seeing.</p>

<pre><code>    private static void writeConfigForTable(BufferedWriter writer, Class&lt;?&gt; clazz) throws SQLException, IOException {
    String tableName = DatabaseTableConfig.extractTableName(clazz);
    List&lt;DatabaseFieldConfig&gt; fieldConfigs = new ArrayList&lt;DatabaseFieldConfig&gt;();
    // walk up the classes finding the fields
    try {
        for (Class&lt;?&gt; working = clazz; working != null; working = working.getSuperclass()) {
            for (Field field : working.getDeclaredFields()) {
                DatabaseFieldConfig fieldConfig = DatabaseFieldConfig.fromField(databaseType, tableName, field);
                if (fieldConfig != null) {
                    fieldConfigs.add(fieldConfig);
                }
            }
        }
    } catch (Error e) {
        System.err.println("Skipping " + clazz + " because we got an error finding its definition: "
                + e.getMessage());
        return;
    }
    if (fieldConfigs.isEmpty()) {
        System.out.println("Skipping " + clazz + " because no annotated fields found");
        return;
    }
    @SuppressWarnings({ "rawtypes", "unchecked" })
    DatabaseTableConfig&lt;?&gt; tableConfig = new DatabaseTableConfig(clazz, tableName, fieldConfigs);
    DatabaseTableConfigLoader.write(writer, tableConfig);
    writer.append("#################################");
    writer.newLine();
    System.out.println("Wrote config for " + clazz);
}
</code></pre>
