<p>You can use an ArrayList holding your Data for the ListView and add an item at the beginning of the list by: myArrayList.add(0, newItem).
Below an example Adapter which can do this:</p>

<pre><code>public class PlaylistAdapter extends BaseAdapter {

    private Context context;
    private List&lt;Playlist&gt; entries;

    public PlaylistAdapter(Context context, List&lt;Playlist&gt; entries) {
        this.context = context;
        this.entries = entries;
    }

    public void add(Playlist item) {
        if (entries.contains(item))
            return;
        entries.add(item);
        this.notifyDataSetChanged();
    }

    public void add(int index, Playlist item) {
        if (entries.contains(item))
            return;
        entries.add(index, item);
        this.notifyDataSetChanged();
    }

    @Override
    public int getCount() {
        return entries.size();
    }

    @Override
    public Playlist getItem(int arg0) {
        return entries.get(arg0);
    }

    @Override
    public long getItemId(int arg0) {
        return arg0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if (convertView == null) {
            LayoutInflater inflater = (LayoutInflater) context
                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            // inflate the layout you want to use for a single entry row
            convertView = inflater.inflate(R.layout.playlists_adapter_entry,
                    null);
        }
        // fetches the current item
        Playlist playlist = getItem(position);

        // fill the entry layout with data
        ImageView cover = (ImageView) convertView
                .findViewById(R.id.playlist_adapter_entry_cover);
        cover.setImageBitmap(playlist.getCover());

        TextView title = (TextView) convertView
                .findViewById(R.id.playlist_adapter_entry_title);
        title.setText(playlist.getTitle());     
        return convertView;
    }

}
</code></pre>
