<p>I have done some changes on finnw's code, so it works with enumerations having up to 64 items.</p>

<pre><code>// From Adamski's answer
public static &lt;E extends Enum&lt;E&gt;&gt; long encode(EnumSet&lt;E&gt; set) {
    long ret = 0;

    for (E val : set) {
        ret |= 1L &lt;&lt; val.ordinal();
    }

    return ret;
}

@SuppressWarnings("unchecked")
public static &lt;E extends Enum&lt;E&gt;&gt; EnumSet&lt;E&gt; decode(long code,
                                                     Class&lt;E&gt; enumType) {
    try {
        E[] values = (E[]) enumType.getMethod("values").invoke(null);
        EnumSet&lt;E&gt; result = EnumSet.noneOf(enumType);
        while (code != 0) {
            int ordinal = Long.numberOfTrailingZeros(code);
            code ^= Long.lowestOneBit(code);
            result.add(values[ordinal]);
        }
        return result;
    } catch (IllegalAccessException ex) {
        // Shouldn't happen
        throw new RuntimeException(ex);
    } catch (InvocationTargetException ex) {
        // Probably a NullPointerException, caused by calling this method
        // from within E's initializer.
        throw (RuntimeException) ex.getCause();
    } catch (NoSuchMethodException ex) {
        // Shouldn't happen
        throw new RuntimeException(ex);
    }
}
</code></pre>
