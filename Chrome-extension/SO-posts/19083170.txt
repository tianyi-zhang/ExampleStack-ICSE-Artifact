<p>I was able to complete this by putting it inside an AsyncTask.</p>

<pre><code>class online extends AsyncTask&lt;String, String, String&gt; 
{
    boolean responded = false;
    @Override
    protected void onPreExecute() 
    {
        super.onPreExecute();
        pDialog2 = new ProgressDialog(Main.this);
        pDialog2.setMessage("Checking internet, please wait...");
        pDialog2.setIndeterminate(false);
        pDialog2.setCancelable(false);
        pDialog2.show();
    }

    protected String doInBackground(String... args) 
    {

        HttpGet requestForTest = new HttpGet("http://m.google.com");
        try
        {
            new DefaultHttpClient().execute(requestForTest); // can
            responded = true;
        }
        catch (Exception e)
        {
        }

        try
        {
            int waited = 0;
            while (!responded &amp;&amp; (waited &lt; 5000))
            {
                mHandler.postDelayed(new Runnable() 
                {
                    public void run() 
                    {
                    }
                }, 100);
                waited += 100;
            }
        }
        finally
        {
            if (!responded)
            {
                h.sendEmptyMessage(0);
            }
            else
            {
                h.sendEmptyMessage(1);
            }
        }
        return null;
    }

    protected void onPostExecute(String file_url) 
    {
        pDialog2.dismiss();
    }
}
</code></pre>
