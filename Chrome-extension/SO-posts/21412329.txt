<p>You have</p>

<pre><code>String[] values = new String[q.size()]; 
ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this,
      android.R.layout.simple_list_item_1, android.R.id.text1, values);
</code></pre>

<p>But where do you populate items to values <code>array</code>. I don't see that in your code.</p>

<p>You can use Custom ListView with a Custom Adapter</p>

<pre><code> ArrayList&lt;GS&gt; q = db.getData();
 ListView lv = (ListView) findViewById(R.id.listView);
 lv.setAdapter(new CustomAdapter(MainActivity.this,q));
</code></pre>

<p>CustomAdapter</p>

<pre><code>class CustomAdapter extends ArrayAdapter&lt;GS&gt;
  {
       ArrayList&lt;GS&gt; list;
       LayoutInfalter mInfalter;    
       public CustomAdapter(Context context, ArrayList&lt;GS&gt; list)
       {
          super(context,R.layout.customlayout,list);
          this.list= list  
          mInfalter = LayoutInfalter.from(context);
       }   
        public View getView(int position, View convertView, ViewGroup parent) {
          ViewHolder holder;
          if(convertView==null)
          {
               convertView = mInflater.inflate(R.layout.customlayout,parent,false);
               holder = new ViewHolder();
               holder.tv1 = (TextView)convertView.findViewById(R.id.textView1); 
               convertView.setTag(holder); 
          }else{
                holder = (ViewHolder)convertVire.getTag();
          } 

                holder.tv1.setText(list.get(postion).getAS_name());
          return convertVIew;
    }
    static class ViewHolder
    {
        TextView tv1;
    }    
  }
</code></pre>

<p>Have a <code>TextView</code> with id textview1 in <code>customlayout.xml</code>.</p>

<p>Or</p>

<p>Using <code>SimpleCursorAdapter</code> would be appropriate in this case.</p>
