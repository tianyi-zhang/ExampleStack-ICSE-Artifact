<p>Most Java projects often have apache-commons lang available.  StringUtils.join() methods is very nice and has several flavors to meet almost every need.</p>

<pre><code>public static java.lang.String join(java.util.Collection collection,
                                    char separator)


public static String join(Iterator iterator, String separator) {
    // handle null, zero and one elements before building a buffer 
    Object first = iterator.next();
    if (!iterator.hasNext()) {
        return ObjectUtils.toString(first);
    }
    // two or more elements 
    StringBuffer buf = 
        new StringBuffer(256); // Java default is 16, probably too small 
    if (first != null) {
        buf.append(first);
    }
    while (iterator.hasNext()) {
        if (separator != null) {
            buf.append(separator);
        }
        Object obj = iterator.next();
        if (obj != null) {
            buf.append(obj);
        }
    }
    return buf.toString();
}
</code></pre>

<blockquote>
  <p>Parameters:</p>
  
  <p><strong>collection</strong> - the Collection of values to join together, may be null</p>
  
  <p><strong>separator</strong> - the separator character to use</p>
  
  <p><strong>Returns</strong>: the joined String, null if
  null iterator input</p>
  
  <p>Since:
  2.3</p>
</blockquote>
