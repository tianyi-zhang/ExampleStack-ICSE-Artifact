<p>Any network task will cannot be run on the mainthread, so we need an asynctask. </p>

<pre><code>class RequestTask extends AsyncTask&lt;String, String, String&gt;{



    @Override
    protected String doInBackground(String... uri) {
        HttpClient httpclient = new DefaultHttpClient();
        HttpResponse response;
        String responseString = null; // THIS IS WHERE THE INFO IS SAVED

        try {
            response = httpclient.execute(new HttpGet(uri[0]));
            StatusLine statusLine = response.getStatusLine();
            if(statusLine.getStatusCode() == HttpStatus.SC_OK){

                ByteArrayOutputStream out = new ByteArrayOutputStream();
                 response.getEntity().writeTo(out);
                 out.close();
                 responseString = out.toString("UTF-8");
            } 

            else{
                //Closes the connection.
                response.getEntity().getContent().close();
                throw new IOException(statusLine.getReasonPhrase());
            }
        } 

        catch (ClientProtocolException e) {
            e.printStackTrace();

            //Handle httprequest when answer is not expected
        } 

        catch (IOException e) { 
            e.printStackTrace();

            //Handle httprequest when answer is not expected
        }
        return responseString;
    }



    @Override
    protected void onPostExecute(String result) {
        super.onPostExecute(result); 
        progressDialog.dismiss();

              //handle your result here and any catches



        }           









    }




}
</code></pre>

<p>then you use
<code>new RequestTask().execute("http://www.yourapilocation.com/whatever");</code> to call the method.</p>

<p>Hope this helps.</p>
