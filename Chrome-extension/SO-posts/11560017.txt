<p>This is what is done in IBM jdk 1.6 (i believe it is pretty much the same for all vendors)</p>

<p><strong>EDIT</strong></p>

<p>Regarding <code>equals</code> and <code>hashcode</code> you might be interested in seeing <a href="http://stackoverflow.com/a/27609/579580">this</a> post.</p>

<p><strong>END of EDIT</strong></p>

<pre><code> /**
 * Maps the specified key to the specified value.
 * 
 * @param key
 *            the key
 * @param value
 *            the value
 * @return the value of any previous mapping with the specified key or null
 *         if there was no mapping
 */
@Override
public V put(K key, V value) {
    return putImpl(key, value);
}

V putImpl(K key, V value) {
    Entry&lt;K,V&gt; entry;
    if(key == null) {
        entry = findNullKeyEntry();
        if (entry == null) {
            modCount++;
            if (++elementCount &gt; threshold) {
                rehash();
            }
            entry = createHashedEntry(null, 0, 0);
        }
    } else {
        int hash = key.hashCode();
        int index = hash &amp; (elementData.length - 1);
        entry = findNonNullKeyEntry(key, index, hash);
        if (entry == null) {
            modCount++;
            if (++elementCount &gt; threshold) {
                rehash();
                index = hash &amp; (elementData.length - 1);
            }
            entry = createHashedEntry(key, index, hash);
        }
        if ((cache != null) &amp;&amp; (hash &gt;&gt; CACHE_BIT_SIZE == 0)
                &amp;&amp; (key instanceof Integer)) {
            cache[hash] = value;
        }
    }

    V result = entry.value;
    entry.value = value;
    return result;
}
</code></pre>
