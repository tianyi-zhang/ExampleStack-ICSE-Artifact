<p>If you want to build an app with jax-RS, you just need to include a few jars in your project before deploying to Tomcat. Your IDE may do this for you when it builds the war file. You can move these jars to the Tomcat lib folder if you want to decrease the size of your upload when you deploy. But you certainly don't need to use REST to access request parameters.</p>

<p>Practically all traditional Web apps need to capture http post parameters. I wrote a little utility servlet to list all of the parameters to help me prevent silly mistakes where I call the parameter by one name in the HTML and another name in the servlet. This code shows you how to get request and session parameters: (see <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html" rel="nofollow">HttpServletRequest docs</a> )</p>

<pre><code>import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;

/**
 * This Servlet contains some helpful debugging methods.
  * @author Leon LaSpina
 */
@WebServlet(name = "UtilityServlet", urlPatterns = {"/dev/Utility"})
public class UtilityServlet extends HttpServlet {

    /**
     * This is a utility method for displaying the list of all request parameters
     * sent to a Servlet or JSP.
     * @param request - The HTTP request sent to the Servlet or JSP
     * @param out The stream so that the method may write directly to the web page.
     */
    public static void printMap(HttpServletRequest request, PrintWriter out) {
        java.util.Map&lt;String, String[]&gt; paramMap = request.getParameterMap();
        out.println("&lt;h3&gt;From Data&lt;/h3&gt;");
        out.println("&lt;table border='1'&gt;&lt;tr&gt;");
        out.print("&lt;td&gt;attribte name&lt;/td&gt;&lt;td&gt;Attribute Data&lt;/td&gt;&lt;/tr&gt;");
        String[] attribute;
        for (String name : paramMap.keySet()) {
            out.print("&lt;tr&gt;");
            out.println("&lt;td&gt;" + name + "&lt;/td&gt;&lt;td&gt;");
            attribute = paramMap.get(name);
            if (attribute.length == 1) {
                out.print(attribute[0]);
            } else {
                for (String s : attribute) {
                    out.print(s + ", ");
                }
            }
            out.println("&lt;/td&gt;&lt;/tr&gt;");
        }
        out.println("&lt;/table&gt;");
    }

    /**
     * This is a simple utility method for displaying the list of all Session
     * Objects in a simple table.
     * @param request - sent to servlet or JSP
     * @param out the OutputStream so that we may write directly to the web page
     */
    public static void printSessionMap(HttpServletRequest request, PrintWriter out) {
        HttpSession session = request.getSession();
        printSessionMap(session, out);
    }

    /**
     * This is a simple utility method for displaying the list of all Session
     * Objects in a simple table.
     * @param request - sent to servlet or JSP
     * @param out the OutputStream so that we may write directly to the web page
     */
    public static void printSessionMap(HttpSession session, PrintWriter out) {
        java.util.Enumeration&lt;String&gt; names = session.getAttributeNames();
        out.println("&lt;h3&gt;Session Objects&lt;/h3&gt;");
        out.println("&lt;table border='1'&gt;&lt;tr&gt;");
        out.print("&lt;td&gt;attribte&lt;/td&gt;&lt;td&gt;DataType&lt;/td&gt;&lt;td&gt;Object Data&lt;/td&gt;&lt;/tr&gt;");
        while (names.hasMoreElements()) {
            out.print("&lt;tr&gt;&lt;td&gt;");
            String attribute = names.nextElement();
            out.print(attribute + "&lt;/td&gt;&lt;td&gt;");
            out.print(session.getAttribute(attribute).getClass().getName());
            out.print("&lt;/td&gt;&lt;td&gt;");
            out.println(session.getAttribute(attribute));
            out.println("&lt;/td&gt;&lt;/tr&gt;");
        }
        out.println("&lt;/table&gt;");
    }

    /** 
     * Handles the HTTP &lt;code&gt;POST&lt;/code&gt; method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();
        //HttpSession theSession = request.getSession();
        try {
            out.println("&lt;html&gt;&lt;head&gt;");
            out.println("&lt;title&gt;UtilityServlet&lt;/title&gt;&lt;/head&gt;");
            out.println("&lt;body&gt;&lt;h1&gt;UtilityServlet for development&lt;/h1&gt;");
            printMap(request, out);
            printSessionMap(request, out);
            out.println("&lt;/body&gt;&lt;/html&gt;");
        } finally {
            out.close();
        }
    }
}
</code></pre>
