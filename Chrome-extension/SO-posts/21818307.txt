<p>Hope this will help you. I tested this code and this is working fine. </p>

<pre><code>@Override
        protected String doInBackground(String... params) {
            // TODO Auto-generated method stub
            int count;
            try{
                URL url=new URL(params[0]);
                URLConnection connection=url.openConnection();
                connection.connect();
                //getting file length
                long lengthOfFile=connection.getContentLength();
                //input stream to read file with 8k buffer
                InputStream input=new BufferedInputStream(url.openStream(),8192);
                //out stream to write file
                OutputStream output=new FileOutputStream(Environment.getExternalStorageDirectory()+"/Download/Test/software_testing.pdf");

                byte data[]= new byte[1024];
                long total =0;
                while ((count = input.read(data)) != -1){
                    if(isCancelled())
                        return null;
                    total +=count;
                    //publishing the progress
                    //After this onProgressUpdate will be called
                    if(lengthOfFile &gt; 0){
                        //System.out.println((int)((total*100)/lengthOfFile)+"First Line");
                        //Call onProgressUpdate() for display status
                        publishProgress((int)((total*100)/lengthOfFile));

                    }

                    //writing data to file
                    output.write(data,0,count);
                } 
                //flushing output
                output.flush();
                //closing stream
                output.close();
                input.close();

            }catch(Exception e){
                Log.e("Error", e.getMessage());
                System.out.println("Exception :"+e.getMessage());
            }

            return null;

        }
</code></pre>

<p>EDITED:</p>

<p>Extend your class from <code>AsyncTask&lt;String, Integer, String&gt;</code> and override its' methods. 
`</p>

<ul>
<li><code>onPreExecute()</code> used to do process before start the download.</li>
<li><code>doInBackground(String... params)</code> used to do the process while
downloading the file. The above code is for this method.</li>
<li><p><code>onProgressUpdate(Integer... progress)</code> used to do setting the
progress bar according to the current download percentage. Once you use  publishProgress (), this method will invoke. </p></li>
<li><p><code>onPostExecute(String file_url)</code> This method can used to dismiss the
dislog after the file was downloaded.</p></li>
</ul>

<p>So what you have to do is set your progress bar to update according to the downloading percentage inside <code>onProgressUpdate (Integer... progress)</code>. You can use <code>setProgress()</code> method for that. </p>

<p>I hope now you understand the process well :) </p>
