<p>I have always put my list items in a seperate xml file. Maybe try putting your LinearLayout with the two TextViews in a file (maybe call it listrow.xml).</p>

<p>As an example:</p>

<p>Here is the listitem (list_stat_item.xml):</p>

<pre><code>&lt;LinearLayout android:id="@+id/LinearLayout01"
    android:layout_width="fill_parent" android:layout_height="fill_parent"
    android:orientation="horizontal" xmlns:android="http://schemas.android.com/apk/res/android"&gt;

    &lt;TextView android:text="" android:id="@+id/txtKey"
        android:layout_width="wrap_content" android:layout_height="wrap_content"
        android:padding="10dp" android:textSize="16sp"&gt;&lt;/TextView&gt;
    &lt;TextView android:text="" android:id="@+id/txtValue"
        android:layout_width="wrap_content" android:layout_height="wrap_content"
        android:padding="10dp" android:textSize="16sp"&gt;&lt;/TextView&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>And here is the main view (view_stats.xml):</p>

<pre><code>&lt;LinearLayout android:id="@+id/LinearLayout01"
    android:layout_width="fill_parent" android:layout_height="wrap_content"
    android:orientation="vertical" xmlns:android="http://schemas.android.com/apk/res/android"&gt;

    &lt;ListView android:id="@android:id/list" android:layout_width="fill_parent"
        android:layout_height="0dip" android:layout_weight="1"
        android:transcriptMode="normal" android:divider="@drawable/list_divider"
        android:dividerHeight="1px" /&gt;


&lt;/LinearLayout&gt;
</code></pre>

<p>And here is the code:</p>

<p>Create an ArrayList, and add items to it, then bind to a custom adapter.</p>

<pre><code>ArrayList&lt;StatItem&gt; lst = new ArrayList&lt;StatItem&gt;();

        lst.add(new StatItem("Current Week: ", String.valueOf(currentWeek)));
        lst.add(new StatItem("Weeks Left: ", String.valueOf(GeneralUtils.daysUntilBirth(this, pregnancyID) / 7)));
        lst.add(new StatItem("Days Left: ", String.valueOf(GeneralUtils.daysUntilBirth(this, pregnancyID))));
        lst.add(new StatItem("Current Trimester: ", String.valueOf(currentTrimester)));
        lst.add(new StatItem("Posts: ", String.valueOf(blogCount)));
        lst.add(new StatItem("Baby Names: ", String.valueOf(babyNamesCount)));



        getListView().setSelector(android.R.color.transparent);
        StatListAdapter sa = new StatListAdapter(this, R.layout.list_stat_item, lst );
        setListAdapter(sa);
</code></pre>

<p>If you want to see the adapter code (StatListAdapter extends ArrayAdapter):</p>

<pre><code>public class StatListAdapter extends ArrayAdapter&lt;StatItem&gt;
    {
        public ArrayList&lt;StatItem&gt; items;
        public StatListAdapter(Context context, int textViewResourceId, ArrayList&lt;StatItem&gt; objects) {
            super(context, textViewResourceId, objects);
            this.items = objects;

        }

        public View getView(int position, View convertView, ViewGroup parent)
        {
            View v = convertView;
            if (v == null)
            {
                LayoutInflater li = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                v = li.inflate(R.layout.list_stat_item, null);

            }
            StatItem i = items.get(position);
            if (i != null)
            {
                TextView kt = (TextView)v.findViewById(R.id.txtKey);
                TextView vt = (TextView)v.findViewById(R.id.txtValue);

                            kt.setText(i.key);
                            vt.setText(i.value);

            }


            return v;

        }

    }
</code></pre>
