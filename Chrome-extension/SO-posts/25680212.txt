<p>There is a good <a href="http://codebybrian.com/2013/07/28/custom_view_regular_polygons.html" rel="nofollow">tutorial here</a> on creating custom polygon shapes. It is a fairly long process, but you will get there. In short, you will have to create custom XML attributes for a custom <code>View</code>.  </p>

<p>The real magic is here:  </p>

<pre><code>    @Override
    protected void onDraw(Canvas canvas) {
        int measuredWidth = getMeasuredWidth();
        int measuredHeight = getMeasuredHeight();
        int x = (measuredWidth/2)  ;
        int y = (measuredHeight/2) ;
        int radius = Math.min(x,y) ;

        if (sides &lt; 3) return;

        float a = (float) (Math.PI * 2)/sides;
        int workingRadius = radius;
        polyPath.reset();

        // The poly is created as a shape in a path.
        // If there is a hole in the poly, draw a 2nd shape inset from the first
        for(int j = 0; j &lt; ((fillPercent &lt; 100) ? 2 : 1) ; j++){
            polyPath.moveTo(workingRadius,0);
            for (int i = 1; i &lt; sides; i++) {
                polyPath.lineTo((float)(workingRadius*Math.cos(a*i)),
                (float)(workingRadius*Math.sin(a*i)));
            }
            polyPath.close();

            workingRadius -= radius * fillPercent;
            a = -a;
        }

        canvas.save();
        canvas.translate(x, y);
        canvas.rotate(startAngle);
        canvas.drawPath(polyPath, fillPaint);

        canvas.restore();

        if(showInscribedCircle){
            canvas.drawCircle(x,y,radius, inscribedCirclePaint);
        }
        super.onDraw(canvas);
    }
</code></pre>
