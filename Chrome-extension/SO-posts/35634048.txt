<p>Create a model to represent each question and answer separately.</p>

<pre><code>public class QAnsModel implements Serializable
{
    private String question, answer;

    public QAnsModel(String question, String answer)
    {
        this.question = question;
        this.asnwer = answer;
    }

    public String getQuestion()
    {
        return question;
    }

    public String getAnswer()
    {
        return answer;
    }
}
</code></pre>

<p>In your activity,</p>

<pre><code>// Your mentioned code
Bundle b = getIntent().getExtras();
CharSequence[] questionsCorrect = b.getCharSequenceArray("questionsCorrect");
CharSequence[] answersCorrect = b.getCharSequenceArray("answersCorrect");

// Create a list of questions and answers. Make sure both arrays have same length
QAnsModel model;
ArrayList&lt;QAnsModel&gt; dataList = new ArrayList&lt;&gt;();
for(int i = 0; i &lt; questionsCorrect.length; i++)
{
    model = new QAnsModel(questionsCorrect[i].toString(), answersCorrect[i].toString());
    dataList.add(model);
}
</code></pre>

<p>At this point, the list ready with the data and you can display in a <code>ListView</code>.</p>

<p>For displaying data in a <code>ListView</code>, create a custom adapter using <code>BaseAdapter</code>.</p>

<pre><code>public class MainListAdapter extends BaseAdapter {
    private final Context context;
    private ArrayList&lt;QAnsModel&gt; mainList;

    public MainListAdapter(Context context, ArrayList&lt;QAnsModel&gt; mainList) {
        this.context = context;
        this.mainList = mainList;
    }

    @Override
    public int getCount() {
        return mainList.size();
    }

    @Override
    public Object getItem(int i) {
        return mainList.get(i);
    }

    @Override
    public long getItemId(int i) {
        return 0;
    }

    /*private view holder class*/
    private class ViewHolder {
        TextView questionView;
        TextView answerView;
    }

    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder = null;

        LayoutInflater mInflater = (LayoutInflater)
                context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
        if (convertView == null) {
            convertView = mInflater.inflate(R.layout.item_main_list_layout, null);
            holder = new ViewHolder();
            holder.questionView = (TextView) convertView.findViewById(R.id.itemQuestion);
            holder.answerView = (TextView) convertView.findViewById(R.id.itemAnswer);
            convertView.setTag(holder);
        }
        else {
            holder = (ViewHolder) convertView.getTag();
        }

        QAnsModel model = (QAnsModel) getItem(position);

        holder.questionView.setText(model.getQuestion());
        holder.answerView.setText(model.getAnswer());

        return convertView;
    }
}
</code></pre>

<p>And create layout file item_main_list_layout.xml,</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="vertical"&gt;

    &lt;TextView
        android:id="@+id/itemQuestion"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/&gt;

    &lt;TextView
        android:id="@+id/itemAnswer"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>Instead of </p>

<pre><code>final ArrayAdapter adapter = new ArrayAdapter(this, android.R.layout.simple_list_item_1, dataList); 
lv.setAdapter(adapter)
</code></pre>

<p>Use this:</p>

<pre><code>MainListAdapter adapter = new MainListAdapter(this, dataList);
lv.setAdapter(adapter);
</code></pre>

<p>This should work to solve your problem.</p>
