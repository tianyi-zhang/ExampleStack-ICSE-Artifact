<p>Use imageLoader</p>

<p>add this to your application:</p>

<pre><code>public class YourApplication extends Application {
    @Override
    public void onCreate() {
        super.onCreate();

        initImageLoader(getApplicationContext());
    }

    public static void initImageLoader(Context context) {
        DisplayImageOptions options = new DisplayImageOptions.Builder()
            .showImageOnLoading(null)
            .cacheInMemory(false)
            .cacheOnDisk(true)
            .considerExifParams(true)
            .displayer(new RoundedBitmapDisplayer(70))
            .build();

        ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(context)
            .threadPriority(Thread.NORM_PRIORITY - 2)
            .denyCacheImageMultipleSizesInMemory()
            .diskCacheFileNameGenerator(new Md5FileNameGenerator())
            .tasksProcessingOrder(QueueProcessingType.LIFO)
            .diskCacheSize(50 * 1024 * 1024)
            .tasksProcessingOrder(QueueProcessingType.LIFO)
            .memoryCache(new LruMemoryCache(2 * 1024 * 1024))
            .memoryCacheSize(2 * 1024 * 1024)
            .defaultDisplayImageOptions(options)
            .build();
        ImageLoader.getInstance().init(config);
    }
}
</code></pre>

<p>Also compile this lib in your gradle settings</p>

<pre><code>compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
</code></pre>

<p>And then use like this:</p>

<pre><code>ImageLoader.getInstance().displayImage(uri, imageView);
</code></pre>

<p>Hope that helps!</p>
