<p>It works fine if the dialog is an activity itself. Also it is possible to create an activity which is showing only a Fragment. (I'll edit my answer soon.)</p>

<p><strong>AndroidManifest.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
package="com.gyebro.settingsintent" &gt;

&lt;application
    android:allowBackup="true"
    android:icon="@drawable/ic_launcher"
    android:label="@string/app_name"
    android:theme="@style/AppTheme" &gt;
    &lt;activity
        android:name=".ShowCurrentUserActivity"
        android:label="Show Current User"
        android:theme="@android:style/Theme.Holo.Light.Dialog"&gt;
        &lt;intent-filter&gt;
            &lt;action android:name="com.gyebro.settingsintent.SHOW_CURRENT_USER" /&gt;
            &lt;category android:name="android.intent.category.DEFAULT" /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;
    &lt;activity
        android:name=".SettingsActivity"
        android:label="@string/title_activity_settings" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name="android.intent.action.MAIN" /&gt;
            &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;
&lt;/application&gt;
&lt;/manifest&gt;
</code></pre>

<p><strong>SettingsActivity.java</strong></p>

<pre><code>public class SettingsActivity extends PreferenceActivity {
@Override
public void onBuildHeaders(List&lt;Header&gt; target) {
    loadHeadersFromResource(R.xml.pref_headers, target);
}
}
</code></pre>

<p><strong>pref_headers.xml</strong></p>

<pre><code>&lt;preference-headers xmlns:android="http://schemas.android.com/apk/res/android"&gt;
&lt;header android:title="Intent"
    android:summary="Launches my Activity"&gt;
    &lt;intent android:action="com.gyebro.settingsintent.SHOW_CURRENT_USER" /&gt;
&lt;/header&gt;
&lt;/preference-headers&gt;
</code></pre>

<p><strong>ShowCurrentUserActivity.java</strong></p>

<pre><code>public class ShowCurrentUserActivity extends Activity {
public AlertDialog dialog = null;
@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.dialog);
}
}
</code></pre>

<p>and finally <strong>dialog.xml</strong></p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:orientation="vertical" android:layout_width="match_parent"
android:layout_height="match_parent"&gt;
&lt;TextView
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="Do you want to sign out?"
    android:layout_margin="20dp"
    android:id="@+id/textview" /&gt;
&lt;LinearLayout
    style="?android:attr/buttonBarButtonStyle"
    android:orientation="horizontal"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:weightSum="2"&gt;
    &lt;Button
        style="?android:attr/buttonBarButtonStyle"
        android:layout_width="0dp"
        android:layout_weight="1"
        android:layout_height="wrap_content"
        android:text="Sign out"
        android:id="@+id/button1" /&gt;
    &lt;Button
        style="?android:attr/buttonBarButtonStyle"
        android:layout_width="0dp"
        android:layout_weight="1"
        android:layout_height="wrap_content"
        android:text="Cancel"
        android:id="@+id/button2" /&gt;
&lt;/LinearLayout&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p><img src="http://i.stack.imgur.com/umWM5.png" width="250">  <img src="http://i.stack.imgur.com/MtmKY.png" width="250"></p>

<p><strong>E D I T</strong>
Here's an example, when you have a Dialog Fragment wrapped in an Activity. You need to finish the activity after the user interacts with the Dialog. Unless you use the Dialog Fragment at other places too, I recommend using the above solution.</p>

<p><strong>ShowCurrentUserActivity.java</strong></p>

<pre><code>public class ShowCurrentUserActivity extends Activity {

private static final String TAG = "ShowCurrentUserActivity";
@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    // Show the dialog
    ShowCurrentUserDialog fragment = new ShowCurrentUserDialog();
    fragment.show(getFragmentManager(), "ShowCurrentUserDialog");
}
public void doPositiveClick() {
    // Do stuff here.
    Log.d(TAG, "Dialog positive click");
}
public void doNegativeClick() {
    // Do stuff here.
    Log.d(TAG, "Dialog negative click");
}
public void dialogDetached() {
    Log.d(TAG, "Dialog detached, finishing now...");
    finish();
}
}
</code></pre>

<p><strong>ShowCurrentUserDialog.java</strong></p>

<pre><code>public class ShowCurrentUserDialog extends DialogFragment {

@Override
public Dialog onCreateDialog(Bundle savedInstanceState) {
    return new AlertDialog.Builder(getActivity())
            .setTitle("Sign out")
            .setMessage("Do you want to sign out?")
            .setPositiveButton("Sign out",
                    new DialogInterface.OnClickListener() {
                        public void onClick(DialogInterface dialog, int whichButton) {
                            ((ShowCurrentUserActivity)getActivity()).doPositiveClick();
                        }
                    }
            )
            .setNegativeButton("Cancel",
                    new DialogInterface.OnClickListener() {
                        public void onClick(DialogInterface dialog, int whichButton) {
                            ((ShowCurrentUserActivity)getActivity()).doNegativeClick();
                        }
                    }
            )
            .create();
}

@Override
public void onDetach() {
    super.onDetach();
    ((ShowCurrentUserActivity)getActivity()).dialogDetached();
}
}
</code></pre>
