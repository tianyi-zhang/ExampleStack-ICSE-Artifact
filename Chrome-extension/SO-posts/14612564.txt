<p>When loading a resource make sure you notice the difference between:</p>

<pre><code>getClass().getClassLoader().getResource("com/myorg/foo.jpg") //relative path
</code></pre>

<p>and </p>

<pre><code>getClass().getResource("/com/myorg/foo.jpg")); //note the slash at the beginning
</code></pre>

<p>I guess, this confusion is causing most of problems when loading a resource. When you're loading an image it's easier to use <code>getResourceAsStream()</code>:</p>

<pre><code>BufferedImage image = ImageIO.read(getClass().getResourceAsStream("/com/myorg/foo.jpg"));
</code></pre>

<p>When you really have to load a (non-image) file from a JAR archive, you might try this:</p>

<pre><code>    File file = null;
    String resource = "/com/myorg/foo.xml";
    URL res = getClass().getResource(resource);
    if (res.toString().startsWith("jar:")) {
        try {
            InputStream input = getClass().getResourceAsStream(resource);
            file = File.createTempFile("tempfile", ".tmp");
            OutputStream out = new FileOutputStream(file);
            int read;
            byte[] bytes = new byte[1024];

            while ((read = input.read(bytes)) != -1) {
                out.write(bytes, 0, read);
            }
            file.deleteOnExit();
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
    } else {
        //this will probably work in your IDE, but not from a JAR
        file = new File(res.getFile());
    }

    if (file != null &amp;&amp; !file.exists()) {
        throw new RuntimeException("Error: File " + file + " not found!");
    }
</code></pre>
