<p>The example below from <a href="http://www.java-tips.org/java-se-tips/java.io/how-to-copy-a-directory-from-one-location-to-another-loc.html">Java Tips</a> is rather straight forward.  I have since switched to Groovy for operations dealing with the file system - much easier and elegant.  But here is the Java Tips one I used in the past. It lacks the robust exception handling that is required to make it fool-proof.  </p>

<pre><code> public void copyDirectory(File sourceLocation , File targetLocation)
    throws IOException {

        if (sourceLocation.isDirectory()) {
            if (!targetLocation.exists()) {
                targetLocation.mkdir();
            }

            String[] children = sourceLocation.list();
            for (int i=0; i&lt;children.length; i++) {
                copyDirectory(new File(sourceLocation, children[i]),
                        new File(targetLocation, children[i]));
            }
        } else {

            InputStream in = new FileInputStream(sourceLocation);
            OutputStream out = new FileOutputStream(targetLocation);

            // Copy the bits from instream to outstream
            byte[] buf = new byte[1024];
            int len;
            while ((len = in.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
            in.close();
            out.close();
        }
    }
</code></pre>
