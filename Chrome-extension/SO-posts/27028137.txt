<p>I was really barking up the wrong tree with my approach.  After much googling, instead of messing with the RawImage, I recreated the shell size and the resized the image.  </p>

<p>My code now lives here: </p>

<p><a href="https://github.com/techartist/AndroidProjector" rel="nofollow">https://github.com/techartist/AndroidProjector</a></p>

<pre><code>  private void open()
throws IOException
{
Display.setAppName("Android Projector");
Display localDisplay = new Display();
final Shell localShell = new Shell(localDisplay);
localShell.setText("Device Screen");
localShell.setSize(width,height);
//localShell.setLocation(300, 300);
createContents(localShell);
localShell.addShellListener(new ShellListener() {

    public void shellIconified(ShellEvent e) {
    }
    public void shellDeiconified(ShellEvent e) {
    }
    public void shellDeactivated(ShellEvent e) {
    }
    public void shellClosed(ShellEvent e) {
        System.out.println("Client Area: " + localShell.getClientArea());
    }
    public void shellActivated(ShellEvent e) {
        int frameX = localShell.getSize().x - localShell.getClientArea().width;
        int frameY = localShell.getSize().y - localShell.getClientArea().height;
        if (AndroidProjector.this.mRotateImage) { 
            localShell.setSize(height * percentSize/100 + frameX, width * percentSize/100 + frameY);
        }
        else { 
            localShell.setSize(width * percentSize/100 + frameY,height * percentSize/100); 
        }
    }
});     
localShell.open();
SocketChannel localSocketChannel = null;
try
{
  while (!localShell.isDisposed()) {
    if (!localDisplay.readAndDispatch())
    {
      localSocketChannel = connectAdbDevice();
      if (localSocketChannel == null) {
        break;
      }
      if (startFramebufferRequest(localSocketChannel))
      {
        int frameX = localShell.getSize().x - localShell.getClientArea().width;
        int frameY = localShell.getSize().y - localShell.getClientArea().height;
        getFramebufferData(localSocketChannel);
        updateDeviceImage(localShell, this.mRotateImage ? this.mRawImage.getRotated() : this.mRawImage);
        if (this.mRotateImage) { 
            localShell.setSize(height * percentSize/100 + frameX, width * percentSize/100 + frameY);
        }
        else { 
            localShell.setSize(width * percentSize/100 + frameX, height * percentSize/100 + frameY);
        }
      }
      localSocketChannel.close();
    }
  }
}
finally
{
  if (localSocketChannel != null) {
    localSocketChannel.close();
  }
  localDisplay.dispose();
}
}
</code></pre>

<p>and then I resized the image on the fly: </p>

<pre><code> private void updateDeviceImage(Shell paramShell, RawImage paramRawImage)
{
PaletteData localPaletteData = new PaletteData(paramRawImage.getRedMask(), paramRawImage.getGreenMask(), paramRawImage.getBlueMask());

ImageData localImageData = null;
localImageData = new ImageData(paramRawImage.width, paramRawImage.height, paramRawImage.bpp, localPaletteData, 1, paramRawImage.data);

try { 
Image localImage = new Image(paramShell.getDisplay(), localImageData);

if (this.mRotateImage) { 

    localImage = resize(localImage,heightImage * percentSize/100 ,widthImage * percentSize/100);
} else { 
    localImage = resize(localImage,widthImage * percentSize/100,heightImage * percentSize/100);
}
this.mImageLabel.setImage(localImage);
this.mImageLabel.pack();
paramShell.pack();
} catch (Exception e) {
    String fullStackTrace = org.apache.commons.lang.exception.ExceptionUtils.getFullStackTrace(e);
    //System.out.print(e.toString());
    System.out.print(fullStackTrace);
    //
} 
}
</code></pre>

<p>and </p>

<pre><code>  private Image resize(Image image, int width, int height) {
  Image scaled = new Image(Display.getDefault(), width, height);
  GC gc = new GC(scaled);
  gc.setAntialias(SWT.ON);
  gc.setInterpolation(SWT.HIGH);
  gc.drawImage(image, 0, 0,  image.getBounds().width, image.getBounds().height, 
  0, 0, width, height);
  gc.dispose();
  image.dispose(); // don't forget about me!
  return scaled;
  }
</code></pre>

<p>}</p>
