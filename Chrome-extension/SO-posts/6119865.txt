<p>I've once created my own tag for that (StripPTag). You would compile that class and wrap it in a jar file, then deploy that to your opencms webapp lib folder.</p>

<pre><code>package com.opencmsserver.taglib;

import org.opencms.flex.CmsFlexController;
import org.opencms.jsp.Messages;
import org.opencms.main.CmsLog;

import javax.servlet.ServletRequest;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.tagext.BodyTagSupport;

import org.apache.commons.logging.Log;

/**
 * Removes the &lt;p&gt; tag from the surrounded content, 
 * because FCKEditor always add &lt;p&gt; tag to content at 
 * the beginning and end when using the html editor component  
 *
 * @author  Mathias Lin 
 * 
 * @version $Revision: 0.1 $ 
 * 
 * @since 0.4 
 */
public class StripPTag extends BodyTagSupport {

    /** Serial version UID required for safe serialization. */
    private static final long serialVersionUID = -2361021288258405388L;

    /** The log object for this class. */
    private static final Log LOG = CmsLog.getLog(StripPTag.class);


    /**
     * @see javax.servlet.jsp.tagext.Tag#doEndTag()
     * @return EVAL_PAGE
     * @throws JspException in case soemthing goes wrong
     */
    public int doEndTag() throws JspException {

        ServletRequest req = pageContext.getRequest();

        // This will always be true if the page is called through OpenCms 
        if (CmsFlexController.isCmsRequest(req)) {
            try {
                // Get link-string from the body and reset body 
                String content = getBodyContent().getString();
                content = content.replaceAll("&lt;p&gt;", "");
                content = content.replaceAll("&lt;/p&gt;", "");
                getBodyContent().clear();
                getBodyContent().print(content);
                getBodyContent().writeOut(pageContext.getOut());

            } catch (Exception ex) {
                if (LOG.isErrorEnabled()) {
                    LOG.error("Failed using StripPTag. ", ex);
                }
                throw new JspException(ex);
            }
        }
        return EVAL_PAGE;
    }
}
</code></pre>

<p>and my own opencmsserver.tld:</p>

<pre><code>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;

&lt;!DOCTYPE taglib
  PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
  "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd"&gt;

&lt;taglib&gt;
    &lt;tlib-version&gt;0.1&lt;/tlib-version&gt;
    &lt;jsp-version&gt;1.2&lt;/jsp-version&gt;
    &lt;short-name&gt;opencmsserver&lt;/short-name&gt;
    &lt;uri&gt;http://www.opencmsserver.com/taglib/cms&lt;/uri&gt;
    &lt;display-name&gt;OpenCms JSP standard taglib&lt;/display-name&gt;
    &lt;description&gt;
        Additional OpenCms Tags
        Developed by SYSVISION Ltd. / Mathias Lin (info@opencmsserver.com)
    &lt;/description&gt;

    &lt;tag&gt;
        &lt;name&gt;stripPTag&lt;/name&gt;
        &lt;tag-class&gt;com.opencmsserver.taglib.StripPTag&lt;/tag-class&gt;
        &lt;body-content&gt;JSP&lt;/body-content&gt;
        &lt;description&gt;
            This tag stripts the p-tag from the surrounded content.
        &lt;/description&gt;
    &lt;/tag&gt;         

&lt;/taglib&gt;
</code></pre>

<p>which I then reference in my web.xml:</p>

<pre><code>&lt;!-- Begin: Custom SYSVISION OpenCmsServer lib --&gt;      
&lt;taglib&gt;
    &lt;taglib-uri&gt;http://www.opencmsserver.com/taglib/opencmsserver&lt;/taglib-uri&gt;
&lt;taglib-location&gt;/WEB-INF/opencmsserver.tld&lt;/taglib-location&gt;
&lt;/taglib&gt;
</code></pre>

<p>In your jsp, you just surround it then with:</p>

<pre><code>&lt;opencmsserver:stripPTag&gt;Some content&lt;p&gt;with a paragraph&lt;/opencmsserver:stripPTag&gt;
</code></pre>

<p>(and don't forget to reference to this tag lib in the jsp header section).</p>
