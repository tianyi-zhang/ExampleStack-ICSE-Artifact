<p>Replace your code by below code</p>

<pre><code>public class MainActivity extends Activity {

private int count;
private Bitmap[] thumbnails;
private boolean[] thumbnailsselection;
private String[] arrPath;
private ImageAdapter imageAdapter;
ArrayList&lt;String&gt; f = new ArrayList&lt;String&gt;();// list of file paths
 int e=0; // To change the background color 
String[] Files;
ImageView selection;

protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    // get images paths and store them in f
        getFromSdcard();

       GridView imagegrid = (GridView) findViewById(R.id.PhoneImageGrid);

        imagegrid.setAdapter(new ImageAdapter(this));

}

/*GET images paths */
public void getFromSdcard()
{

    File file=  new File("mnt/sdcard/DCIM/100ANDRO");

        if (file.exists())
        {
            Files = file.list();

            for (int i = 0; i &lt; Files.length; i++)
            {
                f.add(file.getAbsolutePath() + File.separator + Files[i]);
          }

        }

}


public class ImageAdapter extends BaseAdapter {

    Context ctxt;

    public ImageAdapter(Context c) {

            this.ctxt=c;
            }

    public int getCount() {
        return f.size();
    }

    public Object getItem(int position) {
        return position;
    }

    public long getItemId(int position) {
        return position;
    }


    public void setColorType(){
        if(e==0)
            e= 1;
        else{e= 0;}

    }
    public View getView(int position, View convertView, ViewGroup parent) {


        ImageView c;

        if (convertView == null) {
            c= new ImageView(ctxt);

            //Bitmap myBitmap = BitmapFactory.decodeFile(f.get(position));// Files[position]
            c.setLayoutParams(new GridView.LayoutParams(80,80));
            c.setScaleType(ScaleType.CENTER_CROP);
            c.setPadding(8,8,8,8);

            if(e==0){
                 c.setBackgroundColor( -65536);
                 setColorType();
                }
            else{
                setColorType();
                c.setBackgroundColor( -16711936);
            }

        }
        else {
            c= (ImageView) convertView;

            if(e==0){
                 c.setBackgroundColor( 00000);
                 setColorType();
                }

        }

        Bitmap myBitmap = decodeFile(new File(f.get(position)));
        c.setImageBitmap(myBitmap);

        return c;
    }


}
</code></pre>

<p>// To solve the issue of uploading image and avoid error ** Out of memory   </p>

<pre><code>private Bitmap decodeFile(File f){
    try {
        //Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inSampleSize = 4;
        BitmapFactory.decodeStream(new FileInputStream(f),null,o);

        //The new size we want to scale to
        final int REQUIRED_SIZE=70;

        //Find the correct scale value. It should be the power of 2.
        int scale=1;
        while(o.outWidth/scale/2&gt;=REQUIRED_SIZE &amp;&amp; o.outHeight/scale/2&gt;=REQUIRED_SIZE)
            scale*=2;

        //Decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options();
        o2.inSampleSize = 4;


        return BitmapFactory.decodeStream(new FileInputStream(f), null, o2);
    } catch (FileNotFoundException e) {}
    return null;
}
</code></pre>

<p>}</p>

<pre><code>Just changed  o2.inSampleSize = 4; and  o.inSampleSize = 4;
</code></pre>

<p>Also change the below code also</p>

<pre><code>    BitmapFactory.Options options = new BitmapFactory.Options();
        options.inSampleSize = 4;
        Bitmap myBitmap=BitmapFactory.decodeFile(new File(f.get(position), options);
Bitmap myBitmap2=Bitmap.createScaledBitmap(myBitmap, 100, 100, true);
                                c.setImageBitmap(myBitmap2);
</code></pre>

<p>by replacing <code>Bitmap myBitmap = decodeFile(new File(f.get(position)));
        c.setImageBitmap(myBitmap);</code></p>
