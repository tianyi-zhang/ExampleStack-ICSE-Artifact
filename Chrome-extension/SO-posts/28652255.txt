<p>First, strings in Java are immutable. This mean you can't change them. What you can is create a new one. Second, you compare your string with the translation array to find a match at the same index. It's very difficult to find a match at the same positions and it's not what you want.</p>

<p>You could use the following method:</p>

<pre><code>public static String encode(String s) {
    StringBuffer b = new StringBuffer();
    for (int i = 0; i &lt; s.length(); i++) {
        char c = s.charAt(i);
        if ((c &gt;= 'a' &amp;&amp; c &lt;= 'm') || (c &gt;= 'A' &amp;&amp; c &lt;= 'M')) {
            b.append((char) ((int) c + 13));
            continue;
        }
        if ((c &gt;= 'n' &amp;&amp; c &lt;= 'z') || (c &gt;= 'N' &amp;&amp; c &lt;= 'Z')) {
            b.append((char) ((int) c - 13));
            continue;
        }
        b.append(c);
    }
    return b.toString();
}
</code></pre>

<p>The idea is that you translate each character independently and add it to a string buffer. Then you return the resulting string. To transform a character between 'a' and 'm' you just add 13 to its integer code. To transform a character between 'n' and 'z' you just remove 13 from its integer code.  You do the same thing for the capital letters.</p>

<p>When we call this method with "<em>FireFly you were cancelled too soon</em>"</p>

<pre><code>public static void main(String args[]) {
    System.out.println(encode("FireFly you were cancelled too soon"));
}
</code></pre>

<p>the result is:</p>

<pre><code>SverSyl lbh jrer pnapryyrq gbb fbba
</code></pre>
