<p>Let's say you first have a page called logged_off.xml where you just have your loginButton and your purpose is to login and then, after you have correctly logged, change your view to another page called logged_in.xml.</p>

<p>so you have:</p>

<pre><code>@Override
public void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.logged_off);
Settings.addLoggingBehavior(LoggingBehavior.INCLUDE_ACCESS_TOKENS);

loginButton = (Button) findviedbyid(R.id.loginButton);
loginButton.setOnClickListener(new OnClickListener() {
        public void onClick(View view) { 
session.openForRead(new Session.OpenRequest(this).setCallback(statusCallback).setPermissions(PERMISSIONS));  
}
    });

//here we check if our session exists. if it does exists we directly go to our page logged_in.xml otherwise we stay in logged_off.xml waiting for the user to click on our loginButton

Session session = Session.getActiveSession();
if (session == null) {
    if (savedInstanceState != null) {
        session = Session.restoreSession(this, null, statusCallback, savedInstanceState);
    }
    if (session == null) {
        session = new Session(this);
    }
    Session.setActiveSession(session);
}else{
if(session.session.isOpened()){
setContentView(R.layout.logged_in);
}
}
}
</code></pre>

<p>This function is called after we make an attempt to log in so here we check if we actually logged in correctly and if we did we just change our page to logged_in.xml. So change this:</p>

<pre><code>@Override
public void onActivityResult(int requestCode, int resultCode, Intent data) {
super.onActivityResult(requestCode, resultCode, data);
Session.getActiveSession().onActivityResult(this, requestCode, resultCode, data);
}
</code></pre>

<p>to this:</p>

<pre><code>@Override
public void onActivityResult(int requestCode, int resultCode, Intent data) {
super.onActivityResult(requestCode, resultCode, data);
Session.getActiveSession().onActivityResult(this, requestCode, resultCode, data);

if(session.session.isOpened()){
    setContentView(R.layout.logged_in);
}
}
</code></pre>

<p>of course you can change setContentView(R.layout.logged_in); with whatever you want.</p>

<p>hope it helped!</p>

<p>PS: keep all these functions:</p>

<pre><code>@Override
public void onStart() {
super.onStart();
Session.getActiveSession().addCallback(statusCallback);
}

@Override
public void onStop() {
super.onStop();
Session.getActiveSession().removeCallback(statusCallback);
}

@Override
protected void onSaveInstanceState(Bundle outState) {
super.onSaveInstanceState(outState);
Session session = Session.getActiveSession();
Session.saveSession(session, outState);
}

private class SessionStatusCallback implements Session.StatusCallback {
@Override
public void call(Session session, SessionState state, Exception exception) {
    //updateView();
}
}
</code></pre>
