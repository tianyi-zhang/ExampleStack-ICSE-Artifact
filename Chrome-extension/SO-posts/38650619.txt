<p>Use this code::</p>

<p>Adapter class:</p>

<p>p</p>

<pre><code>ublic class ListViewAdapter extends BaseAdapter { 

// Declare Variables 
Context mContext; 



LayoutInflater inflater; 
private List&lt;WorldPopulation&gt; worldpopulationlist = null; 
private ArrayList&lt;WorldPopulation&gt; arraylist; 

public ListViewAdapter(Context context, List&lt;WorldPopulation&gt; worldpopulationlist) { 
mContext = context; 
this.worldpopulationlist = worldpopulationlist; 
inflater = LayoutInflater.from(mContext); 
this.arraylist = new ArrayList&lt;WorldPopulation&gt;(); 
this.arraylist.addAll(worldpopulationlist); 

} 

public class ViewHolder { 
TextView beamword; 

} 

@Override 
public int getCount() { 
return worldpopulationlist.size(); 
} 

@Override 
public WorldPopulation getItem(int position) { 
return worldpopulationlist.get(position); 
} 

@Override 
public long getItemId(int position) { 
return position; 
} 

public View getView(final int position, View view, ViewGroup parent) { 
final ViewHolder holder; 
if (view == null) { 
holder = new ViewHolder(); 
view = inflater.inflate(R.layout.list_single, null); 
// Locate the TextViews in listview_item.xml 
holder.beamword = (TextView) view.findViewById(R.id.textviewitem); 

view.setTag(holder); 
} else { 
holder = (ViewHolder) view.getTag(); 
} 
// Set the results into TextViews 
holder.beamword.setText(worldpopulationlist.get(position).getBeamword()); 


return view; 
} 

// Filter Class 
public void filter(String charText) { 
charText = charText.toLowerCase(Locale.getDefault()); 
worldpopulationlist.clear(); 
if (charText.length() == 0) { 
worldpopulationlist.addAll(arraylist); 
}  
else  
{ 
for (WorldPopulation wp : arraylist)  
{ 
if (wp.getBeamword().toLowerCase(Locale.getDefault()).contains(charText))  
{ 
worldpopulationlist.add(wp); 
} 
} 
} 
notifyDataSetChanged(); 
} 

} 
</code></pre>

<p>In your class</p>

<pre><code>editsearch.addTextChangedListener(new TextWatcher() { 

@Override 
public void afterTextChanged(Editable arg0) { 
// TODO Auto-generated method stub 
String text = editsearch.getText().toString().toLowerCase(Locale.getDefault()); 
adapter.filter(text); 
} 

@Override 
public void beforeTextChanged(CharSequence arg0, int arg1, 
int arg2, int arg3) { 
// TODO Auto-generated method stub 
} 

@Override 
public void onTextChanged(CharSequence arg0, int arg1, int arg2, 
int arg3) { 
// TODO Auto-generated method stub 
} 
}); 
</code></pre>
