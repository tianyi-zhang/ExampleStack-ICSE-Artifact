<p>to access to titles you have to access to the json array <code>items</code> first and then access its items by <code>JsonObject MyJson =YourJsonArray.getJsonObject(i)</code> after that use the tag that you want example <code>String title=Myjson.getString("title")</code>  </p>

<p>here is what you change in your code</p>

<pre><code>  @Override
    protected void onPostExecute(JSONObject jsonObject) {
  pDialog.dismiss();//hiding the progress dialog
        try {
           if(ob1!=null &amp;&amp; !ob1.isNull("items")){ //avoiding exceptions
            mJSONArr = ob1.getJSONArray("items");

        for(int i=0;i&lt;mJsonArr.length();i++)
        {
            ob2 = mJSONArr.getJSONObject(i);
            holder+=ob2.getString("title");
        }
        tv.setText(holder);
        pDialog.dismiss();
    } catch (JSONException e) {
        e.printStackTrace();
    }
}}
</code></pre>

<p><strong>Edit:</strong> you're getting that error because you are using <strong>"i&lt;20"</strong> instead of <strong>"i&lt; jsonArray.length()"</strong> ,if the json has just 9 items(0...8) for example and you attempt to get the 10th item (i=9) you will get that error because there is no valid jsonObject </p>

<p><strong>Eit2:</strong> For the progress dialog add this in post Execute</p>

<pre><code> pDialog.dismiss();
</code></pre>

<p><strong>Edit3:</strong> use this class JSONParser.java</p>

<pre><code>    package YourPackage;

import android.app.Application;
import android.os.Debug;
import android.util.Log;
import android.widget.Toast;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.utils.URLEncodedUtils;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.List;

public class JSONParser {

    static InputStream is = null;
    static JSONObject jObj = null;
    static String json = "";

    // constructor
    public JSONParser() {

    }

    // function get json from url
    // by making HTTP POST or GET mehtod
    public JSONObject makeHttpRequest(String url, String method,
            List&lt;NameValuePair&gt; params) {

        // Making HTTP request
        try {

            // check for request method
            if(method == "POST"){
                // request method is POST
                // defaultHttpClient
                DefaultHttpClient httpClient = new DefaultHttpClient();
                HttpPost httpPost = new HttpPost(url);
                httpPost.setEntity(new UrlEncodedFormEntity(params));

                HttpResponse httpResponse = httpClient.execute(httpPost);
                HttpEntity httpEntity = httpResponse.getEntity();
                is = httpEntity.getContent();

            }else if(method == "GET"){
                // request method is GET
                DefaultHttpClient httpClient = new DefaultHttpClient();
                String paramString = URLEncodedUtils.format(params, "utf-8");
                url += "?" + paramString;
                HttpGet httpGet = new HttpGet(url);

                HttpResponse httpResponse = httpClient.execute(httpGet);
                HttpEntity httpEntity = httpResponse.getEntity();
                is = httpEntity.getContent();
            }           


        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }catch (Exception e){};

        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    is, "UTF-8"), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
            is.close();
            json = sb.toString();
            System.out.println(json);
        } catch (Exception e) {
            Log.e("Buffer Error", "Error converting result " + e.toString());
        }

        // try parse the string to a JSON object
        try {
            jObj = new JSONObject(json);
        } catch (JSONException e) {
            Log.e("JSON Parser", "Error parsing data " + e.toString());
        }

        // return JSON String
        return jObj;

    }
}
</code></pre>

<p>add this as <strong>Global</strong> variable</p>

<pre><code>    JSONParser jsonParser = new JSONParser();
</code></pre>

<p>and in your asyncTask
use this </p>

<pre><code>   List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
            params.add(new BasicNameValuePair("key",key));//if you have params
      ob1= jsonParser.makeHttpRequest(Your_url,
                    "POST" or "GET", params); //choose post method or get method 
</code></pre>

<p>istead of this</p>

<pre><code>   ob1 = new JSONObject(readJSON());
</code></pre>
