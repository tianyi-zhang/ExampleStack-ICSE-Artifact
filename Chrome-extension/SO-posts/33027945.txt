<p>I was having the reverse problem... if the user doesn't type the extension, it does not prompt.  I add the extension later if the user didn't type it.  So in your case if the user typed "test", my code would save the file as "test.config".  I'm assuming yours works the same way?</p>

<p>For me to fix it I had to also add the extension during the approval... so firstly:</p>

<pre><code>final JFileChooser fc = new JFileChooser(){
@Override
public void approveSelection(){

    File f = getSelectedFile();
            String filestring = f.toString();

            String[] left_side_of_dot = filestring.split("\\.");

             f = new File(left_side_of_dot[0] + ".config");


    if(f.exists() &amp;&amp; getDialogType() == SAVE_DIALOG){
        int result = JOptionPane.showConfirmDialog(YOUR_Frame,"The file exists, overwrite?","Existing file",JOptionPane.YES_NO_CANCEL_OPTION);
        switch(result){
            case JOptionPane.YES_OPTION:
                super.approveSelection();
                return;
            case JOptionPane.NO_OPTION:
                return;
            case JOptionPane.CLOSED_OPTION:
                return;
            case JOptionPane.CANCEL_OPTION:
                cancelSelection();
                return;
        }
    }
    super.approveSelection();
 }
};
</code></pre>

<p>then also before saving:</p>

<pre><code>String noxtfilename = filename.substring(0, filename.length()-7);
    File file = new File(noxtfilename);
    fc.setSelectedFile(file); }
 FileNameExtensionFilter filefilter = new  FileNameExtensionFilter("Config File (*.config)","config");

 fc.setFileFilter(filefilter);


    int returnVal = fc.showSaveDialog(YOUR_Frame);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String filestring = file.toString();

            String[] left_side_of_dot = filestring.split("\\.");

             file = new File(left_side_of_dot[0] + ".config");
</code></pre>
