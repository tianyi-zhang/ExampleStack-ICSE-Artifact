<p>You are missing some vital thing in your <code>onTouch()</code>.</p>

<pre><code>public boolean onTouch(View arg0, MotionEvent event) {
    switch (event.getAction()) {
      case MotionEvent.ACTION_DOWN:
        x = event.getX();
        y = event.getY();
        sX = event.getX();
        sY = event.getY();
        fX = fY = dX = dY = sclX = sclY = aniX = aniY = 0;
        break;
      case MotionEvent.ACTION_UP:
        fX = event.getX();
        fY = event.getY();
        dX = fX - sX;
        dY = fY - sY;
        sclX = dX / 30;
        sclY = dY / 30;

        break;
    }
    return true;
}
</code></pre>

<p>This code has a logic issue. Consider you tap down on 100/100, <code>sX</code> and <code>sY</code> are set to 100 in the down case. In the up case, you get the up coordinates in <code>fX</code> and <code>fY</code>, which will be 100, too. This results in <code>dX = fX - sX</code> => <code>dX = 100 - 100</code>. So your <code>sclX</code> will be <code>0</code>, too. This means no animation at all.</p>

<p>You should use the middle of the screen as a base for your calculations. Source is the screen center and the destination is your touch.</p>
