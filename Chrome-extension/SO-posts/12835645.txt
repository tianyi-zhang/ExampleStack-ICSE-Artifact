<p>In Stuts2, method init_TraditionalXmlConfigurations in class org.apache.struts2.dispatcher.Dispatcher is responsible to init xml configurations. It will search 3 files, struts-default.xml,struts-plugin.xml,struts.xml(they are defined in constant variant DEFAULT_CONFIGURATION_PATHS).</p>

<pre><code>private void init_TraditionalXmlConfigurations() {
    String configPaths = initParams.get("config");
    if (configPaths == null) {
        configPaths = DEFAULT_CONFIGURATION_PATHS;
    }
    String[] files = configPaths.split("\\s*[,]\\s*");
    for (String file : files) {
        if (file.endsWith(".xml")) {
            if ("xwork.xml".equals(file)) {
                configurationManager.addContainerProvider(createXmlConfigurationProvider(file, false));
            } else {
                configurationManager.addContainerProvider(createStrutsXmlConfigurationProvider(file, false, servletContext));
            }
        } else {
            throw new IllegalArgumentException("Invalid configuration file name");
        }
    }
}
</code></pre>

<p>Then, in method loadConfigurationFiles, it will get all configuration files url:</p>

<pre><code>try {
    urls = getConfigurationUrls(fileName);
} catch (IOException ex) {
    ioException = ex;
}
</code></pre>

<p>And the following implementation is how to get configuration files' url:</p>

<pre><code>protected Iterator&lt;URL&gt; getConfigurationUrls(String fileName) throws IOException {
    return ClassLoaderUtil.getResources(fileName, XmlConfigurationProvider.class, false);
}
public static Iterator&lt;URL&gt; getResources(String resourceName, Class callingClass, boolean aggregate) throws IOException {

     AggregateIterator&lt;URL&gt; iterator = new AggregateIterator&lt;URL&gt;();

     iterator.addEnumeration(Thread.currentThread().getContextClassLoader().getResources(resourceName));

     if (!iterator.hasNext() || aggregate) {
         iterator.addEnumeration(ClassLoaderUtil.class.getClassLoader().getResources(resourceName));
     }

     if (!iterator.hasNext() || aggregate) {
         ClassLoader cl = callingClass.getClassLoader();

         if (cl != null) {
             iterator.addEnumeration(cl.getResources(resourceName));
         }
     }

     if (!iterator.hasNext() &amp;&amp; (resourceName != null) &amp;&amp; ((resourceName.length() == 0) || (resourceName.charAt(0) != '/'))) { 
         return getResources('/' + resourceName, callingClass, aggregate);
     }

     return iterator;
 }
</code></pre>

<p>The code above is how struts loads configuration.</p>

<p>For you, if you want to load struts-config.xml manually, you can use the following code:</p>

<pre><code>String filePath = "your struts-config.xml file path";
URL resource = Thread.currentThread().getContextClassLoader().getResource(filePath);
</code></pre>

<p>Then, you can read the file like a simple xml file.</p>
