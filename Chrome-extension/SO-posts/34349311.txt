<p>Create Typeface only one time and use it. Avoid creating typeface in getview method.it will create every time you scroll if you are not maintaining reusability.</p>

<p>Use <a href="http://goo.gl/MASuHo" rel="nofollow">ViewHolder</a> pattern for better performance in listview </p>

<p>Below i have try to given both things. I have given explanation in comment also. Please check it if it may help you.</p>

<pre><code>public class AdapterFontViewHolder extends ArrayAdapter&lt;String&gt; {
        private final Context context;
        private final String[] values;
        Typeface typefaceArial, typefaceRoboto;
        private Typeface[] fonts;

        public AdapterFontViewHolder(Context context, String[] values) {
            super(context, R.layout.rowlayout, values);
            this.context = context;
            this.values = values;
            // Create Typeface only once and use it.. Path you can change as per your directory
            fonts = new Typeface[]{
                    Typeface.createFromAsset(context.getAssets(), "fonts/Aclonica.ttf"),
                    Typeface.createFromAsset(context.getAssets(), "fonts/Amino-Regular.ttf"),
            };
        }

        public class ViewHolder {
            TextView textView;
        }

        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            ViewHolder vHolder;
            if (convertView == null) {
                // Create Instnce of view if its null &amp; store object in ViewHolder (a class)
                vHolder = new ViewHolder();
                convertView = LayoutInflater.from(context).inflate(R.layout.rowlayout, parent, false);
                vHolder.textView = (TextView) convertView.findViewById(R.id.label);

                //Set ViewHolder instance in convertview in a tag as a object
                convertView.setTag(vHolder);
            } else {
                // reuse as already converview is instansiated &amp; it holds ViewHolder instance in tag
                vHolder = (ViewHolder) convertView.getTag();
            }

            vHolder.textView.setText(values[position]);

            //Here From Fonts array take Typeface
            vHolder.textView.setTypeface(fonts[position]);
            return convertView;
        }
    }
</code></pre>

<p><strong>Set Adapter</strong></p>

<pre><code>ListView fontsListView = (ListView) this.view.findViewById(R.id.MenuLayout);
        AdapterFontViewHolder listAdapter = new AdapterFontViewHolder(getActivity(), R.layout.fonts_simple_row, fontsList);
        fontsListView.setAdapter(listAdapter);
</code></pre>
