<p>Ok, since you're using <code>NavigationDrawerFragment</code>, you are probably missing the <code>mUserLearnedDrawer</code> property and the associated behaviour. Basically, the idea is to save a property in <code>SharedPreferences</code> the first time the drawer is open and check that property everytime <code>setup()</code> is called, so you know if you need to open the drawer for the user the first time. Take a look at the code <a href="https://github.com/github/android/blob/master/app/src/main/java/com/github/mobile/ui/NavigationDrawerFragment.java" rel="nofollow">here</a>. I'm copying the <code>setup()</code> method here in case the link goes dead :</p>

<pre><code>public void setUp(int fragmentId, DrawerLayout drawerLayout, NavigationDrawerAdapter adapter, AvatarLoader avatar,
    User user) {
    mFragmentContainerView = getActivity().findViewById(fragmentId);
    mDrawerLayout = drawerLayout;
    mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);

    avatar.bind(userImage, user);
    userName.setText(user.getLogin());

    String name = user.getName();
    if (name != null) {
        userRealName.setText(user.getName());
    } else {
        userRealName.setVisibility(View.GONE);
    }

    mDrawerListView.setAdapter(adapter);
    mDrawerListView.setItemChecked(mCurrentSelectedPosition, true);

    ActionBar actionBar = getActionBar();
    actionBar.setDisplayHomeAsUpEnabled(true);
    actionBar.setHomeButtonEnabled(true);

    mDrawerToggle = new ActionBarDrawerToggle(
        getActivity(), mDrawerLayout,
        R.string.navigation_drawer_open,
        R.string.navigation_drawer_close) {
        @Override
        public void onDrawerClosed(View drawerView) {
            super.onDrawerClosed(drawerView);
            if (!isAdded()) {
                return;
            }

            getActivity().supportInvalidateOptionsMenu();
        }

        @Override
        public void onDrawerOpened(View drawerView) {
            super.onDrawerOpened(drawerView);
            if (!isAdded()) {
                return;
            }

            if (!mUserLearnedDrawer) {
                mUserLearnedDrawer = true;
                SharedPreferences sp = PreferenceManager
                    .getDefaultSharedPreferences(getActivity());
                sp.edit().putBoolean(PREF_USER_LEARNED_DRAWER, true).apply();
            }

            getActivity().supportInvalidateOptionsMenu();
        }
    };

    if (!mUserLearnedDrawer &amp;&amp; !mFromSavedInstanceState)
        mDrawerLayout.openDrawer(mFragmentContainerView);

    mDrawerLayout.post(new Runnable() {
        @Override
        public void run() {
            mDrawerToggle.syncState();
        }
    });

    mDrawerLayout.setDrawerListener(mDrawerToggle);

}
</code></pre>
