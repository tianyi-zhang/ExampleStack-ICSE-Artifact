<p>Ok, to expand on the answer above, you make an "adapter" like the one shown in the code below:</p>

<pre><code>package com.example.consumer.adapter;

import java.util.ArrayList;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;

import com.example.consumer.R;
import com.example.consumer.model.AppModel;
import com.example.consumer.model.Deal;

public class DealListAdapter extends BaseAdapter {

    private static ArrayList&lt;Deal&gt; dealArrayList = new ArrayList&lt;Deal&gt;();

    private LayoutInflater inflator;
    private AppModel appModel;

    public DealListAdapter(Context context, ArrayList&lt;Deal&gt; results) {
        dealArrayList = results;
        inflator = LayoutInflater.from(context);
        appModel = (AppModel) context.getApplicationContext();
    }

    public int getCount() {
        if (dealArrayList == null)
            return 0;
        else
            return dealArrayList.size();
    }

    public Object getItem(int position) {
        try {
            return dealArrayList.get(position);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public long getItemId(int position) {
        return position;
    }

    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        if (convertView == null) {
            convertView = inflator.inflate(R.layout.list_item_deal, null);
            holder = new ViewHolder();
            holder.name = (TextView) convertView.findViewById(R.id.deal_listview_item_one);
            holder.distance = (TextView) convertView.findViewById(R.id.deal_listview_item_two);

            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }

        holder.name.setText(dealArrayList.get(position).getMerchantName() + ":  "+ dealArrayList.get(position).getTitle());
        holder.distance.setText(dealArrayList.get(position).getDistanceFormatted(appModel.getLocation()));

        return convertView;
    }

    static class ViewHolder {
        TextView name;
        TextView distance;
    }
}
</code></pre>

<p>Note the use of a ViewHolder - this will save a lot of "findViewById" Calls.</p>

<p>To use this adapter in your list, you use this code:</p>

<pre><code>    dealList = (ListView) findViewById(R.id.browse_list_view);
    dealListAdapter = new DealListAdapter(this, dealList);
    dealList.setAdapter(dealListAdapter);
</code></pre>

<p>Where in this instance, the <code>dealList</code> is an arrayList of Deals (you would use some other custom object)</p>

<p>Hopefully this helps with your OO programming... :)</p>
