<p>Solved it. I used ListFragment for FileChooser class and removed the inner class. Also used another listview.xml. 
Here is the modified code</p>

<pre><code>public class FileChooser extends ListFragment{

    private File currentDir;
    private FileArrayAdapter adapter;

    public FileChooser() {};

    public static ListFragment newInstance(Context context) {
        FileChooser f = new FileChooser();

        return f;
    }
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState) {

        View rootView = inflater.inflate(R.layout.activity_main, container, false);
       currentDir = new File(Environment.getExternalStorageDirectory().getPath());

        fill(currentDir);
        return rootView;
    }
    /*
     * Method to fill the current layout with files and folders from the external directory
     * 
     * @params: Path for the SD Card
     */

    void fill(File f)
    {
        File[]dirs = f.listFiles(); 
         //this.setTitle(f.getName());
         List&lt;Item&gt;dir = new ArrayList&lt;Item&gt;();
         List&lt;Item&gt;fls = new ArrayList&lt;Item&gt;();
         try{
             for(File ff: dirs)
             { 
                Date lastModDate = new Date(ff.lastModified()); 
                DateFormat formater = DateFormat.getDateTimeInstance();
                String date_modify = formater.format(lastModDate);
                if(ff.isDirectory()){


                    File[] fbuf = ff.listFiles(); 
                    int buf = 0;
                    if(fbuf != null){ 
                        buf = fbuf.length;
                    } 
                    else buf = 0; 
                    String num_item = String.valueOf(buf);
                    if(buf == 0) num_item = num_item + " item";
                    else num_item = num_item + " items";

                    //String formated = lastModDate.toString();
                    dir.add(new Item(ff.getName(),num_item,date_modify,ff.getAbsolutePath(),"directory_icon")); 
                }
                else
                {

                    fls.add(new Item(ff.getName(),ff.length() + " Byte", date_modify, ff.getAbsolutePath(),"file_icon"));
                }
             }
         }catch(Exception e)
         {    

         }
         Collections.sort(dir);
         Collections.sort(fls);
         dir.addAll(fls);
         if(!f.getName().equalsIgnoreCase(Environment.getExternalStorageDirectory().getName()))
             dir.add(0,new Item("..","Parent Directory","",f.getParent(),"directory_up"));
         adapter = new FileArrayAdapter(getActivity(),R.layout.file_view,dir);
         this.setListAdapter(adapter); 
    }
    @Override
    public void onListItemClick(ListView l, View v, int position, long id) {
        // TODO Auto-generated method stub
        super.onListItemClick(l, v, position, id);
        Item o = adapter.getItem(position);
        if(o.getImage().equalsIgnoreCase("directory_icon")||o.getImage().equalsIgnoreCase("directory_up")){
                currentDir = new File(o.getPath());
                fill(currentDir);
        }
        else
        {
            onFileClick(o);
        }
    }
    private void onFileClick(Item o)
    {
        Toast.makeText(getActivity(), "Folder Clicked: "+ currentDir, Toast.LENGTH_SHORT).show();
    }
}
</code></pre>
