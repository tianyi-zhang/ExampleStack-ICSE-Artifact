<p>I made a couple of extensions to @hp.android's excellent answer:</p>

<ol>
<li>Instead of defining a RootView ID in each XML class, I dynamically find the root view using <code>android.R.id.content</code>.</li>
<li>As @Mario Lenci says, AdapterView doesn't support removeAllViews, so I check the type of the view before calling <code>removeAllViews()</code>.</li>
<li>IMO it isn't a good idea to call <code>System.gc()</code> in every onDestroy call (e.g. <a href="http://stackoverflow.com/a/3118939/112705">this answer</a>), so I've removed that.</li>
<li>I've made a static <code>onDestroy</code> method that I call from onDestroy in all my custom Activity classes.</li>
<li>I've added some extra error protection and logging.</li>
</ol>

<p>Here's the code:</p>

<pre><code>    public static void onDestroy(Activity activity) {
        View rootView = null;

        try {            
            rootView = ((ViewGroup) activity.findViewById(android.R.id.content))
                    .getChildAt(0);
        } catch (Exception e) {
            Log.w("Cannot find root view to call unbindDrawables on",
                  activity);
        }

        if (rootView != null) {
            Log.d("unbindDrawables", activity, rootView);
            unbindDrawables(rootView);
        }
    }

    /**
      * Utility method to unbind drawables when an activity is destroyed.  This
      * ensures the drawables can be garbage collected.
      */
     public static void unbindDrawables(View view) {
         if (view.getBackground() != null) {
             view.getBackground().setCallback(null);
         }

         if (view instanceof ViewGroup) {
             for (int i = 0; i &lt; ((ViewGroup) view).getChildCount(); i++) {
                 unbindDrawables(((ViewGroup) view).getChildAt(i));
             }

             try {                
                 // AdapterView objects do not support the removeAllViews method
                 if (!(view instanceof AdapterView)) {             
                     ((ViewGroup) view).removeAllViews();
                 }
             } catch (Exception e) {
                 Log.w("Ignore Exception in unbindDrawables", e);
             }
         }
     }
</code></pre>
