<p>Here is a code for getting all the contacts in a list from the table...</p>

<pre><code>/**
 * Getting all the contacts in the database
 */
public List&lt;Contact&gt; getAllContacts() {
    List&lt;Contact&gt; contactList = new ArrayList&lt;Contact&gt;();
    // Select All Query
    String selectQuery = "SELECT  * FROM " + TABLE_CONTACTS;

    SQLiteDatabase db = this.getWritableDatabase();
    Cursor cursor = db.rawQuery(selectQuery, null);

    // looping through all rows and adding to list
    if (cursor.moveToFirst()) {
        do {
            Contact contact = new Contact();
            contact.setID(Integer.parseInt(cursor.getString(0)));
            contact.setName(cursor.getString(1));
            contact.setPhoneNumber(cursor.getString(2));
            // Adding contact to list
            contactList.add(contact);
        } while (cursor.moveToNext());
    }

    cursor.close();
    db.close();

    // return contact list
    return contactList;
}
</code></pre>

<p>Then it is invoked in another function that returns "true" if name is present in the table "false" otherwise...</p>

<pre><code>    /**
     * checks if name already present in the database
     * @param name
     * @return
     */
    public boolean checkDbData(String name){
        List&lt;Contact&gt; contactList =getAllContacts();
        boolean checkName = false ;

        for(Contact cn: contactList){
            String dbName = cn.getName();
            if(name.equals(dbName)){
                checkName = true ;
            }               
        }

        return checkName;
    }
</code></pre>

<p>And if this function returns "true", then the above given function is invoked to get the contacti.e.</p>

<pre><code>Contact getContact(String name) {
SQLiteDatabase db = this.getReadableDatabase();

Cursor cursor = db.query(TABLE_CONTACTS, new String[] { KEY_ID,
        KEY_NAME, KEY_PH_NO }, KEY_NAME + "=?",
        new String[] { String.valueOf(name) }, null, null, null, null);
if (cursor != null)
    cursor.moveToFirst();

Contact contact = new Contact(Integer.parseInt(cursor.getString(0)),
        cursor.getString(1), cursor.getString(2));

db.close();
cursor.close();
// return contact
return contact;
</code></pre>

<p>}</p>

<p>Note: we can also get this contact from the contactList, both can be used to get the required contact (i.e. "name" in this case)</p>
