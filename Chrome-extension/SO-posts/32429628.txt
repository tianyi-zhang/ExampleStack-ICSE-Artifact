<p>Reproduced and corrected</p>

<p>Code added to reproduce the error ...</p>

<pre><code>private static void swap(int[] a, int i, int j) {
    int tmp = a[i];
    a[i] = a[j];
    a[j] = tmp;
}

public static void main(String[] args) {
    // Generate a sample
//      ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(64);
//      for (int i = 0; i &lt; 64; i++) list.add(i);
//      Collections.shuffle(list);
//      System.out.println(list);
    int[] arr = {40, 9, 2, 62, 8, 42, 46, 23, 61, 45, 63, 48, 43, 36, 33, 32, 1, 55, 7, 17, 16, 25, 5, 26, 22, 11, 56, 38, 60, 31, 58, 29, 51, 34, 24, 54, 4, 3, 30, 20, 57, 18, 50, 44, 41, 12, 59, 6, 53, 39, 37, 35, 28, 13, 14, 15, 0, 19, 49, 52, 21, 27, 47, 10};

    modSort(arr, 0, arr.length-1);

    System.out.println(Arrays.toString(arr));
}
</code></pre>

<p>Debugging. Setting breakpoint for <code>StackOverFlowError</code> (as suggested in comments) didn't work. So I go for a regular breakpoint at line (start of <code>modSort</code>).</p>

<p>For this sample data starts doing infinite recursion over <code>modSort</code> with <code>from=3;to=5</code>. For that range the pivot p=2, which seems abnormal. </p>

<p>I blame <code>findPivot(a,from,to)</code> method. Looks good for finding a pivot for the whole <code>a</code>, but not for a range. Trying this correction:</p>

<pre><code>public static int findPivot(int[] a, int from, int to) {
    final int rangeLength = to - from + 1;
    if(rangeLength &lt;= 7) {
        return a[(from + to)/2];
    } else if(rangeLength  &lt;= 40) { // why test "a.length &gt; 7" ?
        return computeMedian(a[from], a[(from + to)/2] , a[to]);
    } else {
        final int rangeLength_8 = (to - from) / 8;
        int x = computeMedian(a[from], a[from + rangeLength_8], a[from + 2 * rangeLength_8]);
        int y = computeMedian(a[from + 3 * rangeLength_8], a[from + 4 * rangeLength_8], a[from + 5 * rangeLength_8]);
        int z = computeMedian(a[from + 6 * rangeLength_8], a[from + 7 * rangeLength_8], a[to]);
        return computeMedian(x,y,z);
    }
}
</code></pre>

<p>Then it works fine for my example. I stop it at this point (have to get some sleep).</p>

<p>I think you should try to get familiar with the debugger. I think it should had been easier for you to figure it out.</p>
