<p>In Manifest file add this in Application Tag.</p>

<pre><code>&lt;service android:name="com.parse.PushService" /&gt;

    &lt;receiver
        android:name="yourPackageName.receiver.ParsePushBroadcast"
        android:exported="false" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name="yourPackageName.UPDATE_STATUS" /&gt;
            &lt;action android:name="com.parse.push.intent.RECEIVE" /&gt;
            &lt;action android:name="com.parse.push.intent.OPEN" /&gt;
            &lt;action android:name="com.parse.push.intent.DELETE" /&gt;
        &lt;/intent-filter&gt;
    &lt;/receiver&gt;
    &lt;receiver
        android:name="com.parse.GcmBroadcastReceiver"
        android:permission="com.google.android.c2dm.permission.SEND" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name="com.google.android.c2dm.intent.RECEIVE" /&gt;
            &lt;action android:name="com.google.android.c2dm.intent.REGISTRATION" /&gt;

            &lt;!--
              IMPORTANT: If you change the package name of this sample app,
              change "com.parse.tutorials.pushnotifications" in the lines
              below to match the new package name.
            --&gt;
            &lt;category android:name="yourPackageName" /&gt;
        &lt;/intent-filter&gt;
    &lt;/receiver&gt;
</code></pre>

<p>Add this lines above application tag in manifest file.</p>

<pre><code>&lt;permission
    android:name="yourPackageName.permission.C2D_MESSAGE"
    android:protectionLevel="signature" /&gt;
&lt;uses-permission android:name="yourPackageName.permission.C2D_MESSAGE"/&gt;
&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
&lt;uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /&gt;
&lt;uses-permission android:name="android.permission.VIBRATE" /&gt;
&lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;
&lt;uses-permission android:name="android.permission.GET_ACCOUNTS" /&gt;
&lt;uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" /&gt;
</code></pre>

<p>Than After Create one Broadcast Receiver ParsePushBroadcast.</p>

<pre><code>import org.json.JSONObject;
import android.app.AlertDialog;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.media.RingtoneManager;
import android.util.Log;

import com.parse.ParsePushBroadcastReceiver;

    public class ParsePushBroadcast extends ParsePushBroadcastReceiver {
    private static final String TAG = "MyBroadcastReceiver";

    @Override
    public void onReceive(final Context context, Intent intent) {

    try {
        String action = intent.getAction();
        @SuppressWarnings("unused")
        String channel = intent.getExtras().getString("com.parse.Channel");
        JSONObject json = new JSONObject(intent.getExtras().getString("com.parse.Data"));
        String title = "New alert!";
        if (json.has("alert"))
            title = json.getString("alert");

        if (MainActivity.isActivityOpen == true) {
            if (MainActivity.ACTION.equals(action))
                displayAlert(context, title);
        } else {
            generateNotification(context, R.drawable.notification_icon,     title);
            }
        } catch (Exception e) {
            Log.d(TAG, "JSONException: " + e.getMessage());
        }

    }

    @Override
    protected void onPushReceive(Context context, Intent intent) {
        super.onPushReceive(context, intent);
    }

@SuppressWarnings("deprecation")
public static void generateNotification(Context context, int icon, String message) {
    // Show the notification
    long when = System.currentTimeMillis();
    NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
    Notification notification = new Notification(icon, message, when);
    String title = context.getString(R.string.app_name);
    Intent notificationIntent = new Intent(context, MainActivity.class);

    // set intent so it does not start a new activity
    notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
    PendingIntent intent = PendingIntent.getActivity(context, 0, notificationIntent, 0);
    notification.setLatestEventInfo(context, title, message, intent);
    notification.vibrate = new long[] { 500, 500 };
    notification.sound = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);

    notification.flags = Notification.FLAG_AUTO_CANCEL | Notification.FLAG_SHOW_LIGHTS;

    notificationManager.notify(0, notification);
}

    private void displayAlert(Context context, String title) {
    AlertDialog.Builder builder = new AlertDialog.Builder((MainActivity) context);
    builder.setTitle("Title");
    builder.setMessage(title).setCancelable(false).setPositiveButton("Ok", new DialogInterface.OnClickListener() {
        public void onClick(DialogInterface dialog, int id) {
            dialog.cancel();
        }
    });
    AlertDialog alert = builder.create();
    if (!alert.isShowing())
        alert.show();
}
}
</code></pre>

<p><strong>isActivityOpen</strong> is a static variable that I have created in Main activity. The purpose for this variable is for activity is open or not.</p>

<p><strong>Important: If you have this tag in manifest Remove this tag in manifest.</strong></p>

<pre><code>&lt;receiver android:name="com.parse.ParseBroadcastReceiver"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name="android.intent.action.BOOT_COMPLETED" /&gt;
        &lt;action android:name="android.intent.action.USER_PRESENT" /&gt;
    &lt;/intent-filter&gt;
&lt;/receiver&gt;
</code></pre>

<p>In your Activity class in onResume method add that.</p>

<pre><code>ParsePushBroadcast parsePushBroadcast = new ParsePushBroadcast();
IntentFilter filter = new IntentFilter(ACTION);
this.registerReceiver(parsePushBroadcast, filter);
</code></pre>

<p>add this constant in Activity</p>

<pre><code>public static final String ACTION = "com.parse.push.intent.RECEIVE";
</code></pre>
