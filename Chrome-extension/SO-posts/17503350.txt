<p>Is this what you are looking for:
<img src="http://i.stack.imgur.com/PGTZb.png" alt="enter image description here"></p>

<p>I made this by using BaseAdapter:</p>

<p>MainActivity:</p>

<pre><code>public class MainActivity extends Activity implements OnNavigationListener {

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    ActionBar bar = getActionBar();
    ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();
    list.add("bar 0 ");
    list.add("bar 2 ");
    list.add("bar 3 ");
    list.add("bar 4 ");
    Adapter adapter = new Adapter();

    bar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
    bar.setListNavigationCallbacks(adapter.getAdapter(this, list, "Controls"), this);
    adapter.setSeekBarListener( new SeekBarListener(){

        @Override
        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser, int positionInList) {
            Log.i("", "onProgressChanged " + progress + " position in list" + positionInList);

        }

        @Override
        public void onStartTrackingTouch(SeekBar seekBar, int positionInList) {
            // TODO Auto-generated method stub

        }

        @Override
        public void onStopTrackingTouch(SeekBar seekBar, int positionInList) {
            // TODO Auto-generated method stub

        }

    });
}


@Override
public boolean onNavigationItemSelected(int itemPosition, long itemId) {
    // TODO Auto-generated method stub
    return false;
}
</code></pre>

<p>}</p>

<p>Adapter.class:</p>

<pre><code>public class Adapter {
private SeekBarListener mListener;

public interface SeekBarListener{
    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser, int positionInList);
    public void onStartTrackingTouch(SeekBar seekBar, int positionInList);
    public void onStopTrackingTouch(SeekBar seekBar, int positionInList);
}

public listAdapter getAdapter(Context context, ArrayList&lt;String&gt; list, String title){
    return new listAdapter(context, list, title);
}

public void setSeekBarListener(SeekBarListener listener){
    mListener = listener;
}

public class listAdapter extends BaseAdapter {
    private LayoutInflater mInflater;
    private onSeekbarChange mSeekListener;
    private ArrayList&lt;String&gt; itemsList;
    private String title;

    public listAdapter(Context context, ArrayList&lt;String&gt; list, String title){
        mInflater = LayoutInflater.from(context);
        if(mSeekListener == null){
            mSeekListener = new onSeekbarChange();
        }
        this.itemsList = list;
        this.title = title;
    }

    @Override
    public int getCount() {
        return itemsList.size();
    }

    @Override
    public Object getItem(int position) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public long getItemId(int position) {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder2 holder;

        if(convertView == null){
            holder = new ViewHolder2();
            convertView = mInflater.inflate(R.layout.baseadapter_layout, null);
            holder.text_title = (TextView)convertView.findViewById(R.id.textView);
            convertView.setTag(R.layout.baseadapter_layout, holder);
        } else {
            holder = (ViewHolder2)convertView.getTag(R.layout.baseadapter_layout);
        }
        holder.text_title.setText(title);
        return convertView;
    }


    @Override 
    public View getDropDownView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;

        if(convertView == null){
            holder = new ViewHolder();
            convertView = mInflater.inflate(R.layout.baseadapter_dropdown_layout, null);
            holder.text = (TextView)convertView.findViewById(R.id.textView1);
            holder.seekbar = (SeekBar)convertView.findViewById(R.id.seekBar1);
            convertView.setTag(R.layout.baseadapter_dropdown_layout, holder);
        } else {
            holder = (ViewHolder)convertView.getTag(R.layout.baseadapter_dropdown_layout);
        }
        holder.text.setText(itemsList.get(position));
        holder.seekbar.setOnSeekBarChangeListener(mSeekListener);
        holder.seekbar.setTag(position);
        return convertView;

    }

}

static class ViewHolder {
    TextView text;
    SeekBar seekbar;
}

static class ViewHolder2 {
    TextView text_title;
}


public class onSeekbarChange implements OnSeekBarChangeListener{

    @Override
    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
        int position = (Integer) seekBar.getTag();
        if(mListener != null){
            mListener.onProgressChanged(seekBar, progress, fromUser, position);
        }
    }

    @Override
    public void onStartTrackingTouch(SeekBar seekBar) {
        int position = (Integer) seekBar.getTag();
        if(mListener != null){
            mListener.onStartTrackingTouch(seekBar, position);
        }
    }

    @Override
    public void onStopTrackingTouch(SeekBar seekBar) {
        int position = (Integer) seekBar.getTag();
        if(mListener != null){
            mListener.onStopTrackingTouch(seekBar, position);
        }
    }

}
</code></pre>

<p>}</p>

<p>baseadapter_layout.xml:</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="fill_parent" &gt;

&lt;TextView
    android:id="@+id/textView"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_alignParentLeft="true"
    android:layout_alignParentTop="true"
    android:layout_marginLeft="25dp"
    android:layout_marginTop="18dp"
    android:textColor="#FFFFFF"
    android:text="Controls" /&gt;
</code></pre>

<p></p>

<p>baseadapter_dropdown_layout.xml:</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="fill_parent" &gt;

&lt;TextView
    android:id="@+id/textView1"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_alignParentLeft="true"
    android:layout_alignParentTop="true"
    android:layout_marginLeft="15dp"
    android:layout_marginTop="15dp"
    android:textColor="#FFFFFF"
    android:text="TextView" /&gt;

&lt;SeekBar
    android:id="@+id/seekBar1"
    android:layout_width="250dp"
    android:layout_height="wrap_content"
    android:layout_marginTop="11dp"
    android:layout_marginLeft="10dp"
    android:layout_marginRight="10dp"
    android:layout_toRightOf="@+id/textView1" /&gt;
</code></pre>

<p></p>
