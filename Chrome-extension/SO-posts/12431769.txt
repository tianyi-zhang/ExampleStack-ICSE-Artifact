<p>Look for it... It can give you any ideas... </p>

<pre><code>        public Location getLocation() {
    //android.os.Debug.waitForDebugger();
    try {
        locationManager = (LocationManager) mContext
                .getSystemService(LOCATION_SERVICE);

        // getting GPS status
        isGPSEnabled = locationManager
                .isProviderEnabled(LocationManager.GPS_PROVIDER);

        // getting network status
        isNetworkEnabled = locationManager
                .isProviderEnabled(LocationManager.NETWORK_PROVIDER);

        if (isNetworkEnabled) {
            this.canGetLocation = true;
            locationManager.requestLocationUpdates(
                    LocationManager.NETWORK_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
            Log.d("Network", "Network");
            if (locationManager != null) {
                location = locationManager
                        .getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
                if (location != null) {
            //      locationManager.removeUpdates(GPSTracker.this);
                    latitude = location.getLatitude();
                    longitude = location.getLongitude();

                }
        //  }
        }

        }
        else if (isGPSEnabled){
            // if GPS Enabled get lat/long using GPS Services
            this.canGetLocation = true;
                locationManager.requestLocationUpdates(
                        LocationManager.GPS_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                Log.d("GPS Enabled", "GPS Enabled");
                if (locationManager != null) {
                    location = locationManager
                            .getLastKnownLocation(LocationManager.GPS_PROVIDER);
                    if (location != null) {
                    //  locationManager.removeUpdates(GPSTracker.this);
                        latitude = location.getLatitude();
                        longitude = location.getLongitude();

                }
            }
        }
        else{
            //return location;
            this.canGetLocation = false;
        }


    } catch (Exception e) {
        e.printStackTrace();
    }

    return location;
}
</code></pre>
