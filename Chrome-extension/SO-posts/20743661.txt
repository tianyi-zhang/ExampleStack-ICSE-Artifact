<p>MainActivity.java </p>

<pre><code>public class MainActivity extends Activity {

private ListView mListView;
private CustomAdapter mCustomAdapter;
private EditText mEditText;
private ArrayList&lt;Contacts&gt; _Contacts = new ArrayList&lt;Contacts&gt;();

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    for (int i = 0; i &lt; 100; i++) {
        Contacts contacts = new Contacts();
        contacts.setId(""+i);
        contacts.setName("Name "+i);
        _Contacts.add(contacts);
    }


    mListView = (ListView) findViewById(R.id.listView1);
    mEditText = (EditText) findViewById(R.id.editText1);

    mCustomAdapter = new CustomAdapter(MainActivity.this, _Contacts);
    mListView.setAdapter(mCustomAdapter);

    mEditText.addTextChangedListener(new TextWatcher() {

        @Override
        public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {
            mCustomAdapter.getFilter().filter(arg0);
        }

        @Override
        public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,
                int arg3) {
        }

        @Override
        public void afterTextChanged(Editable arg0) {

        }
    });
}

}
</code></pre>

<p>CustomAdapter.java</p>

<pre><code>public class CustomAdapter extends BaseAdapter implements Filterable{

private ArrayList&lt;Contacts&gt; _Contacts;
private Activity context;
private LayoutInflater inflater;
private ValueFilter valueFilter;
private ArrayList&lt;Contacts&gt; mStringFilterList;

public CustomAdapter(Activity context, ArrayList&lt;Contacts&gt; _Contacts) {
    super();
    this.context = context;
    this._Contacts = _Contacts;
    mStringFilterList =  _Contacts;
    this.inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
     getFilter();
}

@Override
public int getCount() {
    return _Contacts.size();
}

@Override
public Object getItem(int position) {
    return _Contacts.get(position).getName();
}

@Override
public long getItemId(int position) {
    return 0;
}

public class ViewHolder {
    TextView tname, tplace;
}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    ViewHolder holder;
    if (convertView == null) {
        holder = new ViewHolder();
        convertView = inflater.inflate(R.layout.activity_main, null);
        holder.tname = (TextView) convertView.findViewById(R.id.textView1);
        holder.tplace = (TextView) convertView.findViewById(R.id.textView2);
        convertView.setTag(holder);
    } else
        holder = (ViewHolder) convertView.getTag();
    holder.tname.setText("" + _Contacts.get(position).getName());
    holder.tplace.setText("" + "" + _Contacts.get(position).getId());
    return convertView;
}

@Override
public Filter getFilter() {
    if(valueFilter==null) {

        valueFilter=new ValueFilter();
    }

    return valueFilter;
}
private class ValueFilter extends Filter {

    //Invoked in a worker thread to filter the data according to the constraint.
    @Override
    protected FilterResults performFiltering(CharSequence constraint) {
        FilterResults results=new FilterResults();
        if(constraint!=null &amp;&amp; constraint.length()&gt;0){
            ArrayList&lt;Contacts&gt; filterList=new ArrayList&lt;Contacts&gt;();
            for(int i=0;i&lt;mStringFilterList.size();i++){
                if((mStringFilterList.get(i).getName().toUpperCase())
                        .contains(constraint.toString().toUpperCase())) {
                    Contacts contacts = new Contacts();
                    contacts.setName(mStringFilterList.get(i).getName());
                    contacts.setId(mStringFilterList.get(i).getId());
                    filterList.add(contacts);
                }
            }
            results.count=filterList.size();
            results.values=filterList;
        }else{
            results.count=mStringFilterList.size();
            results.values=mStringFilterList;
        }
        return results;
    }


    //Invoked in the UI thread to publish the filtering results in the user interface.
    @SuppressWarnings("unchecked")
    @Override
    protected void publishResults(CharSequence constraint,
            FilterResults results) {
        _Contacts=(ArrayList&lt;Contacts&gt;) results.values;
        notifyDataSetChanged();
    }
}
}
</code></pre>

<p>Contacts.java</p>

<pre><code>public class Contacts {

private String name;
private String id;

public String getName() {
    return name;
}
public void setName(String name) {
    this.name = name;
}
public String getId() {
    return id;
}
public void setId(String id) {
    this.id = id;
}
}
</code></pre>

<p>main.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical" &gt;

&lt;EditText
    android:id="@+id/editText1"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:ems="10" &gt;

    &lt;requestFocus /&gt;
&lt;/EditText&gt;

&lt;ListView
    android:id="@+id/listView1"
    android:layout_width="match_parent"
    android:layout_height="wrap_content" &gt;
&lt;/ListView&gt;
</code></pre>

<p></p>

<p>activity_main.xml</p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginBottom="2dp"
android:layout_marginLeft="1dp"
android:layout_marginRight="1dp"
android:layout_marginTop="2dp"
android:background="@android:color/black"
android:gravity="center_vertical"
android:paddingBottom="2dp"
android:paddingTop="2dp"
tools:context=".MainActivity" &gt;


&lt;TextView
    android:id="@+id/textView1"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_marginLeft="8dp"
    android:text="Large Text"
    android:textAppearance="?android:attr/textAppearanceLarge"
    android:textColor="@android:color/white" /&gt;

&lt;TextView
    android:id="@+id/textView2"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_marginLeft="8dp"
    android:text="Small Text"
    android:textAppearance="?android:attr/textAppearanceSmall"
    android:textColor="@android:color/white" /&gt;
</code></pre>

<p></p>

<p>This is a sample project code. Use this code this will really help you</p>
