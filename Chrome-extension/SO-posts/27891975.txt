<p>You can make a Custom Dialog with your custom Layout. Here is a good tutorial:</p>

<p><a href="http://www.mkyong.com/android/android-custom-dialog-example/" rel="nofollow">http://www.mkyong.com/android/android-custom-dialog-example/</a></p>

<p>Edit: Then you have to create your own row layout and custom ListView. </p>

<p>Check these solutions: <a href="http://stackoverflow.com/questions/15762905/how-to-display-list-view-in-alert-dialog-in-android">How to display list view in Alert Dialog in android?</a></p>

<p>You can create custom adapters like this:</p>

<pre><code>public class CustomAdapter extends ArrayAdapter&lt;CustomObject&gt; {

Context context; 
int layoutResourceId;    
ArrayList&lt;CustomObject&gt; data = null;

public CustomAdapter (Context context, int layoutResourceId, ArrayList&lt;CustomObject&gt; data) {
    super(context, layoutResourceId, data);
    this.layoutResourceId = layoutResourceId;
    this.context = context;
    this.data = data;
}

static class ViewHolder
{
    ImageView imgDealImage;
    TextView txtDescription;

}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;

    if(convertView == null)
    {
        LayoutInflater inflater = ((Activity)context).getLayoutInflater();
        convertView = inflater.inflate(layoutResourceId, parent, false);

        holder = new ViewHolder();
        holder.imgDealImage = (ImageView)convertView.findViewById(R.id.imgDealImage);
        holder.txtDescription = (TextView)convertView.findViewById(R.id.txtDescription);


        convertView.setTag(holder);
    }
    else
    {
        holder = (ViewHolder)convertView.getTag();
    }

    int image = data.get(position).getImage();
    String description = data.get(position).getDescription();


    holder.imgDealImage.setImageResource(image);
    holder.txtDescription.setText(description);


    return convertView;
    }

}
</code></pre>
