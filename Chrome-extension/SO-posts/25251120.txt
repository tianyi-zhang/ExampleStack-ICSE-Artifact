<p>I have a Class (Hash) to convert plain text in hash in formats: md5 or sha1, simillar that php functions (<a href="http://php.net/manual/en/function.md5.php">md5</a>, <a href="http://php.net/manual/en/function.sha1.php">sha1</a>):</p>

<pre><code>public class Hash {
    /**
     * 
     * @param txt, text in plain format
     * @param hashType MD5 OR SHA1
     * @return hash in hashType 
     */
    public static String getHash(String txt, String hashType) {
        try {
                    java.security.MessageDigest md = java.security.MessageDigest.getInstance(hashType);
                    byte[] array = md.digest(txt.getBytes());
                    StringBuffer sb = new StringBuffer();
                    for (int i = 0; i &lt; array.length; ++i) {
                        sb.append(Integer.toHexString((array[i] &amp; 0xFF) | 0x100).substring(1,3));
                 }
                    return sb.toString();
            } catch (java.security.NoSuchAlgorithmException e) {
                //error action
            }
            return null;
    }

    public static String md5(String txt) {
        return Hash.getHash(txt, "MD5");
    }

    public static String sha1(String txt) {
        return Hash.getHash(txt, "SHA1");
    }
}
</code></pre>

<h2>Testing with JUnit and PHP</h2>

<h3>PHP Script:</h3>

<pre><code>&lt;?php

echo 'MD5 :' . md5('Hello World') . "\n";
echo 'SHA1:' . sha1('Hello World') . "\n";
</code></pre>

<h3>Output PHP script:</h3>

<pre><code>MD5 :b10a8db164e0754105b7a99be72e3fe5
SHA1:0a4d55a8d778e5022fab701977c5d840bbc486d0
</code></pre>

<h3>Using example and Testing with JUnit:</h3>

<pre><code>    public class HashTest {

    @Test
    public void test() {
        String txt = "Hello World";
        assertEquals("b10a8db164e0754105b7a99be72e3fe5", Hash.md5(txt));
        assertEquals("0a4d55a8d778e5022fab701977c5d840bbc486d0", Hash.sha1(txt));
    }

}
</code></pre>

<h3>Code in GitHub</h3>

<blockquote>
  <p><a href="https://github.com/fitorec/java-hashes">https://github.com/fitorec/java-hashes</a></p>
</blockquote>
