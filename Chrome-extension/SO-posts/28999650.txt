<p>I have found that for native email app to accept the attachment you need to call <code>Intent.setType</code> as well as using the <code>ACTION_SEND</code> as opposed to <code>ACTION_SENDTO</code>.</p>

<p>Here is how I ultimately constructed my intent to get email attachment to work in both gmail and native apps:</p>

<pre><code>Intent intent  = new Intent(Intent.ACTION_SEND); // SENDTO does not work for native email app
        intent.setData(Uri.fromParts("mailto",to, null));
        intent.putExtra(Intent.EXTRA_EMAIL, new String[] { to });
        intent.putExtra(Intent.EXTRA_SUBJECT, subject);
        intent.putExtra(Intent.EXTRA_TEXT, body);
        intent.setType("message/email");
        if (attachmentInCacheDir != null) {
            intent.putExtra(Intent.EXTRA_STREAM, Uri.parse("content://" + getAuthority(context) + "/" + attachmentInCacheDir.getName()));
        }
        context.startActivityForResult(Intent.createChooser(intent, "Send Email"), 1000);
</code></pre>

<p>As you can see I also am using a content provider for file access to avoid copying files to external storage.  This was a whole new can of worms as the native app calls 'query' on your provider to ask for file size.  If size is zero, then it wont attach.  Gmail is much more lenient.</p>
