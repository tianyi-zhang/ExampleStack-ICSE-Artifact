<p>You could convert the hex value to a <code>Color</code> and then darken the <code>Color</code> object</p>

<pre><code>// Convert the hex to an color (or use what ever method you want)
Color color = Color.decode(hex);

// The fraction of darkness you want to apply
float fraction = 0.1f;

// Break the color up
int red = color.getRed();
int blue = color.getBlue();
int green = color.getGreen();
int alpha = color.getAlpha();

// Convert to hsb
float[] hsb = Color.RGBtoHSB(red, green, blue, null);
// Decrease the brightness
hsb[2] = Math.min(1f, hsb[2] * (1f - fraction));
// Re-assemble the color
Color hSBColor = Color.getHSBColor(hsb[0], hsb[1], hsb[2]);

// If you need it, you will need to reapply the alpha your self
</code></pre>

<p><strong>UPDATE</strong></p>

<p>To get it back to hex, you could try something like</p>

<pre><code>int r = color.getRed();
int g = color.getGreen();
int b = color.getBlue();

String rHex = Integer.toString(r, 16);
String gHex = Integer.toString(g, 16);
String bHex = Integer.toString(b, 16);

String hexValue = (rHex.length() == 2 ? "" + rHex : "0" + rHex)
                + (gHex.length() == 2 ? "" + gHex : "0" + gHex)
                + (bHex.length() == 2 ? "" + bHex : "0" + bHex);

int intValue = Integer.parseInt(hex, 16); 
</code></pre>

<p>Now if that's not quite right, I'd have a look and see if there's any answers of SO or Google</p>
