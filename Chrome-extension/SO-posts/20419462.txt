<p>Its giving nullpointer exception because you might have forget to initialize the <code>ImageView</code> which you are passing as parameter in your <code>new DownloadImageTask(downloadedImg).execute(..);</code> </p>

<p>Make sure you have initialized your <code>ImageView</code> in your class.</p>

<pre><code> ImageView downloadedImg =new ImageView(this);
</code></pre>

<p>Use the below code to download the image from url:</p>

<pre><code>private Bitmap downloadBitmap(String url) {
     // initilize the default HTTP client object
     final DefaultHttpClient client = new DefaultHttpClient();

     //forming a HttoGet request 
     final HttpGet getRequest = new HttpGet(url);
     try {

         HttpResponse response = client.execute(getRequest);
             //check 200 OK for success
         final int statusCode = response.getStatusLine().getStatusCode();

         if (statusCode != HttpStatus.SC_OK) {
             Log.w("ImageDownloader", "Error " + statusCode + 
                     " while retrieving bitmap from " + url);
             return null;

         }

         final HttpEntity entity = response.getEntity();
         if (entity != null) {
             InputStream inputStream = null;
             try {
                 // getting contents from the stream 
                 inputStream = entity.getContent();

                 // decoding stream data back into image Bitmap that android understands
                 image = BitmapFactory.decodeStream(inputStream);


             } finally {
                 if (inputStream != null) {
                     inputStream.close();
                 }
                 entity.consumeContent();
             }
         }
     } catch (Exception e) {

         Log.e("ImageDownloader", "Something went wrong while" +
                 " retrieving bitmap from " + url + e.toString());
     } 

     return image;
 }
</code></pre>

<p>Change your code as below:</p>

<pre><code>  private class DownloadImageTask extends AsyncTask&lt;String, Void, Bitmap&gt; {
    ImageView myimage;

    public DownloadImageTask(ImageView bmImage) {
        this.myimage = bmImage;
    }

    protected Bitmap doInBackground(String... urls) {
        String urldisplay = urls[0];
        Bitmap mIcon11 = null;
        try {
                   mIcon11 = downloadBitmap(urldisplay);
        } catch (Exception e) {
            Log.e("Error", e.getMessage());
            e.printStackTrace();
        }
        return mIcon11;
    }

    protected void onPostExecute(Bitmap result) {
        myimage.setImageBitmap(result);
    }
}
</code></pre>

<p><strong>EDITED:</strong></p>

<p>Here is my code which i have tried and which works like charm.</p>

<pre><code>public class MainActivity extends Activity {

    Bitmap image;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        ImageView mm=new ImageView(getApplicationContext());

        new DownloadImageTask(mm).execute("http://felicita-pizzeria.fr/images/logo.png");
        setContentView(mm);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    private Bitmap downloadBitmap(String url) {
         // initilize the default HTTP client object
         final DefaultHttpClient client = new DefaultHttpClient();

         //forming a HttoGet request 
         final HttpGet getRequest = new HttpGet(url);
         try {

             HttpResponse response = client.execute(getRequest);
                 //check 200 OK for success
             final int statusCode = response.getStatusLine().getStatusCode();

             if (statusCode != HttpStatus.SC_OK) {
                 Log.w("ImageDownloader", "Error " + statusCode + 
                         " while retrieving bitmap from " + url);
                 return null;

             }

             final HttpEntity entity = response.getEntity();
             if (entity != null) {
                 InputStream inputStream = null;
                 try {
                     // getting contents from the stream 
                     inputStream = entity.getContent();

                     // decoding stream data back into image Bitmap that android understands
                     image = BitmapFactory.decodeStream(inputStream);


                 } finally {
                     if (inputStream != null) {
                         inputStream.close();
                     }
                     entity.consumeContent();
                 }
             }
         } catch (Exception e) {

             Log.e("ImageDownloader", "Something went wrong while" +
                     " retrieving bitmap from " + url + e.toString());
         } 

         return image;
     }

     private class DownloadImageTask extends AsyncTask&lt;String, Void, Bitmap&gt; {
            ImageView myimage;

            public DownloadImageTask(ImageView bmImage) {
                this.myimage = bmImage;
            }

            protected Bitmap doInBackground(String... urls) {


        String urldisplay = urls[0];
            Bitmap mIcon11 = null;
            try {
                       mIcon11 = downloadBitmap(urldisplay);
            } catch (Exception e) {
                Log.e("Error", e.getMessage());
                e.printStackTrace();
            }
            return mIcon11;
        }

        protected void onPostExecute(Bitmap result) {
            myimage.setImageBitmap(result);
        }
    }
</code></pre>

<p>}</p>

<p><strong>Output:</strong></p>

<p><img src="http://i.stack.imgur.com/fDkb3.png" alt="enter image description here"></p>
