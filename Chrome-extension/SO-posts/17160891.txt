<p>This one is worked for me. Try it out.</p>

<pre><code>    public class Touch implements OnTouchListener {

    // These matrices will be used to move and zoom image  
    Matrix matrix = new Matrix();  
    Matrix savedMatrix = new Matrix();  

    // We can be in one of these 3 states  
    static final int NONE = 0;
    static final int DRAG = 1;  
    static final int ZOOM = 2;  
    int mode = NONE;  

    // Remember some things for zooming  
    PointF start = new PointF();  
    PointF mid = new PointF();  
    float oldDist = 1f;

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        // TODO Auto-generated method stub

        ImageView view = (ImageView)v;
        view.setScaleType(ImageView.ScaleType.MATRIX);

        // Handle touch events here...
        switch (event.getAction() &amp; MotionEvent.ACTION_MASK) {
        case MotionEvent.ACTION_DOWN:
            savedMatrix.set(matrix);
            start.set(event.getX(), event.getY());
            mode = DRAG;

            break;

        case MotionEvent.ACTION_POINTER_DOWN:  
            oldDist = spacing(event);  
            if (oldDist &gt; 10f) {  
                savedMatrix.set(matrix);  
                midPoint(mid, event);  
                mode = ZOOM;  
            }  
            break;  

        case MotionEvent.ACTION_UP:  

        case MotionEvent.ACTION_POINTER_UP:  
            mode = NONE;  
            break;  


        case MotionEvent.ACTION_MOVE:

            if(mode == DRAG)
            {
                matrix.set(savedMatrix);  
                matrix.postTranslate(event.getX() - start.x, event.getY() - start.y); 
            }

            else if(mode == ZOOM)
            {
                float newDist = spacing(event);  
                if (newDist &gt; 10f) {  
                    matrix.set(savedMatrix);  
                    float scale = newDist / oldDist;  
                    matrix.postScale(scale, scale, mid.x, mid.y);  
                } 
            }
            break;
        }


        view.setImageMatrix(matrix);


        return true;
    }


    /** Determine the space between the first two fingers */  
    private float spacing(MotionEvent event) {  
        float x = event.getX(0) - event.getX(1);  
        float y = event.getY(0) - event.getY(1);  
        return FloatMath.sqrt(x * x + y * y);  
    }  

    /** Calculate the mid point of the first two fingers */  
    private void midPoint(PointF point, MotionEvent event) {  
        float x = event.getX(0) + event.getX(1);  
        float y = event.getY(0) + event.getY(1);  
        point.set(x / 2, y / 2);  
    }  

}
</code></pre>

<p>just use it like this</p>

<pre><code>ImageView iv = (ImageView)findViewById(R.id.imageView1);
    iv.setOnTouchListener(new Touch());
</code></pre>
