<p>API level 14 introduced two new actions: <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_INSTALL_PACKAGE">ACTION_INSTALL_PACKAGE</a> and <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_UNINSTALL_PACKAGE">ACTION_UNINSTALL_PACKAGE</a>. Those actions allow you to pass <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_RETURN_RESULT">EXTRA_RETURN_RESULT</a> boolean extra to get an (un)installation result notification.</p>

<p>Example code for invoking the uninstall dialog:</p>

<pre><code>String app_pkg_name = "com.example.app";
int UNINSTALL_REQUEST_CODE = 1;

Intent intent = new Intent(Intent.ACTION_UNINSTALL_PACKAGE);  
intent.setData(Uri.parse("package:" + app_pkg_name));  
intent.putExtra(Intent.EXTRA_RETURN_RESULT, true);
startActivityForResult(intent, UNINSTALL_REQUEST_CODE);
</code></pre>

<p>And receive the notification in your <a href="http://developer.android.com/reference/android/app/Activity.html#onActivityResult(int,%20int,%20android.content.Intent)">Activity#onActivityResult</a> method:</p>

<pre><code>@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if (requestCode == UNINSTALL_REQUEST_CODE) {
        if (resultCode == RESULT_OK) {
            Log.d("TAG", "onActivityResult: user accepted the (un)install");
        } else if (resultCode == RESULT_CANCELED) {
            Log.d("TAG", "onActivityResult: user canceled the (un)install");
        } else if (resultCode == RESULT_FIRST_USER) {
            Log.d("TAG", "onActivityResult: failed to (un)install");
        }
    }
}
</code></pre>
