<pre><code>public class Diamond {

//Size of the diamond
private int diagonal;

public Diamond(int diagonal) {
    this.diagonal = diagonal;
}

public void drawDiamond() {
    int n = diagonal;
    for (int i = n / 2; i &gt;= -n / 2; i--) {
        for (int k = 0; k &lt; i; k++) {
            System.out.print(" ");
        }
        for (int j = 1; j &lt;= (n - i * 2) &amp;&amp; i &gt;= 0; j++) {
            System.out.print("*");
        }
        for (int k = 1; k &lt;= -i &amp;&amp; i &lt; 0; k++) {
            System.out.print(" ");
        }
        for (int j = (n / 2) * 2 + 2 * i; j &gt;= -(n % 2 - 1) &amp;&amp; i &lt; 0; j--) {
            System.out.print("*");
        }
        System.out.println();
    }
}

public static void main(String[] args) {
    Diamond a = new Diamond(21);  //You pass diamond size here in the constructor
    a.drawDiamond();
}
}
</code></pre>

<p>The main problem is parity of diagonal.
If it's even you can't properly draw top asterisk. So there is 2 types of diamonds - with even and odd diagonal (with 2 and 1 asterisk at the top).</p>
