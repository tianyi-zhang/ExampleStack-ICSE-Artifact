<p>Use like this.. it worked perfectly for me</p>

<pre><code>private class ItemFilter extends Filter {
    @Override
    protected FilterResults performFiltering(CharSequence constraint) {

        String filterString = constraint.toString().toLowerCase();

        FilterResults results = new FilterResults();

        final ArrayList&lt;HashMap&lt;String, String&gt;&gt; list = all_details;

        int count = list.size();
        final ArrayList&lt;HashMap&lt;String, String&gt;&gt; newlist = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();

        String filterableString;

        for (int i = 0; i &lt; count; i++) {
            filterableString = list.get(i).get("prodname");
            if (filterableString.toString().toLowerCase().contains(filterString)) {
                newlist.add(list.get(i));
            }
        }

        results.values = newlist;
        results.count = newlist.size();

        return results;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected void publishResults(CharSequence constraint,
            FilterResults results) {
        if (results != null) {
            if (results.count &gt; 0) {
                pt_details = new ArrayList&lt;HashMap&lt;String,String&gt;&gt;((ArrayList&lt;HashMap&lt;String, String&gt;&gt;) results.values) ;
            } else {
                pt_details.clear();
                //pt_details = all_details;
            }

        } else {
            pt_details = all_details;
        }
        notifyDataSetChanged();
    }

}
</code></pre>
