<p>Please refer below code: </p>

<pre><code>private void setCameraDisplayOrientation(int cameraId, android.hardware.Camera camera) {
    int rotation = getWindowManager().getDefaultDisplay()
            .getRotation();
    int degrees = 0;
    int result;

    if(Build.VERSION.SDK_INT&gt;10){
        android.hardware.Camera.CameraInfo info =
                new android.hardware.Camera.CameraInfo();
        android.hardware.Camera.getCameraInfo(cameraId, info);
        switch (rotation) {
        case Surface.ROTATION_0: degrees = 0; break;
        case Surface.ROTATION_90: degrees = 90; break;
        case Surface.ROTATION_180: degrees = 180; break;
        case Surface.ROTATION_270: degrees = 270; break;
        }

        if (info.facing == Camera.CameraInfo.CAMERA_FACING_FRONT) {
            result = (info.orientation + degrees) % 360;
            result = (360 - result) % 360;  // compensate the mirror
        } else {  // back-facing
            result = (info.orientation - degrees + 360) % 360;
        }
        camera.setDisplayOrientation(result);

    }else{
        if(cameraId==CAMERA_FACING_BACK){
            camera.setDisplayOrientation(90);
        }else{
            camera.setDisplayOrientation(270);
        }
    }
}
</code></pre>

<p>You can get Camera Id using </p>

<pre><code>@TargetApi(Build.VERSION_CODES.GINGERBREAD)
private Camera openFrontFaceCamera() {
    int cameraCount = 0;
    Camera cam = null;
    Camera.CameraInfo cameraInfo = new Camera.CameraInfo();
    cameraCount = Camera.getNumberOfCameras();
    for ( int camIdx = 0; camIdx &lt; cameraCount; camIdx++ ) {
        Camera.getCameraInfo( camIdx, cameraInfo );
        if ( cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_FRONT  ) {
            try {
                mCameraId=camIdx;
                cam = Camera.open( camIdx );
            } catch (RuntimeException e) {
                Log.e("Custom Camera", "Camera failed to open: " + e.getLocalizedMessage());
            }
        }
    }

    return cam;
}

@TargetApi(Build.VERSION_CODES.GINGERBREAD)
private Camera openRearFaceCamera() {
    int cameraCount = 0;
    Camera cam = null;
    Camera.CameraInfo cameraInfo = new Camera.CameraInfo();
    cameraCount = Camera.getNumberOfCameras();
    for ( int camIdx = 0; camIdx &lt; cameraCount; camIdx++ ) {
        Camera.getCameraInfo( camIdx, cameraInfo );
        if ( cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_BACK  ) {
            try {
                mCameraId=camIdx;
                cam = Camera.open( camIdx );
            } catch (RuntimeException e) {
                Log.e("Custom Camera", "Camera failed to open: " + e.getLocalizedMessage());
            }
        }
    }

    return cam;
}
</code></pre>
