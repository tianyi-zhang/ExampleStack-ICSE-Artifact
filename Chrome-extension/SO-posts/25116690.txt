<p>Make sure that if u want to show animation in growing width then mention the layout specific width in xml file and use the below code for expand and collapse animation in terms of width. </p>

<pre><code>//expand animation      
public static void expand(final View v) {
        v.measure(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);
        final int targtetWidth = v.getMeasuredWidth();
        Log.v("view width", "view expand width==&gt;"+targtetWidth);
        v.getLayoutParams().width = 0;
        v.setVisibility(View.VISIBLE);

        Animation a = new Animation() {
            @Override
            protected void applyTransformation(float interpolatedTime,Transformation t) {
                v.getLayoutParams().width = interpolatedTime == 1 ? LayoutParams.WRAP_CONTENT: (int)(targtetWidth * interpolatedTime);
                v.requestLayout();
            }

            @Override
            public boolean willChangeBounds() {
                return true;
            }
        };

        a.setDuration(100);
        v.startAnimation(a);
    }

//collapse animation
    public static void collapse(final View v) {
        final int initialWidth = v.getMeasuredWidth();
        Log.v("initial width", "initial width==&gt;"+initialWidth); 
        Animation a = new Animation() {
            @Override
            protected void applyTransformation(float interpolatedTime,
                    Transformation t) {
                if (interpolatedTime == 1) {
                    Log.v("interpolated", "interpolated time is 1");
                    v.setVisibility(View.GONE);
                } else {

                    v.getLayoutParams().width = initialWidth - (int) (initialWidth * interpolatedTime);
                    Log.v("interpolated", "interpolated time is===&gt;"+v.getLayoutParams().width);
                    v.requestLayout();
                }
            }

            @Override
            public boolean willChangeBounds() {
                return true;
            }
        };

        // 1dp/ms
        Log.v("duration", "duration for collapse==&gt;"+((int)(initialWidth /v.getContext().getResources().getDisplayMetrics().density)));
        a.setDuration((int) (initialWidth / v.getContext().getResources().getDisplayMetrics().density));
        v.startAnimation(a);
    }
</code></pre>
