<p>I think should help you out. I added selection statements to  constructor and and helped you with the the <code>Exception</code> class. If your <code>GeometricObject</code> class is good, this code should work for you.</p>

<pre><code>import java.util.Scanner;

public class TriangleWithException {

public static void main(String[] args) throws IllegalTriangleException {

    Scanner input = new Scanner(System.in);

    // create triangle
    Triangle triangle = new Triangle();
    boolean done = false;
    double side1 = 1.0;
    double side2 = 1.0;
    double side3 = 1.0;

    System.out.println("Enter three sides: ");

    while (!done) {
        try {
            side1 = input.nextDouble();
            side2 = input.nextDouble();
            side3 = input.nextDouble();
            triangle = new Triangle(side1, side2, side3);
            done = true;
        }
        catch (IllegalTriangleException ex) {
            System.out.println(ex.getMessage());
            System.out.print("Enter three sides:  ");
            input.nextLine();
        }
    }




    System.out.println("Enter a color:  ");
    String color = input.next();
    triangle.setColor(color);

    System.out.println("Enter true or false for triangle filled: ");
    boolean filled = input.nextBoolean();
    triangle.setFilled(filled);

    System.out.println();

    System.out.println(triangle.toString() + 
            "\narea: " + triangle.getArea() + 
            "\nperimeter " + triangle.getPerimeter() +
            "\ncolor: " + triangle.getColor() + 
            "\nfilled: " + triangle.isFilled());
}

}
</code></pre>

<p>Original Triangle class</p>

<pre><code>class Triangle extends GeometricObject {

protected double side1 = 1.0;
protected double side2 = 1.0;
protected double side3 = 1.0;

public Triangle() {
}

public Triangle(double side1, double side2, double side3) throws   IllegalTriangleException {
    if (side1 &gt;= side2 + side3)
        throw new IllegalTriangleException(side1);
    else if (side2 &gt;= side1 + side3)
        throw new IllegalTriangleException(side2);
    else if (side3 &gt;= side2 + side1)
        throw new IllegalTriangleException(side3);
    else {
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
    }

}

public double getSide1() {
    return side1;
}

public double getSide2() {
    return side2;
}

public double getSide3() {
    return side3;
}


public double getPerimeter() {
    return side1 + side2 + side3;
}

public double getArea() {
    double p = (side1 + side2 + side3) / 2;
    double area = Math.sqrt(p * (p - side1) * (p - side2) * (p - side3));
    return area;
}

@Override
public String toString() {
    return "Triangle side 1 = " + side1 + ", side 2 = " + side2 + ", side 3 = " + side3;
}
}
</code></pre>

<p>IllegaTriangleException class</p>

<pre><code>class IllegalTriangleException extends Exception {

private double side = 1.0;

public IllegalTriangleException(double side) {
    super(side + " is larger than other two combined");

} 

public double getSide1() {
    return side;
}

}
</code></pre>
