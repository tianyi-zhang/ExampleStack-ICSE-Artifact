<p>Use <code>PagedScrollPane</code> (call <code>addPage</code> to add your images):</p>

<pre><code>package com.your.package;

import com.badlogic.gdx.math.MathUtils;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.ui.ScrollPane;
import com.badlogic.gdx.scenes.scene2d.ui.Skin;
import com.badlogic.gdx.scenes.scene2d.ui.Table;
import com.badlogic.gdx.utils.Array;
import com.esotericsoftware.tablelayout.Cell;

public class PagedScrollPane extends ScrollPane {

    private boolean wasPanDragFling = false;

    public static interface ScrollRunnable
    {
        public void run(Actor scrolledTo);
    }

    private Table content;
    private float pageSpace;
    private ScrollRunnable onScroll;

    public PagedScrollPane (float pageSpace) {
        super(null);
        setup(pageSpace);
    }

    public PagedScrollPane (Skin skin, float pageSpace) {
        super(null, skin);
        setup(pageSpace);
    }

    public PagedScrollPane (Skin skin, String styleName, float pageSpace) {
        super(null, skin, styleName);
        setup(pageSpace);
    }

    public PagedScrollPane (Actor widget, ScrollPaneStyle style, float pageSpace) {
        super(null, style);
        setup(pageSpace);
    }

    public void setOnScroll(ScrollRunnable onScroll)
    {
        this.onScroll = onScroll;
    }

    private void setup(float pageSpace) {
        this.pageSpace = pageSpace;
        this.onScroll = null;

        content = new Table();
        content.defaults().space(pageSpace);
        super.setWidget(content);
    }

    public void addPages (Actor... pages) {
        for (Actor page : pages) {
            content.add(page).expandY().fillY();
        }
    }

    public Cell addPage (Actor page) {
        return content.add(page).expandY().fillY();
    }

    @Override
    public void act (float delta) {
        super.act(delta);
        if (wasPanDragFling &amp;&amp; !isPanning() &amp;&amp; !isDragging() &amp;&amp; !isFlinging()) {
            wasPanDragFling = false;
            scrollToPage();
        } else {
            if (isPanning() || isDragging() || isFlinging()) {
                wasPanDragFling = true;
            }
        }
    }

    @Override
    public void setWidget (Actor widget)
    {
        //
    }

    public void setPageSpacing (float pageSpacing) {
        if (content != null) {
            content.defaults().space(pageSpacing);
            for (@SuppressWarnings("rawtypes") Cell cell : content.getCells()) {
                cell.space(pageSpacing);
            }
            content.invalidate();
        }
    }

    private void scrollToPage () {
        final float width = getWidth();
        final float scrollX = getScrollX() + getWidth() / 2f;

        Array&lt;Actor&gt; pages = content.getChildren();
        if (pages.size &gt; 0) {
            for (Actor a : pages) {
                float pageX = a.getX();
                float pageWidth = a.getWidth();

                if (scrollX &gt;= pageX - pageWidth &amp;&amp; scrollX &lt; pageX + pageWidth)
                {
                    setScrollX(pageX - (width - pageWidth) / 2f);
                    if (onScroll != null)
                    {
                        onScroll.run(a);
                    }
                    break;
                }
            }
        }
    }

    public void scrollTo(Actor listenerActor)
    {
        float pageX = listenerActor.getX();
        float pageWidth = listenerActor.getWidth();
        final float width = getWidth();

        setScrollX(pageX - (width - pageWidth) / 2f);
    }

    public void addEmptyPage(float offset)
    {
        content.add().minWidth(offset);
    }
}
</code></pre>

<p>Also, it have <code>setOnScroll</code> method that allows to set callback after scroll your pane to some image.</p>

<p>Edit: Modified the condition in <code>scrollToPage()</code> method to avoid blindspot points (where scroll never snaps to a page).</p>
