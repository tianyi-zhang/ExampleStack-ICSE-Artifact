<p>In my case, it was necessary to merge Danny Roa's and riwnodennyk's solution:</p>

<pre><code>onView(withId(R.id.recyclerview))
.perform(RecyclerViewActions.scrollToPosition(80))
.check(matches(atPositionOnView(80, withText("Test Test"), R.id.targetview)));
</code></pre>

<p>and the method : </p>

<pre><code>public static Matcher&lt;View&gt; atPositionOnView(final int position, final Matcher&lt;View&gt; itemMatcher,
        @NonNull final int targetViewId) {

    return new BoundedMatcher&lt;View, RecyclerView&gt;(RecyclerView.class) {
        @Override
        public void describeTo(Description description) {
            description.appendText("has view id " + itemMatcher + " at position " + position);
        }

        @Override
        public boolean matchesSafely(final RecyclerView recyclerView) {
            RecyclerView.ViewHolder viewHolder = recyclerView.findViewHolderForAdapterPosition(position);
            View targetView = viewHolder.itemView.findViewById(targetViewId);
            return itemMatcher.matches(targetView);
        }
    };
}
</code></pre>
