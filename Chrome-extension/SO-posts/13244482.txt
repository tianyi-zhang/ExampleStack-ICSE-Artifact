<p>I wrote a simple <code>ListView</code> like your requirement.</p>

<ol>
<li><p>Declare custom attribute in <code>attrs.xml</code> in <code>value</code> folder:</p>

<pre><code>&lt;resources&gt;
    &lt;declare-styleable name="HeaderListViewFromXML"&gt; 
        &lt;attr name="headerView" format="reference"/&gt;
    &lt;/declare-styleable&gt;
&lt;/resources&gt;
</code></pre></li>
<li><p>Create <code>HeaderListViewFromXML</code> class extended <code>ListView</code>  </p>

<pre><code>public class HeaderListViewFromXML extends ListView {
    private int headerId;

    public HeaderListViewFromXML(Context context) {
        this(context, null);
    }

    public HeaderListViewFromXML(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    public HeaderListViewFromXML(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        TypedArray a = context.getTheme().obtainStyledAttributes(attrs, R.styleable.HeaderListViewFromXML, defStyle, defStyle);

        try {
            headerId = a.getResourceId(R.styleable.HeaderListViewFromXML_headerView, View.NO_ID);
            if (headerId != View.NO_ID) {
                LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                View header = inflater.inflate(headerId, null);
                addHeaderView(header);
            }
        } finally {
            a.recycle();
        }
    }
}
</code></pre></li>
<li><p>Declare custom <code>HeaderListViewFromXML</code> in <code>layout.xml</code>  </p>

<pre><code>&lt;RelativeLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        android:layout_width="match_parent"
        android:layout_height="match_parent"&gt;
    &lt;com.example.rewidget.HeaderListViewFromXML
            android:id="@+id/listWithHeader"
            android:layout_width="fill_parent"
            android:layout_height="150dp"
            android:layout_marginTop="60dp"
            android:background="#00FF00"
            // custom attribute. Point to layout in header1.xml
            app:headerView="@layout/header1" /&gt;
&lt;/RelativeLayout&gt;
</code></pre></li>
<li><p>In Activity, use like normal <code>ListView</code></p>

<pre><code>public class MainActivity extends Activity {
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ListView list = (ListView) findViewById(R.id.listWithHeader);

        String[] values = new String[] { "Android", "iPhone", "WindowsMobile", "Blackberry", "WebOS", "Ubuntu", "Windows7", "Max OS X", "Linux", "OS/2" };
        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_list_item_1, android.R.id.text1, values);

        list.setAdapter(adapter);
    }
}
</code></pre></li>
</ol>
