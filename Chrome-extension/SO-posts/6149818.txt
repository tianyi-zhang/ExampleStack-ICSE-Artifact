<p>I had a look at the Source code of <code>DefaultPropertiesPersister</code> (it's used by <code>ReloadableResourceBundleMessageSource</code> internally).</p>

<p>If a <code>defaultEncoding</code> is specified, the properties are loaded manually line-by-line from a <code>Reader</code> instead of using the conventional <code>Properties.load()</code> method.</p>

<p>Before adding the key/value pair to the <code>Properties</code> object, the <code>unescape()</code> method is invoked on the <code>String</code>s</p>

<pre><code>protected String unescape(String str) {
    StringBuffer outBuffer = new StringBuffer(str.length());
    for (int index = 0; index &lt; str.length();) {
        char c = str.charAt(index++);
        if (c == '\\') {
            c = str.charAt(index++);
            if (c == 't') {
                c = '\t';
            }
            else if (c == 'r') {
                c = '\r';
            }
            else if (c == 'n') {
                c = '\n';
            }
            else if (c == 'f') {
                c = '\f';
            }
        }
        outBuffer.append(c);
    }
    return outBuffer.toString();
}
</code></pre>

<p>This is where the <code>\</code> character is getting removed.</p>

<p>If you create a subclass of <code>DefaultPropertiesPersister</code> as follows</p>

<pre><code>package com.something;

import org.apache.commons.lang.StringEscapeUtils;
import org.springframework.util.DefaultPropertiesPersister;

public class MyPropertiesPersister extends DefaultPropertiesPersister {
    protected String unescape(String str)
    {
        return StringEscapeUtils.unescapeJava(str);
    }    
}
</code></pre>

<p>Set it in your spring config like so: </p>

<pre><code>&lt;b:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"&gt;
    &lt;b:property name="defaultEncoding" value="UTF-8"/&gt;
    &lt;b:property name="fallbackToSystemLocale" value="false" /&gt;
    &lt;b:property name="basenames"&gt;
        &lt;b:list&gt;
            &lt;b:value&gt;classpath:messages&lt;/b:value&gt;
            &lt;b:value&gt;/public/custom/i18n/portalmessages&lt;/b:value&gt;
        &lt;/b:list&gt;
    &lt;/b:property&gt;    
    &lt;b:property name="cacheSeconds" value="1"/&gt;
    &lt;b:property name="propertiesPersister"&gt;
        &lt;b:bean class="com.something.MyPropertiesPersister"/&gt;
    &lt;/b:property&gt;
&lt;/b:bean&gt;
</code></pre>

<p>It will work.. there may be further jiggery-pokery required to get exactly what you want in relation to other encodings, etc :)</p>
