<p>Add filter method your ActorsListAdapter and pass input value to filter method :</p>

<pre><code>public class CustomBaseAdapter extends BaseAdapter {
    private Context context;
    private List&lt;RowItem&gt; filterData;
    private List&lt;RowItem&gt; listData;


    public CustomBaseAdapter(Context context,List&lt;RowItem&gt; listData) {
        this.context = context;
        this.listData=listData;
        filterData = new ArrayList&lt;RowItem&gt;();
        filterData.addAll(listData);
    }

    @Override
    public int getCount() {
        return filterData.size();
    }

    @Override
    public Object getItem(int position) {
        return filterData.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(final int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        if (convertView == null) {
            holder = new ViewHolder();
            convertView = LayoutInflater.from(context).inflate(R.layout.list_item_main_menu, null);
            holder.imageView = (ImageView) convertView.findViewById(R.id.img);
            holder.imgarrow = (ImageView) convertView.findViewById(R.id.sight_arrow_icon);
            holder.txtTitle = (TextView) convertView.findViewById(R.id.title);

            convertView.setTag(holder);
        }else{
            holder = (ViewHolder) convertView.getTag();
        }

        holder.txtTitle.setText(filterData.get(position).getTitle());
        holder.imageView.setImageResource(listData.get(position).getImageId());
        holder.imgarrow.setImageResource(listData.get(position).getImg());

        return convertView;
    }

    public void filter(String charText) {
        filterData.clear();
        if (charText.length() == 0) {
            filterData.addAll(listData);
        }else{
            for (RowItem rowItem: listData) {
                if (rowItem.getTitle().toLowerCase().startsWith(charText.toString().toLowerCase()))
                    filterData.add(rowItem);
            }
        }
        notifyDataSetChanged();
    }


    class ViewHolder{
        ImageView imageView;
        ImageView imgarrow;
        TextView txtTitle;
    }
}
</code></pre>

<p>How to apply filter :</p>

<pre><code>et.addTextChangedListener(new TextWatcher() {
    @Override
    public void beforeTextChanged(CharSequence s, int start, int count, int after) {

    }

    @Override
    public void onTextChanged(CharSequence s, int start, int before, int count) {

    }

    @Override
    public void afterTextChanged(Editable s) {
       adapter.filter(s.toString().trim())
    }
 });
</code></pre>
