<p>Main Layout:
           
</p>

<pre><code>&lt;LinearLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical" &gt;

    &lt;LinearLayout
        android:id="@+id/lstFragment1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" &gt;
    &lt;/LinearLayout&gt;


    &lt;LinearLayout
        android:id="@+id/lstFragment2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" &gt;
    &lt;/LinearLayout&gt;
&lt;/LinearLayout&gt;
</code></pre>

<h2></h2>

<p>add fragments in activity:</p>

<pre><code>         addFragment(R.id.lstFragment1, new lstFragment1());
         addFragment(R.id.lstFragment2, new lstFragment2());

         public void addFragment(int layoutId, Fragment fragment) {
           FragmentManager fm = getSupportFragmentManager();
           FragmentTransaction ft = fm.beginTransaction();
           ft.replace(layoutId, fragment);
           ft.commit();}
</code></pre>

<hr>

<p>make custom listview with blocking verticle scrolling..</p>

<pre><code>    public class IjoomerListView extends ListView {

@SuppressWarnings("unused")
private static final int SWIPE_MIN_DISTANCE = 50;
@SuppressWarnings("unused")
private static final int SWIPE_THRESHOLD_VELOCITY = 100;
@SuppressWarnings("unused")
private GestureDetector gDetector;
@SuppressWarnings("unused")
private boolean isFling;

private float mDiffX;
private float mDiffY;
private float mLastX;
private float mLastY;

/**
 * Overrides method
 */
@Override
public boolean onInterceptTouchEvent(MotionEvent ev) {
    switch (ev.getAction()) {
    case MotionEvent.ACTION_DOWN:
        // reset difference values
        mDiffX = 0;
        mDiffY = 0;

        mLastX = ev.getX();
        mLastY = ev.getY();
        break;

    case MotionEvent.ACTION_MOVE:
        final float curX = ev.getX();
        final float curY = ev.getY();
        mDiffX += Math.abs(curX - mLastX);
        mDiffY += Math.abs(curY - mLastY);
        mLastX = curX;
        mLastY = curY;

        // don't intercept event, when user tries to scroll vertically
        if (mDiffX &lt; mDiffY) {
            return false; // do not react to horizontal touch events, these
                            // events will be passed to your list item view
        }
    }

    return super.onInterceptTouchEvent(ev);
}

public IjoomerListView(Context context, AttributeSet attrs, int defStyle) {
    super(context, attrs, defStyle);
    init(context);
}

public IjoomerListView(Context context, AttributeSet attrs) {
    super(context, attrs);
    init(context);
}

public IjoomerListView(Context context) {
    super(context);
    init(context);
}

private void init(Context mContext) {
}
</code></pre>

<p>}</p>
