<p>For this you can use another way which I have used.When you call the  camera intent then it will create a file name under the folder.When you come back into <code>onActivityResult</code> you will get this file name.</p>

<pre><code>        file_image = createImageFile();
        final Intent intent = new Intent(
                "android.media.action.IMAGE_CAPTURE");
        intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(file_image));
        startActivityForResult(intent, GALLERY_INTENT_VIDEO);
</code></pre>

<p>For creating the <code>createImageFile</code> you can use this way</p>

<pre><code>    private File createImageFile() throws IOException {
    final String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss")
            .format(new Date());
    final String imageFileName = JPEG_FILE_PREFIX + timeStamp + "_";
    final File albumF = getAlbumDir();
    final File imageF = File.createTempFile(imageFileName,
            JPEG_FILE_SUFFIX, albumF);
    return imageF;
}

private File getAlbumDir() {
    File storageDir = null;

    if (Environment.MEDIA_MOUNTED.equals(Environment
            .getExternalStorageState())) {
        storageDir = mAlbumStorageDirFactory
                .getAlbumStorageDir(getAlbumName());

        if (storageDir != null) {
            if (!storageDir.mkdirs()) {
                if (!storageDir.exists()) {
                    Log.e("directory", "failed to create directory");
                    return null;
                }
            }
        }

    } else {
        Log.e(getString(R.string.app_name),
                "External storage is not mounted READ/WRITE.");
    }
    return storageDir;
}

private String getAlbumName() {
    return getString(R.string.app_name);
}
</code></pre>

<p>When you call <code>onActivityResult</code> u will get the content</p>

<pre><code>  protected void onActivityResult(int requestCode, int resultCode, Intent data)   {
          // TODO Auto-generated method stub
            super.onActivityResult(requestCode, resultCode, data);
            final Uri selectedImageUri = Uri.fromFile(file_image);}
</code></pre>

<p>Also you will get the all image List into folder which you create from album name.</p>
