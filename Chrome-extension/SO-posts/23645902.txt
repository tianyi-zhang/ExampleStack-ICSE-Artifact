<p>// try this way,hope this will help you...</p>

<p><strong>activity_main.xml</strong>
</p>

<pre><code>&lt;LinearLayout
    android:layout_width="match_parent"
    android:layout_height="0dp"
    android:layout_weight="1"
    android:orientation="vertical"&gt;
    &lt;LinearLayout
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:gravity="center"&gt;
    &lt;ImageView
        android:id="@+id/imgFromCamera"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:adjustViewBounds="true"
        android:src="@drawable/ic_launcher"/&gt;

    &lt;/LinearLayout&gt;
    &lt;Button
        android:id="@+id/btnCamera"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Camera"/&gt;
&lt;/LinearLayout&gt;


&lt;LinearLayout
    android:layout_width="match_parent"
    android:layout_height="0dp"
    android:layout_weight="1"
    android:orientation="vertical"&gt;
    &lt;LinearLayout
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:gravity="center"&gt;
        &lt;ImageView
            android:id="@+id/imgFromGallery"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:adjustViewBounds="true"
            android:src="@drawable/ic_launcher"/&gt;

    &lt;/LinearLayout&gt;
    &lt;Button
        android:id="@+id/btnGallery"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Gallery"/&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p></p>

<p><strong>MainActivity.java</strong></p>

<p>public class MainActivity extends Activity {</p>

<pre><code>private static final int GET_GALLERY_IMAGE = 1;
private static final int GET_CAMERA_IMAGE = 2;
Button btnCamera;
Button btnGallery;
ImageView imgFromGallery;
ImageView imgFromCamera;
private String imgPath;

protected void onCreate(Bundle paramBundle) {
    super.onCreate(paramBundle);
    setContentView(R.layout.activity_main);
    btnGallery = (Button) findViewById(R.id.btnGallery);
    btnCamera = (Button) findViewById(R.id.btnCamera);
    imgFromCamera = (ImageView) findViewById(R.id.imgFromCamera);
    imgFromGallery = (ImageView) findViewById(R.id.imgFromGallery);


    btnGallery.setOnClickListener(new View.OnClickListener() {

        @Override
        public void onClick(View v) {
            Intent intent = new Intent();
            intent.setType("image/*");
            intent.setAction(Intent.ACTION_GET_CONTENT);
            startActivityForResult(Intent.createChooser(intent, ""), GET_GALLERY_IMAGE);
        }
    });

    btnCamera.setOnClickListener(new View.OnClickListener() {

        @Override
        public void onClick(View v) {
            final Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
            intent.putExtra(MediaStore.EXTRA_OUTPUT, setImageUri());
            startActivityForResult(intent, GET_CAMERA_IMAGE);
        }
    });

}

public Uri setImageUri() {
    // Store image in dcim
    File file = new File(Environment.getExternalStorageDirectory() + "/DCIM/", "image" + new Date().getTime() + ".png");
    Uri imgUri = Uri.fromFile(file);
    this.imgPath = file.getAbsolutePath();
    return imgUri;
}

public String getImagePath() {
    return imgPath;
}

protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if (resultCode == Activity.RESULT_OK) {
        if (requestCode == GET_GALLERY_IMAGE) {
            imgFromGallery.setImageBitmap(decodeFile(getAbsolutePath(data.getData())));
        } else if (requestCode == GET_CAMERA_IMAGE) {
            imgFromCamera.setImageBitmap(decodeFile(getImagePath()));
        }
    }

}

public String getAbsolutePath(Uri uri) {
    if(Build.VERSION.SDK_INT &gt;= 19){
        String id = uri.getLastPathSegment().split(":")[1];
        final String[] imageColumns = {MediaStore.Images.Media.DATA };
        final String imageOrderBy = null;
        Uri tempUri = getUri();
        Cursor imageCursor = getContentResolver().query(tempUri, imageColumns,
                MediaStore.Images.Media._ID + "="+id, null, imageOrderBy);
        if (imageCursor.moveToFirst()) {
            return imageCursor.getString(imageCursor.getColumnIndex(MediaStore.Images.Media.DATA));
        }else{
            return null;
        }
    }else{
        String[] projection = { MediaStore.MediaColumns.DATA };
        Cursor cursor = getContentResolver().query(uri, projection, null, null, null);
        if (cursor != null) {
            int column_index = cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DATA);
            cursor.moveToFirst();
            return cursor.getString(column_index);
        } else
            return null;
    }

}

private Uri getUri() {
    String state = Environment.getExternalStorageState();
    if(!state.equalsIgnoreCase(Environment.MEDIA_MOUNTED))
        return MediaStore.Images.Media.INTERNAL_CONTENT_URI;

    return MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
}

public Bitmap decodeFile(String path) {
    try {
        // Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inJustDecodeBounds = true;
        BitmapFactory.decodeFile(path, o);
        // The new size we want to scale to
        final int REQUIRED_SIZE = 1024;

        // Find the correct scale value. It should be the power of 2.
        int scale = 1;
        while (o.outWidth / scale / 2 &gt;= REQUIRED_SIZE &amp;&amp; o.outHeight / scale / 2 &gt;= REQUIRED_SIZE)
            scale *= 2;

        // Decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options();
        o2.inSampleSize = scale;
        return BitmapFactory.decodeFile(path, o2);
    } catch (Throwable e) {
        e.printStackTrace();
    }
    return null;
}
}
</code></pre>

<p><strong>AndroidManifest.xml</strong> please replace "com.example.Demo" with your "package-name"</p>

<p></p>

<pre><code>&lt;uses-sdk android:minSdkVersion="8"
    android:targetSdkVersion="17"/&gt;


&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;

&lt;application
    android:label="@string/app_name"
    android:icon="@drawable/ic_launcher"&gt;
    &lt;activity
        android:name=".MainActivity"
        android:windowSoftInputMode="stateHidden|adjustResize"
        android:label="@string/app_name"&gt;
        &lt;intent-filter&gt;
            &lt;action android:name="android.intent.action.MAIN" /&gt;
            &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;
&lt;/application&gt;
</code></pre>

<p></p>
