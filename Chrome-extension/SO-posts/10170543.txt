<p>If you read the code you can see that every pixel in src gets first converted to grayscale [0-255]
This value is converted back to a color pixel by using the grayscale value as a base and adding depth*color.</p>

<p>So if you want to give a bitmap a green tint do it like this:</p>

<pre><code>Bitmap result = createEffect(src,50,0,1,0);
</code></pre>

<p>this will make the bitmap greener.</p>

<p>To invert the colors (like in your last exmaple) use this (untested) function:</p>

<pre><code>public Bitmap invert(Bitmap src) {
    // image size
    int width = src.getWidth();
    int height = src.getHeight();
    // create output bitmap
    Bitmap bmOut = Bitmap.createBitmap(width, height, src.getConfig());
    // color information
    int A, R, G, B;
    int pixel;

    // scan through all pixels
    for(int x = 0; x &lt; width; ++x) {
        for(int y = 0; y &lt; height; ++y) {
            // get pixel color
            pixel = src.getPixel(x, y);
            // get color on each channel
            A = Color.alpha(pixel);
            R = Color.red(pixel);
            G = Color.green(pixel);
            B = Color.blue(pixel);
            // set new pixel color to output image
            bmOut.setPixel(x, y, Color.argb(A, 255-R, 255-G, 255-B));
        }
    }

    // return final image
    return bmOut;
}
</code></pre>
