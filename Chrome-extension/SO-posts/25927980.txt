<p>If you want to try the basic one : you can use this one </p>

<pre><code>package yarn;

import org.apache.hadoop.hive.ql.exec.UDFArgumentException;
import org.apache.hadoop.hive.ql.exec.UDFArgumentLengthException;
import org.apache.hadoop.hive.ql.exec.UDFArgumentTypeException;
import org.apache.hadoop.hive.ql.metadata.HiveException;
import org.apache.hadoop.hive.ql.udf.generic.GenericUDF;
import org.apache.hadoop.hive.ql.udf.generic.GenericUDFUtils;
import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;

public class GenericUDFNvl extends GenericUDF {
private GenericUDFUtils.ReturnObjectInspectorResolver returnOIResolver;
private ObjectInspector[] argumentOIs;
@Override
public ObjectInspector initialize(ObjectInspector[] arguments)
throws UDFArgumentException {
 argumentOIs = arguments;
 if (arguments.length != 2) {
 throw new UDFArgumentLengthException(
 "The operator 'NVL' accepts 2 arguments.");
 }
 returnOIResolver = new GenericUDFUtils.ReturnObjectInspectorResolver(true);
 if (!(returnOIResolver.update(arguments[0]) &amp;&amp; returnOIResolver
 .update(arguments[1]))) {
 throw new UDFArgumentTypeException(2,
 "The 1st and 2nd args of function NLV should have the same type, "
 + "but they are different: \"" + arguments[0].getTypeName()
 + "\" and \"" + arguments[1].getTypeName() + "\"");
 }
 return returnOIResolver.get();
 }
 @Override
 public Object evaluate(DeferredObject[] arguments) throws HiveException {
    // TODO Auto-generated method stub
    Object retVal = returnOIResolver.convertIfNecessary(arguments[0].get(),
            argumentOIs[0]);
            if (retVal == null ){
            retVal = returnOIResolver.convertIfNecessary(arguments[1].get(),
            argumentOIs[1]);
            }
            return retVal;


}
@Override

    public String getDisplayString(String[] children) {
        StringBuilder sb = new StringBuilder();
        sb.append("if ");
        sb.append(children[0]);
        sb.append(" is null ");
        sb.append("returns");
        sb.append(children[1]);
        return sb.toString() ;
        }

public static void main(String[] args) {

}
}
</code></pre>

<p>You will have to pass 2 arguments what it does if your first argument is not null ,then it would print the first argument,if first argument is null then it would print the second argument </p>

<pre><code>select nvl(movie_title,"test") from u_item_test1; 
</code></pre>

<p>if movie_tittle is there then that movie_tittle ,if not then test would be printed </p>
