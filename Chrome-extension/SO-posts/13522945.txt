<p>In my <code>AppWidgetProvider</code> class, the following works for me on 4.1.2 (provided you only want it to work on 4.x - otherwise you will need conditional logic to select the right package and class names for the appropriate version, like in the post you linked to):</p>

<pre><code>public void onReceive(Context context, Intent intent) {
    String action = intent.getAction();
    PendingIntent pendingIntent;
    if (AppWidgetManager.ACTION_APPWIDGET_UPDATE.equals(action)) {
        RemoteViews views = new RemoteViews(context.getPackageName(),
                R.layout.main);
        pendingIntent = PendingIntent.getActivity(context, 0,
                getAlarmPackage(context), 0);
        views.setOnClickPendingIntent(R.id.analogClock1, pendingIntent);

        AppWidgetManager
                .getInstance(context)
                .updateAppWidget(
                        intent.getIntArrayExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS),
                        views);
    }
}

private Intent getAlarmPackage(Context context) {
    PackageManager manager = context.getPackageManager();
    Intent intent = new Intent(Intent.ACTION_MAIN)
            .addCategory(Intent.CATEGORY_LAUNCHER);

    try {
        ComponentName c = new ComponentName("com.google.android.deskclock",
                "com.android.deskclock.AlarmClock");
        manager.getActivityInfo(c, PackageManager.GET_META_DATA);
        intent.setComponent(c);
    } catch (NameNotFoundException nf) {
        Log.d("XXXX", "Caught name not found exception!");
    }

    return intent;
}
</code></pre>

<p>Basically, using <code>com.android.deskclock.AlarmClock</code> (with <code>com.google.android.deskclock</code>) instead of <code>com.android.deskclock.DeskClock</code> produces the Alarms list instead of the Alarm clock screen.</p>
