<p>You don't set the the ID, it is assigned by Google Drive at creation. The ID you are talking about is the string you see when you go to <em>drive.google.com</em>, right-click an object (folder/file), and select 'Get link'. You get something like:  </p>

<blockquote>
  <p><a href="https://drive.google.com/open?id=0B1blahblahblahblahfdR25i" rel="nofollow">https://drive.google.com/open?id=0B1blahblahblahblahfdR25i</a></p>
</blockquote>

<p>and the string '<strong>0B1blahblahblahblahfdR25i</strong>' is the ID.</p>

<p>Test it. Get it from your <em>drive.google.com</em>, go to the <a href="https://developers.google.com/drive/v2/reference/files/get" rel="nofollow">bottom this page - TryIt!</a>, paste the <em>0B1blahblahblahblahfdR25i</em> into the <em>fileId</em> field.</p>

<p>Back to your problem. You are apparently trying to create a file, try this:</p>

<pre><code>com.google.api.services.drive.Drive mGOOSvc:
...
/**************************************************************************
   * create file in GOODrive
   * @param prnId  parent's ID, (null or "root") for root
   * @param titl  file name
   * @param mime  file mime type
   * @param file  file (with content) to create
   * @return      file id  / null on fail
   */
  static String createFile(String prnId, String titl, String mime, java.io.File file) {
    String rsId = null;
    if (mGOOSvc != null &amp;&amp; mConnected &amp;&amp; titl != null &amp;&amp; mime != null &amp;&amp; file != null) try {
      File meta = new File();
      meta.setParents(Arrays.asList(new ParentReference().setId(prnId == null ? "root" : prnId)));
      meta.setTitle(titl);
      meta.setMimeType(mime);

      File gFl = mGOOSvc.files().insert(meta, new FileContent(mime, file)).execute();
      if (gFl != null)
        rsId = gFl.getId();
    } catch (Exception e) { UT.le(e); }
    return rsId;  
  } 
</code></pre>

<p>The return, the <strong><em>rsId</em></strong> is the ID you're looking for.  </p>

<p>It is taken from an <a href="https://github.com/seanpjanson/RESTDemo/blob/master/app/src/main/java/com/spjanson/restdemo/REST.java" rel="nofollow">Android demo here</a> (to explain the context), but the Api calls there should be pretty much the same. You can actually pull some CRUD primitives out of there.</p>

<p>Good Luck</p>
