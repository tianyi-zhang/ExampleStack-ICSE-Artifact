<p>You can check this way as well,</p>

<pre><code>public String getRemoteIpAddress(HttpServletRequest req) {      
 String ip = req.getHeader("x-forwarded-for");      
  if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {      
     ip = req.getHeader("Proxy-Client-IP");      
  }      
    if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {      
     ip = req.getHeader("WL-Proxy-Client-IP");      
  }      
  if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {      
      ip = req.getRemoteAddr();      
  }      
  return ip;      
}   
</code></pre>

<p>if user is behind a proxy server or access your web server through a load balancer (for example, in cloud hosting), the above code will get the IP address of the proxy server or load balancer server, not the original IP address of a client.</p>

<p>To solve it, you should get the IP address of the request’s HTTP header “X-Forwarded-For (XFF)“.</p>

<pre><code> //is client behind something?
 String ipAddress = request.getHeader("X-FORWARDED-FOR");  
 if (ipAddress == null) {  
     ipAddress = request.getRemoteAddr();  
 }
</code></pre>
