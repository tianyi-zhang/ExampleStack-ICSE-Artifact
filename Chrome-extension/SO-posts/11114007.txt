<p>Sometimes getting an overflow on the integer may be unsuitable to your needs. I say this as sometimes. I still have yet to encounter this situation but I would like to prevent it.</p>

<p>I'll paste you the code I use to generate a hashcode. I usually do it by taking all vars from an object and convert them to strings and do my calculations.</p>

<pre><code>public static int generateHashCode(String ... args)
{
    int length = 0;
    char[] cArray = null;
    if(args.length == 1) {
        length = args[0].length();
        cArray = args[0].toCharArray();
    }
    else {
        for(int i = 0; i &lt; args.length; i++) {
            length += args[i].length();
        }

        cArray = new char[length];
        int incrementer = 0;
        for(int i = 0; i &lt; args.length; i++) {
            String str = args[i];
            for(int j = 0; j &lt; str.length(); j++) {
                cArray[incrementer] = str.charAt(j);
                ++incrementer;
            }
        }
    }

    int h = 0;
    for (int i = 0; i &lt; cArray.length; i++) {
        h = 31*h + cArray[i];
    }

    return h;
}
</code></pre>
