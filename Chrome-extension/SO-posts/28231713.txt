<p>FYI, Here is how Google did it:</p>

<p>Excerpted from <a href="http://mytracks.googlecode.com/hg/MyTracks/src/com/google/android/apps/mytracks/util/Api11Adapter.java" rel="nofollow">http://mytracks.googlecode.com/hg/MyTracks/src/com/google/android/apps/mytracks/util/Api11Adapter.java</a></p>

<pre><code>/**
* Gets the checked positions in a list view.
* 
* @param list the list view
*/
private int[] getCheckedPositions(ListView list) {
    SparseBooleanArray positions  = list.getCheckedItemPositions();
    ArrayList&lt;Integer&gt; arrayList = new ArrayList&lt;Integer&gt;();
    for (int i = 0; i &lt; positions.size(); i++) {
        int key = positions.keyAt(i);
        if (positions.valueAt(i)) {
            arrayList.add(key);
        }
    }
    int[] result = new int[arrayList.size()];
    for (int i = 0; i &lt; arrayList.size(); i++) {
        result[i] = arrayList.get(i);
    }
    return result;
}
</code></pre>

<p>and here is my adapted version:</p>

<pre><code>public static List&lt;Integer&gt; getAbsListViewCheckedItemPositions(AbsListView absListView) {
    SparseBooleanArray checked  = absListView.getCheckedItemPositions();
    List&lt;Integer&gt; positions = new ArrayList&lt;&gt;();
    int checkedSize = checked.size();
    for (int i = 0; i &lt; checkedSize; i++) {
        if (checked.valueAt(i)) {
            positions.add(checked.keyAt(i));
        }
    }
    return positions;
}
</code></pre>
