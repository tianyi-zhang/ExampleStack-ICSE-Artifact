<p>From the older answers and my own tests I ended using this:</p>

<p>launching contact list:</p>

<pre><code>import android.content.Intent;
import android.provider.ContactsContract;
import android.provider.ContactsContract.CommonDataKinds.Phone;
</code></pre>

<p>...</p>

<pre><code>public static final int PICK_CONTACT = 100;
</code></pre>

<p>...</p>

<pre><code>Intent intent = new Intent(Intent.ACTION_PICK, ContactsContract.Contacts.CONTENT_URI);
intent.setType(Phone.CONTENT_TYPE);  //should filter only contacts with phone numbers
startActivityForResult(intent, PICK_CONTACT);
</code></pre>

<p>onActivityResult handler:</p>

<pre><code>private static final String[] phoneProjection = new String[] { Phone.DATA };

@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if (PICK_CONTACT != requestCode || RESULT_OK != resultCode) return;
    Uri contactUri = data.getData();
    if (null == contactUri) return;
    //no tampering with Uri makes this to work without READ_CONTACTS permission
    Cursor cursor = getContentResolver().query(contactUri, phoneProjection, null, null, null);
    if (null == cursor) return;
    try {
        while (cursor.moveToNext()) {
            String number = cursor.getString(0);
            // ... use "number" as you wish
        }
    } finally {
        cursor.close();
    }
    // "cursor" is closed here already
}
</code></pre>

<p>So what are the differences from Rizvan answer?</p>

<p>On my testing device (Samsung S3):</p>

<ul>
<li>the app does <strong>NOT</strong> need <code>READ_CONTACS</code> permission (because I use the returned <code>uri</code> as is, when I use only the "id" of it and create select ID=? query type, the permission crash happens)</li>
<li>when contact has multiple phone numbers, the picker itself does show dialog to select only one of them, then it returns <code>uri</code> which leads directly to that single selected number</li>
<li>even if some phone would return <code>uri</code> to multiple numbers, the proposed onActivityResult handler can be extended to read them all and you can do your own selection dialog.</li>
</ul>

<p>So this looks to me like perfect fit for what OP asked.</p>

<p>Now I just wonder:</p>

<ol>
<li>on which phones this will require the <code>READ_CONTACTS</code> permission (it should not, according to <a href="http://developer.android.com/guide/topics/providers/content-provider-basics.html#Intents">http://developer.android.com/guide/topics/providers/content-provider-basics.html#Intents</a> )</li>
<li>on which phones it will return multiple numbers instead of doing the selection dialog</li>
</ol>

<p>Let me know if you have real world experience with it, thanks.</p>

<p>Update:
HTC Desire S, custom rom with android 4.0.3 -> has both problems, requires READ_CONTACTS permission to work, and will return multiple numbers without additional selection dialog.</p>
