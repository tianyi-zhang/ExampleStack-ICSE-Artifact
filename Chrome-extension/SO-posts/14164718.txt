<p>You want to convert your <code>char[]</code> to a <code>String</code>. When you envoke tb_pwd.getPassword() a char[] (character array) is returned. If you want to compare this password you must convert it to a String, and for this you can use this method:</p>

<pre><code>String final_pass = "";
for(char x : passwordAsChar[]) {
     final_pass += x;
}
</code></pre>

<p>As for comparing passwords in databases you should never store them in plain-text, unencrypted. You could store an MD5 string in your database, and the convert your password inputted by the user to a String, and then envoke the following method on it. Then compare the returned String with the one from the database. If they match, the user has entered a correct password.</p>

<p>Example:</p>

<pre><code>char[] pass = tb_pwd.getPassword();
String final_pass = "";
for (char x : pass) {
    final_pass += x;
}

String md5_encrypted_pass_userInput = encrypt(final_pass);
if (md5_encrypted_pass.equals(pass1)) { /* pass1 = the password from the database */
    // Correct password
}
</code></pre>

<p>A method to use for encrypting Strings to MD5 is:</p>

<pre><code>public static final String encrypt(String md5) {
    try {
        java.security.MessageDigest md = java.security.MessageDigest.getInstance("MD5");
        byte[] array = md.digest(md5.getBytes());
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i &lt; array.length; ++i) {
          sb.append(Integer.toHexString((array[i] &amp; 0xFF) | 0x100).substring(1,3));
       }
        return sb.toString();
    } catch (java.security.NoSuchAlgorithmException e) {}
    return null;
}
</code></pre>
