<p>try this.. i fetch the icon from the sd card directory ..icon from the apk files which are not installed ...</p>

<pre><code>    public class A extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.app_listing);
        ListView list = (ListView) findViewById(R.id.app_listing);
        ArrayList&lt;PackageInfoStruct&gt; listData = getApks();
        list.setAdapter(new TestAdapter(listData, A.this));

    }

    class PackageInfoStruct {
        String appname = "";
        String pname = "";
        String versionName = "";
        int versionCode = 0;
        Drawable icon;
        String datadir = "";
    }

    public ArrayList&lt;PackageInfoStruct&gt; res;

    private ArrayList&lt;PackageInfoStruct&gt; getApks() {
        try {
            String path = Environment.getExternalStorageDirectory() + "/test";
            File file = new File(path);
            String[] list = file.list();
            res = new ArrayList&lt;PackageInfoStruct&gt;();
            for (String str : list) {
                String not_installed_apk_file = path + "/" + str;
                PackageManager pm = getPackageManager();
                PackageInfo pi = pm.getPackageArchiveInfo(
                        not_installed_apk_file, 0);
                if (pi == null)
                    continue;
                // the secret are these two lines....
                pi.applicationInfo.sourceDir = not_installed_apk_file;
                pi.applicationInfo.publicSourceDir = not_installed_apk_file;
                //
                Drawable APKicon = pi.applicationInfo.loadIcon(pm);
                String AppName = (String) pi.applicationInfo.loadLabel(pm);
                PackageInfoStruct pack = new PackageInfoStruct();
                pack.icon = APKicon;
                pack.pname = AppName;
                res.add(pack);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return res;
    }

    private ArrayList&lt;PackageInfoStruct&gt; getInstalledApps() {
        try {
            res = new ArrayList&lt;PackageInfoStruct&gt;();
            List&lt;PackageInfo&gt; packs = getPackageManager().getInstalledPackages(
                    0);

            for (int i = 0; i &lt; packs.size(); i++) {
                PackageInfo p = packs.get(i);

                PackageInfoStruct newInfo = new PackageInfoStruct();
                newInfo.appname = p.applicationInfo.loadLabel(
                        getPackageManager()).toString();
                newInfo.pname = p.packageName;
                newInfo.datadir = p.applicationInfo.dataDir;
                newInfo.versionName = p.versionName;
                newInfo.versionCode = p.versionCode;
                newInfo.icon = p.applicationInfo.loadIcon(this
                        .getPackageManager());
                res.add(newInfo);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return res;
    }

}
</code></pre>
