<p>You need the <code>new int[][]</code> as such:</p>

<pre><code>sudokuGrid = new int[][] {...};
</code></pre>

<p>I don't think(?) it even compiles otherwise.  You can only use the <code>= {...}</code> when declaring a variable, not reassigning one.</p>

<p>Final:</p>

<pre><code>public void resetGrid(){
    sudokuGrid = new int[][] {{2,4,0,6,8,0,3,0,0}, 
        {0,0,0,0,0,0,9,0,0}, 
        {6,5,0,0,1,0,0,8,7},
        {0,0,0,0,0,7,0,9,8},
        {9,3,2,5,0,8,7,1,4},
        {7,1,0,4,0,0,0,0,0},
        {4,9,0,0,7,0,0,2,5},
        {0,0,5,0,0,0,0,0,0},
        {0,0,1,0,4,5,0,7,3}};
}
</code></pre>

<p><strong>Edit after comments</strong>:</p>

<p>Ok edit totally off the top of my head without really think about it.  Have a static final array of "defaults" and use it to reset the array you modify:</p>

<pre><code>static final int[][] defaultGrid = new int[][] {{2,4,0,6,8,0,3,0,0}, 
        {0,0,0,0,0,0,9,0,0}, 
        {6,5,0,0,1,0,0,8,7},
        {0,0,0,0,0,7,0,9,8},
        {9,3,2,5,0,8,7,1,4},
        {7,1,0,4,0,0,0,0,0},
        {4,9,0,0,7,0,0,2,5},
        {0,0,5,0,0,0,0,0,0},
        {0,0,1,0,4,5,0,7,3}};

...

// This will reset the grid to whatever is in defaultGrid
// assuming they have the same lengths
for (int i = 0; i = sudokuGrid.length; i++) {
   for (int y = 0; y = sudokuGrid[y].length; y++) {
      sudokuGrid[i][y] = defaultGrid[i][y];
   }
}
</code></pre>
