<p>You can download a kml file with the path between two points with this code:</p>

<pre><code>public static Document getKml(GeoPoint src, GeoPoint dest) {
        // connect to map web service
        StringBuilder urlString = new StringBuilder();
        urlString.append("http://maps.google.com/maps?f=d&amp;hl=en");
        urlString.append("&amp;saddr=");// from
        urlString.append(Double.toString((double) src.getLatitudeE6() / 1.0E6));
        urlString.append(",");
        urlString
                .append(Double.toString((double) src.getLongitudeE6() / 1.0E6));
        urlString.append("&amp;daddr=");// to
        urlString
                .append(Double.toString((double) dest.getLatitudeE6() / 1.0E6));
        urlString.append(",");
        urlString
                .append(Double.toString((double) dest.getLongitudeE6() / 1.0E6));
        urlString.append("&amp;ie=UTF8&amp;0&amp;om=0&amp;output=kml");
        // Log.d("xxx","URL="+urlString.toString());
        // get the kml (XML) doc. And parse it to get the coordinates(direction
        // route).

        HttpURLConnection urlConnection = null;
        URL url = null;

        try {
            url = new URL(urlString.toString());
            urlConnection = (HttpURLConnection) url.openConnection();
            urlConnection.setRequestMethod("GET");
            urlConnection.setDoOutput(true);
            urlConnection.setDoInput(true);
            urlConnection.connect();

            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = dbf.newDocumentBuilder();
            return db.parse(urlConnection.getInputStream());
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            return null;
        }
    }
</code></pre>

<p>Then ip's up to you to parse it and display it on a Map ;-)</p>

<p>Hint:</p>

<pre><code>    if (doc != null
            &amp;&amp; doc.getElementsByTagName("GeometryCollection").getLength() &gt; 0) {

        // String path =
        // doc.getElementsByTagName("GeometryCollection").item(0).getFirstChild().getFirstChild().getNodeName();
        String path = doc.getElementsByTagName("GeometryCollection")
                .item(0).getFirstChild().getFirstChild().getFirstChild()
                .getNodeValue();
        // //Log.d("xxx","path="+ path);
        String[] pairs = path.split(" ");
        String[] lngLat = pairs[0].split(","); // lngLat[0]=longitude
</code></pre>
