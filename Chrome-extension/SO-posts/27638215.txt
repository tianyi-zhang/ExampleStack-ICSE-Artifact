<p>I think I can answer this question now, I met the same problem and after I change <code>ImageFormat.JPEG</code> to <code>PixelFormat.RGBA_8888</code> everything goes well. It seems ImageFormat.JPEG is not supported. </p>

<p>You need to use the following code to get the correct bitmap:</p>

<pre><code>                    int width = img.getWidth();
                    int height = img.getHeight();
                    int pixelStride = planes[0].getPixelStride();
                    int rowStride = planes[0].getRowStride();
                    int rowPadding = rowStride - pixelStride * width;
                    byte[] newData = new byte[width * height * 4];

                    int offset = 0;
                    bitmap = Bitmap.createBitmap(metrics,width, height, Bitmap.Config.ARGB_8888);
                    ByteBuffer buffer = planes[0].getBuffer();
                    for (int i = 0; i &lt; height; ++i) {
                        for (int j = 0; j &lt; width; ++j) {
                            int pixel = 0;
                            pixel |= (buffer.get(offset) &amp; 0xff) &lt;&lt; 16;     // R
                            pixel |= (buffer.get(offset + 1) &amp; 0xff) &lt;&lt; 8;  // G
                            pixel |= (buffer.get(offset + 2) &amp; 0xff);       // B
                            pixel |= (buffer.get(offset + 3) &amp; 0xff) &lt;&lt; 24; // A
                            bitmap.setPixel(j, i, pixel);
                            offset += pixelStride;
                        }
                        offset += rowPadding;
                    }
</code></pre>

<p>From this way, the content of bitmap is what you want.</p>

<p>PS: I really want to say, the doc of android is pretty bad. we need to investigate too much detail to use sdk api correctly.</p>
