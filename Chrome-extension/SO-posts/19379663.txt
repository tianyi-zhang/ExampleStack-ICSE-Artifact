<p>As we can see in source code of hibernate :  </p>

<pre><code>public UpdateLockingStrategy(Lockable lockable, LockMode lockMode) {

    this.lockable = lockable;

    this.lockMode = lockMode;

    if (lockMode.lessThan(LockMode.UPGRADE)) {

        throw new HibernateException("[" + lockMode + "] not valid for update statement");

    }

    if (!lockable.isVersioned()) {

        log.warn("write locks via update not supported for non-versioned entities [" + lockable.getEntityName() + "]");

        this.sql = null;

    } else {
        this.sql = generateLockString();

    }
}
</code></pre>

<p>and the document of isVersioned() :</p>

<pre><code>/**
 * Determine whether optimistic locking by column is enabled for this
 * entity.
 *
 * @return True if optimistic locking by column (i.e., &lt;version/&gt; or
 * &lt;timestamp/&gt;) is enabled; false otherwise.
 */
public boolean isVersioned();  
</code></pre>

<p>The consequence is if you want to use audit entity and don't give this warning , <strong>you should enable optimistic locking by @Version on a column of your entity</strong> :)</p>
