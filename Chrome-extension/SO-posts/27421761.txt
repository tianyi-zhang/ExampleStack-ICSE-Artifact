<p>I solved by following these steps:</p>

<pre><code>   public static String TimezoneUrl = "https://maps.googleapis.com/maps/api/timezone/json?";

   API_KEY="Your API service key";
   newurl = TimezoneUrl + "location=" + myLatitude + "," + myLongitude + "&amp;timestamp=" + System.currentTimeMillis() / 1000 + "&amp;key=" + API_KEY;
   response = makeServiceCall(url, ServiceHandler.GET);

   jsonResponse = new JSONObject(response);
   timesone = jsonResponse.getString("timeZoneName");


   for (int i = 0; i &lt; timesone.length(); i++) {
            if (Character.isUpperCase(timesone.charAt(i))) {
                char c = timesone.charAt(i);
                timezone = timezone + c;
        }
   }

 public String makeServiceCall(String url, int method) {
    return this.makeServiceCall(url, method, null);
 }


public String makeServiceCall(String url, int method,
        List&lt;NameValuePair&gt; params) {
    try {
        // http client
        DefaultHttpClient httpClient = new DefaultHttpClient();

        //httpClient.getParams().setParameter(CoreProtocolPNames.USER_AGENT, "Custom user agent");
        HttpEntity httpEntity = null;
        HttpResponse httpResponse = null;

        // Checking http request method type
         if (method == GET) {
            // appending params to url
            if (params != null) {
                String paramString = URLEncodedUtils    .format(params, "utf-8");
                url += "?" + paramString;
            }
            HttpGet httpGet = new HttpGet(url);

            httpResponse = httpClient.execute(httpGet);

        }
        httpEntity = httpResponse.getEntity();
        response = EntityUtils.toString(httpEntity);

    } catch (UnsupportedEncodingException e) {
        e.printStackTrace();
    } catch (ClientProtocolException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }

    return response;

}
</code></pre>

<p>Then you can get the answer as: <code>IST</code></p>
