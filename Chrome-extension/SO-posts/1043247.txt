<p>Use the estimate</p>

<pre><code>pi(n) = n / log(n)
</code></pre>

<p>for the number of primes up to n to find a limit, and then use a sieve. The estimate underestimates the number of primes up to n somewhat, so the sieve will be slightly larger than necessary, which is ok.</p>

<p>This is my standard Java sieve, computes the first million primes in about a second on a normal laptop:</p>

<pre><code>public static BitSet computePrimes(int limit)
{
    final BitSet primes = new BitSet();
    primes.set(0, false);
    primes.set(1, false);
    primes.set(2, limit, true);
    for (int i = 0; i * i &lt; limit; i++)
    {
        if (primes.get(i))
        {
            for (int j = i * i; j &lt; limit; j += i)
            {
                primes.clear(j);
            }
        }
    }
    return primes;
}
</code></pre>
