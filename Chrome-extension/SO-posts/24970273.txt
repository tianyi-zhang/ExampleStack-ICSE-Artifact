<p>i will use like that..  </p>

<pre><code>public class list extends Activity {

private ListView list;
private Button add ;
private Dialog dialog;
private ListViewAdapter adapter;
private ArrayList&lt;String&gt; listData;


public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.list_item);

   list = (ListView)findViewById(R.id.listview1);
   add = (Button)findViewById(R.id.btn_Addd);

   listData = new ArrayList&lt;String&gt;();
   add.setOnClickListener(new OnClickListener() {

    @Override
    public void onClick(View v) {
        AddSMS();

    }
});


   list.setAdapter(adapter);

}

public void AddSMS(){
    dialog = new Dialog(this);
    dialog.setContentView(R.layout.popup1);
    dialog.setTitle("Add Your SMS");
    final EditText et = (EditText)dialog.findViewById(R.id.editText11);
    Button close = (Button)dialog.findViewById(R.id.btn_clss);
    close.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            dialog.dismiss();

        }
    });
    Button save = (Button)dialog.findViewById(R.id.btn_svv);
    save.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            if (et.getText().toString().trim().length()&gt;0){
                listData.add(et.getText().toString());
                adapter = new ListViewAdapter(list.this, listData);
                list.setAdapter(adapter);
                dialog.dismiss();

            }else {
                et.setError("Value Required");
            }

        } 
    });
    dialog.show();
}
 class ListViewAdapter extends BaseAdapter {

        private Context context;
        private ArrayList&lt;String&gt; data;
        private ArrayList&lt;String&gt; filterData;


        public ListViewAdapter(Context context,ArrayList&lt;String&gt; data) {
            this.context = context;
            this.data = data;
            filterData =new ArrayList&lt;String&gt;();
            filterData.addAll(this.data);
        }

        public class ViewHolder {
            TextView txttt;
        }


        @Override
        public int getCount() {
            return filterData.size();
        }

        @Override
        public Object getItem(int position) {
            return filterData.get(position);
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        public View getView(final int position, View view, ViewGroup parent) {
            final ViewHolder holder;
            if (view == null) {
                holder = new ViewHolder();
                view = LayoutInflater.from(context).inflate(R.layout.list_double, null);
                holder.txttt = (TextView) view.findViewById(R.id.txttt);
                view.setTag(holder);
            } else {
                holder = (ViewHolder) view.getTag();
            }
            holder.txttt.setText(filterData.get(position));
            return view;
        }

        public void filter(String charText) {
            filterData.clear();
            if (charText.length() == 0) {
                filterData.addAll(data);
            }else{
                for (String Detail : data){
                    if (Detail.toLowerCase().contains(charText.toLowerCase())){
                        filterData.add(Detail);
                    }
                }
            }
            notifyDataSetChanged();
        }

    }
}
</code></pre>
