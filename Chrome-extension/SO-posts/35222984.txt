<p>please check this tutorial I found.
Seems to work pretty good <a href="https://medium.com/@dbottillo/android-ui-test-espresso-matcher-for-imageview-1a28c832626f#.4snjg8frw" rel="nofollow">https://medium.com/@dbottillo/android-ui-test-espresso-matcher-for-imageview-1a28c832626f#.4snjg8frw</a></p>

<p>Here is the summary  for copy pasta ;-)</p>

<pre><code>public class DrawableMatcher extends TypeSafeMatcher&lt;View&gt; {

    private final int expectedId;
    String resourceName;

    public DrawableMatcher(int expectedId) {
        super(View.class);
        this.expectedId = expectedId;
    }

    @Override
    protected boolean matchesSafely(View target) {
        if (!(target instanceof ImageView)){
            return false;
        }
        ImageView imageView = (ImageView) target;
        if (expectedId &lt; 0){
            return imageView.getDrawable() == null;
        }
        Resources resources = target.getContext().getResources();
        Drawable expectedDrawable = resources.getDrawable(expectedId);
        resourceName = resources.getResourceEntryName(expectedId);

        if (expectedDrawable == null) {
            return false;
        }

        Bitmap bitmap = ((BitmapDrawable) imageView.getDrawable()).getBitmap();
        Bitmap otherBitmap = ((BitmapDrawable) expectedDrawable).getBitmap();
        return bitmap.sameAs(otherBitmap);
    }


    @Override
    public void describeTo(Description description) {
        description.appendText("with drawable from resource id: ");
        description.appendValue(expectedId);
        if (resourceName != null) {
            description.appendText("[");
            description.appendText(resourceName);
            description.appendText("]");
        }
    }
}
</code></pre>

<p>Please be aware that this only works when your <code>Drawable</code> is a <code>BitmapDrawable</code>. If you also have <code>VectorDrawable</code> or other <code>Drawable</code> you have to check for this (<code>imageView.getDrawable() instanceOf XXXDrawable</code>) and get the bitmap out of it. Except you have some kind of simple Drawable where you just have one color or so you can compare.</p>

<p>To get the Bitmap of a VectorDrawable for example you have to draw the VectorDrawable to a canvas and save it to a bitmap (I had some trouble when the VectorDrawable was tinted). 
If you have a StateListDrawable you can get the Drawable of the selected state and repeat your if instanceOf cascade.
For other Drawable types I don't have any experience, sorry!</p>
