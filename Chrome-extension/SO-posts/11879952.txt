<p>I had to create my own view and extend ImageView, then override OnMeasure method, with the help of <a href="http://stackoverflow.com/questions/7420060/make-children-of-horizontalscrollview-as-big-as-the-screen">THIS</a> question:</p>

<pre><code>public class myImageView extends ImageView {

    public myImageView(Context context) {
        super(context);
        // TODO Auto-generated constructor stub
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        MeasureSpec.getSize(widthMeasureSpec);
        MeasureSpec.getSize(heightMeasureSpec);
        setMeasuredDimension(measureWidth(widthMeasureSpec), measureHeight(heightMeasureSpec));

        setLayoutParams(new LinearLayout.LayoutParams(measureWidth(widthMeasureSpec), measureHeight(heightMeasureSpec)));

        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
    }

    public int measureWidth(int measureSpec) {
        int result = 0;
        int specMode = MeasureSpec.getMode(measureSpec);
        int specSize = MeasureSpec.getSize(measureSpec);
        Display display = ((WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
        int screenWidth = display.getWidth();

        if (specMode == MeasureSpec.EXACTLY)
            // We were told how big to be
            result = specSize;
        else {
            // Measure the view
            result = screenWidth;
            if (specMode == MeasureSpec.AT_MOST)
                // Respect AT_MOST value if that was what is called for by measureSpec
                result = Math.min(result, specSize);
        }

        return result;
    }

    public int measureHeight(int measureSpec) {
        int result = 0;
        int specMode = MeasureSpec.getMode(measureSpec);
        int specSize = MeasureSpec.getSize(measureSpec);
        Display display = ((WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
        int screenHeight = display.getHeight();

        if (specMode == MeasureSpec.EXACTLY)
            // We were told how big to be
            result = specSize;
        else {
            // Measure the view
            result = screenHeight;
            if (specMode == MeasureSpec.AT_MOST)
                // Respect AT_MOST value if that was what is called for by measureSpec
                result = Math.min(result, specSize);
        }

        return result;
    }

}
</code></pre>
