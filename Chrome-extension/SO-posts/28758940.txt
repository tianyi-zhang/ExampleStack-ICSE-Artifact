<p>The problem is in your bracketing for the first character in the Java code. Here's your code:</p>

<pre><code>GetHexVal((char)(hex.charAt(i &lt;&lt; 1) &lt;&lt; 4))
</code></pre>

<p>That's getting the character, <em>shifting that</em>, then calling <code>GetHexVal</code>. You want to shift the <em>result</em> instead:</p>

<pre><code>// Unnecessary cast removed
GetHexVal(hex.charAt(i &lt;&lt; 1)) &lt;&lt; 4
</code></pre>

<p>This would have been much easier to see if you'd made your code simpler. I would have written it as:</p>

<pre><code>private static byte[] HexToByte(String hex) {
    if (hex.length() % 2 == 1) {
        throw new IllegalArgumentException("...");
    }

    byte[] arr = new byte[hex.length() / 2];

    for (int i = 0; i &lt; hex.length(); i += 2)
    {
        int highNybble = parseHex(hex.charAt(i));
        int lowNybble = parseHex(hex.charAt(i + 1));
        arr[i / 2] = (byte) ((highNybble &lt;&lt; 4) + lowNybble);
    }

    return arr;
}
</code></pre>

<p>While bitshifting is all very efficient, it's not nearly as <em>readable</em> as simply dividing by two... and splitting code up across multiple statements makes it much easier to read each individual part of it.</p>

<p>(I would probably implement <code>parseHex</code> with a switch statement, throwing an <code>IllegalArgumentException</code> for non-hex digits too...)</p>
