<p>It seems what you are looking for is away to compare 2 objects of type ArrayList.</p>

<p>The answer to this is by overriding equals method.</p>

<p>Add the below code to your AdminPostalCode POJO class.</p>

<pre><code>@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    final AdminPostalCode other = (AdminPostalCode) obj;
    if (city1 == null) {
        if (other.city1 != null)
            return false;
    } else if (!city1.equals(other.city1))
        return false;
    if (cod1 == null) {
        if (other.cod1 != null)
            return false;
    } else if (!cod1.equals(other.cod1))
        return false;
    if (cod_couriername1 == null) {
        if (other.cod_couriername1 != null)
            return false;
    } else if (!cod_couriername1.equals(other.cod_couriername1))
        return false;
    if (country1 == null) {
        if (other.country1 != null)
            return false;
    } else if (!country1.equals(other.country1))
        return false;
    if (days_to_deliver1 == null) {
        if (other.days_to_deliver1 != null)
            return false;
    } else if (!days_to_deliver1.equals(other.days_to_deliver1))
        return false;
    if (entity_id1 == null) {
        if (other.entity_id1 != null)
            return false;
    } else if (!entity_id1.equals(other.entity_id1))
        return false;
    if (pg1 == null) {
        if (other.pg1 != null)
            return false;
    } else if (!pg1.equals(other.pg1))
        return false;
    if (pg_couriername1 == null) {
        if (other.pg_couriername1 != null)
            return false;
    } else if (!pg_couriername1.equals(other.pg_couriername1))
        return false;
    if (postal_code1 == null) {
        if (other.postal_code1 != null)
            return false;
    } else if (!postal_code1.equals(other.postal_code1))
        return false;
    if (rpu1 == null) {
        if (other.rpu1 != null)
            return false;
    } else if (!rpu1.equals(other.rpu1))
        return false;
    if (rto_couriername1 == null) {
        if (other.rto_couriername1 != null)
            return false;
    } else if (!rto_couriername1.equals(other.rto_couriername1))
        return false;
    if (state1 == null) {
        if (other.state1 != null)
            return false;
    } else if (!state1.equals(other.state1))
        return false;
    if (updated_at1 == null) {
        if (other.updated_at1 != null)
            return false;
    } else if (!updated_at1.equals(other.updated_at1))
        return false;
    if (updated_by1 == null) {
        if (other.updated_by1 != null)
            return false;
    } else if (!updated_by1.equals(other.updated_by1))
        return false;
    return true;
}
</code></pre>

<p>The above method will help you compare the 2 Actual and Expected objects.
Though, a correct JUnit will make use of <strong>assertEquals, verify, etc</strong> to validate results</p>
