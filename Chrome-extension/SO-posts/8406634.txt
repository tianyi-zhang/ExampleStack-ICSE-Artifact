<p>With out seeing your code it's hard to know exactly but I grabbed a Mergesort Implementation from here: <a href="http://www.vogella.de/articles/JavaAlgorithmsMergesort/article.html" rel="nofollow">http://www.vogella.de/articles/JavaAlgorithmsMergesort/article.html</a>.<br>
I've updated it to print out like you want.</p>

<pre><code>public class Mergesort 
{
    private int[] numbers;
    private int[] helper;

    private int number;

    public void sort(int[] values) 
    {
        this.numbers = values;
        number = values.length;
        this.helper = new int[number];

        System.out.println("START");

        mergesort(0, number - 1);

        System.out.println("END");
    }

    private void mergesort(int low, int high) 
    {
        // Check if low is smaller then high, if not then the array is sorted
        if (low &lt; high) 
        {
            // Get the index of the element which is in the middle
            int middle = (low + high) / 2;
            // Sort the left side of the array
            mergesort(low, middle);
            // Sort the right side of the array
            mergesort(middle + 1, high);
            // Combine them both
            merge(low, middle, high);
        }
    }

    private void merge(int low, int middle, int high) 
    {

        // Copy both parts into the helper array
        for (int i = low; i &lt;= high; i++) 
        {
            helper[i] = numbers[i];
        }

        int i = low;
        int j = middle + 1;
        int k = low;

        // Copy the smallest values from either the left or the right side back
        // to the original array
        while (i &lt;= middle &amp;&amp; j &lt;= high) 
        {
            if (helper[i] &lt;= helper[j]) 
            {
                numbers[k] = helper[i];
                i++;
            } 
            else 
            {
                numbers[k] = helper[j];
                j++;
            }
            k++;
        }

        // Copy the rest of the left side of the array into the target array
        while (i &lt;= middle) 
        {
            numbers[k] = helper[i];
            k++;
            i++;
        }

    }

    private void printArray()
    {
        for(int x : numbers)
            System.out.print(x + " ");

        System.out.println(" ");
    }
}
</code></pre>

<p>If you don't want to print to the console you can build the output to a String of the output and return it when you're all done.</p>
