<p>First you should use a Set to store objects instead of a array if you dont want duplicates. (Arrays and List do allow duplicate objects to be stores)</p>

<p>Second your equals methods should use String.equal method for comparison and should check for null values too to be on the safe side. I would use the IDE's auto generate feature for hashcode and equals methods always (i.e. Eclipse Source -> Generate hashCode() and equals()...)</p>

<pre><code> @Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((firstName == null) ? 0 : firstName.hashCode());
    result = prime * result + ((lastName == null) ? 0 : lastName.hashCode());
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    User other = (User) obj;
    if (firstName == null) {
        if (other.firstName != null)
            return false;
    } else if (!firstName.equals(other.firstName))
        return false;
    if (lastName == null) {
        if (other.lastName != null)
            return false;
    } else if (!lastName.equals(other.lastName))
        return false;
    return true;
}
</code></pre>

<p>and main method</p>

<pre><code>public static void main(String[] args) {
    List&lt;Set&lt;User&gt;&gt; a = new ArrayList&lt;Set&lt;User&gt;&gt;();
    Set&lt;User&gt; set = new HashSet&lt;User&gt;();

    User u = new User();
    u.setFirstName("Mike"); u.setLastName("Jordon");      
    set.add(u);

    u = new User();
    u.setFirstName("Jack"); u.setLastName("Nicolson");
    set.add(u);

    u = new User();
    u.setFirstName("Jack"); u.setLastName("Nicolson");
    set.add(u);

    a.add(set);

    for (Set&lt;User&gt; ss : a) {
        for (User user : ss) {           
            System.out.println(user.getFirstName() + " " + user.getLastName());
        }
    }
}
</code></pre>
