<p>This is how you can do to customize item of your list:</p>

<p>Layout of your list:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
          android:orientation="vertical"
          android:layout_width="match_parent"
          android:layout_height="match_parent"&gt;

&lt;ListView
        android:id="@android:id/list"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Layout of each item:</p>

<pre><code> &lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical"
          android:layout_width="match_parent"
          android:layout_height="match_parent"&gt;

&lt;TextView
        android:id="@+id/text"
        android:layout_height="wrap_content"
        android:layout_width="wrap_content"
        /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>And finaly your activity:</p>

<pre><code>public class MyActivity extends ListActivity {

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.list_activitty);

    final List&lt;String&gt; list = new ArrayList&lt;String&gt;();
    list.add("test");
    list.add("test");
    list.add("test");

    final CustomAdapter adapter = new CustomAdapter(this, list);
    final ListView listView = getListView();
    listView.setAdapter(adapter);
}


public class CustomAdapter extends BaseAdapter {

    private Context mContext;
    private List&lt;String&gt; mList;

    public CustomAdapter(Context context, List&lt;String&gt; list) {
        mContext = context;
        mList = list;
    }

    @Override
    public int getCount() {
        return mList.size();
    }

    @Override
    public String getItem(int position) {
        return mList.get(position);
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        final Holder holder;

        if (convertView == null) {

            // if it is the first time you create the row
            // you get the layout of each row here
            convertView = LayoutInflater.from(mContext).inflate(R.layout.item_list, null);

            // you keep your layout in a holder
            holder = new Holder();
            holder.mText = (TextView) convertView.findViewById(R.id.text);
            convertView.setTag(holder);

        } else {

            // if the row has already been created, you get it from the holder
            holder = (Holder) convertView.getTag();
        }

        // you do what you want with the content

        holder.mText.setText(getItem(position));
        holder.mText.setTextColor(Color.BLUE);

        return convertView;
    }

    private class Holder {
        public TextView mText;
    }
}
}
</code></pre>
