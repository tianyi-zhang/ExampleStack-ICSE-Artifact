<p>If you are using <a href="http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html" rel="nofollow">SQLiteOpenHelper</a> to manage your queries, there is a method called <a href="http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#onUpgrade%28android.database.sqlite.SQLiteDatabase,%20int,%20int%29" rel="nofollow">OnUpgrade</a> that will get called when a user has upgraded his app, and the new version of the app has a version code larger than the previous.</p>

<p>An example use:</p>

<pre><code>public static void onUpgrade(SQLiteDatabase database, int oldVersion,
  int newVersion) {
    Log.w(TodoTable.class.getName(), "Upgrading database from version "
    + oldVersion + " to " + newVersion
    + ", which will destroy all old data");
    database.execSQL("DROP TABLE IF EXISTS " + TABLE_TODO);
    onCreate(database);
}
</code></pre>

<p>Here you can use oldVersion and newVersion to do incremental updates of your database if you don't want to just drop your tables. You have to make sure that you increment the database version number. The database version number is passed as a constructor argument to SQLiteOpenHelper.</p>

<p>An example of incremental upgrades:</p>

<pre><code>public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {                     
        if (newVersion &gt; oldVersion) {
            db.beginTransaction();

            boolean success = true;
            for (int i = oldVersion ; i &lt; newVersion ; ++i) {
                int nextVersion = i + 1;
                switch (nextVersion) {
                case 2:
                    success = upgradeToVersion2(db);
                    break;

                    // etc. for later versions.
                case 3:
                    success = upgradeToVersion3(db);
                    break;
                }


                if (!success) {
                    break;
                }
            }

            if (success) {
                db.setTransactionSuccessful();
            }
            db.endTransaction();
        }

    }
</code></pre>
