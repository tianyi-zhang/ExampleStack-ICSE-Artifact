<p>try do this </p>

<pre><code>public class MyBestLocation {
    LocationListener locationListenerGps = new LocationListener() {
        @Override
        public void onLocationChanged(Location location) {
            locationResult.gotLocation(location);
            lm.removeUpdates(this);
            lm.removeUpdates(locationListenerNetwork);
        }

        @Override
        public void onProviderDisabled(String provider) {
        }

        @Override
        public void onProviderEnabled(String provider) {
        }

        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {
        }
    };
    LocationListener locationListenerNetwork = new LocationListener() {
        @Override
        public void onLocationChanged(Location location) {
            locationResult.gotLocation(location);
            lm.removeUpdates(this);
            lm.removeUpdates(locationListenerGps);
        }

        @Override
        public void onProviderDisabled(String provider) {
        }

        @Override
        public void onProviderEnabled(String provider) {
        }

        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {
        }
    };
    //delay in seconds
    private int DELAY = 1;
    private Timer timer1;
    private LocationManager lm;
    private LocationResult locationResult;
    private boolean gps_enabled = false;
    private boolean network_enabled = false;
    private ScheduledExecutorService scheduler;
    private ScheduledFuture scheduledFuture;

    public boolean getLocation(Context context, LocationResult result) {
        // przypisanie referencji
        locationResult = result;
        if (lm == null)
            lm = (LocationManager) context
                    .getSystemService(Context.LOCATION_SERVICE);

        // sprawdzam dostepnosc providerow
        try {
            gps_enabled = lm.isProviderEnabled(LocationManager.GPS_PROVIDER);
        } catch (Exception ex) {
        }
        try {
            network_enabled = lm
                    .isProviderEnabled(LocationManager.NETWORK_PROVIDER);
        } catch (Exception ex) {
        }

        // jesli zaden nie jest dostepny wylaczam sie
        if (!gps_enabled &amp;&amp; !network_enabled)
            return false;

        if (gps_enabled)
            lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0,
                    locationListenerGps);
        if (network_enabled)
            lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0,
                    locationListenerNetwork);
        //----------------------
       // async executor method upgrade
        timer1 = new Timer();
        timer1.schedule(new GetLastLocation(), DELAY*2000);
       // ----------------

        // opozniam uruchomienie watku w celu odszukania lokacji jesli ktorys z
        // providerow zdola to zrobic
       /* scheduler = Executors.newSingleThreadScheduledExecutor();
        scheduler.schedule(new GetLastLocation(), DELAY, TimeUnit.SECONDS);*/
        return true;
    }

    // Timer task sluzy do odszukania najmlodszej lokalizacji

    public static abstract class LocationResult {
        public abstract void gotLocation(Location location);
    }

    /**
     * Klasa pomocnicza odpalana przez TimerTask.
     *
     * @author rafal.machnik
     */
    class GetLastLocation extends TimerTask {
        @Override
        public void run() {


            lm.removeUpdates(locationListenerGps);
            lm.removeUpdates(locationListenerNetwork);

            Location net_loc = null, gps_loc = null;
            if (gps_enabled)
                gps_loc = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);
            if (network_enabled)
                net_loc = lm
                        .getLastKnownLocation(LocationManager.NETWORK_PROVIDER);

            // if there are both values use the latest one
            if (gps_loc != null &amp;&amp; net_loc != null) {
                if (gps_loc.getTime() &gt; net_loc.getTime())
                    locationResult.gotLocation(gps_loc);
                else
                    locationResult.gotLocation(net_loc);

                return;
            }

            if (gps_loc != null) {
                locationResult.gotLocation(gps_loc);

                return;
            }
            if (net_loc != null) {
                locationResult.gotLocation(net_loc);

                return;
            }
//          locationResult.gotLocation(null);
        }

    }
</code></pre>

<p>To invoke it you only implement sth like that </p>

<pre><code>   MyBestLocation bestLocation = new MyBestLocation();
                    if (bestLocation.getLocation(EditTask.this, locationResult)) {
                        locationResult.gotLocation(location);
                    }
</code></pre>
