<p>try it with something like this</p>

<p>gridview.xml </p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;GridView xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/gridView1"
    android:numColumns="auto_fit"
    android:gravity="center"
    android:columnWidth="100dp"
    android:stretchMode="columnWidth"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent" &gt;

&lt;/GridView&gt;
</code></pre>

<p>item.xml</p>

<p>
</p>

<pre><code>&lt;TextView
    android:id="@+id/grid_item_label"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="@+id/label"
    android:layout_marginTop="5px"
    android:textSize="15px" &gt;
&lt;/TextView&gt;
</code></pre>

<p></p>

<p>Custom adapter class for textView</p>

<pre><code>public class TextViewAdapter extends BaseAdapter {
        private Context context;
        private final String[] textViewValues;

        public TextViewAdapter(Context context, String[] textViewValues) {
            this.context = context;
            this.textViewValues = textViewValues;
        }

        public View getView(int position, View convertView, ViewGroup parent) {

            LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);

            View gridView;

            if (convertView == null) {

                gridView = new View(context);

                // get layout from mobile.xml
                gridView = inflater.inflate(R.layout.item, null);

                // set value into textview
                TextView textView = (TextView) gridView
                        .findViewById(R.id.grid_item_label);
                textView.setText(textViewValues[position]);  
            } else {
                gridView = (View) convertView;
            }

            return gridView;
        }

        @Override
        public int getCount() {
            return textViewValues.length;
        }

        @Override
        public Object getItem(int position) {
            return null;
        }

        @Override
        public long getItemId(int position) {
            return 0;
        }

    }
</code></pre>

<p>and then , finally set adapter in your main class</p>

<pre><code>gridView.setAdapter(new TextViewAdapter(this, YOUR_ARRAY_WITH_TEXT_FOR_TEXTVIEWS));
</code></pre>

<p>also note that you can pass any other values like color of text and as another argument in constructor and then set them in adapter like ... </p>

<pre><code>textView.setColor(textViewColors[position]); 
</code></pre>

<p>for attributes that all textview have in common you can change the item.xml only :) 
i hope it helped you ....</p>
