<p>I think adding this to the manifest will fix it.</p>

<pre><code>android:configChanges="orientation|keyboardHidden|screenSize"
</code></pre>

<p>Or You would save the camera position which will also handle the user moved the map at the same time.  The orientation dimensions change hopefully is handled by Google.</p>

<pre><code>private CameraPosition currentCameraPosition;
private static final String SAVED_INSTANCE_CAMERA_POSITION = "com.gosylvester.bestrides.cameraPosition";

@Override
public void onSaveInstanceState(Bundle savedInstanceState) {
    super.onSaveInstanceState(savedInstanceState);
    // save the current camera position;
    if (currentCameraPosition != null) {
        savedInstanceState.putParcelable(SAVED_INSTANCE_CAMERA_POSITION,
                currentCameraPosition);
    }
}


@Override
protected void onPause() {
    super.onPause();
    if (mMap != null) {
        currentCameraPosition = mMap.getCameraPosition();
    }
}

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    // First Run checks
    if (savedInstanceState == null) {
        currentCameraPosition = null;
    } else {
        // get the saved_Instance state
        // always get the default when key doesn't exist
        currentCameraPosition = savedInstanceState
                .containsKey(SAVED_INSTANCE_CAMERA_POSITION) ? (CameraPosition) savedInstanceState
                .getParcelable(SAVED_INSTANCE_CAMERA_POSITION) : null;
    }
}

private void setUpMap() {
    final View mapView = getSupportFragmentManager().findFragmentById(
            R.id.map).getView();
    if (mapView.getViewTreeObserver().isAlive()) {
        mapView.getViewTreeObserver().addOnGlobalLayoutListener(
                new OnGlobalLayoutListener() {

                    @SuppressWarnings("deprecation")
                    // We use the new method when supported
                    @SuppressLint("NewApi")
                    // We check which build version we are using.
                    @Override
                    public void onGlobalLayout() {
                        if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.JELLY_BEAN) {
                            mapView.getViewTreeObserver()
                                    .removeGlobalOnLayoutListener(this);
                        } else {
                            mapView.getViewTreeObserver()
                                    .removeOnGlobalLayoutListener(this);
                        }
                        // if there is a cameraPosition then move to it.
                        if (currentCameraPosition != null) {
                            mMap.moveCamera(CameraUpdateFactory
                                    .newCameraPosition(currentCameraPosition));
                        }
                    } 
                });
     }
}
</code></pre>
