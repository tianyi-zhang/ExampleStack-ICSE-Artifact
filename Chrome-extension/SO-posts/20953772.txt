<p>A Dialog can be showed by an Activity and not (directly) by the Application (and principally not by a Service), therefore the Dialog's constructor expects the Context of the Activity and not the Context of the Application.</p>

<p>If you know the name of your activity, then</p>

<pre><code>final Dialog dialog = new Dialog(YOUR_ACTIVITY_NAME.this);
</code></pre>

<p>of course works.</p>

<p>But if you don't want to burn the name of your Activity in your code, use this snippets:</p>

<pre><code>public class MainActivity extends Activity {
Context context; // for context of the application
Context acontext; // for context of the activity

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    context = getApplicationContext(); // Don't use for Dialog
    acontext = this; // Use for Dialog
    setContentView(R.layout.activity_main);

    // Dialog block started
    final Dialog dialog = new Dialog(acontext);
    dialog.setContentView(R.layout.custom);
    dialog.setTitle("Title");
    Button dialogButton = (Button) dialog.findViewById(R.id.dialogButtonOK);
    // if button is clicked, close the custom dialog
    dialogButton.setOnClickListener(new OnClickListener() {
        @Override
        public void onClick(View v) {
            dialog.dismiss();
        }
    });     
    dialog.show();
    // Dialog block ended
}}
</code></pre>
