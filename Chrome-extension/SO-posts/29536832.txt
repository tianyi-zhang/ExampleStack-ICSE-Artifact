<p>Find <strong>ViewPagerTabListViewActivity.class</strong> and it layout <strong>layout/activity_viewpagertab.xml</strong> in ObservableScrollView samples</p>

<p><strong>EDIT:</strong> Edited layout and class
activity_viewpagertab.xml</p>

<pre><code>&lt;FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"&gt;

    &lt;android.support.v4.widget.DrawerLayout
        android:id="@+id/drawer"
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_below="@+id/toolbar_actionbar"&gt;

        &lt;!--&lt;FrameLayout android:id="@+id/container" android:layout_width="match_parent"--&gt;
        &lt;!--android:clickable="true" android:layout_height="match_parent" /&gt;--&gt;

        &lt;!--
    Padding for ViewPager must be set outside the ViewPager itself
    because with padding, EdgeEffect of ViewPager become strange.
    --&gt;
        &lt;FrameLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"&gt;

            &lt;android.support.v4.view.ViewPager
                android:id="@+id/pager"
                android:paddingTop="@dimen/tab_height"
                android:layout_width="match_parent"
                android:layout_height="match_parent" /&gt;

            &lt;LinearLayout
                android:id="@+id/header"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="?attr/colorPrimary"
                android:orientation="vertical"&gt;

                &lt;android.support.v7.widget.Toolbar
                    android:id="@+id/toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="?attr/colorPrimary"
                    android:minHeight="?attr/actionBarSize"
                    app:popupTheme="@style/Theme.AppCompat.Light.DarkActionBar"
                    app:theme="@style/Toolbar" /&gt;

                &lt;com.google.samples.apps.iosched.ui.widget.SlidingTabLayout
                    android:id="@+id/sliding_tabs"
                    android:layout_width="match_parent"
                    android:layout_height="@dimen/tab_height"
                    android:background="@color/primary" /&gt;
            &lt;/LinearLayout&gt;
        &lt;/FrameLayout&gt;
        &lt;!-- android:layout_marginTop="?android:attr/actionBarSize"--&gt;
        &lt;fragment
            android:id="@+id/fragment_drawer"
            android:name="com.github.ksoichiro.android.observablescrollview.samples.NavigationDrawerFragment"
            android:layout_width="280dp"
            android:layout_height="match_parent"
            android:layout_gravity="start"
            app:layout="@layout/fragment_navigation_drawer" /&gt;
    &lt;/android.support.v4.widget.DrawerLayout&gt;
&lt;/FrameLayout&gt;
</code></pre>

<p>part of ViewPagerTabListViewActivity.class</p>

<pre><code>public class ViewPagerTabListViewActivity extends BaseActivity implements ObservableScrollViewCallbacks, NavigationDrawerCallbacks {

private View mHeaderView;
private View mToolbarView;
private int mBaseTranslationY;
private ViewPager mPager;
private NavigationAdapter mPagerAdapter;

private NavigationDrawerFragment mNavigationDrawerFragment;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_viewpagertab);

    setSupportActionBar((Toolbar) findViewById(R.id.toolbar));

    mHeaderView = findViewById(R.id.header);
    ViewCompat.setElevation(mHeaderView, getResources().getDimension(R.dimen.toolbar_elevation));
    mToolbarView = findViewById(R.id.toolbar);
    mPagerAdapter = new NavigationAdapter(getSupportFragmentManager());
    mPager = (ViewPager) findViewById(R.id.pager);
    mPager.setAdapter(mPagerAdapter);

    SlidingTabLayout slidingTabLayout = (SlidingTabLayout) findViewById(R.id.sliding_tabs);
    slidingTabLayout.setCustomTabView(R.layout.tab_indicator, android.R.id.text1);
    slidingTabLayout.setSelectedIndicatorColors(getResources().getColor(R.color.accent));
    slidingTabLayout.setDistributeEvenly(true);
    slidingTabLayout.setViewPager(mPager);

    // When the page is selected, other fragments' scrollY should be adjusted
    // according to the toolbar status(shown/hidden)
    slidingTabLayout.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
        @Override
        public void onPageScrolled(int i, float v, int i2) {
        }

        @Override
        public void onPageSelected(int i) {
            propagateToolbarState(toolbarIsShown());
        }

        @Override
        public void onPageScrollStateChanged(int i) {
        }
    });

    propagateToolbarState(toolbarIsShown());

    //Added this --------------------------------------------

    ActionBar ab = getSupportActionBar();
    ab.setDisplayShowHomeEnabled(false);
    ab.setDisplayHomeAsUpEnabled(true);
    ab.setHomeButtonEnabled(true);
    mNavigationDrawerFragment = (NavigationDrawerFragment)
            getSupportFragmentManager().findFragmentById(R.id.fragment_drawer);

    // Set up the drawer.
    mNavigationDrawerFragment.setup(R.id.fragment_drawer, (DrawerLayout) findViewById(R.id.drawer), (Toolbar) mToolbarView);
}

//Added this -----------------------------------------

@Override
public void onNavigationDrawerItemSelected(int position) {
    // update the main content by replacing fragments
    Toast.makeText(this, "Menu item selected -&gt; " + position, Toast.LENGTH_SHORT).show();
}
</code></pre>

<p>Now it works like a charm, shared a screenshot. Glad to work on your problem thanks.</p>

<p><img src="http://i.stack.imgur.com/rPf99.png" alt="ToolBarWithTabs"></p>
