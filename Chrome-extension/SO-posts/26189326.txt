<p>Try using CustomAdapter for recycling memory to prevent crashing...it is better way of using ListView efficiently</p>

<p>create a layout for Listitem in res/layout folder</p>

<p>list_item.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="50dp"
    android:padding="5dp" &gt;

    &lt;TextView
        android:id="@+id/category_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_toRightOf="@+id/drawer_icon"
        android:layout_marginLeft="15dp"
        android:textSize="17sp"
        android:layout_centerVertical="true"
        android:textColor="#333333" /&gt;


&lt;/RelativeLayout&gt;
</code></pre>

<p>And create your CustomAdapter</p>

<p>MyCustomAdapter.java</p>

<pre><code>import java.util.ArrayList;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;


public class MyCustomAdapter extends ArrayAdapter&lt;String&gt; {
Context context;
ArrayList&lt;String&gt; categories=null;
    public MyCustomAdapter(Context context,ArrayList&lt;String&gt; categories) {
        super(context, R.layout.list_item,categories);
        this.categories=categories;
        this.context=context;
    }

    public class ViewHolder
    {
        public TextView cat;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         if (convertView == null) {
            convertView = inflater.inflate(R.layout.list_item, parent, false);
            holder=new ViewHolder();
            holder.cat=(TextView) convertView.findViewById(R.id.category_name);
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
         holder.cat.setText(categories.get(position));
         return convertView; 
    }

}
</code></pre>

<p>Now just Use this Adapter to populate ListView</p>

<pre><code>listView.setAdapter(new MyCustomAdapter&lt;String&gt;(this,OurContact.contacts_names));
</code></pre>
