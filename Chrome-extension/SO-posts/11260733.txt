<p>You Can't read binary(msi) file with <code>readline()</code> in this case.Your Code is totally wrong and will not work.
Here is a simple function which lets you do what you want.</p>

<pre><code>    private void doDownload( HttpServletRequest req, HttpServletResponse resp,String filename, String original_filename )throws IOException
            {
            File f = new File(filename);
            int  length   = 0;
            ServletOutputStream op = resp.getOutputStream();
            ServletContext context  = getServletConfig().getServletContext();
            String  mimetype = context.getMimeType( filename );
            resp.setContentType( (mimetype != null) ? mimetype : "application/octet-stream" );
            resp.setContentLength( (int)f.length() );
            resp.setHeader( "Content-Disposition", "attachment; filename=\"" + original_filename + "\"" );
            byte[] bbuf = new byte[BUFSIZE];
            DataInputStream in = new DataInputStream(new FileInputStream(f));
            while ((in != null) &amp;&amp; ((length = in.read(bbuf)) != -1)){
            op.write(bbuf,0,length);
            }
            in.close();
            op.flush();
            op.close();
        }
</code></pre>

<p>Create <code>doDownload()</code> function in your <code>servlet</code> and pass requierd parameters to that function from <code>doGet</code>,<code>doPost</code> or whatever valid place you like.</p>

<p><strong>Parameters:</strong></p>

<ul>
<li><p>@param req The request</p></li>
<li><p>@param resp The response</p></li>
<li><p>@param filename The name of the file you want to download.</p></li>
<li><p>@param original_filename The name the browser should receive.</p></li>
</ul>
