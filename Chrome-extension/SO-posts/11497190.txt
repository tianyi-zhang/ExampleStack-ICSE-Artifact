<pre><code>  public static &lt;T&gt; Collection&lt;Collection&lt;T&gt;&gt; split(Collection&lt;T&gt; bigCollection, int maxBatchSize) {
    Collection&lt;Collection&lt;T&gt;&gt; result = new ArrayList&lt;Collection&lt;T&gt;&gt;();

    ArrayList&lt;T&gt; currentBatch = null;
    for (T t : bigCollection) {
      if (currentBatch == null) {
        currentBatch = new ArrayList&lt;T&gt;();
      } else if (currentBatch.size() &gt;= maxBatchSize) {
        result.add(currentBatch);
        currentBatch = new ArrayList&lt;T&gt;();
      }

      currentBatch.add(t);
    }

    if (currentBatch != null) {
      result.add(currentBatch);
    }

    return result;
  }
</code></pre>

<p>Here's how we use it (assuming emails an a large ArrayList of email addresses:</p>

<pre><code>Collection&lt;Collection&lt;String&gt;&gt; emailBatches = Helper.split(emails, 500);
    for (Collection&lt;String&gt; emailBatch : emailBatches) {
        sendEmails(emailBatch);
        // do something else...
        // and something else ...
    }
}
</code></pre>

<p>where emailBatch would iterate over the collection like this:</p>

<pre><code>private static void sendEmails(Collection&lt;String&gt; emailBatch){
    for(String email: emailBatch){
        // send email code here.
    }
}
</code></pre>
