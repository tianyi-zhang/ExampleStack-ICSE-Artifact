<p>Add the following method to your class.</p>

<pre><code>public void configure(ProviderManager pm) {   

    pm.addIQProvider("query", "jabber:iq:private",

            new PrivateDataManager.PrivateDataIQProvider());

    try {

        pm.addIQProvider("query", "jabber:iq:time",

                Class.forName("org.jivesoftware.smackx.packet.Time"));

    } catch (ClassNotFoundException e) {

        Log.w("TestClient",

                "Can't load class for org.jivesoftware.smackx.packet.Time");

    }
    pm.addExtensionProvider("x", "jabber:x:roster",

            new RosterExchangeProvider());
    pm.addExtensionProvider("x", "jabber:x:event",

            new MessageEventProvider());
    pm.addExtensionProvider("active",

            "http://jabber.org/protocol/chatstates",

            new ChatStateExtension.Provider());
    pm.addExtensionProvider("composing",

            "http://jabber.org/protocol/chatstates",

            new ChatStateExtension.Provider());
    pm.addExtensionProvider("paused",

            "http://jabber.org/protocol/chatstates",

            new ChatStateExtension.Provider());

    pm.addExtensionProvider("inactive",

            "http://jabber.org/protocol/chatstates",

            new ChatStateExtension.Provider());
    pm.addExtensionProvider("gone",

            "http://jabber.org/protocol/chatstates",

            new ChatStateExtension.Provider());
    pm.addExtensionProvider("html", "http://jabber.org/protocol/xhtml-im",

            new XHTMLExtensionProvider());

    pm.addExtensionProvider("x", "jabber:x:conference",

            new GroupChatInvitation.Provider());
    pm.addIQProvider("query", "http://jabber.org/protocol/disco#items",
            new DiscoverItemsProvider());

    pm.addIQProvider("query", "http://jabber.org/protocol/disco#info",

            new DiscoverInfoProvider());
    pm.addExtensionProvider("x", "jabber:x:data", new DataFormProvider());
    pm.addExtensionProvider("x", "http://jabber.org/protocol/muc#user",
            new MUCUserProvider());
    pm.addIQProvider("query", "http://jabber.org/protocol/muc#admin",
            new MUCAdminProvider());

    pm.addIQProvider("query", "http://jabber.org/protocol/muc#owner",
            new MUCOwnerProvider());
    pm.addExtensionProvider("x", "jabber:x:delay",
            new DelayInformationProvider());
    try {

        pm.addIQProvider("query", "jabber:iq:version",

                Class.forName("org.jivesoftware.smackx.packet.Version"));

    } catch (ClassNotFoundException e) {

        // Not sure what's happening here.

    }
    pm.addIQProvider("vCard", "vcard-temp", new VCardProvider());
    pm.addIQProvider("offline", "http://jabber.org/protocol/offline",

            new OfflineMessageRequest.Provider());
    pm.addExtensionProvider("offline","http://jabber.org/protocol/offline",new OfflineMessageInfo.Provider());
    pm.addIQProvider("query", "jabber:iq:last", new LastActivity.Provider());
    pm.addIQProvider("query", "jabber:iq:search", new UserSearch.Provider());
    pm.addIQProvider("sharedgroup","http://www.jivesoftware.org/protocol/sharedgroup",new SharedGroupsInfo.Provider());
    pm.addExtensionProvider("addresses","http://jabber.org/protocol/address",new MultipleAddressesProvider());
    pm.addIQProvider("si", "http://jabber.org/protocol/si",new StreamInitiationProvider());
    pm.addIQProvider("query", "http://jabber.org/protocol/bytestreams",
            new BytestreamsProvider());
    pm.addIQProvider("query", "jabber:iq:privacy", new PrivacyProvider());

}
</code></pre>

<p>And just before connect function is called. call the method with like this.</p>

<pre><code>configure(ProviderManager.getInstance());
</code></pre>

<p>This surely help to resolve the issue. Thank you all.</p>
