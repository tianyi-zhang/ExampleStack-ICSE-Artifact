<p>Yes, take a look at the MessageDigest class of Java:
<a href="http://docs.oracle.com/javase/7/docs/api/java/security/MessageDigest.html" rel="nofollow">http://docs.oracle.com/javase/7/docs/api/java/security/MessageDigest.html</a></p>

<p>It provides 3 hashing algorithms:
<br>-MD5
<br>-SHA-1
<br>-SHA-256</p>

<p>Example for hashing a file:</p>

<pre><code>MessageDigest md = MessageDigest.getInstance("SHA-256");
FileInputStream fis = new FileInputStream("~/Documents/Path/To/File.txt");

byte[] dataBytes = new byte[1024];

int nread = 0; 
while ((nread = fis.read(dataBytes)) != -1) {
  md.update(dataBytes, 0, nread);
};
byte[] mdbytes = md.digest();

//Convert "mdbytes" to hex String:
StringBuffer hexString = new StringBuffer();
for (int i=0;i&lt;mdbytes.length;i++) {
  hexString.append(Integer.toHexString(0xFF &amp; mdbytes[i]));
}

return hexString.toString();
</code></pre>

<p>Here is the example for hashing a String:</p>

<pre><code>String password = "123456";

MessageDigest md = MessageDigest.getInstance("SHA-256");
md.update(password.getBytes());

byte byteData[] = md.digest();

//Convert "byteData" to hex String:
StringBuffer sb = new StringBuffer();
for (int i = 0; i &lt; byteData.length; i++) {
    sb.append(Integer.toString((byteData[i] &amp; 0xff) + 0x100, 16).substring(1));
}

return sb.toString();
</code></pre>
