<p>The codes were forked from many SO answers so I could link them all. Thanks to all the original authors. </p>

<p>this is my first SO answer. So if in anyway I could improve it, please do advice me.</p>

<p>So I made it to work by catching the notification, reading the json tags in stages and building the notification. </p>

<p>Broadcast receiver class:</p>

<pre><code>@Override
    public void onReceive(Context context, Intent intent) {
        // TODO Auto-generated method stub

        final Dbhelper p = new Dbhelper(context);
        try {
            String action = intent.getAction();
             String channel = intent.getExtras().getString("com.parse.Channel");
             JSONObject json = new JSONObject(intent.getExtras().getString("com.parse.Data"));
             Log.i("Got push", "got action " + action + " on channel " + channel + " with:");

             if (action.equalsIgnoreCase("My.app.package")) {
                 String title = "title";
                 String message = "";
                 if (json.has("header"))
                     title = json.getString("header");
                 if (json.has("msg"))
                     message = json.getString("msg");
                    numMessages++;
                    p.addCircular(title, message);
                  generateNotification(context, title, message, json);
             }
           } catch (JSONException e) {
             Log.d(TAG, "JSONException: " + e.getMessage());
           }
    }

    private void generateNotification(Context context, String title, String message, JSONObject json) {
        Intent intent = new Intent(context, MainActivity.class);
        PendingIntent contentIntent = PendingIntent.getActivity(context, 0, intent, 0);

        numMessages = 0;
        NotificationManager mNotifM = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);

        final NotificationCompat.Builder mBuilder =
        new NotificationCompat.Builder(context)
        .setSmallIcon(R.drawable.ic_drawer)
        .setContentTitle(title)
        .setContentText(message)
        .setStyle(new NotificationCompat.BigTextStyle()
        .bigText(message))
        .addAction(0, "Press to open", contentIntent)
        .setAutoCancel(true)
        .setDefaults(new NotificationCompat().DEFAULT_ALL);
        //.setNumber(++numMessages);

        mBuilder.setContentIntent(contentIntent);

        mNotifM.notify(NOTIFICATION_ID, mBuilder.build());

        }

    }
</code></pre>

<p>Changed parse's GCM receiver in manifest to </p>

<pre><code> &lt;receiver
            android:name="My.app.package.MyBroadcastReciverClass"
            android:permission="com.google.android.c2dm.permission.SEND" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name="com.google.android.c2dm.intent.RECEIVE" /&gt;
                &lt;action android:name="com.google.android.c2dm.intent.REGISTRATION" /&gt;
                &lt;action android:name="com.sbu.sathyabama" /&gt;
                 &lt;!-- IMPORTANT: Change "com.parse.starter" to match your app's package name. --&gt;
                &lt;category android:name="My.app.package" /&gt;
            &lt;/intent-filter&gt;
 &lt;/receiver&gt;
</code></pre>

<p>And the json data to be sent is encoded as</p>

<pre><code>{
     "header": "My notification Title",
     "msg": "My Notification message",
     "action": "my.app.package"
}
</code></pre>
