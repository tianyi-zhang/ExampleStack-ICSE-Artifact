<p>Eventually I solved it by getting the contact ID and using an inputStream:</p>

<pre><code>public static Uri getContactLookupUri(String contactLookupKey) {
        return Uri.withAppendedPath(
                ContactsContract.Contacts.CONTENT_LOOKUP_URI, contactLookupKey);
    }

public static Bitmap getContactImage(Context context, String contactLookupKey) {

    long contactId;

    try {
        Uri contactLookupUri = getContactLookupUri(contactLookupKey);
        Cursor c = context.getContentResolver().query(contactLookupUri,
                new String[] { ContactsContract.Contacts._ID }, null, null,
                null);
        try {
            if (c == null || c.moveToFirst() == false) {
                return null;
            }
            contactId = c.getLong(0);
        } finally {
            c.close();
        }

    } catch (Exception e) {
        e.printStackTrace();
        return null;
    }

    Uri contactUri = ContentUris.withAppendedId(
            ContactsContract.Contacts.CONTENT_URI, contactId);
    InputStream input = ContactsContract.Contacts
            .openContactPhotoInputStream(context.getContentResolver(),
                    contactUri);

    if (input != null) {
        return BitmapFactory.decodeStream(input);
    } else {
        return null;
    }
}
</code></pre>
