<p>Create a custom adapter. CutomAdapter extends ArrayAdapter. In <code>getView</code> you inflate a custom layout and return the view. Using ViewHolder pattern for smooth scrolling and performance.</p>

<p><a href="http://developer.android.com/training/improving-layouts/smooth-scrolling.html" rel="nofollow">http://developer.android.com/training/improving-layouts/smooth-scrolling.html</a></p>

<p>Pass the activity context and the arraylist to the constructor of custom adapter and make use of the same there.</p>

<pre><code>public class CustomAdapter extends ArrayAdapter&lt;String&gt;
{

    @Override
    public int getCount() {
        // TODO Auto-generated method stub
        return names.size();
    }
    LayoutInflater inflater;
    ArrayList&lt;String&gt; naems;
    public CustomAdapter(Context context, ArrayList&lt;String&gt; partiesnamelist) {
        super(context, 0);
        // TODO Auto-generated constructor stub
        inflater = LayoutInflater.from(context);
        names= partiesnamelist;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        // TODO Auto-generated method stub
        ViewHolder holder;
        if(convertView==null)
        {
        convertView = inflater.inflate(R.layout.list_item, parent,false);
            // inflate layout 
        holder = new ViewHolder();
        holder.tv = (TextView) convertView.findViewById(R.id.textView1);
        // use the view object to initialize views
        holder.iv = (ImageView) convertView.findViewById(R.id.list_image);
        convertView.setTag(holder); 
    } else { 
        holder = (ViewHolder) convertView.getTag(); 
    } 
        holder.tv.setText(names.get(position)); 
            // set text to textview usinf position adn arraylist names
            // set image to imageview using position
        return convertView;
    }
static class ViewHolder
{
    TextView tv;
    ImageView iv;
}
}
</code></pre>

<p>Then in Activtiy</p>

<pre><code>CustomAdapter cus = new CustomAdapter(ActivityName.this,partiesnamelist);
lvpartiesname.setAdapter(cus);
</code></pre>

<p>list_item.xml // single relative layout is enough</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="wrap_content"
android:orientation="horizontal"
android:padding="5dip" &gt;
&lt;ImageView
        android:id="@+id/list_image"
        android:layout_width="50dip"
        android:layout_height="50dip"
        android:src="@drawable/ic_launcher"/&gt;

&lt;TextView
    android:id="@+id/textView1"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_centerHorizontal="true"
    android:layout_centerVertical="true"
    android:text="List View Name"
    android:textColor="#040404"
    android:textSize="15dip"
    android:textStyle="bold"
    android:typeface="sans" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>
