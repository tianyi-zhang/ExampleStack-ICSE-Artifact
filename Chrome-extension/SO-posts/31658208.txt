<p>I just tested your code that builds the url, and it looks fine, so that is not the problem.</p>

<p>You're probably getting a timeout from a slow connection, try setting the timeout on your HttpURLConnection:</p>

<pre><code>conn = (HttpURLConnection) url.openConnection();
conn.setConnectTimeout(15000); //added
</code></pre>

<p>Also, note that if you haven't done so already, you will need to execute your network operation in a background thread, using an AsyncTask would be good for a short operation like this.</p>

<p><strong>Edit:</strong>  </p>

<p>I just ran a condensed version of your original code, and it worked just fine for me.</p>

<p>I used a Browser Key for the API key, and ran the <code>autocomplete()</code> method in an AsyncTask, and used "San Francisco" hard coded for the test.</p>

<p>Here is the full Activity class code that I used:</p>

<pre><code>public class MainActivity extends ActionBarActivity {

    Button testButton;
    TextView results;
    private static final String LOG_TAG = "PlacesAPI";
    private static final String PLACES_API_BASE = "https://maps.googleapis.com/maps/api/place";
    private static final String TYPE_AUTOCOMPLETE = "/autocomplete";
    private static final String OUT_JSON = "/json";

    private static final String API_KEY = "my-api-key-here";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        results = (TextView) findViewById(R.id.result);

        testButton = (Button) findViewById(R.id.button);

        testButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                new GetAutocompleteAsync().execute();
            }
        });
    }

    class GetAutocompleteAsync extends AsyncTask&lt;String, String, ArrayList&lt;String&gt;&gt;{

        @Override
        protected ArrayList&lt;String&gt; doInBackground(String... params) {

            ArrayList&lt;String&gt; results = autocomplete("San Francisco");
            return results;
        }

        @Override
        protected void onPostExecute(ArrayList&lt;String&gt; resultArrayList) {
            if (resultArrayList != null) {
                results.setText(resultArrayList.toString());
            }
        }

    }


    public static ArrayList autocomplete(String input) {
        ArrayList resultList = null;

        HttpURLConnection conn = null;
        StringBuilder jsonResults = new StringBuilder();
        try {
            StringBuilder sb = new StringBuilder(PLACES_API_BASE + TYPE_AUTOCOMPLETE + OUT_JSON);
            sb.append("?key=" + API_KEY);

            sb.append("&amp;input=" + URLEncoder.encode(input, "utf8"));

            URL url = new URL(sb.toString());
            conn = (HttpURLConnection) url.openConnection();
            InputStreamReader in = new InputStreamReader(conn.getInputStream());

            int read;
            char[] buff = new char[1024];
            while ((read = in.read(buff)) != -1) {
                jsonResults.append(buff, 0, read);
            }
        } catch (MalformedURLException e) {
            Log.e(LOG_TAG, "Error processing API URL", e);
            return resultList;
        } catch (IOException e) {
            Log.e(LOG_TAG, "Error connecting to Places API", e);
            return resultList;
        } finally {
            if (conn != null) {
                conn.disconnect();
            }
        }

        try {

            JSONObject jsonObj = new JSONObject(jsonResults.toString());
            JSONArray predsJsonArray = jsonObj.getJSONArray("predictions");


            resultList = new ArrayList(predsJsonArray.length());
            for (int i = 0; i &lt; predsJsonArray.length(); i++) {
                System.out.println(predsJsonArray.getJSONObject(i).getString("description"));
                System.out.println("============================================================");
                resultList.add(predsJsonArray.getJSONObject(i).getString("description"));
            }
        } catch (JSONException e) {
            Log.e(LOG_TAG, "Cannot process JSON results", e);
        }

        return resultList;
    }
}
</code></pre>

<p>Here are the resulting logs:</p>

<pre><code>I/System.out? San Francisco, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco, San Antonio, TX, United States
I/System.out? ============================================================
I/System.out? San Francisco International Airport, San Francisco, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco County, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco De La Espada, Espada Road, San Antonio, TX, United States
I/System.out? ============================================================
I/System.out? San Francisco, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco, San Antonio, TX, United States
I/System.out? ============================================================
I/System.out? San Francisco International Airport, San Francisco, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco County, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco De La Espada, Espada Road, San Antonio, TX, United States
I/System.out? ============================================================
I/System.out? San Francisco, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco, San Antonio, TX, United States
I/System.out? ============================================================
I/System.out? San Francisco International Airport, San Francisco, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco County, CA, United States
I/System.out? ============================================================
I/System.out? San Francisco De La Espada, Espada Road, San Antonio, TX, United States
I/System.out? ============================================================
</code></pre>
