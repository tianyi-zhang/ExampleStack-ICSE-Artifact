<p>Yes, this is possible. You can use the Glassfish Admin REST API to retrieve nearly every property of the server.</p>

<p>For the properties of the <code>http-listener-1</code> use the following url: <code>http://localhost:4848/management/domain/configs/config/server-config/network-config/network-listeners/network-listener/http-listener-1</code></p>

<p>A normal GET request will give you a HTML response, set the <code>Accept</code> header to <code>application/json</code> to retrieve the response in JSON.</p>

<p>In your EJB you just have to issue an HTTP request to the url from above with the right header. Here is an example:</p>

<pre><code>String url = "http://localhost:4848/management/domain/configs/config/server-config/network-config/network-listeners/network-listener/http-listener-1";

URL obj = new URL(url);
HttpURLConnection con = (HttpURLConnection) obj.openConnection();

con.setRequestProperty("Accept", "application/json");

BufferedReader in = new BufferedReader(
        new InputStreamReader(con.getInputStream()));
String inputLine;
StringBuffer response = new StringBuffer();

while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
</code></pre>

<p>This will give you a result similar to this:</p>

<pre><code>{
    "message": "",
    "command": "http-listener-1",
    "exit_code": "SUCCESS",
    "extraProperties": {
        "commands": [
            {
                "path": "create-ssl",
                "method": "POST",
                "command": "create-ssl"
            }
        ],
        "methods": [
            {
                "name": "GET"
            },
            {},
            {
                "messageParameters": {
                    "address": {
                        "defaultValue": "0.0.0.0",
                        "optional": "true",
                        "type": "string",
                        "key": "false"
                    },
                    "enabled": {
                        "defaultValue": "true",
                        "optional": "true",
                        "type": "boolean",
                        "key": "false"
                    },
                    "jkConfigurationFile": {
                        "defaultValue": "${com.sun.aas.instanceRoot}/config/glassfish-jk.properties",
                        "optional": "true",
                        "type": "string",
                        "key": "false"
                    },
                    "jkEnabled": {
                        "defaultValue": "false",
                        "optional": "true",
                        "type": "boolean",
                        "key": "false"
                    },
                    "name": {
                        "optional": "false",
                        "type": "string",
                        "key": "true"
                    },
                    "port": {
                        "optional": "false",
                        "type": "int",
                        "key": "false"
                    },
                    "protocol": {
                        "optional": "false",
                        "type": "string",
                        "key": "false"
                    },
                    "threadPool": {
                        "optional": "true",
                        "type": "string",
                        "key": "false"
                    },
                    "transport": {
                        "optional": "false",
                        "type": "string",
                        "key": "false"
                    }
                },
                "name": "POST"
            },
            {
                "messageParameters": {
                    "target": {
                        "acceptableValues": "",
                        "defaultValue": "server",
                        "optional": "true",
                        "type": "string"
                    }
                },
                "name": "DELETE"
            }
        ],
        "entity": {
            "address": "0.0.0.0",
            "enabled": "true",
            "jkConfigurationFile": "${com.sun.aas.instanceRoot}/config/glassfish-jk.properties",
            "jkEnabled": "false",
            "name": "http-listener-1",
            "port": "8080",
            "protocol": "http-listener-1",
            "threadPool": "http-thread-pool",
            "transport": "tcp"
        },
        "childResources": {
            "find-http-protocol": "http://localhost:4848/management/domain/configs/config/server-config/network-config/network-listeners/network-listener/http-listener-1/find-http-protocol",
            "property": "http://localhost:4848/management/domain/configs/config/server-config/network-config/network-listeners/network-listener/http-listener-1/property"
        }
    }
}
</code></pre>

<p>As you can see the result contains the port (8080 in this case).</p>

<p>You can either parse the value manually from the response string or use some JSON library to convert the response to an JSON object from which you can easily retrieve the property.</p>

<p>This procedure should work if your Glassfish Admin interface is unprotected, if you have enabled secure administration you may have to send authorization parameters with your HTTP request.</p>

<p><strong>See also:</strong></p>

<ul>
<li><a href="http://docs.oracle.com/cd/E18930_01/html/821-2416/gjipx.html" rel="nofollow">Oracle GlassFish 3.1 Administration Guide  - Using REST Interfaces to Administer GlassFish Server</a></li>
</ul>
