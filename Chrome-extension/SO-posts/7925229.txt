<p>Note : This code is not compilable, this is just to give you an idea, </p>

<ol>
<li><p>Make <code>displayImage()</code> return some value like indicating the number of images that are in the cache</p></li>
<li><p>I guess you are using it in a <code>getView()</code></p>

<pre><code>public View getView(int position, View convertView, ViewGroup parent) {
View vi = convertView;
if(convertView == null){
    vi = inflater.inflate(R.layout.galitem, null);
ImageView image=(ImageView)vi.findViewById(R.id.galimage);
int queueLength = imageLoader.DisplayImage(data[position], activity, image);
if(queueLength &gt; threshold) 
{
    Message message = new Message();   
    message.what = TestHandler.SHOW_THE_DAMN_SPINNER_PROGRESS;       
    activity.myHandler.sendMessage(message);             
}  
}

return vi;    
}
</code></pre></li>
</ol>

<p>And modify the ImageLoader </p>

<pre><code>          class PhotosLoader extends Thread {
            @Override
            public void run() {
                try {
                    while (true) {
                        //thread waits until there are any images to load in the queue
                        if (photosQueue.photosToLoad.size() == 0)
                            synchronized (photosQueue.photosToLoad) {
                                photosQueue.photosToLoad.wait();
                            }
                        if (photosQueue.photosToLoad.size() != 0) {
                            PhotoToLoad photoToLoad;
                            synchronized (photosQueue.photosToLoad) {
                                photoToLoad = photosQueue.photosToLoad
                                        .pop();
                            }
                            Bitmap bmp = getBitmap(photoToLoad.url);
                            cache.put(photoToLoad.url, bmp);
                            if (((String) photoToLoad.imageView.getTag())
                                    .equals(photoToLoad.url)) {
                                BitmapDisplayer bd = new BitmapDisplayer(
                                        bmp, photoToLoad.imageView);
                                Activity a = (Activity) photoToLoad.imageView
                                        .getContext();
                                a.runOnUiThread(bd);
                                Message message = new Message();   
                                message.what = TestHandler.REMOVE_PROGRESS_BAR;       
                                a.myHandler.sendMessage(message);    
                            }

                        }
                        if (Thread.interrupted())
                            break;
                    }
                } catch (InterruptedException e) {
                    //allow thread to exit
                }
            }
        }
</code></pre>

<ol>
<li><p>In your activity, </p>

<pre><code> Handler myHandler = new Handler() { 

 ProgressDialog dialog = null; 
 public void handleMessage(Message msg) {   
 switch (msg.what) {   
 case TestHandler.SHOW_THE_DAMN_SPINNER_PROGRESS:   
          dialog  = ProgressDialog.show(this, "Working..", "Reloading cache", true,
                        false);

  break;   

    case TestHandler.REMOVE_PROGRESS_BAR: 
    dialog.dismiss();
    break;  
           }   
    super.handleMessage(msg);   
      }   
 };
</code></pre></li>
</ol>
