<p>You are committing few mistakes which cannot be ignored.
Listview recycles views on scroll, so it is very important that you handle this check. Not doing so will cause views inflation at wrong positions. Use ViewHolder</p>

<p><strong>Solution:</strong></p>

<pre><code>public View getView(int position, View convertView, ViewGroup parent) {

    if (convertView == null) {
        /* This is where you initialize new rows, by:
         *  - Inflating the layout,
         *  - Instantiating the ViewHolder,
         *  - And defining any characteristics that are consistent for every row */
    } else {
        /* Fetch data already in the row layout, 
         *    primarily you only use this to get a copy of the ViewHolder */
    }

    /* Set the data that changes in each row, like `title` and `size`
     *    This is where you give rows there unique values. */

    return convertView;
}
</code></pre>

<p>You need to implement <code>OnClickListener</code> outside of checks like:</p>

<pre><code>@Override
   public View getView(int position, View convertView, ViewGroup parent) {

    if (convertView == null) {
        inflater = (LayoutInflater) activity
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        convertView = inflater.inflate(R.layout.list_row, null);

        NetworkImageView thumbNail = (NetworkImageView) convertView
                .findViewById(R.id.thumbnail);
        TextView title = (TextView) convertView.findViewById(R.id.title);
        TextView rating = (TextView) convertView.findViewById(R.id.rating);
        TextView genre = (TextView) convertView.findViewById(R.id.genre);
        Button year = (Button) convertView.findViewById(R.id.releaseYear);

        }else {

        }        

    year.setOnClickListener(new OnClickListener() {
    @Override
        public void onClick(View v) {
            Toast.makeText(activity,  "ramu...", Toast.LENGTH_LONG).show();
            Intent callIntent = new Intent(Intent.ACTION_CALL);
            callIntent.setData(Uri.parse("tel:123456789"));
            startActivity(callIntent);
        }
    });

        // getting movie data for the row
        Movie m = movieItems.get(position);

        // thumbnail image
        thumbNail.setImageUrl(m.getThumbnailUrl(), imageLoader);
        System.out.println("thumbNail===============&gt;"+thumbNail);

        // title
        title.setText(m.getTitle());

        // rating
        rating.setText("Rating: " + String.valueOf(m.getRating()));

        // release year
        year.setText(String.valueOf(m.getYear()));
        return convertView;
    }
</code></pre>

<p>Initialize <code>ImageLoader</code> in adapter constructor:</p>
