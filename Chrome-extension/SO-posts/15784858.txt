<p>Modify your DialogFragment:</p>

<pre><code>public class DConce extends DialogFragment{

  public static DConce newInstance(){
    DConce f = new DConce();
    return f;
  }

  public Dialog onCreateDialog(Bundle savedInstanceState) {
    AlertDialog.Builder dshow = new AlertDialog.Builder(getActivity());

    LayoutInflater inflater = getActivity().getLayoutInflater();

    dshow.setView(inflater.inflate(R.layout.dialogconc, null))
      .setPositiveButton("Send", new DialogInterface.OnClickListener() {
        @Override
        public void onClick(DialogInterface dialog, int id) {
           //TODO
        }
      })
      .setNegativeButton("Close", new DialogInterface.OnClickListener() {
        public void onClick(DialogInterface dialog, int id) {
          DConce.this.getDialog().cancel();
        }
      });     
    return dshow.create();
  }    
}
</code></pre>

<p>Then to show it;</p>

<pre><code>case R.id.btnConce:
  DConce.newInstance().show(getChildFragmentManager(), null);
  break;
</code></pre>

<p>You can of course optionally pass in a <code>String</code> for the <code>tag</code> parameter, to uniquely identify the fragment.</p>
