<p>Use Edittext for Filter data from Listview.
here what i have done in my Adapter class and in my activity to filter data:</p>

<p><strong>Adapter Class</strong></p>

<pre><code>public class FindAProfessorAdapter extends ArrayAdapter&lt;Data&gt; implements
        Filterable {

    int layoutResourceId;
    LayoutInflater mInflater;
    ArrayList&lt;Data&gt; list;
    ArrayList&lt;Data&gt; secondlist;
    Context context;
    Data data;

    public FindAProfessorAdapter(Context context, int layoutResourceId,
            ArrayList&lt;Data&gt; data) {
        super(context, layoutResourceId, data);

        mInflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        list = new ArrayList&lt;Data&gt;();
        secondlist = new ArrayList&lt;Data&gt;();
        secondlist.addAll(data);
        list.addAll(secondlist);
        this.layoutResourceId = layoutResourceId;
        this.context = context;
        this.list = data;
        getFilter();
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        final ViewHolder holder;

        if (convertView == null) {

            mInflater = LayoutInflater.from(context);

            convertView = mInflater.inflate(layoutResourceId, parent, false);

            holder = new ViewHolder();

            holder.textView = (TextView) convertView
                    .findViewById(R.id.findproname);

            convertView.setTag(holder);

        } else {

            holder = (ViewHolder) convertView.getTag();
        }

        holder.textView.setText(list.get(position).getName());

        return convertView;
    }

    @Override
    public Filter getFilter() {

        Filter filter = new Filter() {

            @SuppressWarnings("unchecked")
            @Override
            protected void publishResults(CharSequence constraint,
                    FilterResults results) {

                list = (ArrayList&lt;Data&gt;) results.values;

                notifyDataSetChanged();

                clear();

                for (int i = 0; i &lt; list.size(); i++) {
                    add(list.get(i));
                    notifyDataSetChanged();
                }
            }

            @Override
            protected FilterResults performFiltering(CharSequence constraint) {

                FilterResults filterResults = new FilterResults();

                ArrayList&lt;Data&gt; FilteredArrList = new ArrayList&lt;Data&gt;();

                if (secondlist == null) {

                    secondlist = new ArrayList&lt;Data&gt;(list);
                }

                if (constraint != null &amp;&amp; constraint.toString().length() != 0) {

                    constraint = constraint.toString().toLowerCase(
                            Locale.getDefault());

                    for (int i = 0; i &lt; list.size(); i++) {

                        Data name = secondlist.get(i);

                        if (name.getName().toLowerCase(Locale.getDefault())
                                .contains(constraint)) {

                            FilteredArrList.add(name);
                        }
                    }
                    filterResults.count = FilteredArrList.size();
                    filterResults.values = FilteredArrList;

                } else {
                    synchronized (this) {
                        filterResults.count = secondlist.size();
                        filterResults.values = secondlist;
                    }

                }
                return filterResults;
            }
        };
        return filter;
    }

    class ViewHolder {

        TextView textView;
    }
}
</code></pre>

<p>In my Activity:</p>

<pre><code>editText = (EditText) view.findViewById(R.id.findaprofessor);

    editText.addTextChangedListener(new TextWatcher() {

            @Override
            public void onTextChanged(CharSequence s, int start, int before,
                    int count) {

                adapter.getFilter().filter(s.toString());
            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                    int after) {

            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
</code></pre>

<p>You need to use this as a example and edit your adapter according to this.</p>
