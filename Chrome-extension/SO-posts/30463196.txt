<p>You can use a <a href="http://developer.android.com/guide/topics/ui/layout/listview.html" rel="nofollow">ListView</a>. It is used to display a list of things in an arrnaged manner as you need now.</p>

<p>See <a href="http://www.vogella.com/tutorials/AndroidListView/article.html" rel="nofollow">this</a> tutorial.</p>

<p>To customise you layout you will have to create a custom adapter that defines the view of a single item.</p>

<p>StableArrayAdapter.java</p>

<pre><code>// define your custom adapter
    private class StableArrayAdapter extends ArrayAdapter&lt;String&gt; {

        ArrayList&lt;String&gt; items1;
        ArrayList&lt;String&gt; description1;

        ViewHolder viewHolder;

        public StableArrayAdapter(Context context, int textViewResourceId, ArrayList&lt;String&gt; items, ArrayList&lt;String&gt; description) {

            // let android do the initializing :)
            super(context, textViewResourceId, items);
            this.items1=items;
            this.description1 = description;
        }

        @Override
        public int getItemViewType(int position) {
            return (position == this.getCount() - 1) ? 1 : 0;
        }

        private class ViewHolder {
            TextView item;
            TextView desc;
        }

        @Override
        public View getView(final int position, View convertView, ViewGroup parent) {

            if (convertView == null) {
                LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                convertView = inflater.inflate(R.layout.single, parent, false);
                viewHolder = new ViewHolder();
                viewHolder.item = (TextView) convertView.findViewById(R.id.txt_item);
                viewHolder.desc = (TextView) convertView.findViewById(R.id.txt_desc);
                convertView.setTag(viewHolder);
            } else{
                viewHolder = (ViewHolder) convertView.getTag();
            }
            viewHolder.item.setText(items1.get(position).toString());
            viewHolder.desc.setText(description1.get(position).toString());

            return convertView;
        }

        @Override
        public long getItemId(int arg0) {
            return arg0;
        }

    } 
</code></pre>

<p>single.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" &gt;

    &lt;TextView
        android:id="@+id/txt_item"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:id="@+id/txt_desc"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;

&lt;/LinearLayout&gt;
</code></pre>
