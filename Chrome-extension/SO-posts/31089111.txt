<p>Change adapter like as follows, </p>

<pre><code>public class ImageAdapter extends BaseAdapter {
    private String drawablePrefix;
    private Context mContext;
    private ArrayList&lt;String&gt; mThumbUris;

    public ImageAdapter(Context c) {
        mContext = c;
        String packName=mContext.getPackageName();
        drawablePrefix="android.resource://" +packName+ "/";

        ArrayList&lt;String&gt; uriPaths=new ArrayList&lt;&gt;();// place your drawables.

        uriPaths.add(drawablePrefix+ R.drawable.weather);
        uriPaths.add(drawablePrefix+ R.drawable.wall_bird);
        uriPaths.add(drawablePrefix+ R.drawable.weather);
        uriPaths.add(drawablePrefix+ R.drawable.weather);
        uriPaths.add(drawablePrefix+ R.drawable.weather);
        uriPaths.add(drawablePrefix+ R.drawable.weather);
        uriPaths.add(drawablePrefix+ R.drawable.weather);
        mThumbUris=uriPaths;
    }

    public int getCount() {
        return mThumbUris.size();
    }

    public String getItem(int position) {
        return mThumbUris.get(position);
    }

    public long getItemId(int position) {
        return 0;
    }

    // create a new ImageView for each item referenced by the Adapter
    public View getView(int position, View convertView, ViewGroup parent) {
        ImageView imageView;
        if (convertView == null) {
            // if it's not recycled, initialize some attributes
            imageView = new ImageView(mContext);
            imageView.setLayoutParams(new GridView.LayoutParams(85, 85));
            imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
            imageView.setPadding(8, 8, 8, 8);
        } else {
            imageView = (ImageView) convertView;
        }

        Uri imgUri=Uri.parse(mThumbUris.get(position));

        Picasso.with(mContext)
                .load(imgUri)
                .placeholder(R.drawable.weather)
                .centerCrop()
                .resize(400, 400)
                .into(imageView);

        return imageView;
    }

    public ArrayList&lt;String&gt; getUriList(){
        return mThumbUris;
    }
}
</code></pre>

<p>change onPostExecute logic as follows.</p>

<pre><code> protected void onPostExecute(String[] result) {
            Uri.Builder url_for_poster = new Uri.Builder();
            ArrayList&lt;String&gt; uriPaths = imag_adap.getUriList();
            uriPaths.clear();
            for (int j = 0; j &lt; count; j++) {
                String pos_sin_path = pos_path[j];
                Uri.Builder url_build = url_for_poster.scheme("http").authority("image.tmdb.org/t/p").appendPath("w92").appendPath("pos_sin_path");
                String url = url_build.toString();
                uriPaths.add(url);
            }
            imag_adap.notifyDataSetChanged();
        }
</code></pre>

<p>then it works fine.</p>
