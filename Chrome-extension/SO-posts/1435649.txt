<p>erickson's <a href="http://stackoverflow.com/questions/1429172/list-files-inside-a-jar/1429275#1429275">answer</a>  worked perfectly: </p>

<p>Here's the working code.</p>

<pre><code>CodeSource src = MyClass.class.getProtectionDomain().getCodeSource();
List&lt;String&gt; list = new ArrayList&lt;String&gt;();

if( src != null ) {
    URL jar = src.getLocation();
    ZipInputStream zip = new ZipInputStream( jar.openStream());
    ZipEntry ze = null;

    while( ( ze = zip.getNextEntry() ) != null ) {
        String entryName = ze.getName();
        if( entryName.startsWith("images") &amp;&amp;  entryName.endsWith(".png") ) {
            list.add( entryName  );
        }
    }

 }
 webimages = list.toArray( new String[ list.size() ] );
</code></pre>

<p>And I have just modify my load method from this:</p>

<pre><code>File[] webimages = ... 
BufferedImage image = ImageIO.read(this.getClass().getResource(webimages[nextIndex].getName() ));
</code></pre>

<p>To this:</p>

<pre><code>String  [] webimages = ...

BufferedImage image = ImageIO.read(this.getClass().getResource(webimages[nextIndex]));
</code></pre>
