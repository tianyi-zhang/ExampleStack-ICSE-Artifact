<p>In my case cxf generates objects like</p>

<pre><code>public static class MyObject {
   @XmlMixed
   @XmlAnyElement(lax = true)
   protected List&lt;Object&gt; content;

   public List&lt;Object&gt; getContent() {
      if (content == null) {
          content = new ArrayList&lt;Object&gt;();
      }
      return this.content;
    }
}
</code></pre>

<p>Then I use this function to get an xml string</p>

<pre><code>private static String elementToString(final ElementNSImpl doc) {

    try {
        StringWriter sw = new StringWriter();
        TransformerFactory tf = TransformerFactory.newInstance();
        Transformer transformer = tf.newTransformer();
        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "no");
        transformer.setOutputProperty(OutputKeys.METHOD, "xml");
        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
        transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");

        transformer.transform(new DOMSource(doc.getOwnerDocument()), new StreamResult(sw));
        return sw.toString();
    } catch (Exception ex) {
        throw new RuntimeException("Error converting to String", ex);
    }
}
</code></pre>

<p>You call it like </p>

<pre><code>elementToString((ElementNSImpl) myObject.getContent().get(0));
</code></pre>
