<p>You can use a custom <code>FilterReader</code>.</p>

<pre><code>class YourFilterReader extends FilterReader{
    @Override
    public int read() throws IOException{
        int read;
        do{
            read = super.read();
        } while(read == '@');

        return read; 
    }

    @Override
    public int read(char[] cbuf, int off, int len) throws IOException{
        int read = super.read(cbuf, off, len);

        if (read == -1) {
            return -1;
        }

        int pos = off - 1;
        for (int readPos = off; readPos &lt; off + read; readPos++) {
            if (read == '@') {
                continue;
            } else {
                pos++;
            }

            if (pos &lt; readPos) {
                cbuf[pos] = cbuf[readPos];
            }
        }
        return pos - off + 1;
    }
}
</code></pre>

<hr>

<p><strong>Resources :</strong></p>

<ul>
<li><a href="http://download.oracle.com/javase/6/docs/api/java/io/FilterReader.html" rel="nofollow">Javadoc - FilterReader</a></li>
<li><a href="http://info.tsachev.org/2009/05/skipping-invalid-xml-character-with.html" rel="nofollow">BCRDF - Skipping Invalid XML Character with ReaderFilter</a></li>
</ul>

<p><strong>On the same topic :</strong></p>

<ul>
<li><a href="http://stackoverflow.com/questions/3215506/filter-remove-invalid-xml-characters-from-stream">filter/remove invalid xml characters from stream</a></li>
</ul>
