<p>Declaring onClick-Listeners via XML is possible if you work with Activities. According to the Google API, however, you need to declare OnClickListeners programmatically if you use Fragments.</p>

<blockquote>
  <p>[...] You can also declare the click event handler programmatically rather than in an XML layout. This might be necessary if you instantiate the Button at runtime or you need to declare the click behavior in a Fragment subclass.</p>
</blockquote>

<p>Source: 
<a href="http://developer.android.com/guide/topics/ui/controls/button.html" rel="nofollow">http://developer.android.com/guide/topics/ui/controls/button.html</a></p>

<p>So you may want to use this instead:</p>

<pre><code>public class MainFragment extends Fragment {
public TextView displayTextView;
public Button yourButton;
public MainFragment() { }

@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container,
        Bundle savedInstanceState) {

    View rootView = inflater.inflate(R.layout.fragment_main, container, false);
    this.displayTextView = (TextView)rootView.findViewById(R.id.displayTextView);
    yourButton = (Button)rootView.findViewById(R.id.button10);
    yourButton.setOnClickListener(new View.OnClickListener() {
         public void onClick(View v) {
              displayTextView.setText("Nothing to set for some reason!");
         }
    });

        return rootView;
    }
}
</code></pre>
