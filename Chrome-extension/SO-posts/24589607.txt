<p>Here is how I coped with the same problem. The idea is first to set the <code>AdView</code> and then put the <code>gameView</code> below the <code>AdView</code> in the layout.</p>

<pre><code>@Override public void onCreate (Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    // Create the layout
    RelativeLayout layout = new RelativeLayout(this);

    // Do the stuff that initialize() would do for you
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, 
            WindowManager.LayoutParams.FLAG_FULLSCREEN);
    getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);

    // Create the libgdx View
    View gameView = initializeForView(new HelloWorld(), false);

    // Create and setup the AdMob view
    AdView adView = new AdView(this, AdSize.BANNER, "xxxxxxxx"); // Put in your secret key here
    adView.loadAd(new AdRequest());

    // Add the AdMob view
    RelativeLayout.LayoutParams adParams = 
        new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, 
                RelativeLayout.LayoutParams.WRAP_CONTENT);
    adParams.addRule(RelativeLayout.ALIGN_PARENT_TOP);
    adParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);

    //define in resource xml: &lt;item type="id" name="adViewId"/&gt;
    adView.setId(R.id.adViewId); 

    layout.addView(adView, adParams);

    RelativeLayout.LayoutParams gameParams = 
        new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, 
                RelativeLayout.LayoutParams.WRAP_CONTENT);
    gameParams.addRule(RelativeLayout.BELOW, adView.getId());

    // Add the libgdx view
    layout.addView(gameView, gameParams);

    // Hook it all up
    setContentView(layout);
}
</code></pre>
