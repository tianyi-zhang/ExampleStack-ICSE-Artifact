<p>Check Example Given Along With This library and also check following code (This Code is From example code of this library only):</p>

<pre><code>@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_pulltorefresh);

    mPullRefreshListView = (PullToRefreshListView) findViewById(R.id.pull_refresh_list);

    // Set a listener to be invoked when the list should be refreshed.
    mPullRefreshListView.setOnRefreshListener(new OnRefreshListener&lt;ListView&gt;() {
        @Override
        public void onRefresh(PullToRefreshBase&lt;ListView&gt; refreshView) {
            String label = DateUtils.formatDateTime(getApplicationContext(), System.currentTimeMillis(),
                    DateUtils.FORMAT_SHOW_TIME | DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_ABBREV_ALL);

            // Update the LastUpdatedLabel
            refreshView.getLoadingLayoutProxy().setLastUpdatedLabel(label);

            // Do work to refresh the list here.
            new GetDataTask().execute();
        }
    });
    // Add an end-of-list listener
    mPullRefreshListView.setOnLastItemVisibleListener(new OnLastItemVisibleListener() {

        @Override
        public void onLastItemVisible() {
            Toast.makeText(PullToRefresh.this, "End of List!", Toast.LENGTH_SHORT).show();
        }
    });

    ListView actualListView = mPullRefreshListView.getRefreshableView();

    // Need to use the Actual ListView when registering for Context Menu
    registerForContextMenu(actualListView);

    mListItems = new LinkedList&lt;String&gt;();
    mListItems.addAll(Arrays.asList(mStrings));

    mAdapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_list_item_1, mListItems);

    /**
     * Add Sound Event Listener
     */
    SoundPullEventListener&lt;ListView&gt; soundListener = new SoundPullEventListener&lt;ListView&gt;(this);
    soundListener.addSoundEvent(State.PULL_TO_REFRESH, R.raw.pull_event);
    soundListener.addSoundEvent(State.RESET, R.raw.reset_sound);
    soundListener.addSoundEvent(State.REFRESHING, R.raw.refreshing_sound);
    mPullRefreshListView.setOnPullEventListener(soundListener);

    // You can also just use setListAdapter(mAdapter) or
    // mPullRefreshListView.setAdapter(mAdapter)
    actualListView.setAdapter(mAdapter);
}
</code></pre>

<p>In above code list is used as following</p>

<pre><code>ListView actualListView = mPullRefreshListView.getRefreshableView();
</code></pre>

<p>So after implimenting this you can use longpresslistener on it..</p>

<pre><code>actualListView.setOnLongClickListener(new OnLongClickListener() {

    @Override
    public boolean onLongClick(View v) {
        Log.d("privet ia long click", "yes");
        return true;
    }
});
</code></pre>

<p>Hope it help and you got it...Cheers!</p>
