<p>You create new xml say row.xml, which we can inflate inside listview for each row.</p>

<p>Design the row however you want, for ex: </p>

<p>row.xml  </p>

<pre><code>&lt;LinearLayout android:layout_height="wrap_content"
     android:layout_width="fill_parent"
      android:orientation="horizontal"&gt;  
    &lt;ImageView ..../&gt;
    &lt;CheckBox ...../&gt;
    &lt;TextView ...../&gt;
    &lt;TextView ...../&gt;
 &lt;/LinearLayout&gt;
</code></pre>

<p>Then use CustomAdapter for your listview</p>

<p>like,</p>

<pre><code>listView.setAdapter(new CustomAdapter());
</code></pre>

<p>CustomAdapter,</p>

<pre><code> class CustomAdapter extends BaseAdapter{
  publicCustomAdapter() {
        mInflater = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    }



    @Override
    public int getCount() {
        return xyz.size();
    }

    @Override
    public String getItem(int position) {
        return xyz.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        ViewHolder holder = null;
        if (convertView == null) {
            convertView = mInflater.inflate(R.layout.row, null);
            holder = new ViewHolder();
       holder.imageView = (ImageViewView)convertView.findViewById(R.id.image);
       holder.checkbox = (CheckBox)convertView.findViewById(R.id.checkbox);
            holder.textView1 = (TextView)convertView.findViewById(R.id.text1);
            holder.textView2 = (TextView)convertView.findViewById(R.id.text2);
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder)convertView.getTag();
        }
        //TODO set the values for views and return view
        return convertView;
    }

}
</code></pre>
