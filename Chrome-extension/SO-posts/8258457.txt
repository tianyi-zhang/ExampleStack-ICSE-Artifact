<p>Looks like overriding a couple more functions did the job.
Full source of working version:</p>

<pre><code>public class CustomArrayAdapter extends ArrayAdapter&lt;String&gt; implements Filterable {
private List&lt;String&gt; mOrigionalValues;
private List&lt;String&gt; mObjects;
private Filter mFilter;

public CustomArrayAdapter(Context context, int textViewResourceId) {
    super(context, textViewResourceId);
    mOrigionalValues = new ArrayList&lt;String&gt;();
    mObjects = new ArrayList&lt;String&gt;();
}

public void add(String object) {
    mOrigionalValues.add(object);
    this.notifyDataSetChanged();
}

@Override
public int getCount() {
    return mObjects.size();
}

@Override
public String getItem(int position) {
    return mObjects.get(position);
}

public Filter getFilter() {
    if (mFilter == null) {
        mFilter = new CustomFilter();
    }
    return mFilter;
}

@Override
public void notifyDataSetChanged() {
    super.notifyDataSetChanged();
}

private class CustomFilter extends Filter {

    @Override
    protected FilterResults performFiltering(CharSequence constraint) {
        FilterResults results = new FilterResults();

        if(constraint == null || constraint.length() == 0) {
            ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;(mOrigionalValues);
            results.values = list;
            results.count = list.size();
        } else {
            ArrayList&lt;String&gt; newValues = new ArrayList&lt;String&gt;();
            for(int i = 0; i &lt; mOrigionalValues.size(); i++) {
                String item = mOrigionalValues.get(i);
                if(item.contains(constraint)) {
                    newValues.add(item);
                }
            }
            results.values = newValues;
            results.count = newValues.size();
        }       

        return results;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected void publishResults(CharSequence constraint,
            FilterResults results) {
        mObjects = (List&lt;String&gt;) results.values;
        Log.d("CustomArrayAdapter", String.valueOf(results.values));
        Log.d("CustomArrayAdapter", String.valueOf(results.count));
        notifyDataSetChanged();
    }

}

}
</code></pre>
