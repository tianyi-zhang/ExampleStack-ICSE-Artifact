<p>I hope two mistakes you made.</p>

<pre><code> public List&lt;WorkoutItem&gt; getDataForListView()
{
    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
    String workoutTime = prefs.getString("Workout Time", "");

    List&lt;WorkoutItem&gt; workoutsList = new ArrayList&lt;WorkoutItem&gt;();

    for(int i = 0; i &lt; (workoutsList.size() + 1); i++)
    {
        WorkoutItem workout = new WorkoutItem();
        workout.workoutNum = "Workout " + (i+1);
        workout.time = workoutTime;

        workoutsList.add(workout);
    }

    return workoutsList;
}
</code></pre>

<p>I guess you are trying to add data to list view. Since you are creating new List using </p>

<pre><code> List&lt;WorkoutItem&gt; workoutsList = new ArrayList&lt;WorkoutItem&gt;();
</code></pre>

<p>workoutsList.size() will return zero. your loop iterates till list size+1. (only one time )</p>

<p>then you need to pass the List from WorkoutActivity to OverviewActivity.</p>

<p>change WorkoutActivity insert following code</p>

<pre><code>public class WorkoutActivity extends Activity {

WorkoutItemAdapter workoutItemAdapter;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_workout);
}

@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.workout, menu);
    return true;
}

@Override
public boolean onOptionsItemSelected(MenuItem item) {
    // Handle action bar item clicks here. The action bar will
    // automatically handle clicks on the Home/Up button, so long
    // as you specify a parent activity in AndroidManifest.xml.
    int id = item.getItemId();
    if (id == R.id.action_settings) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

@Override
public void onBackPressed() {
    moveTaskToBack(true);
}

public List&lt;WorkoutItem&gt; getDataForListView() {
    SharedPreferences prefs = PreferenceManager
            .getDefaultSharedPreferences(this);
    String workoutTime = prefs.getString("Workout Time", "");

    List&lt;WorkoutItem&gt; workoutsList = new ArrayList&lt;WorkoutItem&gt;();

    for (int i = 0; i &lt; (10+ 1); i++) {
        WorkoutItem workout = new WorkoutItem();
        workout.workoutNum = "Workout " + (i + 1);
        workout.time = workoutTime;

        workoutsList.add(workout);
    }

    return workoutsList;
}

public void startAndStopTimer(View view) {
    long totalTime = 0;

    Button startAndStop = (Button) findViewById(R.id.button1);
    Chronometer c = (Chronometer) findViewById(R.id.chronometer1);
    if (startAndStop.getText().equals("Start")) {
        c.setBase(SystemClock.elapsedRealtime() + totalTime);
        c.start();
        startAndStop.setText("Pause");

    } else {
        totalTime = c.getBase() - SystemClock.elapsedRealtime();
        c.stop();
        startAndStop.setText("Start");
    }
}

public void save(View view) {
    // create broadcast receiver saying ...saved.

    // Add ArrayList value to arrayList
    Chronometer timer = (Chronometer) findViewById(R.id.chronometer1);

    SharedPreferences timerSettings = PreferenceManager
            .getDefaultSharedPreferences(this);
    Editor editor = timerSettings.edit();
    editor.putString("Workout Time", timer.getText().toString());
    editor.commit();

    // go back to main activity.
    Intent intent = new Intent(WorkoutActivity.this, OverviewActivity.class);
    intent.putStringArrayListExtra("stock_list", getDataForListView());
    startActivity(intent);
    finish();
}

public void cancel(View view) {
    // go back to main activity
    Intent intent = new Intent(WorkoutActivity.this, OverviewActivity.class);
    intent.putStringArrayListExtra("stock_list", getDataForListView());
    startActivity(intent);

    finish();
}

}
</code></pre>

<p>and OverviewActivity to this</p>

<pre><code>public class OverviewActivity extends Activity{ 


List&lt;WorkoutItem&gt; workList;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_overview);
    Intent i = getIntent();  
    workList = i.getStringArrayListExtra("stock_list");
    LoadPreferences();  
    LoadListView();
}
private void LoadListView() {
    // TODO Auto-generated method stub
    ListView workoutList = (ListView) findViewById(R.id.workout_list);

    WorkoutItemAdapter workoutAdapter= new WorkoutItemAdapter(workList);
    workoutList.setAdapter(workoutAdapter);
}


@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.overview, menu);
    return true;
}

@Override
public boolean onOptionsItemSelected(MenuItem item) {
    // Handle action bar item clicks here. The action bar will
    // automatically handle clicks on the Home/Up button, so long
    // as you specify a parent activity in AndroidManifest.xml.
    int id = item.getItemId();
    if (id == R.id.action_settings) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

private void LoadPreferences()
{       
        SharedPreferences sharedPreferences =     PreferenceManager.getDefaultSharedPreferences(this);
        String Name = sharedPreferences.getString("Name", "");

        TextView textView = (TextView) findViewById(R.id.textView2);
        textView.setText(Name);
}

public void openWorkoutActivity(View view)
{
    Intent intent = new Intent(OverviewActivity.this, WorkoutActivity.class);
    startActivity(intent);
    finish();
}
public void openProfileActivity(View view)
{
    Intent intent = new Intent(OverviewActivity.this, ProfileActivity.class);
    startActivity(intent);
    finish();
}
public void openHistoryActivity(View view)
{
    Intent intent = new Intent(OverviewActivity.this, HistoryActivity.class);
    startActivity(intent);
    finish();
}

public class WorkoutItemAdapter extends BaseAdapter{

    int rowCount = 1;
    List&lt;WorkoutItem&gt; workoutsList ;

  public  WorkoutItemAdapter( List&lt;WorkoutItem&gt; list) {
  workoutsList=list;
}

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        if(convertView == null){
            LayoutInflater inflater = (LayoutInflater) WorkoutActivity.this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = inflater.inflate(R.layout.workout_item, parent, false);
        }

        TextView workoutNum = (TextView) convertView.findViewById(R.id.workout_col);
        TextView workoutTime = (TextView) convertView.findViewById(R.id.time_col);      

        WorkoutItem workout = workoutsList.get(position);

        workoutNum.setText(workout.workoutNum);
        workoutTime.setText(workout.time);

        return convertView;
    }

    @Override
    public int getCount() {
        return workoutsList.size();
        // TODO Auto-generated method stub
    }

    @Override
    public WorkoutItem getItem(int position) {
        // TODO Auto-generated method stub
        return workoutsList.get(position);
    }

    @Override
    public long getItemId(int position) {
        // TODO Auto-generated method stub
        return position;
    }
    public void addRow() {
        rowCount++;
        notifyDataSetChanged();
    }
}
}
</code></pre>

<p>try these code. I have not yet tried, hope will works fine.</p>
