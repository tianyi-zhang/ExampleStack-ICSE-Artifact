<p>From what I can see there is nothing wrong with the working of the code, just the way the classes are defined.</p>

<p>If this is all in one class file then you are going to get an error. To correct this just edit the class modifiers like this:</p>

<pre><code>import java.awt.Component;
import javax.swing.*;
import javax.swing.table.*;

//Testing automatic column sizing
public class TestColumnResizer {
    final static Object[][] TABLE_DATA = {
            { new Integer(1), "ONJava", "http://www.onjava.com/" },
            { new Integer(2), "Joshy's Site", "http://www.joshy.org/" },
            { new Integer(3), "Anime Weekend Atlanta",
                    "http://www.awa-con.com/" },
            { new Integer(4), "QTJ book",
                    "http://www.oreilly.com/catalog/quicktimejvaadn/" } };

    final static String[] COLUMN_NAMES = { "Count", "Name", "URL" };

    public static void main(String[] args) {
        // 142 mac l&amp;f has a header bug - force metal for today
        try {

            UIManager.setLookAndFeel(UIManager
                    .getCrossPlatformLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        DefaultTableModel mod = new DefaultTableModel(TABLE_DATA, COLUMN_NAMES);
        JTable table = new JTable(mod);
        JScrollPane pane =

        new JScrollPane(table, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS,
                ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        JFrame frame = new JFrame("JTable Column Widths");
        frame.getContentPane().add(pane);
        frame.pack();
        frame.setVisible(true);

        try {
            Thread.sleep(5000);
        } catch (Exception e) {
            e.printStackTrace();
        }

        // now get smart about col widths
        final JTable fTable = table;
        SwingUtilities.invokeLater(new Runnable() {

            public void run() {
                ColumnResizer.adjustColumnPreferredWidths(fTable);
                fTable.revalidate();
            }
        });
    }
}


class ColumnResizer {
    public static void adjustColumnPreferredWidths(JTable table) {
        // strategy - get max width for cells in column and
        // make that the preferred width
        TableColumnModel columnModel = table.getColumnModel();
        for (int col = 0; col &lt; table.getColumnCount(); col++) {

            int maxwidth = 0;
            for (int row = 0; row &lt; table.getRowCount(); row++) {
                TableCellRenderer rend = table.getCellRenderer(row, col);
                Object value = table.getValueAt(row, col);
                Component comp = rend.getTableCellRendererComponent(table,
                        value, false, false, row, col);
                maxwidth = Math.max(comp.getPreferredSize().width, maxwidth);
            } // for row
            TableColumn column = columnModel.getColumn(col);
            column.setPreferredWidth(maxwidth);
        } // for col
    }
}
</code></pre>

<p>If it is not all in one class file than try: <a href="http://www.tech-recipes.com/rx/826/java-exception-in-thread-main-javalangnoclassdeffounderror/" rel="nofollow">http://www.tech-recipes.com/rx/826/java-exception-in-thread-main-javalangnoclassdeffounderror/</a>. Basically there could be a problem with your classpath. </p>

<p>Don't worry though, the code appears to do everything you specified!</p>
