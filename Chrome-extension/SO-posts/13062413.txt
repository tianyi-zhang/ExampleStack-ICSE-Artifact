<p>You need to actually manually generate a notification in the <code>onMessage()</code> method. onMessage() is just a method that will be called when your app received the tickle from the server. You may not always want to generate a visible status bar notification to the user. So Google gave the flexibility to only put the notification if you want. Regardless, here's code that will help you generate this notification. You can tweak this for your needs, obviously.</p>

<pre><code>private void generateNotification(Context context, String message)
{
    // put an icon for your notification in your res/drawable folder
    // and then get the icon as an int
    int icon = R.drawable.notif_icon_name;
    long when = System.currentTimeMillis(); // can change this to a future time if desired
    NotificationManager notificationManager = (NotificationManager) context
         .getSystemService(Context.NOTIFICATION_SERVICE);
    Notification notification = new Notification(icon, message, when);
    String title = context.getString(R.string.app_name);
    Intent notificationIntent = new Intent(context, BaseActivity.class);
    // set intent so it does not start a new activity
    notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP
        | Intent.FLAG_ACTIVITY_SINGLE_TOP);
    PendingIntent intent = PendingIntent.getActivity(context, 0, notificationIntent, 0);
    notification.setLatestEventInfo(context, title, message, intent);
    notification.flags |= Notification.FLAG_AUTO_CANCEL;
    notification.defaults |= Notification.DEFAULT_SOUND;
    notificationManager.notify(0, notification);
}
</code></pre>
