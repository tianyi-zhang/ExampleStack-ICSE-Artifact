<p>I would override the equals method in your MyClass class.</p>

<pre><code>@Override
public boolean equals(Object obj) {//if you insist in using an Object as argument instead of double[][]
   if (!(obj instanceof MyClass)) {
      return false;
   }

   MyClass myObj = (MyClass) obj;
   if(_data.length == myObj._data.length){
      for(int i=0; i&lt;_data.length; i++){
         if(_data[i].length == myObj._data[i].length){
            for(int j=0; j&lt;_data[i].length; j++){
               if(_data[i][j] != myObj._data[i][j]){
                  return false;
               }
            }
         }else{
            return false;
         }
      }
   }else{
      return false;
   }
   return true;
}
</code></pre>

<p>This code considers the case you will have a two dimensional array but not a square matrix. i.e. first row with three elements, second row with 27 elements, third row with N elements...
For example, a test case:</p>

<pre><code>    double[][] first= new double[5][3];
    double[][] second= new double[5][3];
    for(int i=0; i&lt;first.length; i++){
        for(int j=0; j&lt;first[i].length; j++){
            first[i][j] = 5;
        }
    }
    for(int i=0; i&lt;second.length; i++){
        for(int j=0; j&lt;second[i].length; j++){
            second[i][j] = 5;
        }
    }
    second[4][2] = 2;

    MyClass c1 = new MyClass(first);
    MyClass c2 = new MyClass(second);

    System.out.println("Equals: "+c1.equals(c2));
</code></pre>
