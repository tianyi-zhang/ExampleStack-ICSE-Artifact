<p>First add bellow Class and interface to your application.</p>

<pre><code>   public class GPSManager
    {
        private static final int gpsMinTime = 500;
        private static final int gpsMinDistance = 0;

        private LocationManager locationManager = null;
        private LocationListener locationListener = null;
        private GPSCallback gpsCallback = null;

        public GPSManager()
        {
            locationListener = new LocationListener()
            {
                public void onProviderDisabled(final String provider)
                {
                }

                public void onProviderEnabled(final String provider)
                {
                }

                public void onStatusChanged(final String provider, final int status, final Bundle extras)
                {
                }

                public void onLocationChanged(final Location location)
                {
                    if (location != null &amp;&amp; gpsCallback != null)
                    {
                        Log.e("if location "+location,"if gpscallback"+gpsCallback);
                        gpsCallback.onGPSUpdate(location);
                    }
                    else{
                        Log.e("else location "+location,"else gpscallback"+gpsCallback);
                    }
                }
            };
        }

        public void startListening(final Activity activity)
        {
            if (locationManager == null)
            {
                locationManager = (LocationManager) activity.getSystemService(Context.LOCATION_SERVICE);
            }

            final Criteria criteria = new Criteria();
            criteria.setAccuracy(Criteria.ACCURACY_FINE);
            criteria.setAltitudeRequired(false);
            criteria.setBearingRequired(false);
            criteria.setCostAllowed(true);
            criteria.setPowerRequirement(Criteria.POWER_LOW);

            final String bestProvider = locationManager.getBestProvider(criteria, true);

            if (bestProvider != null &amp;&amp; bestProvider.length() &gt; 0)
            {
                locationManager.requestLocationUpdates(bestProvider, GPSManager.gpsMinTime,
                        GPSManager.gpsMinDistance, locationListener);
            }
            else
            {
                final List&lt;String&gt; providers = locationManager.getProviders(true);

                for (final String provider : providers)
                {
                    locationManager.requestLocationUpdates(provider, GPSManager.gpsMinTime,
                            GPSManager.gpsMinDistance, locationListener);
                }
            }
        }

        public void stopListening()
        {
            try
            {
                if (locationManager != null &amp;&amp; locationListener != null)
                {
                    locationManager.removeUpdates(locationListener);
                }

                locationManager = null;
            }
            catch (final Exception ex)
            {

            }
        }

        public void setGPSCallback(final GPSCallback gpsCallback)
        {
            this.gpsCallback = gpsCallback;
        }

        public GPSCallback getGPSCallback()
        {
            return gpsCallback;
        }
  }
</code></pre>

<p>Interface:</p>

<pre><code>public interface GPSCallback
{
    public abstract void onGPSUpdate(Location location);

}
</code></pre>

<p>then implement this interface in your activity and also add below code in your activity</p>

<pre><code>gpsmanager=new GPSManager();
        gpsmanager.startListening(YourActicvityname.this);
        gpsmanager.setGPSCallback(this);
</code></pre>

<p>To stop GPS call gpsmanager.stopListening() at  where you want to close the application</p>
