<p>Unfortunately, <code>org.apache.commons.httpclient.util.URIUtil</code> is deprecated, and the <code>replacement org.apache.commons.codec.net.URLCodec</code> does coding suitable for form posts, not in actual URL's. So I had to write my own function, which does a single component (not suitable for entire query strings that have ?'s and &amp;'s)</p>

<pre><code>public static String encodeURLComponent(final String s)
{
  if (s == null)
  {
    return "";
  }

  final StringBuilder sb = new StringBuilder();

  try
  {
    for (int i = 0; i &lt; s.length(); i++)
    {
      final char c = s.charAt(i);

      if (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')) ||
          ((c &gt;= '0') &amp;&amp; (c &lt;= '9')) ||
          (c == '-') ||  (c == '.')  || (c == '_') || (c == '~'))
      {
        sb.append(c);
      }
      else
      {
        final byte[] bytes = ("" + c).getBytes("UTF-8");

        for (byte b : bytes)
        {
          sb.append('%');

          int upper = (((int) b) &gt;&gt; 4) &amp; 0xf;
          sb.append(Integer.toHexString(upper).toUpperCase(Locale.US));

          int lower = ((int) b) &amp; 0xf;
          sb.append(Integer.toHexString(lower).toUpperCase(Locale.US));
        }
      }
    }

    return sb.toString();
  }
  catch (UnsupportedEncodingException uee)
  {
    throw new RuntimeException("UTF-8 unsupported!?", uee);
  }
}
</code></pre>
