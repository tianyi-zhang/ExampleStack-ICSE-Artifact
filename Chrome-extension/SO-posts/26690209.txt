<p>You can create a custom FontTextView :
-Add this custom FontTextView in <strong>src package</strong>: </p>

<pre><code>package com.example.android.ui;

import android.content.Context;
import android.content.res.AssetManager;
import android.content.res.TypedArray;
import android.graphics.Typeface;
import android.util.AttributeSet;
import android.widget.TextView;

import java.util.HashMap;
import java.util.Map;

public class FontTextView extends TextView {

    private static Map&lt;String, Typeface&gt; mTypefaces;

    public FontTextView(final Context context) {
        this(context, null);
    }

    public FontTextView(final Context context, final AttributeSet attrs) {
        this(context, attrs, 0);
    }

    public FontTextView(final Context context, final AttributeSet attrs, final int defStyle) {
        super(context, attrs, defStyle);
        if (mTypefaces == null) {
            mTypefaces = new HashMap&lt;String, Typeface&gt;();
        }

        final TypedArray array = context.obtainStyledAttributes(attrs, styleable.FontTextView);
        if (array != null) {
            final String typefaceAssetPath = array.getString(
                    R.styleable.FontTextView_customTypeface);

            if (typefaceAssetPath != null) {
                Typeface typeface = null;

                if (mTypefaces.containsKey(typefaceAssetPath)) {
                    typeface = mTypefaces.get(typefaceAssetPath);
                } else {
                    AssetManager assets = context.getAssets();
                    typeface = Typeface.createFromAsset(assets, typefaceAssetPath);
                    mTypefaces.put(typefaceAssetPath, typeface);
                }

                setTypeface(typeface);
            }
            array.recycle();
        }
    }

}
</code></pre>

<p>-In res/values add the <strong>tt_attrs.xml</strong></p>

<pre><code>&lt;resources&gt;

    &lt;declare-styleable name="FontTextView"&gt;
        &lt;attr name="customTypeface" format="string" /&gt;
    &lt;/declare-styleable&gt;

&lt;/resources&gt;
</code></pre>

<p>-In your layout which you want add font textview:</p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:geekui="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"&gt;

    &lt;com.example.android.ui.FontTextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/app_name"
        android:textSize="30sp"
        geekui:customTypeface="fonts/segoeui.ttf" /&gt;

    &lt;com.entreprise.android.ui.FontTextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="30sp"
        android:text="@string/app_name"
        geekui:customTypeface="fonts/Times New Roman.ttf" /&gt;

    &lt;com.entreprise.android.ui.FontTextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="30sp"
        android:text="@string/app_name"
        geekui:customTypeface="fonts/arial unicode ms.ttf" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>all this source code is inspired from <a href="https://github.com/ragunathjawahar/android-typeface-textview" rel="nofollow">https://github.com/ragunathjawahar/android-typeface-textview</a></p>
