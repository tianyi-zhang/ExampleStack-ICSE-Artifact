<p>You are probably going to be down-voted since you have made no effort in resolving this on your own or you don't have your findings!</p>

<p>However, I have recently implemented this and it worked fine for my case. 
It has two tabs (as two fragments) in one single activity.</p>

<p>The code goes below.</p>

<p><strong>MainActivity:</strong></p>

<pre><code>public class MainActivity extends AppCompatActivity {

TabLayout.Tab Tab1,Tab2;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
    setSupportActionBar(toolbar);

    final TabLayout tabLayout = (TabLayout) findViewById(R.id.tab_layout);
    Tab1 = tabLayout.newTab().setText("Monthly Expenses");
    Tab2 = tabLayout.newTab().setText("Daily Expenses");

    tabLayout.addTab(Tab1);
    tabLayout.addTab(Tab2);
    tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);

    final ViewPager viewPager = (ViewPager) findViewById(R.id.pager);
    final PagerAdapter adapter = new PagerAdapter(getSupportFragmentManager(),tabLayout.getTabCount());
    viewPager.setAdapter(adapter);
    viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
    tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
        @Override
        public void onTabSelected(TabLayout.Tab tab) {
            viewPager.setCurrentItem(tab.getPosition());
        }

        @Override
        public void onTabUnselected(TabLayout.Tab tab) {

        }

        @Override
        public void onTabReselected(TabLayout.Tab tab) {

        }
    });
}
}
</code></pre>

<p><strong>PagerAdapter.java :</strong></p>

<pre><code>public class PagerAdapter extends FragmentStatePagerAdapter
{
int NumOfTabs;
public PagerAdapter (FragmentManager fm, int NumberOfTabs)
{
    super(fm);
    this.NumOfTabs = NumberOfTabs;
}

@Override
public Fragment getItem(int position)
{
    switch (position)
    {
        case 0:
            TabFragment1 tab1 = new TabFragment1();
            return tab1;

        case 1:
            TabFragment2 tab2 = new TabFragment2();
            return tab2;

        default:
            return null;
    }
}

public int getCount()
{
    return NumOfTabs;
}
}
</code></pre>

<p><strong>TabFragment1.java :</strong></p>

<pre><code>public class TabFragment1 extends Fragment{
FloatingActionButton fab;
MyBaseAdapter baseAdapter;
static ArrayList&lt;ListRowItem&gt; listitem = new ArrayList&lt;&gt;();
ListView listView;

@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    return inflater.inflate(R.layout.tab_fragment_1, container, false);
}
}
</code></pre>

<p><strong>TabFragment2.java :</strong></p>

<pre><code>public class TabFragment2 extends Fragment{
FloatingActionButton fab;

@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    return inflater.inflate(R.layout.tab_fragment_2, container, false);
}
}
</code></pre>

<p>Hope this is what you are looking for!</p>
