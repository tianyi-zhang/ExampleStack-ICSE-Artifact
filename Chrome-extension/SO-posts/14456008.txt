<p>First of all, please do not throw away errors like you do. Please use android.util.Log to log exceptions, at least when you debug it.</p>

<p>place android.util.Log.d("ANDRO_ASYNC", "Exception occured", e); before return null; in catch {} block. I think you won't even know when some error happened. </p>

<p>And I believe you should get content length only after you opened url stream. I guess you use HTTP and it should send request only when you open stream for reading. You can write to buffer if you want POST message, how would it know what do you want?</p>

<p>And that stream variables should be created before try clause, assigned null. You may open one descriptor but second may fail with exception. You should close it after catching it. Use finally keyword for that.</p>

<pre><code>    InputStream input = null;
    OutputStream output = null;
    try {

    URL url = new URL(aurl[0]);
    URLConnection conexion = url.openConnection();
    conexion.connect();

    input = new BufferedInputStream(url.openStream());
    output = new FileOutputStream(Environment.getExternalStorageDirectory()+"/Download/prueba.pdf");

    byte data[] = new byte[1024];

    int lenghtOfFile = conexion.getContentLength();
    Log.d("ANDRO_ASYNC", "Lenght of file: " + lenghtOfFile);

    long total = 0;

        while ((count = input.read(data)) != -1) {
            total += count;
            publishProgress(""+(int)((total*100)/lenghtOfFile));
            output.write(data, 0, count);
        }
    } catch (Exception e) {
        Log.d("ANDRO_ASYNC", "Exception thrown", e);
    } finally {
        if (output != null) {
            output.flush();
            output.close();
        }
        if (input != null)
          input.close();

    }
</code></pre>

<p>Please check size of your downloaded PDF. I guess it is 0 bytes in size, because some error occurred. Are you sure you have android.permission.WRITE_EXTERNAL_STORAGE permission used in manifest?</p>
