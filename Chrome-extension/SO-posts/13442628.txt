<p>Here is how I solved it.  Don't know if it is the recommended approach but it works...</p>

<p>in OnCreate of my entry activity (main) I put...</p>

<pre><code> AccountManager accountManager = AccountManager.get(this);
 Account[] accounts = accountManager.getAccountsByType("com.google");
 AccountManagerFuture&lt;Bundle&gt; futur;
 futur = accountManager.getAuthToken(accounts[0],AUTH_TOKEN_TYPE_USERINFO_PROFILE, null, null,
                new OnTokenAcquired(), new Handler(new OnError()));
</code></pre>

<p>In that same activity I created...</p>

<pre><code>private class OnTokenAcquired implements AccountManagerCallback&lt;Bundle&gt; {
        @Override
        public void run(AccountManagerFuture&lt;Bundle&gt; result) {
            // Get the result of the operation from the AccountManagerFuture.
            Bundle bundle;
            try {
                bundle = result.getResult();
                // The token is a named value in the bundle. The name of the
                // value
                // is stored in the constant AccountManager.KEY_AUTHTOKEN.
                String token = bundle.getString(AccountManager.KEY_AUTHTOKEN);
                //If token isn't null then let them in and also make sure Crunchy accounts are created
                if(token!=null){
                    ProcessToken pt = new ProcessToken(token);
                    pt.execute("");
                    }

                Intent launch = (Intent) bundle.get(AccountManager.KEY_INTENT);
                if (launch != null) {
                    startActivityForResult(launch, 0);
                    return;
                }
            }catch (OperationCanceledException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            } catch (AuthenticatorException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }
</code></pre>

<p>I also created an asyncTask to process the token (because I do a bit more logic to setup account and set a cookie).  It looks like this (much of my processing/cookie logic is not completed yet)</p>

<pre><code>      package com.craig.activities.login;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import android.os.AsyncTask;
import android.util.Log;

public class ProcessToken extends AsyncTask&lt;String,Integer,Long&gt;{

    private static final String AUTH_ACCESS_TOKEN_URL = "https://www.googleapis.com/oauth2/v1/userinfo?access_token=";
    private static final String DEBUG_TAG = "OnTokenAcquired.class";
    private static String token="";

    public ProcessToken(String tokenValue){
        token=tokenValue;
    }

    @Override
    protected Long doInBackground(String... params) {
        try {
            URL url = new URL(AUTH_ACCESS_TOKEN_URL+token);
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            int serverCode= con.getResponseCode();
            if(serverCode==200){
                Log.i(DEBUG_TAG, "code 200!!!");
                                //PUT MY LOGIC IN HERE....
                }
            else{
                Log.i(DEBUG_TAG, "Oops, We had an error on authentication");
            }
        } catch (MalformedURLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        return null;
    }
     }
</code></pre>

<p>Not sure if this is the best but it seems to be working for me....</p>
