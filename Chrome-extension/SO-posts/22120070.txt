<p>I think what you are looking for is reading the exif rotation from an image an rotating it accordingly. I know there are problems with samsung devices that images don't face the correct way but you can correct for that like this:</p>

<p>First you have to read the Exif Rotation from the image: </p>

<pre><code>ExifInterface exif = new ExifInterface(pathToFile);  
int rotation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_UNDEFINED); 
</code></pre>

<p>With this information you can correct the rotation of the image, this is unfortunately a little more complex, it involves rotating the bitmap with a matrix. You can create the matrix like this:</p>

<pre><code>Matrix matrix = new Matrix();
switch (rotation) {
    case ExifInterface.ORIENTATION_FLIP_HORIZONTAL:
        matrix.setScale(-1, 1);
        break;

    case ExifInterface.ORIENTATION_ROTATE_180:
        matrix.setRotate(180);
        break;

    case ExifInterface.ORIENTATION_FLIP_VERTICAL:
        matrix.setRotate(180);
        matrix.postScale(-1, 1);
        break;

    case ExifInterface.ORIENTATION_TRANSPOSE:
        matrix.setRotate(90);
        matrix.postScale(-1, 1);
        break;

    case ExifInterface.ORIENTATION_ROTATE_90:
        matrix.setRotate(90);
        break;

    case ExifInterface.ORIENTATION_TRANSVERSE:
        matrix.setRotate(-90);
        matrix.postScale(-1, 1);
        break;

    case ExifInterface.ORIENTATION_ROTATE_270:
        matrix.setRotate(-90);
        break;

    case ExifInterface.ORIENTATION_NORMAL:        
    default:
        break;
}
</code></pre>

<p>And finally you can create the correctly rotated bitmap:</p>

<pre><code>int height = bitmap.getHeight();
int width = bitmap.getWidth();
Bitmap correctlyRotatedBitmap = Bitmap.createBitmap(bitmap, 0, 0, width, height, matrix, true);
</code></pre>

<p>And to avoid OutOfMemory Exceptions you should recycle the old not correctly rotated bitmap after creating the correctly rotated one like this:</p>

<pre><code>bitmap.recycle();
</code></pre>
