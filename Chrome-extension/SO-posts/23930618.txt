<p><a href="https://plus.google.com/+MarioViviani/posts/fhuzYkji9zz?utm_source=Android%20Weekly&amp;utm_campaign=0ebb6e887b-Android_Weekly_103&amp;utm_medium=email&amp;utm_term=0_4eb677ad19-0ebb6e887b-337837333">Here</a> is a good way to "Blur Images Efficiently using Renderscript" by GDE <a href="https://plus.google.com/100707738835400160066">Mario Viviani</a>.</p>

<p>Here is the copy/paste:</p>

<p>Blurring images is an effect a lot of developers need to achieve, and it may require some time and efforts to be implemented. Also, since a lot of image manipulation is required, if it's not appropriately coded it can be really a pain in terms of CPU and memory usage.</p>

<p>There's a quick and efficient solution to blur images, which is <a href="http://developer.android.com/guide/topics/renderscript/compute.html">Renderscript</a>.</p>

<p>Available since <a href="http://developer.android.com/about/versions/android-3.0.html">API 11</a> (<code>Honeycomb</code>), <code>Renderscript</code> allows to take advantage of the GPU acceleration and is targeted at high-performance 3D rendering and compute operations.
<code>Renderscript</code> is a really complex and articulated product, and allows deep configuration and coding using native C99 language, which allows portability, performance and usability.</p>

<p>However, since <a href="http://developer.android.com/about/versions/android-4.2.html">API 17</a> (4.2.2) <code>Renderscript</code> offer some built-in functions that perform well-defined operations, called Intrinsics.
Intrinsics are pre-written scripts that allow,  to perform operations like Blur, Blen, Matrix Convolution and more, without the need to write <code>Renderscript</code> code.</p>

<p>Here's a simple method I wrote to easily end efficiently apply a Blur filter to a Bitmap:</p>

<pre><code>public Bitmap blurBitmap(Bitmap bitmap) {

    //Let's create an empty bitmap with the same size of the bitmap we want to blur
    Bitmap outBitmap = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);

    //Instantiate a new Renderscript
    RenderScript rs = RenderScript.create(getApplicationContext());

    //Create an Intrinsic Blur Script using the Renderscript
    ScriptIntrinsicBlur blurScript = ScriptIntrinsicBlur.create(rs, Element.U8_4(rs));

    //Create the in/out Allocations with the Renderscript and the in/out bitmaps
    Allocation allIn = Allocation.createFromBitmap(rs, bitmap);
    Allocation allOut = Allocation.createFromBitmap(rs, outBitmap);

    //Set the radius of the blur
    blurScript.setRadius(25.f);

    //Perform the Renderscript
    blurScript.setInput(allIn);
    blurScript.forEach(allOut);

    //Copy the final bitmap created by the out Allocation to the outBitmap
    allOut.copyTo(outBitmap);

    //recycle the original bitmap
    bitmap.recycle();

    //After finishing everything, we destroy the Renderscript.
    rs.destroy();

    return outBitmap;
}
</code></pre>

<p><img src="http://i.stack.imgur.com/sqkCX.png" alt="RenderScript Blurred Image"></p>

<p>And...voil√†! Blurred bitmap! :-)</p>

<p>Remember that to run the previous code you need minimum API 17 (4.2.2).</p>

<p>Here's a Gist of this method:
<a href="https://gist.github.com/Mariuxtheone/903c35b4927c0df18cf8">https://gist.github.com/Mariuxtheone/903c35b4927c0df18cf8</a></p>

<p>If you want to discover more about Intrinsics, check out this post on Android Developers Blog:
<a href="http://android-developers.blogspot.it/2013/08/renderscript-intrinsics.html">http://android-developers.blogspot.it/2013/08/renderscript-intrinsics.html</a></p>

<p>If you're interested in know more about Renderscript, check out these links:
<a href="http://android-developers.blogspot.it/2011/02/introducing-renderscript.html">http://android-developers.blogspot.it/2011/02/introducing-renderscript.html</a>
<a href="http://android-developers.blogspot.it/2011/03/renderscript.html">http://android-developers.blogspot.it/2011/03/renderscript.html</a></p>
