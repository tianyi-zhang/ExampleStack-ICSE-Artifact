<p>Do the following </p>

<pre><code> Intent intent = new Intent(this,NotificationRecieverActivity.class);
 intent.putExtra("YOURTAG", "DATA");
    // The PendingIntent to launch our activity if the user selects this notification
    PendingIntent contentIntent = PendingIntent.getActivity(this, 0,intent, 0);
</code></pre>

<p>OR Using bundle</p>

<pre><code>Intent intent = new Intent(this,NotificationRecieverActivity.class);
Bundle bundle = new Bundle();
bundle.putString("YOURTAG", "DATA");
intent.putExtra("BUNDLETAG", bundle);
// The PendingIntent to launch our activity if the user selects this notification
PendingIntent contentIntent = PendingIntent.getActivity(this, 0,intent, 0);
</code></pre>

<p>Full Class</p>

<pre><code>public class GcmIntentService extends IntentService {
private NotificationManager mNotificationManager;

public GcmIntentService() {
    super("GcmIntentService");
}
public static final String TAG = "Mobien Reception Service";

@Override
protected void onHandleIntent(Intent intent) {
    Bundle extras = intent.getExtras();
    GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(this);
    // The getMessageType() intent parameter must be the intent you received
    // in your BroadcastReceiver.
    String messageType = gcm.getMessageType(intent);

    if (!extras.isEmpty()) {  // has effect of unparcelling Bundle
        /*
         * Filter messages based on message type. Since it is likely that GCM will be
         * extended in the future with new message types, just ignore any message types you're
         * not interested in, or that you don't recognize.
         */
        if (GoogleCloudMessaging.MESSAGE_TYPE_SEND_ERROR.equals(messageType)) {
            makeMessage("Send error: " + extras.toString());
        } else if (GoogleCloudMessaging.MESSAGE_TYPE_DELETED.equals(messageType)) {
            makeMessage("Deleted messages on server: " + extras.toString());
        // If it's a regular GCM message, do some work.
        } else {
            Log.d(TAG, "Received Message :"+extras.getString("message"));
            makeMessage(extras.getString("message"));
        }
    }
    // Release the wake lock provided by the WakefulBroadcastReceiver.
    GcmBroadcastReceiver.completeWakefulIntent(intent);
}

private void makeMessage(String msg) {

    if(!msg.equals("") || msg.contains("#")) {
        String temp [] = StringUtility.split(msg, '#');
        String header = temp[0];
        Log.d(TAG, "Header Message :"+header);
        if(header.trim().contains("DLV")) {
            sendNotification("Del. No. "+temp[1], "Against SAP SO.No. "+temp[2], 123);
        } else if(header.trim().contains("PGI")) {
            sendNotification("PGI No. "+temp[1], "Against Del. No."+temp[2], 99);
        } else if(header.trim().contains("INV")) {
            sendNotification("Inv. No. "+temp[1], "Against Del. No."+temp[2], 157);
        }
    }
}

// Put the message into a notification and post it.
// This is just one simple example of what you might choose to do with
// a GCM message. 
private void sendNotification(String contentTitle, String contentText) {

    final Random r = new Random();
    final int notificationId = r.nextInt();

    PendingIntent contentIntent = PendingIntent.getActivity(this, 0,
            new Intent(this, LoginActivity.class), 0);

    Bitmap largeIcon= BitmapFactory.decodeResource(getApplicationContext().getResources(), 
            R.drawable.ic_launcher);

    mNotificationManager = (NotificationManager)
            this.getSystemService(Context.NOTIFICATION_SERVICE);

    NotificationCompat.Builder mBuilder =
            new NotificationCompat.Builder(this)
    .setSmallIcon(R.drawable.ic_launcher)
    .setLargeIcon(largeIcon)
    .setContentTitle(contentTitle)
    .setContentText(contentText)
    .setAutoCancel(true)
    .setContentIntent(PendingIntent.getActivity(this, 0, new Intent(), 0));


    mBuilder.setContentIntent(contentIntent);
    mNotificationManager.notify(notificationId, mBuilder.build());
}
</code></pre>

<p>Its something I had made for my demo. I don't have time to modify according to your needs. But it should help you out in what you are doing.</p>
