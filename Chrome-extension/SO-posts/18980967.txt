<p>i will suggest you to use <a href="http://developer.android.com/reference/android/os/AsyncTask.html" rel="nofollow"><strong>AsyncTask</strong></a> </p>

<p>Do this </p>

<p>On <strong>ButtonClick</strong></p>

<pre><code>RequestClient reqClient = new RequestClient(ActivityName.this);
String AppResponse = null;
AppResponse = reqClient.execute().get();
</code></pre>

<p><strong>RequestClient</strong> </p>

<pre><code>public class RequestClient extends AsyncTask&lt;String, Void, String&gt; {
    Context context;

    @Override
    protected void onPreExecute() {
        super.onPreExecute();

    }

    @Override
    protected String doInBackground(String... params) {
        try {
            HttpClient httpclient = new DefaultHttpClient(); // Create HTTP Client
            HttpGet httpget = new HttpGet("http://yoururl.com"); // Set the action you want to do
            HttpResponse response = httpclient.execute(httpget); // Executeit
            HttpEntity entity = response.getEntity(); 
            InputStream is = entity.getContent(); // Create an InputStream with the response
            BufferedReader reader = new BufferedReader(new InputStreamReader(is, "iso-8859-1"), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) // Read line by line
            sb.append(line + "\n");

            String resString = sb.toString(); // Result is here

            is.close(); // Close the stream
            } catch (Exception e) {
            Log.d("ANDRO_ASYNC_ERROR", "Error is " + e.toString());
        }
        Log.d("ANDRO_ASYNC_RESPONSE", responseString.trim());
        client.getConnectionManager().shutdown();
        return responseString.trim();
    }

    @Override
    protected void onPostExecute(String result) {
        // TODO Auto-generated method stub
        super.onPostExecute(result);

    }
}
</code></pre>
