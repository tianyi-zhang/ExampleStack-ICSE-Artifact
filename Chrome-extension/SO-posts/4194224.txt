<p>Of course it is possible to restart a Java application.</p>

<p>The following method shows a way to restart a Java application:</p>

<pre><code>public void restartApplication()
{
  final String javaBin = System.getProperty("java.home") + File.separator + "bin" + File.separator + "java";
  final File currentJar = new File(MyClassInTheJar.class.getProtectionDomain().getCodeSource().getLocation().toURI());

  /* is it a jar file? */
  if(!currentJar.getName().endsWith(".jar"))
    return;

  /* Build command: java -jar application.jar */
  final ArrayList&lt;String&gt; command = new ArrayList&lt;String&gt;();
  command.add(javaBin);
  command.add("-jar");
  command.add(currentJar.getPath());

  final ProcessBuilder builder = new ProcessBuilder(command);
  builder.start();
  System.exit(0);
}
</code></pre>

<p>Basically it does the following:</p>

<ol>
<li>Find the java executable (I used the java binary here, but that depends on your requirements)</li>
<li>Find the application (a jar in my case, using the <code>MyClassInTheJar</code> class to find the jar location itself)</li>
<li>Build a command to restart the jar (using the java binary in this case)</li>
<li>Execute it! (and thus terminating the current application and starting it again)</li>
</ol>
