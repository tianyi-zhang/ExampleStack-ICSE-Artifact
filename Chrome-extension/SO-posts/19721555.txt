<p>Take an <code>ArrayList</code> of <code>NameValuePair</code> for e.g
<code>ArrayList&lt;NameValuePair&gt; postParameters = new ArrayList&lt;NameValuePair&gt;();</code></p>

<p>then add your paramters in the answer key as follows </p>

<pre><code>postParameters.add(new BasicNameValuePair("answer",
                        "Your value"));
                String response = null;
                try {
                    response = CustomHttpClient
                            .executeHttpPost(
                                    "Your Url", postParameters);`
</code></pre>

<p><strong>CustomHTTPClientmethod</strong>  </p>

<pre><code> public class CustomHttpClient {

/** The time it takes for our client to timeout */
public static final int HTTP_TIMEOUT = 30 * 1000; // milliseconds
/** Single instance of our HttpClient */
private static HttpClient mHttpClient;

/**
 * Get our single instance of our HttpClient object.
 * 
 * @return an HttpClient object with connection parameters set
 */

private static HttpClient getHttpClient() {

    if (mHttpClient == null) {
        mHttpClient = new DefaultHttpClient();

        final HttpParams params = mHttpClient.getParams();
        HttpConnectionParams.setConnectionTimeout(params, HTTP_TIMEOUT);
        HttpConnectionParams.setSoTimeout(params, HTTP_TIMEOUT);
        ConnManagerParams.setTimeout(params, HTTP_TIMEOUT);
    }

    return mHttpClient;
}

/**
 * Performs an HTTP Post request to the specified url with the specified
 * parameters.
 * 
 * @param url
 *            The web address to post the request to
 * @param postParameters
 *            The parameters to send via the request
 * @return The result of the request
 * @throws Exception
 */

public static String executeHttpPost(String url,
        ArrayList&lt;NameValuePair&gt; postParameters) throws Exception {

    BufferedReader in = null;

    try {

        HttpClient client = getHttpClient();

        HttpPost request = new HttpPost(url);

        UrlEncodedFormEntity formEntity = new UrlEncodedFormEntity(

        postParameters);

        request.setEntity(formEntity);

        HttpResponse response = client.execute(request);

        in = new BufferedReader(new InputStreamReader(response.getEntity()

        .getContent()));

        StringBuffer sb = new StringBuffer("");

        String line = "";

        String NL = System.getProperty("line.separator");

        while ((line = in.readLine()) != null) {

            sb.append(line + NL);

        }

        in.close();

        String result = sb.toString();

        return result;

    } finally {

        if (in != null) {

            try {

                in.close();

            } catch (IOException e) {

                Log.e("log_tag", "Error converting result " + e.toString());

                e.printStackTrace();

            }

        }

    }

}
 }
</code></pre>

<p>Hope this solves what you are asking for .. </p>
