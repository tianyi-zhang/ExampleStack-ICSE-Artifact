<p>the problem is, that you create a scaled Bitmap by using the old big one. After that you have two Bitmaps in your Memory and you don't even recycle the old one. </p>

<p>Anyway, there is a better way:</p>

<pre><code>ImageView imageView = (ImageView) findViewById(R.id.some_id);
String pathToImage = "path";

BitmapFactory.Options bmOptions = new BitmapFactory.Options();
bmOptions.inJustDecodeBounds = true;
BitmapFactory.decodeFile(pathToImage, bmOptions);
int photoW = bmOptions.outWidth;
int photoH = bmOptions.outHeight;

// Determine how much to scale down the image
int scaleFactor = Math.min(photoW/50, photoH/50);

// Decode the image file into a Bitmap sized to fill the View
bmOptions.inJustDecodeBounds = false;
bmOptions.inSampleSize = scaleFactor;
bmOptions.inPurgeable = true;

Bitmap bitmap = BitmapFactory.decodeFile(pathToFile, bmOptions);
imageView.setImageBitmap(bitmap);
</code></pre>

<p><strong>Edit:</strong></p>

<p>When you want to use a resource Id instead of the file path, use <a href="http://developer.android.com/reference/android/graphics/BitmapFactory.html#decodeResource%28android.content.res.Resources,%20int,%20android.graphics.BitmapFactory.Options%29" rel="nofollow">decodeResource</a> and do the last part like this:</p>

<pre><code>Bitmap bitmap = BitmapFactory.decodeResource(getResources(), resourceId, bmOptions);
imageView.setImageBitmap(bitmap);
</code></pre>

<p>Hope that piece of code helps you out!</p>
