<p>I study the source of log4j and find log4j can't create new log file, it just print the error message to system.err when the log file was deleted</p>

<pre><code>    /** 
     This method determines if there is a sense in attempting to append. 

     &lt;p&gt;It checks whether there is a set output target and also if 
     there is a set layout. If these checks fail, then the boolean 
     value &lt;code&gt;false&lt;/code&gt; is returned. */  

  protected   boolean checkEntryConditions() {  
    if(this.closed) {  
      LogLog.warn("Not allowed to write to a closed appender.");  
      return false;  
    }  

    if(this.qw == null) {  
      errorHandler.error("No output stream or file set for the appender named ["+  
            name+"].");  
      return false;  
    }  

    if(this.layout == null) {  
      errorHandler.error("No layout set for the appender named ["+ name+"].");  
      return false;  
    }  
    return true;  
  }  
</code></pre>

<p>I think there are two workaround</p>

<ol>
<li>create another cron thread to monitor the log file</li>
<li>add judge in getLog or getInstance (singleton), check the log file does exist, if not then init log4j</li>
</ol>
