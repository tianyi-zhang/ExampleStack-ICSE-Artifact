<p>Use an <strong>AsyncTask</strong> to set the ViewPagerAdapter:</p>

<pre><code>private class SetAdapterTask extends AsyncTask&lt;Void, Void, Void&gt; {
        protected Void doInBackground(Void... params) {
            return null;
        }

        @Override
        protected void onPostExecute(Void result) {

            if(mAdapter != null) mViewPager.setAdapter(mAdapter);
        }
    }   
</code></pre>

<p>Call it like this:</p>

<pre><code>mAdapter = new PageAdapter(getChildFragmentManager());
new SetAdapterTask().execute();
</code></pre>

<p>And <strong>reset the adapter</strong> in the <code>onResume(</code>) method of your Fragment.</p>

<h2>UPDATE - How to nest a ViewPager inside a Fragment?</h2>

<p>Allright, here it is. I modified the Google example of <strong><a href="http://developer.android.com/training/implementing-navigation/index.html">Effective Navigation</a></strong> to fit your concerns.</p>

<p>What did I create?</p>

<ul>
<li>I created a simple application, containing a MainActivity with a
ViewPager and 3 tabs.</li>
<li>Each of these tabs is represented by a Fragment that contains a
ViewPager as well.</li>
<li>The ViewPager inside the Fragment contains 10 pages.</li>
<li>So we have 3 "main" tabs / fragments, each containing 10 more fragments.</li>
<li>For demonstration purposes, I made the top-level <strong>ViewPager non-swipeable</strong>, so you have to use the tabs to switch between the main Fragments (I created a CustomViewPager and made some changes to remove the ViewPagers swipe capability)</li>
<li>The ViewPager inside the main Fragments is swipe able, so you can swipe to switch between the sub-Fragments, and press the tabs to switch between the main-Fragments</li>
<li>If you click a sub-Fragment, a new Activity is started. </li>
<li>If you return to the old activity when the new activity is closed,
the Fragments and ViewPager's state is preserved.</li>
<li>When switching the main-Fragments, their state is preserved as well</li>
</ul>

<p>Here is the <strong>Main Activity.java</strong></p>

<p>It contains two adapters, one for the main Fragments, one for the sub Fragments. Furthermore, their are two Fragment classes, one is the Fragment containing the ViewPager (the main-Fragment), the other one is the sub-Fragment (inside the nested ViewPager)</p>

<pre><code>public class MainActivity extends FragmentActivity implements ActionBar.TabListener {

    AppSectionsPagerAdapter mAppSectionsPagerAdapter;
    NonSwipeableViewPager mViewPager;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mAppSectionsPagerAdapter = new AppSectionsPagerAdapter(getSupportFragmentManager());

        // Set up the action bar.
        final ActionBar actionBar = getActionBar();
        actionBar.setHomeButtonEnabled(false);
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);

        // Set up the ViewPager, attaching the adapter and setting up a listener for when the
        // user swipes between sections.
        mViewPager = (NonSwipeableViewPager) findViewById(R.id.pager);
        mViewPager.setAdapter(mAppSectionsPagerAdapter);
        mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {
            @Override
            public void onPageSelected(int position) {
                actionBar.setSelectedNavigationItem(position);
            }
        });

        // For each of the sections in the app, add a tab to the action bar.
        for (int i = 0; i &lt; mAppSectionsPagerAdapter.getCount(); i++) {
            actionBar.addTab(
                    actionBar.newTab()
                            .setText(mAppSectionsPagerAdapter.getPageTitle(i))
                            .setTabListener(this));
        }
    }

    @Override
    public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {}

    @Override
    public void onTabSelected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
        // When the given tab is selected, switch to the corresponding page in the ViewPager.
        mViewPager.setCurrentItem(tab.getPosition());
    }

    @Override
    public void onTabReselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {}

    public static class AppSectionsPagerAdapter extends FragmentPagerAdapter {

        public AppSectionsPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        @Override
        public Fragment getItem(int i) {
            switch (i) {

                default:
                    // The other sections of the app are dummy placeholders.
                    Fragment fragment = new ViewPagerContainerFragment();
                    return fragment;
            }
        }

        @Override
        public int getCount() {
            return 3;
        }

        @Override
        public CharSequence getPageTitle(int position) {
            return "Tab " + (position +1);
        }
    }

    public static class ViewPagerAdapter extends FragmentPagerAdapter {

        public ViewPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        @Override
        public Fragment getItem(int i) {
            switch (i) {

                default:
                    // The other sections of the app are dummy placeholders.
                    Fragment fragment = new ViewPagerFragment();
                    Bundle b = new Bundle();
                    b.putString("key", "I am fragment nr " + i);
                    fragment.setArguments(b);
                    return fragment;
            }
        }

        @Override
        public int getCount() {
            return 10;
        }
    }    

    /**
     * THIS FRAGMENT CONTAINS A VIEWPAGER
     */
    public static class ViewPagerContainerFragment extends Fragment {

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.main_fragment, container, false);

            ViewPager pager = (ViewPager) rootView.findViewById(R.id.nestedViewPager);

            pager.setAdapter(new ViewPagerAdapter(getChildFragmentManager()));

            return rootView;
        }
    }

    /**
     * THIS FRAGMENT IS INSIDE THE VIEWPAGER
     */
    public static class ViewPagerFragment extends Fragment {

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.sub_fragment, container, false);

            ((TextView) rootView.findViewById(R.id.tv1)).setText(getArguments().getString("key"));
            ((TextView) rootView.findViewById(R.id.tv1)).setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    Intent intent = new Intent(getActivity(), CollectionDemoActivity.class);
                    startActivity(intent);
                }
            });

            return rootView;
        }
    }
}
</code></pre>

<p><strong>activity_main.xml</strong></p>

<pre><code>&lt;com.example.android.effectivenavigation.NonSwipeableViewPager 
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/pager"
    android:layout_width="match_parent"
    android:layout_height="match_parent" /&gt;
</code></pre>

<p><strong>main_fragment.xml</strong></p>

<pre><code>&lt;android.support.v4.view.ViewPager xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/nestedViewPager"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:gravity="center"
    android:textSize="24sp" /&gt;
</code></pre>

<p><strong>sub_fragment.xml</strong></p>

<pre><code>&lt;TextView xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/tv1"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:gravity="center"
    android:textSize="50sp" /&gt;
</code></pre>

<p>The end result looks like this:</p>

<p>We have 3 top-level Fragments each containing a ViewPager with 10 Fragments.</p>

<p><img src="http://i.stack.imgur.com/j4SOq.png" alt="enter image description here"></p>
