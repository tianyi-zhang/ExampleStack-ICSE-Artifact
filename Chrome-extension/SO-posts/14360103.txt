<p>One limitation of <code>GrayFilter.createDisabledImage()</code> is that it is designed to create a <em>disabled</em> appearance for icons across diverse Look &amp; Feel implementations. Using this <code>ColorConvertOp</code> <a href="http://stackoverflow.com/a/12228640/230513">example</a>, the following images contrast the effect:</p>

<p><code>GrayFilter.createDisabledImage()</code>: <code>com.apple.laf.AquaLookAndFeel</code>
<img src="http://i.stack.imgur.com/UJAEt.png" alt="image"></p>

<p><code>ColorConvertOp#filter()</code>: <code>com.apple.laf.AquaLookAndFeel</code>
<img src="http://i.stack.imgur.com/H3LYo.png" alt="image"></p>

<p><code>GrayFilter.createDisabledImage()</code>: <code>com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel</code>
<img src="http://i.stack.imgur.com/TGDNC.png" alt="image"></p>

<p><code>ColorConvertOp#filter()</code>: <code>com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel</code>
<img src="http://i.stack.imgur.com/3mhgf.png" alt="image"></p>

<pre><code>/**
 * @see http://stackoverflow.com/q/14358499/230513
 * @see http://stackoverflow.com/a/12228640/230513
 */
private Icon getGray(Icon icon) {
    final int w = icon.getIconWidth();
    final int h = icon.getIconHeight();
    GraphicsEnvironment ge =
        GraphicsEnvironment.getLocalGraphicsEnvironment();
    GraphicsDevice gd = ge.getDefaultScreenDevice();
    GraphicsConfiguration gc = gd.getDefaultConfiguration();
    BufferedImage image = gc.createCompatibleImage(w, h);
    Graphics2D g2d = image.createGraphics();
    icon.paintIcon(null, g2d, 0, 0);
    Image gray = GrayFilter.createDisabledImage(image);
    return new ImageIcon(gray);
}
</code></pre>
