<p>In later versions of Android (<a href="http://stackoverflow.com/questions/20067508/get-real-path-from-uri-android-kitkat-new-storage-access-framework">KitKat and above</a>), the format of <code>Uri</code>s returned from the gallery picker has changed, and it's not always possible to get a file path from a <code>Uri</code> without a lot of hassle, and sometimes it's not possible at all. So, it's better just to decode the bitmap using the <code>Uri</code> directly.</p>

<p>Change your decodeFile() function to accept a <code>Uri</code> and decode the image using <a href="http://developer.android.com/reference/android/graphics/BitmapFactory.html#decodeStream(java.io.InputStream,%20android.graphics.Rect,%20android.graphics.BitmapFactory.Options)" rel="nofollow">BitmapFactory.decodeStream()</a>, like this:</p>

<pre><code>public void decodeFile(Uri fileUri)
{
    // Decode image size
    BitmapFactory.Options o = new BitmapFactory.Options();
    o.inJustDecodeBounds = true;
    BitmapFactory.decodeStream(getContentResolver().openInputStream(fileUri), null, o);

    // The new size we want to scale to
    final int REQUIRED_SIZE = 1024;

    // Find the correct scale value. It should be the power of 2.
    int width_tmp = o.outWidth, height_tmp = o.outHeight;
    int scale = 1;
    while (true)
    {
        if (width_tmp &lt; REQUIRED_SIZE &amp;&amp; height_tmp &lt; REQUIRED_SIZE)
            break;
        width_tmp /= 2;
        height_tmp /= 2;
        scale *= 2;
    }

    // Decode with inSampleSize
    BitmapFactory.Options o2 = new BitmapFactory.Options();
    o2.inSampleSize = scale;
    bitmap = BitmapFactory.decodeStream(getContentResolver().openInputStream(fileUri), null, o2);

    //imgView.setImageBitmap(bitmap);

}
</code></pre>

<p>Then you can simplify your onActivityResult() code to this:</p>

<pre><code>if(selectedImageUri != null)
{
    try
    {
        decodeFile(selectedImageUri);
    }
    catch (Exception e)
    {
        Toast.makeText(getApplicationContext(), "Internal error",
                Toast.LENGTH_LONG).show();
        Log.e(e.getClass().getName(), e.getMessage(), e);
    }
}
</code></pre>

<p>If you have problems obtaining a valid <code>Uri</code>, see the accepted answer for <a href="http://stackoverflow.com/questions/19834842/android-gallery-on-kitkat-returns-different-uri-for-intent-action-get-content">this question</a> for how to obtain a <code>Uri</code> inside OnActivityResult() with correct permissions on KitKat and above.</p>
