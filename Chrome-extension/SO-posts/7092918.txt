<p>Guy, I also download images from the Internet in my app and its working just fine. The function that I use to download is:</p>

<pre><code>public Bitmap download_Image(String url) {
    Bitmap bm = null;
    try {
        URL aURL = new URL(url);
        URLConnection conn = aURL.openConnection();
        conn.connect();
        InputStream is = conn.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);
        bm = BitmapFactory.decodeStream(bis);
        bis.close();
        is.close();
    } catch (IOException e) {
        Log.e("Hub","Error getting the image from server : " + e.getMessage().toString());
    } 
    return bm;
}
</code></pre>

<p>I set another thread to download the image so the UI thread continues to be available. I used AsyncTask (see <a href="http://developer.android.com/reference/android/os/AsyncTask.html" rel="nofollow">here</a>) so that the (simplified) <code>doInBackground</code> function is something like:</p>

<pre><code>@Override
protected Void doInBackground(String... urls) {
        return download_Image(urls[0]);
}
</code></pre>

<p>I think <a href="http://android-developers.blogspot.com/2010/07/multithreading-for-performance.html" rel="nofollow">this page</a> at android's blog explains well something related to this issue.</p>
