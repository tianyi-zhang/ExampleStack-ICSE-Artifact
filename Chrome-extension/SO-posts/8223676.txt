<p>Finally , i have done it. I have done this using file-input/output-stream inside AsyncTask class. Below, i have given the code for uploading file &amp; showing that in progress bar ......</p>

<pre><code>class ImageUploadTask extends AsyncTask&lt;Void, Void, String&gt; {

    @Override
    protected void onPreExecute() {
        pb.setVisibility(View.VISIBLE);

    }


    @Override
    protected String doInBackground(Void... unused) {

        String twoHyphens = "--";
        String boundary = "*****" + Long.toString(System.currentTimeMillis()) + "*****";
        String lineEnd = "\r\n";

        try
        {
            FileInputStream fileInputStream = new FileInputStream(new     File(pathToOurFile));

            URL url = new URL(urlServer);
            connection = (HttpURLConnection) url.openConnection();

            // Allow Inputs &amp; Outputs
            connection.setDoInput(true);
            connection.setDoOutput(true);
            connection.setUseCaches(false);

            // Enable POST method
            connection.setRequestMethod("POST");

            connection.setRequestProperty("Connection", "Keep-Alive");
            connection.setRequestProperty("Content-Type",     "multipart/form-data;boundary="+boundary);

            outputStream = new DataOutputStream(     connection.getOutputStream() );
            outputStream.writeBytes(twoHyphens + boundary + lineEnd);
            outputStream.writeBytes("Content-Disposition: form-data;     name=\"image\";filename=\"" + pathToOurFile +"\"" + lineEnd);
            outputStream.writeBytes(lineEnd);

            bytesAvailable = fileInputStream.available();
            Log.v("Size",bytesAvailable+"");

            pb.setProgress(0);
            pb.setMax(bytesAvailable);
            //Log.v("Max",pb.getMax()+"");

            bufferSize = Math.min(bytesAvailable, maxBufferSize);
            buffer = new byte[bufferSize];


            // Read file
            bytesRead = fileInputStream.read(buffer, 0, bufferSize);

            while (bytesRead &gt; 0)
            {
                outputStream.write(buffer, 0, bufferSize);

                bytesAvailable = fileInputStream.available();
                Log.v("Available",bytesAvailable+"");

                publishProgress();

                bufferSize = Math.min(bytesAvailable,     maxBufferSize);
                bytesRead = fileInputStream.read(buffer, 0,      bufferSize);
            }

            outputStream.writeBytes(lineEnd);
            outputStream.writeBytes(twoHyphens + boundary + twoHyphens     + lineEnd);

            // Responses from the server (code and message)
            serverResponseCode = connection.getResponseCode();
            serverResponseMessage = connection.getResponseMessage();
            System.out.println(serverResponseMessage);

            fileInputStream.close();
            outputStream.flush();
            outputStream.close();

        }
        catch (Exception ex)
        {
        //Exception handling
        }

        //publishProgress();

        return null;

    }

    @Override
    protected void onProgressUpdate(Void... unsued) {
        super.onProgressUpdate(unsued);

        pb.setProgress(pb.getMax()-bytesAvailable);

    }

    @Override
    protected void onPostExecute(String sResponse) {

        //if(pb.getProgress()&gt;= pb.getMax())
        pb.setVisibility(View.INVISIBLE);

    }
}
</code></pre>
