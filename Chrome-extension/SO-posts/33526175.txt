<p>It seems you don't use your <code>filteredData</code> in the adapter.
So when you call <code>notifiyDataSetChanged</code> there is no change in the data use to fill the <code>ListView</code>.</p>

<p>The <code>publishResults</code> method should change the data used to populate the views, ie for you the <code>movieItems</code> list.</p>

<pre><code>private class ItemFilter extends Filter {
    @Override
    protected FilterResults performFiltering(CharSequence constraint) {

        String filterString = constraint.toString().toLowerCase();

        FilterResults results = new FilterResults();

        final List&lt;Movie&gt; list = originalMovieItems;

        int count = list.size();
        final ArrayList&lt;Movie&gt; nlist = new ArrayList&lt;Movie&gt;(count);

        String filterableString ;

        for (int i = 0; i &lt; count; i++) {
            filterableString = list.get(i).getName();//or whatever you want to filter on
            if (filterableString.toLowerCase().contains(filterString)) {
                nlist.add(list.get(i));
            }
        }

        results.values = nlist;
        results.count = nlist.size();

        return results;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected void publishResults(CharSequence constraint, FilterResults results) {
        movieList = (ArrayList&lt;Movie&gt;) results.values;
        notifyDataSetChanged();
    }

}
</code></pre>

<p>So to keep the movie list unchanged (not the one you display but the one you filter on), you should add a originalMovieList field to your adapter class and modify the constructor as following.</p>

<pre><code>public CustomListAdapter(Activity activity, List&lt;Movie&gt; movieItems) {
     this.activity = activity;
     this.movieItems = movieItems;
     bgColors = activity.getApplicationContext().getResources().getStringArray(R.array.movie_serial_bg);
      this.originalMovieList = movieItems;
         }
</code></pre>
