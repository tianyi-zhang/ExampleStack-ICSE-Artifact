<p>You don't want to set a new adapter every time you add a new item to it, what you want to do is set the adapter to the listview once, and update the underlying dataset and call <code>adapter.notifyDataSetChanged();</code>. Something like this (pseudo code):</p>

<p>MainActivity</p>

<pre><code>public class MainActivity extends Activity implements View.OnClickListener {

    private List&lt;ListItem&gt; dataSet;

    private ListView list;

    private CustomListAdapter adapter;

    private ImageView imageview1, imageview2, imageview3, imageview4;

    private Integer[] ids = {
        R.drawable.first,
        R.drawable.second,
        R.drawable.third,
        R.drawable.fourth,
    };

    private String[] names = {
        "First",
        "Second",
        "Third",
        "Fourth",
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        list = (ListView) findViewById(R.id.listView);

        dataSet = new ArrayList&lt;&gt;();

        adapter = new CustomListAdapter(this, dataSet);

        list.setAdapter(adapter);

        imageview1 = (ImageView) findViewById(R.id.imageview1);
        imageview2 = (ImageView) findViewById(R.id.imageview2);
        imageview3 = (ImageView) findViewById(R.id.imageview3);
        imageview4 = (ImageView) findViewById(R.id.imageview4);

        imageview1.setOnClickListener(this);
        imageview2.setOnClickListener(this);
        imageview3.setOnClickListener(this);
        imageview4.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {

        int selectedImage;

        if (v == imageview1) {
            selectedImage = 0;
        } else if (v == imageview2) {
            selectedImage = 1;
        } else if (v == imageview3) {
            selectedImage = 2;
        } else {
            selectedImage = 3;
        }

        dataSet.add(new ListItem(names[selectedImage], ids[selectedImage]));
        adapter.notifyDataSetChanged();
    }
}
</code></pre>

<p>Adapter:</p>

<pre><code>public class CustomListAdapter extends BaseAdapter {

    private final Context context;

    private final List&lt;ListItem&gt; dataSet;

    public CustomListAdapter(Context context, List&lt;ListItem&gt; dataSet) {
        super();
        this.context = context;
        this.dataSet = dataSet;
    }

    @Override
    public int getCount() {
        return dataSet.size();
    }

    @Override
    public Object getItem(int position) {
        return dataSet.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View rowView = inflater.inflate(R.layout.list_item, parent, false);

        ListItem item = dataSet.get(position);

        ImageView imageView = (ImageView) rowView.findViewById(R.id.icon);
        TextView textView = (TextView) rowView.findViewById(R.id.name);

        imageView.setImageResource(item.getId());
        textView.setText(item.getName());

        return rowView;
    }
}
</code></pre>

<p>ListItem:</p>

<pre><code>public class ListItem {

    private String name;
    private int id;

    public ListItem(String name, int id) {
        this.name = name;
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }
}
</code></pre>
