<p>Modified the code as below to achieve my requirement. </p>

<p>Also had to change the Map value to <code>ArrayList&lt; Integer&gt;</code> for efficient sorting.</p>

<pre><code>public static &lt;K, V extends Comparable&lt;? super V&gt;&gt; Map&lt;String, ArrayList&lt;Integer&gt;&gt; sortByValue(Map&lt;String, ArrayList&lt;Integer&gt;&gt; map)
    {
        List&lt;Map.Entry&lt;String, ArrayList&lt;Integer&gt;&gt;&gt; list = new LinkedList&lt;Map.Entry&lt;String, ArrayList&lt;Integer&gt;&gt;&gt;(
                map.entrySet());
        Collections.sort(list,new Comparator&lt;Map.Entry&lt;String, ArrayList&lt;Integer&gt;&gt;&gt;() 
                {
                    public int compare(Map.Entry&lt;String, ArrayList&lt;Integer&gt;&gt; o1,Map.Entry&lt;String, ArrayList&lt;Integer&gt;&gt; o2)
                    {
                        return (o2.getValue().get(0)).compareTo(o1.getValue().get(0));
                    }
                });

        Map&lt;String, ArrayList&lt;Integer&gt;&gt; result = new LinkedHashMap&lt;String, ArrayList&lt;Integer&gt;&gt;();
        for (Map.Entry&lt;String, ArrayList&lt;Integer&gt;&gt; entry : list) 
        {
            result.put(entry.getKey(), entry.getValue());
        }
        return result;
    }
</code></pre>
