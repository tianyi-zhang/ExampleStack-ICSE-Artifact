<p>I think that you should use a FrameLayout in your main_activity layout. Something like this:</p>

<pre><code>&lt;RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"&gt;

    &lt;FrameLayout
        android:id="@+id/fragment_container"
        android:layout_width="match_parent"
        android:layout_height="match_parent"&gt;

        &lt;Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Show"
            android:id="@+id/button1"
            android:layout_centerVertical="true"
            android:layout_centerHorizontal="true"
            android:onClick="setContentView" /&gt;

    &lt;/FrameLayout&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>Then, in your MainActivity, try this:</p>

<pre><code>import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentTransaction;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;


public class MainActivity extends FragmentActivity {

Button showBtn;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    final android.support.v4.app.FragmentManager fm = getSupportFragmentManager();
    final PlayersFragment p = new PlayersFragment();
    showBtn = (Button) findViewById(R.id.button1);
    showBtn.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
            final FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
            showBtn.setVisibility(View.GONE);

            transaction.replace(R.id.fragment_container, p);
            transaction.addToBackStack(null);
            transaction.commit();
        }


    });
}

@Override
public void onBackPressed() {
    if (showBtn != null) {
        showBtn.setVisibility(View.VISIBLE);
    }
    super.onBackPressed();
}
}
</code></pre>

<p>Your adapter:</p>

<pre><code>import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

public class Adapter extends ArrayAdapter&lt;String&gt;{

    Context c;
    String[] players;
    int[] images;
    LayoutInflater inflater;

    public Adapter(Context context, String[] players, int[] images) {
        super(context, R.layout.simplerow,players);

        this.c=context;
        this.players = players;
        this.images = images;
    }

    @Override
    public View getView(int position,View convertView, ViewGroup parent){
        if(convertView==null)
        {
            inflater= (LayoutInflater) c.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = inflater.inflate(R.layout.simplerow,null);
        }
        TextView nameTv = (TextView) convertView.findViewById(R.id.nameTv);
        ImageView img = (ImageView) convertView.findViewById(R.id.imageView1);

        nameTv.setText(players[position]);
        img.setImageResource(images[position]);
        return convertView;

    }

}
</code></pre>

<p>Your dialog layout:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"&gt;

    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Soccer SuperStars"
        android:layout_gravity="center"/&gt;

    &lt;View
        android:layout_width="match_parent"
        android:layout_height="2dp"
        android:background="@android:color/black"/&gt;

    &lt;ListView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/listView1"
        android:layout_alignParentTop="true"
        android:layout_alignParentBottom="true"
        android:layout_alignParentLeft="true"
        &gt;&lt;/ListView&gt;


&lt;/LinearLayout&gt;
</code></pre>

<p>And your PlayerFragment:</p>

<pre><code>import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.Toast;

public class PlayersFragment extends android.support.v4.app.DialogFragment {

    ListView lv;
    String[] players = {"micheal arteta", "deago costa", "andy reid", "scum degea", "scum rooney", "john terry"};

    int[] images = {R.drawable.arteta, R.drawable.costa, R.drawable.reid, R.drawable.degea,
            R.drawable.rooney, R.drawable.terry};

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.dialog, container, false);

        //initialize listview
        lv = (ListView) rootView.findViewById(R.id.listView1);


        //create adapter obj and set list view to it
        Adapter adapter = new Adapter(getActivity(), players, images);
        lv.setAdapter(adapter);

        lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView&lt;?&gt; a, View v, int pos, long id) {
                Toast.makeText(getActivity(), players[pos], Toast.LENGTH_SHORT).show();
            }
        });


        return rootView;


    }

}
</code></pre>

<p>I removed some come (paddings) from your main_activity layout and included some code show the "dialog" (that is now a fragment) full screen.</p>
