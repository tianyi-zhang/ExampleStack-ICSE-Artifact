<p>The problem here is when you have an author like the infamous <strong>Larry "Basher" O'Niven</strong>.</p>

<p>In this case, you will need to escape the variable, as in this naive implementation:</p>

<pre><code>  public static String escape(String s) {
    Matcher matcher = Pattern.compile("['\"]")
        .matcher(s);
    StringBuilder buffer = new StringBuilder("concat(");
    int start = 0;
    while (matcher.find()) {
      buffer.append("'")
          .append(s.substring(start, matcher.start()))
          .append("',");
      buffer.append("'".equals(matcher.group()) ? "\"'\"," : "'\"',");
      start = matcher.end();
    }
    if (start == 0) {
      return "'" + s + "'";
    }
    return buffer.append("'")
        .append(s.substring(start))
        .append("'")
        .append(")")
        .toString();
  }
</code></pre>

<p>This can be demonstrated with this code:</p>

<pre><code>String xml =
    "&lt;xml&gt;&lt;foo bar=\"Larry &amp;quot;Basher&amp;quot; O'Niven\"&gt;Ringworm&lt;/foo&gt;&lt;/xml&gt;";
String query =
    String.format("//foo[@bar=%s]", escape("Larry \"Basher\" O'Niven"));
System.out.println(query);
String book = XPathFactory.newInstance()
    .newXPath()
    .evaluate(query, new InputSource(new StringReader(xml)));
System.out.println(query + " &gt; " + book);
</code></pre>
