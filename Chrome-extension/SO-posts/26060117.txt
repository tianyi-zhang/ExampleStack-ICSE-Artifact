<p>I had a similar requirement: converting a decimal separator press on the keypad (a dot) to the decimal separator of our locale (a comma). I tried the same idea as Sorceror, but it didn't work for me either. What does work is setting event.doit = false and posting a new event that is the clone of the original event with the character replaced:</p>

<pre><code>@Override
public void handleEvent(Event event) {
    if (event.widget instanceof Browser &amp;&amp; event.character == 'x') {
        Event eventClone = cloneEvent(event);
        eventClone.character = 'y'; 
        event.doit = false;
        display.post(eventClone);
    }
}
</code></pre>

<p>(If display is a local variable you need to make it final.)
I created a small utility method to create a clone of the event:</p>

<pre><code>/**
 * @return a clone of the given {@link Event}
 */
public static Event cloneEvent(Event event) {
    Event clone = new Event();
    clone.display = event.display;
    clone.widget = event.widget;
    clone.type = event.type;
    clone.detail = event.detail;
    clone.item = event.item;
    clone.index = event.index;
    clone.gc = event.gc;
    clone.x = event.x;
    clone.y = event.y;
    clone.width = event.width;
    clone.height = event.height;
    clone.count = event.count;
    clone.time = event.time;
    clone.button = event.button;
    clone.character = event.character;
    clone.keyCode = event.keyCode;
    clone.keyLocation = event.keyLocation;
    clone.stateMask = event.stateMask;
    clone.start = event.start;
    clone.end = event.end;
    clone.text = event.text;
    clone.doit = event.doit;
    clone.data = event.data;
    clone.touches = event.touches;
    clone.xDirection = event.xDirection;
    clone.yDirection = event.yDirection;
    clone.magnification = event.magnification;
    clone.rotation = event.rotation;
    return clone;
}
</code></pre>
