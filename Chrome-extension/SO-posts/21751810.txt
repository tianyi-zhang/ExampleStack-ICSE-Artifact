<p>First about Decals, decals are like Sprites but in 3d coordinate, use it like this:</p>

<p>private Decal   decal;
private DecalBatch decalBatch;</p>

<p>in show() or create()</p>

<pre><code>decalBatch = new DecalBatch();
CameraGroupStrategy cameraGroupStrategy = new CameraGroupStrategy(camera);
decal = Decal.newDecal(textureRegion, true);
decal.setPosition(5, 8, 1);
decal.setScale(0.02f);
decalBatch.setGroupStrategy(cameraGroupStrategy);
</code></pre>

<p>in render()</p>

<pre><code>//Add all your decals then flush()
decalBatch.add(decal);
decalBatch.flush();
</code></pre>

<p>also dispose with decalBatch.dispose();</p>

<p>notice that in future decal will be part of 3d, I personally do not encourage you to use Decals as myself using 3d plane and I saw some problems with it, to use 3d plane use like these, i paste some of my codes here</p>

<pre><code>private Model createPlaneModel(final float width, final float height, final Material material, 
            final float u1, final float v1, final float u2, final float v2) {

modelBuilder.begin();
MeshPartBuilder bPartBuilder = modelBuilder.part("rect", 
GL10.GL_TRIANGLES, Usage.Position | Usage.Normal | Usage.TextureCoordinates, 
material);
//NOTE ON TEXTURE REGION, MAY FILL OTHER REGIONS, USE GET region.getU() and so on
bPartBuilder.setUVRange(u1, v1, u2, v2);
        bPartBuilder.rect(
                -(width*0.5f), -(height*0.5f), 0, 
                (width*0.5f), -(height*0.5f), 0, 
                (width*0.5f), (height*0.5f), 0, 
                -(width*0.5f), (height*0.5f), 0,
                0, 0, -1);


        return (modelBuilder.end());
    }
</code></pre>

<p>texture can be added as attribute to material</p>

<pre><code>material.set(new TextureAttribute(TextureAttribute.Diffuse, texture)
</code></pre>

<p>for transparent plane that has alpha add to other attribute</p>

<pre><code>attributes.add( new BlendingAttribute(color.getFloat(3)));          
attributes.add( new FloatAttribute(FloatAttribute.AlphaTest, 0.5f));

material.set(attributes);
</code></pre>

<p>Init the ModelInstance to get model that returned</p>

<pre><code>modelInstance = new ModelInstance(createPlaneModel(...))
</code></pre>

<p>render in render() with ModelBatch object</p>

<pre><code>modelBatch.render(modelInstance );
</code></pre>

<p>see these links too.
<a href="http://www.badlogicgames.com/forum/viewtopic.php?f=11&amp;t=11884" rel="nofollow">http://www.badlogicgames.com/forum/viewtopic.php?f=11&amp;t=11884</a></p>

<p>this is my benchmark on Plane vs Decals
<a href="http://www.badlogicgames.com/forum/viewtopic.php?f=11&amp;t=12493" rel="nofollow">http://www.badlogicgames.com/forum/viewtopic.php?f=11&amp;t=12493</a></p>
