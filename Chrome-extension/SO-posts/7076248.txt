<p>Try this</p>

<pre><code>  public class Main extends Activity {

private static final int SWIPE_MIN_DISTANCE = 120;
private static final int SWIPE_MAX_OFF_PATH = 250;
private static final int SWIPE_THRESHOLD_VELOCITY = 200;
private GestureDetector gestureDetector;
View.OnTouchListener gestureListener;
private Animation slideLeftIn;
private Animation slideLeftOut;
private Animation slideRightIn;
private Animation slideRightOut;
private ViewFlipper viewFlipper;
@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    viewFlipper = (ViewFlipper)findViewById(R.id.flipper);
    slideLeftIn = AnimationUtils.loadAnimation(this, R.anim.slide_left_in);
    slideLeftOut = AnimationUtils.loadAnimation(this, R.anim.slide_left_out);
    slideRightIn = AnimationUtils.loadAnimation(this, R.anim.slide_right_in);
    slideRightOut = AnimationUtils.loadAnimation(this, R.anim.slide_right_out);

    gestureDetector = new GestureDetector(new MyGestureDetector());
    gestureListener = new View.OnTouchListener() {
        public boolean onTouch(View v, MotionEvent event) {
            if (gestureDetector.onTouchEvent(event)) {
                return true;
            }
            return false;
        }
    };
}
class MyGestureDetector extends SimpleOnGestureListener {
    @Override
    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
        try {
            if (Math.abs(e1.getY() - e2.getY()) &gt; SWIPE_MAX_OFF_PATH)
                return false;
            // right to left swipe
            if(e1.getX() - e2.getX() &gt; SWIPE_MIN_DISTANCE &amp;&amp; Math.abs(velocityX) &gt; SWIPE_THRESHOLD_VELOCITY) {
                viewFlipper.setInAnimation(slideLeftIn);
                viewFlipper.setOutAnimation(slideLeftOut);
                viewFlipper.showNext();
            }  else if (e2.getX() - e1.getX() &gt; SWIPE_MIN_DISTANCE &amp;&amp; Math.abs(velocityX) &gt; SWIPE_THRESHOLD_VELOCITY) {
                viewFlipper.setInAnimation(slideRightIn);
                viewFlipper.setOutAnimation(slideRightOut);
                viewFlipper.showPrevious();
            }
        } catch (Exception e) {
            // nothing
        }
        return false;
    }
}

@Override
public boolean onTouchEvent(MotionEvent event) {
    if (gestureDetector.onTouchEvent(event))
        return true;
    else
        return false;
}
    }
</code></pre>

<p>slide_left_in.xml</p>

<pre><code>             &lt;?xml version="1.0" encoding="utf-8"?&gt;
        &lt;set xmlns:android="http://schemas.android.com/apk/res/android"&gt;
            &lt;translate android:fromXDelta="100%p" android:toXDelta="0" android:duration="800"/&gt;
            &lt;/set&gt;
</code></pre>

<p>slide_left_out.xml</p>

<pre><code>                 &lt;?xml version="1.0" encoding="utf-8"?&gt;
               &lt;set xmlns:android="http://schemas.android.com/apk/res/android"&gt;
           &lt;translate android:fromXDelta="0" android:toXDelta="-100%p" android:duration="800"/&gt;
            &lt;/set&gt;
</code></pre>

<p>slide_right_in.xml</p>

<pre><code>              &lt;?xml version="1.0" encoding="utf-8"?&gt;
        &lt;set xmlns:android="http://schemas.android.com/apk/res/android"&gt;
            &lt;translate android:fromXDelta="-100%p" android:toXDelta="0" android:duration="800"/&gt;
           &lt;/set&gt;
</code></pre>

<p>slide_right_out.xml</p>

<pre><code>          &lt;?xml version="1.0" encoding="utf-8"?&gt;
                &lt;set xmlns:android="http://schemas.android.com/apk/res/android"&gt;
            &lt;translate android:fromXDelta="0" android:toXDelta="100%p" android:duration="800"/&gt;
             &lt;/set&gt;
</code></pre>
