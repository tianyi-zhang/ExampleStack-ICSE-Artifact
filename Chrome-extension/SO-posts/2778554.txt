<p>@finnw</p>

<p>Your code works fine except that</p>

<pre><code>label.setIcon(new ImageIcon(image));
</code></pre>

<p>ImageIcon class doesnot have a constructor that accepts RenderedImage object.</p>

<p>So you need to convert RenderedImage into a BufferedImage. And code for that goes here</p>

<pre><code>public BufferedImage convertRenderedImage(RenderedImage img) {
    if (img instanceof BufferedImage) {
        return (BufferedImage) img;
    }
    ColorModel cm = img.getColorModel();
    int width = img.getWidth();
    int height = img.getHeight();
    WritableRaster raster = cm.createCompatibleWritableRaster(width, height);
    boolean isAlphaPremultiplied = cm.isAlphaPremultiplied();
    Hashtable properties = new Hashtable();
    String[] keys = img.getPropertyNames();
    if (keys != null) {
        for (int i = 0; i &lt; keys.length; i++) {
            properties.put(keys[i], img.getProperty(keys[i]));
        }
    }
    BufferedImage result = new BufferedImage(cm, raster, isAlphaPremultiplied, properties);
    img.copyData(raster);
    return result;
}
</code></pre>

<p>and now changing your code to </p>

<pre><code>label.setIcon(new ImageIcon(convertRenderedImage(image)));
</code></pre>

<p>works</p>
