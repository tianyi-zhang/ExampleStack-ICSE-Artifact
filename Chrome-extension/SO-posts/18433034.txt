<p>Here is something similar</p>

<pre><code>   public static byte[] StringToByteArrayFastest(string hex) {
        if (hex.Length % 2 == 1)
            throw new Exception("The binary key cannot have an odd number of digits");

        byte[] arr = new byte[hex.Length &gt;&gt; 1];

        for (int i = 0; i &lt; hex.Length &gt;&gt; 1; ++i)
        {
            arr[i] = (byte)((GetHexVal(hex[i &lt;&lt; 1]) &lt;&lt; 4) + (GetHexVal(hex[(i &lt;&lt; 1) + 1])));
        }

        return arr;
    }

public static int GetHexVal(char hex) {
    int val = (int)hex;
    //For uppercase A-F letters:
    return val - (val &lt; 58 ? 48 : 55);
    //For lowercase a-f letters:
    //return val - (val &lt; 58 ? 48 : 87);
    //Or the two combined, but a bit slower:
    //return val - (val &lt; 58 ? 48 : (val &lt; 97 ? 55 : 87));
}
</code></pre>

<p><br><br>
or
<br><br></p>

<pre><code>public static byte[] StringToByteArray(String hex)
{
  int NumberChars = hex.Length;
  byte[] bytes = new byte[NumberChars / 2];
  for (int i = 0; i &lt; NumberChars; i += 2)
    bytes[i / 2] = Convert.ToByte(hex.Substring(i, 2), 16);
  return bytes;
}
</code></pre>

<p><br><br>
or
<br><br></p>

<pre><code>private byte[] HexStringToByteArray(string hexString)
{
    int hexStringLength = hexString.Length;
    byte[] b = new byte[hexStringLength / 2];
    for (int i = 0; i &lt; hexStringLength; i += 2)
    {
        int topChar = (hexString[i] &gt; 0x40 ? hexString[i] - 0x37 : hexString[i] - 0x30) &lt;&lt; 4;
        int bottomChar = hexString[i + 1] &gt; 0x40 ? hexString[i + 1] - 0x37 : hexString[i + 1] - 0x30;
        b[i / 2] = Convert.ToByte(topChar + bottomChar);
    }
    return b;
}
</code></pre>

<p>Here is alot more of them.
<a href="http://stackoverflow.com/questions/311165/how-do-you-convert-byte-array-to-hexadecimal-string-and-vice-versa/14333437#14333437">How do you convert Byte Array to Hexadecimal String, and vice versa?</a></p>
