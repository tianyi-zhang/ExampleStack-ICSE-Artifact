<p>Your question is too vague. I provide some guide.</p>

<ol>
<li>Using <a href="http://www.aviary.com/android">Aviary SDK</a>. It also supports iOS and WindowPhone7. Aviary provide most of function such as Orientation, Crop, and Sharpness,Red-Eye, Whiten, and Blemish,Stickers, Drawing, Text, and Meme (beta),Brightness, Saturation, and Contrast  and custom Options. <img src="http://i.stack.imgur.com/ZUjB4.png" alt="SS">. </li>
<li><a href="http://developers.fotor.com/features_android.html">Fotor SDK</a> </li>
<li><a href="https://creativesdk.adobe.com/">Creative SDK</a> by Adobe </li>
<li><p>Directly process bitmap. </p>

<pre><code>import android.graphics.Bitmap;

public class ProcessingImage {
private Bitmap defaultImg;
private int idBitmap;

public int getIdBitmap() {
    return idBitmap;
}

public void setIdBitmap(int idBitmap) {
    this.idBitmap = idBitmap;
}

public Bitmap getDefaultImg() {
    return defaultImg;
}

public void setDefaultImg(Bitmap defaultImg) {
    this.defaultImg = defaultImg;
}

public ProcessingImage() {
}

public Bitmap processingI(Bitmap myBitmap) {
    return myBitmap;
}

public Bitmap TintThePicture(int deg, Bitmap defaultBitmap) {

    int w = defaultBitmap.getWidth();
    int h = defaultBitmap.getHeight();

    int[] pix = new int[w * h];
    defaultBitmap.getPixels(pix, 0, w, 0, 0, w, h);

    double angle = (3.14159d * (double) deg) / 180.0d;
    int S = (int) (256.0d * Math.sin(angle));
    int C = (int) (256.0d * Math.cos(angle));

    int r, g, b, index;
    int RY, BY, RYY, GYY, BYY, R, G, B, Y;

    for (int y = 0; y &lt; h; y++) {
        for (int x = 0; x &lt; w; x++) {
            index = y * w + x;
            r = (pix[index] &gt;&gt; 16) &amp; 0xff;
            g = (pix[index] &gt;&gt; 8) &amp; 0xff;
            b = pix[index] &amp; 0xff;
            RY = (70 * r - 59 * g - 11 * b) / 100;
            BY = (-30 * r - 59 * g + 89 * b) / 100;
            Y = (30 * r + 59 * g + 11 * b) / 100;
            RYY = (S * BY + C * RY) / 256;
            BYY = (C * BY - S * RY) / 256;
            GYY = (-51 * RYY - 19 * BYY) / 100;
            R = Y + RYY;
            R = (R &lt; 0) ? 0 : ((R &gt; 255) ? 255 : R);
            G = Y + GYY;
            G = (G &lt; 0) ? 0 : ((G &gt; 255) ? 255 : G);
            B = Y + BYY;
            B = (B &lt; 0) ? 0 : ((B &gt; 255) ? 255 : B);
            pix[index] = 0xff000000 | (R &lt;&lt; 16) | (G &lt;&lt; 8) | B;
        }
    }

    Bitmap bm = Bitmap.createBitmap(w, h, defaultBitmap.getConfig());
    bm.setPixels(pix, 0, w, 0, 0, w, h);

    pix = null;
    return bm;
}
}
</code></pre>

<p>Usage: Process Indigo color: <code>TintThePicture(180, myBitmap);</code>
   Process Green color: <code>TintThePicture(300, myBitmap);</code></p></li>
<li>Use <a href="http://developer.android.com/reference/android/media/effect/package-summary.html">android.media.effect</a> is provided in API14</li>
<li><a href="https://github.com/yaa110/Effects-Pro">Effect Pro</a></li>
<li><a href="https://github.com/baugarten/Android-Image-Edit">Android-Image-Edit</a></li>
<li><a href="http://code.google.com/p/android-image-editor/source/browse/#svn/trunk/src/com/android/image/edit">android-image-editor</a></li>
<li><a href="https://github.com/QuadFlask/smartcrop-android">smartcrop-android</a> (This library will analyze best crop position and size by calculating some features; edge, skin tone, staturation and face.)</li>
</ol>
