<p>If you have Image path, you can directly display  image from image path..</p>

<p>You can write like this...</p>

<pre><code> imageView.setImageBitmap(BitmapFactory.decodeFile(picturePath));
</code></pre>

<p><strong><code>BitmapFactory.decodeFile()</code></strong> method allows you to decode image from file path. so you can set decoded image directly to the <code>ImageView</code> by <code>setImageBitmap()</code> method.</p>

<p><strong>Edit :</strong></p>

<p>Here I am adding sample code for picking intent..<br>
You can take reference and see whats the problem there..</p>

<p><strong>To Call Image Intent</strong></p>

<pre><code>Intent i = new Intent(Intent.ACTION_PICK,
        android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult(i, RESULT_LOAD_IMAGE);
</code></pre>

<p><strong>Activity Result</strong></p>

<pre><code>public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);


       if (data != null) {
            Uri selectedImage = data.getData();
            String[] filePathColumn = { MediaStore.Images.Media.DATA };
            Cursor cursor = context.getContentResolver().query(selectedImage,
                    filePathColumn, null, null, null);

            cursor.moveToFirst();
            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
            String picturePath = cursor.getString(columnIndex);
            img_user.setImageBitmap(BitmapFactory.decodeFile(picturePath));
            btn_set.setEnabled(true);
            cursor.close();
        } else {
            Toast.makeText(getActivity(), "Try Again!!", Toast.LENGTH_SHORT)
                    .show();
        }

}
</code></pre>

<p>This may help you..</p>
