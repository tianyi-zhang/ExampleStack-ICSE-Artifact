<p>The solution to the problem was to add word <strong>token</strong>:</p>

<pre><code>  responseContext.getHeaders().add("Access-Control-Allow-Headers", "token, origin, content-type, accept, authorization");
</code></pre>

<p><code>CORS</code> in my <code>filter</code> in Java, since I'm using it in the <code>headers</code> AJAX. The complete solution is this:</p>

<pre><code>@Provider
public class ConfigureCORSFilter implements ContainerResponseFilter {

    @Override
    public void filter(ContainerRequestContext requestContext,ContainerResponseContext responseContext) throws IOException {
          responseContext.getHeaders().add("Access-Control-Allow-Origin", "*");
          responseContext.getHeaders().add("Access-Control-Allow-Headers", "token, origin, content-type, accept, authorization");
          responseContext.getHeaders().add("Access-Control-Allow-Credentials", "true");
          responseContext.getHeaders().add("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS, HEAD");
          responseContext.getHeaders().add("Access-Control-Max-Age", "1209600");
    }

}
</code></pre>
