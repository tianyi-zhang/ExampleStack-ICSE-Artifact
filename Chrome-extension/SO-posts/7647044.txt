<p>You can make custome adapter class for that</p>

<pre><code>public class MyAdapter extends ArrayAdapter&lt;BindData&gt; {
    private LayoutInflater inflater;
    private int layoutId;

    public MyAdapter(Context context, int layoutId, BindData[] objects) {
        super(context, 0, objects);
        this.inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        this.layoutId = layoutId;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;

        if (convertView == null) {
            convertView = inflater.inflate(layoutId, parent, false);
            holder = new ViewHolder();
            holder.textView = (TextView) convertView.findViewById(R.id.textview);
            holder.imageView = (ImageView) convertView.findViewById(R.id.imageview);
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
        //BindData data = getItem(position);
        holder.textView.setText(titles[position]);
        holder.imageView.setImageBitmap(imgs[position]);
        return convertView;
    }
}
</code></pre>

<p>and call that this way</p>

<pre><code>issueGridView = (GridView) findViewById(R.id.gvissue);  
        adapter =new MyAdapter(Issue.this, R.layout.issue_item, mDatas);
        issueGridView.setAdapter(adapter);
</code></pre>

<p>Where mDatas is</p>

<pre><code>public class BindData {
    Bitmap b;
    String title;
    BindData(Bitmap bitmap, String s) {
        this.b = bitmap;
        this.title = s;
    }
}
private BindData[] mDatas;
    static class ViewHolder {
        TextView textView;
        ImageView imageView;
    }
</code></pre>
