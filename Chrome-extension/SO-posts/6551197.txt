<p>That particular bit makes more sense if you follow his link to the whole source file. Here's a slightly bigger snippet:</p>

<pre><code>Location bestResult = null;
float bestAccuracy = Float.MAX_VALUE;
long bestTime = Long.MIN_VALUE;

// Iterate through all the providers on the system, keeping
// note of the most accurate result within the acceptable time limit.
// If no result is found within maxTime, return the newest Location.
List&lt;String&gt; matchingProviders = locationManager.getAllProviders();
for (String provider: matchingProviders) {
  Location location = locationManager.getLastKnownLocation(provider);
  if (location != null) {
    float accuracy = location.getAccuracy();
    long time = location.getTime();

    if ((time &gt; minTime &amp;&amp; accuracy &lt; bestAccuracy)) {
      bestResult = location;
      bestAccuracy = accuracy;
      bestTime = time;
    }
    else if (time &lt; minTime &amp;&amp; bestAccuracy == Float.MAX_VALUE &amp;&amp; time &gt; bestTime) {
      bestResult = location;
      bestTime = time;
    }
  }
}
</code></pre>

<p>Very simply, <code>Float.MAX_VALUE</code> is his default value for <code>bestAccuracy</code> and he's just checking that he hasn't reduced it in the previous <code>if</code> clause.</p>
