<p>Try using This method in <em>android.location</em> API</p>

<p><a href="http://developer.android.com/reference/android/location/Location.html#distanceBetween%28double,%20double,%20double,%20double,%20float%5B%5D%29" rel="nofollow">distanceBetween(double startLatitude, double startLongitude, double endLatitude, double endLongitude, float[] results) </a> </p>

<p>This method computes the approximate distance in meters between two locations, and optionally the initial and final bearings of the shortest path between them</p>

<p><strong>NB:</strong> If you are getting lat/lon from GeoPoint then they are in microdegrees. You must multiply by 1E6</p>

<p>IF you want to calculate distace between 2 Geopoint by <strong>Haversine formula</strong></p>

<pre><code>public class DistanceCalculator {
   // earthâ€™s radius = 6,371km
   private static final double EARTH_RADIUS = 6371 ;
   public static double distanceCalcByHaversine(GeoPoint startP, GeoPoint endP) {
      double lat1 = startP.getLatitudeE6()/1E6;
      double lat2 = endP.getLatitudeE6()/1E6;
      double lon1 = startP.getLongitudeE6()/1E6;
      double lon2 = endP.getLongitudeE6()/1E6;
      double dLat = Math.toRadians(lat2-lat1);
      double dLon = Math.toRadians(lon2-lon1);
      double a = Math.sin(dLat/2) * Math.sin(dLat/2) +
      Math.cos(Math.toRadians(lat1)) * Math.cos(Math.toRadians(lat2)) *
      Math.sin(dLon/2) * Math.sin(dLon/2);
      double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
      return EARTH_RADIUS * c;
   }
}
</code></pre>
