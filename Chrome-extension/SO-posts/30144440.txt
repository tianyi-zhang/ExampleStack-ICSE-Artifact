<p>I found my error. I wanted to write Ndef messages and using the tag as MifareUltralight was a little silly as it just complicates everything. Instead, I cast the tag as an Ndef. Here's me code:</p>

<pre><code>private void write(Tag tag) {
        Ndef ndef = Ndef.get(tag);
        Locale locale = Locale.ENGLISH;
        NdefRecord hi = createTextRecord("hello world", locale, true);
        mNdefMessage = new NdefMessage(hi);

        try{
            ndef.connect();
            ndef.writeNdefMessage(mNdefMessage);
            Toast.makeText(this, "Message Written", Toast.LENGTH_LONG).show();
        }
        catch (Exception e){
            Log.d(TAG, "Exception:  " + e.toString());
        }
        finally {
            try{
                ndef.close();
            }
            catch(Exception e){
                Log.d(TAG, ":( no  " + e.toString());
            }
        }
    }
</code></pre>

<p>In case anyone needs to figure out how to create text records (encoded in UTF 8) and read from Ndef supported tags, I have added my methods for those as well:</p>

<p>Creating text records:</p>

<pre><code>public NdefRecord createTextRecord(String payload, Locale locale, boolean encodeInUtf8) {
    byte[] langBytes = locale.getLanguage().getBytes(Charset.forName("US-ASCII"));
    Charset utfEncoding = encodeInUtf8 ? Charset.forName("UTF-8") : Charset.forName("UTF-16");
    byte[] textBytes = payload.getBytes(utfEncoding);
    int utfBit = encodeInUtf8 ? 0 : (1 &lt;&lt; 7);
    char status = (char) (utfBit + langBytes.length);
    byte[] data = new byte[1 + langBytes.length + textBytes.length];
    data[0] = (byte) status;
    System.arraycopy(langBytes, 0, data, 1, langBytes.length);
    System.arraycopy(textBytes, 0, data, 1 + langBytes.length, textBytes.length);
    NdefRecord record = new NdefRecord(NdefRecord.TNF_WELL_KNOWN,
            NdefRecord.RTD_TEXT, new byte[0], data);
    return record;
}
</code></pre>

<p>Reading NDEF tags:</p>

<pre><code>private void read(Tag tagFromIntent) {
    Ndef ndef = Ndef.get(tagFromIntent);

    try{
        ndef.connect();
        mNdefMessage = ndef.getNdefMessage();
        NdefRecord [] records = mNdefMessage.getRecords();
        byte [] payload = records[0].getPayload();
        String displayString = getTextFromNdefRecord(records[0]);
        displayInfo.setText(displayString);
        Toast.makeText(this, "String read", Toast.LENGTH_LONG).show();
    }
    catch (Exception e){
        Log.d(TAG, e.toString());
    }
    finally {
        try{
            ndef.close();
        }
        catch (Exception e){
            Log.d(TAG, e.toString());
        }
    }
</code></pre>

<p>reading text from NdefRecords:</p>

<pre><code> public String getTextFromNdefRecord(NdefRecord ndefRecord)
{
    String tagContent = null;
    try {
        byte[] payload = ndefRecord.getPayload();
        String textEncoding = "UTF-8";
        int languageSize = payload[0] &amp; 0063;
        tagContent = new String(payload, languageSize + 1,
                payload.length - languageSize - 1, textEncoding);
    } catch (UnsupportedEncodingException e) {
        Log.e("getTextFromNdefRecord", e.getMessage(), e);
    }
    return tagContent;
}
</code></pre>

<p>I hope this helps anyone else working with NFC. These simple methods should give you all the functionality you need within Android. </p>
