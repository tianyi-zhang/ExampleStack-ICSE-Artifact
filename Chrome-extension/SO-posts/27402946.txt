<p>The answer :)</p>

<pre><code>public class ZipNew {
    private List&lt;String&gt; fileList = new ArrayList&lt;String&gt;();
    private String outputZip;
    private List&lt;String&gt; sourceFolders = new ArrayList&lt;String&gt;();
    private String currFolder;

    public boolean pack(List&lt;String&gt; sourceFolders, String outputZip) {
        this.outputZip = outputZip;
        this.sourceFolders = sourceFolders;
        for (String sourceFolder : sourceFolders) {
            this.currFolder = sourceFolder;
            generateFileList( new File(currFolder) );
        }
        boolean packed = packInZip(outputZip);
        return packed;
    }

    private void generateFileList(File node){
        if(node.isFile()){
            fileList.add(generateZipEntry(node.getAbsoluteFile().toString()));
        }
        else if(node.isDirectory()){
            String[] subNote = node.list();
            for(String filename : subNote){
                generateFileList(new File(node, filename));
            }
        }
    }

    private String generateZipEntry(String file){
        return file.substring(currFolder.lastIndexOf("\\") + 1, file.length());
    }

    private boolean packInZip(String zipFile){
        byte[] buffer = new byte[1024];
        try{
            FileOutputStream fos = new FileOutputStream(zipFile);
            ZipOutputStream zos = new ZipOutputStream(fos);


                for (String file : this.fileList) {
                    ZipEntry ze = new ZipEntry(file);
                    zos.putNextEntry(ze);
                    FileInputStream in = new FileInputStream(currFolder.substring(0, currFolder.lastIndexOf("\\")) + File.separator + file);
                    int len;
                    while ((len = in.read(buffer)) &gt; 0) {
                        zos.write(buffer, 0, len);
                    }
                    in.close();
                }


            zos.closeEntry();
            zos.close();
            return true;
        } catch(IOException ex){
            ex.printStackTrace();
            return false;
        }
    }
}
</code></pre>
