<p>If we are talking about good old ASCII table then each small letter differ from big letter by only one bit (2^5, 6th bit) represented by decimal 32 or hex 0x20.</p>

<p>But if we are talking about XXI century unicode we can use the java std library functions.</p>

<p>Below I show both versions:</p>

<p><strong>ASCII style:</strong></p>

<pre><code>public String toggleAscii(String s) {
    StringBuilder sb = new StringBuilder(s.length());

    for (int i = 0; i &lt; s.length(); i++) {
        char c = s.charAt(i);
        if (c &gt;= 'A' &amp;&amp; c &lt;= 'Z' || c &gt;= 'a' &amp;&amp; c &lt;= 'z') {
            boolean isLower = (c &amp; 0x20) == 0x20; // binary 100000 (sixth bit, 2^5)
            c = (char) (isLower ? (c &amp; 0xdf) : (c | 0x20));
        }
        sb.append(c);
    }

    return sb.toString();
}
</code></pre>

<p><strong>Unicode style:</strong></p>

<pre><code>public String toggle(String s) {
    StringBuilder sb = new StringBuilder(s.length());

    for (int i = 0; i &lt; s.length(); i++) {
        char c = s.charAt(i);
        boolean isUpper = Character.isUpperCase(c);
        sb.append(isUpper ? Character.toLowerCase(c) : Character.toUpperCase(c));
    }

    return sb.toString();
}
</code></pre>
