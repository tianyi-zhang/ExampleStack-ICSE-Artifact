<p>Use <a href="https://developers.google.com/places/training/autocomplete-android" rel="nofollow">Google Places AutoComplete API</a> rather than implementing Textwatcher.  Google Places AutoComplete API is really effective when you start type and take pause then it will show dropdown and dropdown list is updated at every character.  </p>

<p>Using this you can easily update your dropdown list of your autocomplete.   </p>

<p>Here is explanation of this.   </p>

<pre><code>editTxt.setAdapter(new PlacesAutoCompleteAdapter(this,R.layout.yourlayout));  
</code></pre>

<p>here is PlacesAutoCompleteAdapter class which is filter result and return filtered result.  </p>

<pre><code>private class PlacesAutoCompleteAdapter extends ArrayAdapter&lt;String&gt; implements Filterable {
    private ArrayList&lt;String&gt; resultList;
    private String[] myArray;

    public PlacesAutoCompleteAdapter(Context context, int textViewResourceId) {
        super(context, textViewResourceId);
    }

    @Override
    public int getCount() {
        return myArray.length;
    }

    @Override
    public String getItem(int index) {
        return myArray[index];
    }

    @Override
    public Filter getFilter() {
        Filter filter = new Filter() {
            @Override
            protected FilterResults performFiltering(CharSequence constraint) {
                FilterResults filterResults = new FilterResults();
                if (constraint != null) {
                    // Retrieve the autocomplete results.
                    myArray = autocomplete(constraint.toString());  // here we are calling myAutocomplete method.                    
                    // Assign the data to the FilterResults
                    filterResults.values = myArray;
                    filterResults.count = myArray.length;
                }
                return filterResults;
            }

            @Override
            protected void publishResults(CharSequence constraint, FilterResults results) {
                if (results != null &amp;&amp; results.count &gt; 0) {
                    notifyDataSetChanged();
                }
                else {
                    notifyDataSetInvalidated();
                }
            }};
        return filter;
    }
}   

private String[] autocomplete(String dropdownString) {
    ArrayList&lt;String&gt; resultList = null;
    StringBuilder jsonResults = new StringBuilder();
    String term;

    try {
        term=URLEncoder.encode(dropdownString, "utf8");
    } catch (Exception e) {
        e.printStackTrace();
        term = dropdownString;
    }

    StringBuilder sb = new StringBuilder(PLACES_API_BASE + TYPE_AUTOCOMPLETE);  
    sb.append("?param="+param1+"); // this is parameter if your getting data from server.        
    sb.append("&amp;term="+term); // this term which you typing in edittext.  
    String url = sb.toString();

        // you can do here anything with your list. get it and populate it.   

    return myArray;
}
</code></pre>

<p>PLACES_API_BASE:- <code>here is url if you are getting data from Web(in my example www.myurl/myapp)</code>.<br>
TYPE_AUTOCOMPLETE:- <code>file name or exact location from where are you getting data(in my example abc.php)</code>.<br>
If you have any query ask me. don't be hesitate. </p>
