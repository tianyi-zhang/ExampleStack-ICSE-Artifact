<p>It looks like your DialogFragent has been destroyed by the time the async process has completed. To make it work correctly, start the async process from the Activity instead of the DialogFragment.</p>

<p>So, in the DialogFragment just call back into a public method in the Activity that will do the heavy lifting (<code>doPositiveClick()</code> in this example):</p>

<pre><code>public Dialog onCreateDialog(Bundle savedInstanceState) {
    AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());

    LayoutInflater inflater = getActivity().getLayoutInflater();

    final View view = inflater.inflate(R.layout.dialog_lookup, null);

    builder.setView(view)
            .setPositiveButton(R.string.lookup, new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int id) {
                    EditText text = (EditText) view.findViewById(R.id.username);

                    //call into the Activity and pass in the name                        
                    ((MainActivity)getActivity()).doPositiveClick(text.getText().toString());

                }
            })
            .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int id) {
                }
            });

    return builder.create();
}
</code></pre>

<p>Then, in your Activity that called the DialogFragment, initiate the async process, and start the DisplayBadge Activity when it's completed.</p>

<p>Note I've changed the method definitions and some of the code, as there is no need to pass around a Context anymore:</p>

<pre><code>public void doPositiveClick(String name) {
   api.Async("GetByID/", name, new badgerAPI.IApiResultRunnable() {
     @Override
     public void run(CMAPIResult apiResult) {
       if (!apiResult.lmSuccess) {
         showError(this, "User not found", apiResult.lmErrorMessage).show();
       } else {
         String badgeuri = apiResult.lmResultDict.optString("badgeuri");

         showBadge(badgeuri);
       }
     }
   });

}

private void showBadge(String uri){
    Intent intent = new Intent(this, DisplayBadge.class);
    startActivity(intent);
}
</code></pre>
