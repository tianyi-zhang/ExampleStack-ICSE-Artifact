<pre><code>public class Foo {
    private Integer bar;
    private Integer baz;
    private Integer qux;

    public Foo(Integer bar, Integer baz, Integer qux){
        this.bar = bar; this.baz = baz; this.qux = qux;
    }

    public Foo(){}

    public Integer getBar() { return bar; }
    public void setBar(Integer bar) { this.bar = bar; }
    public Integer getBaz() { return baz; }
    public void setBaz(Integer baz) { this.baz = baz; }
    public Integer getQux() { return qux; }
    public void setQux(Integer qux) { this.qux = qux; }

    public Foo add(Foo a, Foo b){ 
        Foo c = new Foo();
        c.setBar(a.getBar() + b.getBar());
        c.setBaz(a.getBaz() + b.getBaz());
        c.setQux(a.getQux() + b.getQux());
        return c;
    }

    public Foo subtract(Foo a, Foo b){ 
        Foo c = new Foo();
        c.setBar(a.getBar() - b.getBar());
        c.setBaz(a.getBaz() - b.getBaz());
        c.setQux(a.getQux() - b.getQux());
        return c;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Foo other = (Foo) obj;
        if (bar == null) {
            if (other.bar != null)
                return false;
        } else if (!bar.equals(other.bar))
            return false;
        if (baz == null) {
            if (other.baz != null)
                return false;
        } else if (!baz.equals(other.baz))
            return false;
        if (qux == null) {
            if (other.qux != null)
                return false;
        } else if (!qux.equals(other.qux))
            return false;
        return true;
    }
}
</code></pre>
