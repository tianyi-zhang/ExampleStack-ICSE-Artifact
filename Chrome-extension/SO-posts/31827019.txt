<p>Implement getFilter() method in your custom adapter which filter your listview according to search query. You have to implement Filterable interface for your searching functionality</p>

<pre><code>public class AdapterFilter extends ArrayAdapter&lt;Personinfo&gt; implements Filterable{
    ArrayList&lt;Personinfo&gt; list = new ArrayList&lt;Personinfo&gt;();
    Context context;
    LayoutInflater inflater;
    public ArrayList&lt;Personinfo&gt; orig;

    public AdapterFilter(Context context, int resource,
            ArrayList&lt;Personinfo&gt; list) {
        super(context, resource);
        this.list = list;
        this.context = context;
        inflater = LayoutInflater.from(this.context);
    }

    @Override
    public int getCount() {
        // TODO Auto-generated method stub
        return list.size();
    }

    @Override
    public Personinfo getItem(int position) {
        // TODO Auto-generated method stub
        return list.get(position);
    }

    @Override
    public long getItemId(int position) {
        // TODO Auto-generated method stub
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        // TODO Auto-generated method stub
        ViewHolder viewHolder;
        if (convertView == null) {
            convertView = inflater.inflate(R.layout.child_listview, parent,
                    false);
            viewHolder = new ViewHolder(convertView);
            convertView.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) convertView.getTag();
        }
        final Personinfo personinfo = (Personinfo) getItem(position);
        viewHolder.txtName.setText(personinfo.getName());
        viewHolder.txtPhone.setText(personinfo.getPhoneno());
        viewHolder.imageButtonCalling.setOnClickListener(new OnClickListener() {
            // Calling on selected number
            @Override
            public void onClick(View v) {
                // TODO Auto-generated method stub
                Toast.makeText(context, "number button Clicked",
                        Toast.LENGTH_SHORT).show();
                String selectedChildPhone = personinfo.getPhoneno();
                String phoneNo = "tel:" + selectedChildPhone.trim();
                Intent intent = new Intent(Intent.ACTION_CALL);
                intent.setData(Uri.parse(phoneNo));
                context.startActivity(intent);
            }
        });
        viewHolder.imageButtonMessage.setOnClickListener(new OnClickListener() {
            // Sending sms to whatsapp
            @Override
            public void onClick(View v) {
                // TODO Auto-generated method stub
                Toast.makeText(context, "meesaage button Clicked",
                        Toast.LENGTH_SHORT).show();
                String selectedChildPhone = personinfo.getPhoneno();
                Uri mUri = Uri.parse("smsto:" + selectedChildPhone);
                Intent smsIntent = new Intent(
                        android.content.Intent.ACTION_SEND);
                smsIntent.setType("text/plain");
                smsIntent.putExtra("address", mUri);
                smsIntent.putExtra("sms_body", "your desired message");
                context.startActivity(smsIntent);
            }
        });
        return convertView;
    }



@Override
    public Filter getFilter() {
        return new Filter() {
            @Override
            protected FilterResults performFiltering(CharSequence constraint) {
                final FilterResults oReturn = new FilterResults();
                final ArrayList&lt;Personinfo&gt; results = new ArrayList&lt;Personinfo&gt;();
                if (orig == null) {
                    orig = list;
                }
                if (constraint != null) {
                    if (orig != null &amp;&amp; orig.size() &gt; 0) {
                        for (final Personinfo g : orig) {
                            if (g.getName().toLowerCase(Locale.getDefault()).contains(constraint.toString())) {
                                results.add(g);
                            }
                        }
                    }
                    oReturn.values = results;
                } else {
                    oReturn.values = list;
                }
                return oReturn;
            }

            @SuppressWarnings("unchecked")
            @Override
            protected void publishResults(CharSequence constraint, FilterResults results) {
                list = (ArrayList&lt;Personinfo&gt;) results.values;
                notifyDataSetChanged();
            }
        };
    }
    private class ViewHolder {
        TextView txtName, txtPhone;
        ImageButton imageButtonCalling, imageButtonMessage;

        public ViewHolder(View item) {
            txtName = (TextView) item.findViewById(R.id.person_name);
            txtPhone = (TextView) item.findViewById(R.id.phoneno);
            imageButtonCalling = (ImageButton) item
                    .findViewById(R.id.imageButtonCalling);
            imageButtonMessage = (ImageButton) item
                    .findViewById(R.id.imageButtonMessage);
        }
    }
}  
</code></pre>

<p>I hope it helps!</p>
