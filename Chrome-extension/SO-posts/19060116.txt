<p>A PDF is considered a <code>Binary File</code> and it gets corrupted because the way that <code>copyUrlToFile()</code> works. By the way, this looks like a duplicate of <a href="http://stackoverflow.com/questions/8171835/java-download-binary-file-e-g-pdf-file-from-webserver">JAVA - Download Binary File (e.g. PDF) file from Webserver</a></p>

<p>Try this custom binary download method out -</p>

<pre><code>public void downloadBinaryFile(String path) {
    URL u = new URL(path);
    URLConnection uc = u.openConnection();
    String contentType = uc.getContentType();
    int contentLength = uc.getContentLength();
    if (contentType.startsWith("text/") || contentLength == -1) {
      throw new IOException("This is not a binary file.");
    }
    InputStream raw = uc.getInputStream();
    InputStream in = new BufferedInputStream(raw);
    byte[] data = new byte[contentLength];
    int bytesRead = 0;
    int offset = 0;
    while (offset &lt; contentLength) {
      bytesRead = in.read(data, offset, data.length - offset);
      if (bytesRead == -1)
        break;
      offset += bytesRead;
    }
    in.close();

    if (offset != contentLength) {
      throw new IOException("Only read " + offset + " bytes; Expected " + contentLength + " bytes");
    }

    String filename = u.getFile().substring(filename.lastIndexOf('/') + 1);
    FileOutputStream out = new FileOutputStream(filename);
    out.write(data);
    out.flush();
    out.close();
}
</code></pre>

<p><strong>EDIT</strong>: It actually sounds as if you are not on the page that you think you are.. instead of doing 
driver.getCurrentUrl()</p>

<p>Have your script take the Url from the link to the PDF. Assuming there is a link like <code>&lt;a href='http://mysite.com/my.pdf' /&gt;</code>  Instead of clicking it, then getting the url, just take the href from that link, and download it.</p>

<pre><code>String pdfPath = driver.findElement(By.id("someId")).getAttribute("href");
downloadBinaryFile(pdfPath);
</code></pre>
