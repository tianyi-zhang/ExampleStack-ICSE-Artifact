<p>Here is a solution that guarantees entire file will be read, that requires no libraries and is efficient:</p>

<pre><code>byte[] fullyReadFileToBytes(File f) throws IOException {
    int size = (int) f.length();
    byte bytes[] = new byte[size];
    byte tmpBuff[] = new byte[size];
    FileInputStream fis= new FileInputStream(f);;
    try {

        int read = fis.read(bytes, 0, size);
        if (read &lt; size) {
            int remain = size - read;
            while (remain &gt; 0) {
                read = fis.read(tmpBuff, 0, remain);
                System.arraycopy(tmpBuff, 0, bytes, size - remain, read);
                remain -= read;
            }
        }
    }  catch (IOException e){
        throw e;
    } finally {
        fis.close();
    }

    return bytes;
}
</code></pre>

<p>NOTE: it assumes file size is less than MAX_INT bytes, you can add handling for that if you want. </p>
