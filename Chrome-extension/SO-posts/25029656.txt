<p>I recently worked on GPS as well and I followed, <a href="http://www.androidhive.info/2012/07/android-gps-location-manager-tutorial/" rel="nofollow">this tutorial</a>, and it works okay (you may need to fix some portion to make functional for other features..)</p>

<pre><code>public Location getLocation(){
    try{
        locationManager = (LocationManager) mContext.getSystemService(LOCATION_SERVICE);

        //getting GPS status
        isGPSEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
        //getting network status
        isNetworkEnabled = locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);


        if(!isGPSEnabled){

        }else{
            this.canGetLocation = true;

            if(isNetworkEnabled){
                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES,  this);
                Log.d("Network", "Network");

                if(locationManager != null){
                    location = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
                    if(location != null){
                        latitude = location.getLatitude();
                        longitude = location.getLongitude();
                        speed = location.getSpeed();
                    }
                }
            }

            if(isGPSEnabled){
                if(location == null){


                    locationManager.requestLocationUpdates((LocationManager.GPS_PROVIDER), MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                    Log.d("GPS Enabled", "GPS Enabled");

                    if(locationManager != null){
                        location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);

                        if(location != null){
                            latitude = location.getLatitude();
                            longitude = location.getLongitude();
                        }
                    }

                }
            }
        }

    }catch (Exception e){
        e.printStackTrace();
    }

    return location;
}
</code></pre>

<p>And you must add the required permissions to the <code>AndroidManifest.xml</code> file as below</p>

<pre><code>   &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;
   &lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;
</code></pre>

<p>Just for Testing you can add one more permission to use mock location.</p>

<pre><code>   &lt;uses-permission android:name="android.permission.ACCESS_MOCK_LOCATION" /&gt;
</code></pre>
