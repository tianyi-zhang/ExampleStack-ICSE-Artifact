<h1>Simple steps to follow :</h1>

<ul>
<li>Take a simple EditText </li>
<li>Apply Filter on it</li>
</ul>

<h1>Sample Code :</h1>

<pre><code>yourEditSearch.addTextChangedListener(new TextWatcher() {

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                    int after) {

            }

            @Override
            public void afterTextChanged(Editable s) {
                adapter.getFilter().filter(s);
            }
        };


class MyAdapter extends BaseAdapter implements CompoundButton.OnCheckedChangeListener,  Filterable  {
       @Override
    public Filter getFilter() {
        Filter filter = new Filter() {

            @Override
            protected void publishResults(CharSequence constraint,
                    FilterResults results) {

                // Now we have to inform the adapter about the new list filtered
                if (results.count == 0)
                     notifyDataSetInvalidated();
                else {
                    names= (ArrayList&lt;String&gt;) results.values;
                   notifyDataSetChanged();
                }
            }

            @Override
            protected FilterResults performFiltering(CharSequence constraint) {


                // perform your search here using the searchConstraint String.

                constraint = constraint.toString().toLowerCase();

               // check with the nane in list and add it
               //iterate and check with the matching string
               for (int i=0;i&lt;names.size();i++) {
                    String dataNames = names.get(i);
                    if (dataNames.toLowerCase().contains(constraint.toString())) {
                         FilteredArrayNames.add(entity);
                  }
                }

                results.count = FilteredArrayNames.size();
                results.values = FilteredArrayNames;

                return results;
            }
        };
        return filter;
    }

}
</code></pre>
