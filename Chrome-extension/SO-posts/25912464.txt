<p>To get a more precise (and user friendly) information about connection type. You can use this code (derived from a @hide method in <a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.4.4_r1/android/telephony/TelephonyManager.java#TelephonyManager.getNetworkClass%28int%29">TelephonyManager.java</a>).</p>

<p>This method returns a String describing the current connection type. 
<br>i.e. one of : "WIFI" , "2G" , "3G" , "4G" , "-" (not connected) or "?" (unknown)</p>

<p>Remark: This code requires API 15+, but you can easily support older versions by using int instead of const. (See comments in code).</p>

<pre><code>public static String getNetworkClass(Context context) {
    ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);      
    NetworkInfo info = cm.getActiveNetworkInfo();
    if(info==null || !info.isConnected())
        return "-"; //not connected
    if(info.getType() == ConnectivityManager.TYPE_WIFI)
        return "WIFI";
    if(info.getType() == ConnectivityManager.TYPE_MOBILE){
        int networkType = info.getSubtype();
        switch (networkType) {
            case TelephonyManager.NETWORK_TYPE_GPRS:
            case TelephonyManager.NETWORK_TYPE_EDGE:
            case TelephonyManager.NETWORK_TYPE_CDMA:
            case TelephonyManager.NETWORK_TYPE_1xRTT:
            case TelephonyManager.NETWORK_TYPE_IDEN: //api&lt;8 : replace by 11
                return "2G";
            case TelephonyManager.NETWORK_TYPE_UMTS:
            case TelephonyManager.NETWORK_TYPE_EVDO_0:
            case TelephonyManager.NETWORK_TYPE_EVDO_A:
            case TelephonyManager.NETWORK_TYPE_HSDPA:
            case TelephonyManager.NETWORK_TYPE_HSUPA:
            case TelephonyManager.NETWORK_TYPE_HSPA:
            case TelephonyManager.NETWORK_TYPE_EVDO_B: //api&lt;9 : replace by 14
            case TelephonyManager.NETWORK_TYPE_EHRPD:  //api&lt;11 : replace by 12
            case TelephonyManager.NETWORK_TYPE_HSPAP:  //api&lt;13 : replace by 15
                return "3G";
            case TelephonyManager.NETWORK_TYPE_LTE:    //api&lt;11 : replace by 13
                return "4G";
            default:
                return "?";
         }
    }
    return "?";
}
</code></pre>
