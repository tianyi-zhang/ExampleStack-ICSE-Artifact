<p>After playing around a bit with debugger and the values of end , start etc</p>

<p>Ive come up with this:</p>

<pre><code>@Override
    public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {   
        try {
            String newString = dest.toString().substring(0, dstart) + source.toString().substring(start, end) + dest.toString().substring(dend);

            Double input;
            // If we only have one char and it is a minus sign, test against -1:
            if (newString.length() == 1 &amp;&amp; newString.charAt(0) == '-')
                input = -1d;
            else
                input = Double.parseDouble(newString);

            if (isInRange(min, max, input))
                return null;
        } catch (NumberFormatException nfe) { }     
        return "";
    }
</code></pre>

<p>This substrings the previous and new source. deleting or adding text in the correct place, to generate a preview of what it will become (<code>newString</code>). Then continues with check as normal.</p>

<p>This applies to deleting the entire thing in one go, or copy pasting new text. It determines what old text comes before it, the text inserted, then the text after it.</p>
