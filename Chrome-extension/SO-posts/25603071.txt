<p>Where you declare itemArrayList</p>

<pre><code> Set&lt;OrderItems&gt; itemArrayList = new HashSet&lt;&gt;();
</code></pre>

<p>The following two methods or equivalents dependant upon your needs should exist on the OrderItems object.</p>

<pre><code>@Override
public int hashCode() {
    int hash = 43 * 3 + (this.itemName != null ? this.itemName.hashCode() : 0);
    hash = 43 * hash + (this.itemPrice != null ? this.itemPrice.hashCode() : 0);
    return 43 * hash + this.noOfItems;
}

@Override
public boolean equals(Object obj) {
    if (this == obj){
        return true;
    }
    if (obj == null || getClass() != obj.getClass()) {
        return false;
    }
    final OrderItems other = (OrderItems) obj;
    if ((this.itemName == null) ? (other.itemName != null) : !this.itemName.equals(other.itemName)) {
        return false;
    }
    if (this.itemPrice != other.itemPrice &amp;&amp; (this.itemPrice == null || !this.itemPrice.equals(other.itemPrice))) {
        return false;
    }
    return this.noOfItems == other.noOfItems;
}
</code></pre>

<p>I have included all fields in both cases adjust both methods so that your equality condition (is when an OrderItems object is the same) is correct for BOTH functions.</p>

<p>the remainder of you r code should be close to unchanged.</p>

<p>I used an AutoGeneration algorithm to give me the equals and hashCode functions you may wish to do the same. rather than copy mine</p>
