<p>Well I choose another approach for this thing. You cannot diffrentiate between you chose a picture from gallery or from a Camera Intent.</p>

<p>Here is my code.</p>

<pre><code>public class Chooser extends Activity {
    ImageView   imageView1;
    private Uri outputFileUri;

    @Override
    protected void onCreate (Bundle savedInstanceState) {

        super.onCreate (savedInstanceState);
        setContentView (R.layout.activity_main);

        imageView1 = (ImageView) this.findViewById (R.id.imageView1);
        Button frag1 = (Button) this.findViewById (R.id.frag1);
        frag1.setOnClickListener (new OnClickListener () {

            @Override
            public void onClick (View v) {

                choosePic (null);

            }
        });

    }

    public void choosePic (View view) {

        // Determine Uri of camera image to save.
        final File root = new File (Environment.getExternalStorageDirectory () + File.separator + "DCIM/Camera" + File.separator);
        root.mkdirs ();
        final String fname = "image_" + getRandomName () + ".jpeg";
        final File sdImageMainDirectory = new File (root, fname);
        outputFileUri = Uri.fromFile (sdImageMainDirectory);

        // Camera.
        final List&lt;Intent&gt; cameraIntents = new ArrayList&lt;Intent&gt; ();
        final Intent captureIntent = new Intent (android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
        captureIntent.putExtra (MediaStore.EXTRA_OUTPUT, Uri.fromFile (sdImageMainDirectory));
        final PackageManager packageManager = getPackageManager ();
        final List&lt;ResolveInfo&gt; listCam = packageManager.queryIntentActivities (captureIntent, 0);
        for (ResolveInfo res : listCam) {
            final String packageName = res.activityInfo.packageName;
            final Intent intent = new Intent (captureIntent);
            intent.setComponent (new ComponentName (res.activityInfo.packageName, res.activityInfo.name));
            intent.setPackage (packageName);
            intent.putExtra (MediaStore.EXTRA_OUTPUT, outputFileUri);
            cameraIntents.add (intent);
        }

        // Filesystem.
        final Intent galleryIntent = new Intent ();
        galleryIntent.setType ("image/*");
        galleryIntent.setAction (Intent.ACTION_GET_CONTENT);

        // Chooser of filesystem options.
        final Intent chooserIntent = Intent.createChooser (galleryIntent, "Select Source");

        // Add the camera options.
        chooserIntent.putExtra (Intent.EXTRA_INITIAL_INTENTS, cameraIntents.toArray (new Parcelable[] {}));

        startActivityForResult (chooserIntent, 1);
    }

    @Override
    protected void onActivityResult (int requestCode, int resultCode, Intent data) {

        super.onActivityResult (requestCode, resultCode, data);

        if (resultCode == RESULT_OK) {

            if (requestCode == 1) {
                final boolean isCamera;
                if (data == null) {
                    isCamera = true;
                }
                else {
                    final String action = data.getAction ();
                    if (action == null) {
                        isCamera = false;
                    }
                    else {
                        isCamera = action.equals (android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
                    }
                }

                Uri selectedImageUri;
                if (isCamera) {
                    selectedImageUri = outputFileUri;
                }
                else {
                    selectedImageUri = data == null ? null : data.getData ();
                }

                imageView1.setImageURI (selectedImageUri);
            }
        }
    }

    public String getRandomName () {

        Random r = new Random (); // just create one and keep it around
        String alphabet = "abcdefghijklmnopqrstuvwxyz1234567890";

        final int N = 10;
        StringBuilder sb = new StringBuilder ();
        for (int i = 0; i &lt; N; i++) {
            sb.append (alphabet.charAt (r.nextInt (alphabet.length ())));
        }
        return sb.toString ();
    }
</code></pre>
