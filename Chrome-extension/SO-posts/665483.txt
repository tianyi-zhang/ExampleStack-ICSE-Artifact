<p>Thanks to PhilLo here is a complete solution of my demo application.</p>

<pre><code>public static void main(String[] args) throws Exception {

     File in = new File("C:\\Users\\Christoffer\\Desktop\\christoffer.jpg");
     BufferedImage source = ImageIO.read(in);

     int color = source.getRGB(0, 0);

     Image image = makeColorTransparent(source, new Color(color));

     BufferedImage transparent = imageToBufferedImage(image);

     File out = new File("C:\\Users\\Christoffer\\Desktop\\trans.PNG");
     ImageIO.write(transparent, "PNG", out);

    }

    private static BufferedImage imageToBufferedImage(Image image) {

     BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_ARGB);
     Graphics2D g2 = bufferedImage.createGraphics();
     g2.drawImage(image, 0, 0, null);
     g2.dispose();

     return bufferedImage;

    }

    public static Image makeColorTransparent(BufferedImage im, final Color color) {
     ImageFilter filter = new RGBImageFilter() {

      // the color we are looking for... Alpha bits are set to opaque
      public int markerRGB = color.getRGB() | 0xFF000000;

      public final int filterRGB(int x, int y, int rgb) {
       if ((rgb | 0xFF000000) == markerRGB) {
        // Mark the alpha bits as zero - transparent
        return 0x00FFFFFF &amp; rgb;
       } else {
        // nothing to do
        return rgb;
       }
      }
     };

     ImageProducer ip = new FilteredImageSource(im.getSource(), filter);
     return Toolkit.getDefaultToolkit().createImage(ip);
    }
</code></pre>
