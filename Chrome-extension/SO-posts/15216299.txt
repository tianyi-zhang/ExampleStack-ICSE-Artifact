<p>You might try to implement it like the following code:</p>

<pre><code>public void showPopup(View v) {
    final PopupMenu popup = new PopupMenu(this, v);
    final MenuInflater inflater = popup.getMenuInflater();
    inflater.inflate(R.menu.actions, popup.getMenu());

    popup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
        @Override
        public boolean onMenuItemClick(MenuItem item) {
            switch (item.getItemId()) {
                case R.id.play_video:
                    //intent = YouTubeIntents.createPlayVideoIntentWithOptions(this,
                    //        VIDEO_ID, true, false);
                    //startActivity(intent);
                    Toast.makeText(TestActivity.this, "play video", Toast.LENGTH_LONG).show();
                    return true;
                case R.id.show_playlist:
                    //intent = YouTubeIntents.createOpenPlaylistIntent(this, PLAYLIST_ID);
                    //startActivity(intent);
                    Toast.makeText(TestActivity.this, "show playlist", Toast.LENGTH_LONG).show();
                    return true;
                default:
                    return false;
            }
        }
    });
    popup.show();
}
</code></pre>

<p>with actions.xml in res/menu folder:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;

&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"&gt;
    &lt;item android:id="@+id/play_video"
          android:title="Play Video"
          android:showAsAction="ifRoom"/&gt;
    &lt;item android:id="@+id/show_playlist"
          android:title="Show playlist" /&gt;
&lt;/menu&gt;
</code></pre>

<p>It's actually just similar to way mentioned in <a href="http://developer.android.com/guide/topics/ui/menus.html#PopupMenu" rel="nofollow">the documentation</a></p>
