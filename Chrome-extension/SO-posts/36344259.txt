<blockquote>
  <p>I'm trying to clean a String removing all html tags from it,</p>
</blockquote>

<p>You want to use the <code>clean()</code> method.</p>

<h3>SAMPLE CODE</h3>

<pre><code>System.out.println("Result:" + Jsoup.clean("Dani&lt;div&gt;&lt;/div&gt;el", Whitelist.none()));
</code></pre>

<h3>OUTPUT</h3>

<pre><code>Result:Daniel
</code></pre>

<hr>

<blockquote>
  <p>In my case however the result is wrong. Do you have some suggestion to solve this problem?</p>
</blockquote>

<p>You can instanciate a <code>NodeTraversor</code> with a custom <code>NodeVisitor</code>.</p>

<p>Just to give you an idea:</p>

<pre><code>private static String toText(Element element) {
    final StringBuilder accum = new StringBuilder();
    new NodeTraversor(new NodeVisitor() {
        public void head(Node node, int depth) {
            if (node instanceof TextNode) {
                TextNode textNode = (TextNode) node;
                accum.append(textNode.getWholeText());
            } else if (node instanceof Element) {
                // Do nothing ...
            }
        }

        public void tail(Node node, int depth) {
        }
    }).traverse(element);

    return accum.toString().trim();
}
</code></pre>

<h3>SAMPLE CODE</h3>

<pre><code>public static void main(String[] args) {
    System.out.println("Result:" + toText(Jsoup.parse("Dani&lt;div&gt;&lt;/div&gt;el")));
}
</code></pre>

<h3>OUTPUT</h3>

<pre><code>Result:Daniel
</code></pre>
