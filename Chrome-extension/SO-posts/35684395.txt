<p>You can do something like this:</p>

<p>Add dependency of jersey or add jar</p>

<p>Add dependency of or add jar in your project like</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-media-sse&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>

<p>Then create a class for server like:</p>

<pre><code>@Path("events")
public static class SseResource {

    @GET
    @Produces(SseFeature.SERVER_SENT_EVENTS)
    public EventOutput getServerSentEvents() {
            final EventOutput eventOutput = new EventOutput();
            new Thread(new Runnable() {
                @Override
                public void run() {
                    try {
                        for (int i = 0; i &lt; 10; i++) {
                            // ... code that waits 1 second
                            final OutboundEvent.Builder eventBuilder
                            = new OutboundEvent.Builder();
                            eventBuilder.name("message-to-client");
                            eventBuilder.data(String.class,
                                "Hello world " + i + "!");
                            final OutboundEvent event = eventBuilder.build();
                            eventOutput.write(event);
                        }
                    } catch (IOException e) {
                        throw new RuntimeException(
                            "Error when writing the event.", e);
                    } finally {
                        try {
                            eventOutput.close();
                        } catch (IOException ioClose) {
                            throw new RuntimeException(
                                "Error when closing the event output.", ioClose);
                        }
                    }
                }
            }).start();
            return eventOutput;
        }
}
</code></pre>

<p>Then on Client use following code:</p>

<pre><code>Client client = ClientBuilder.newBuilder()
        .register(SseFeature.class).build();
WebTarget target = client.target("http://localhost:9998/events");

EventInput eventInput = target.request().get(EventInput.class);
while (!eventInput.isClosed()) {
    final InboundEvent inboundEvent = eventInput.read();
    if (inboundEvent == null) {
        // connection has been closed
        break;
    }
    System.out.println(inboundEvent.getName() + "; "
        + inboundEvent.readData(String.class));
}
</code></pre>

<p>Check the following link as well as they have detailed information with simple example.</p>

<p><a href="https://jersey.java.net/documentation/latest/sse.html" rel="nofollow">https://jersey.java.net/documentation/latest/sse.html</a></p>

<p><a href="http://viralpatel.net/blogs/html5-server-sent-events-java-servlets-example/" rel="nofollow">http://viralpatel.net/blogs/html5-server-sent-events-java-servlets-example/</a></p>

<p><a href="http://en.kodcu.com/2013/11/jaxrs-2-html-5-server-sent-events-on-glassfish-4/" rel="nofollow">http://en.kodcu.com/2013/11/jaxrs-2-html-5-server-sent-events-on-glassfish-4/</a></p>
