<p>I'd need to see your implementation of Pair. My guess is that you are not correctly implementing equals and hashcode.</p>

<hr>

<p><strong>[Edit]</strong></p>

<p>Given your implementation of Pair (taken from the comments)</p>

<pre><code>package preprocessingQuery; 
public class Pair { 
    private String table; 
    private String col; 
    public Pair(String table, String col) { 
        super(); 
        this.table = table; 
        this.col = col; 
    }

    public String getTable() { 
        return table; 
    }

    public void setTable(String table) { 
        this.table = table; 
    }

    public String getCol() { 
        return col; 
    }

    public void setCol(String col) { 
        this.col = col; 
    } 

    @Override public String toString() { 
        return "[table=" + table + ", col=" + col + "]"; 
    } 
}
</code></pre>

<p>You are indeed missing equals and hashcode. 
Some background: The default implementation of Object.equals and Object.hashCode are based on the memory address of the object (Object reference). From that perspective, all your Pairs are all different as they are different objects.</p>

<p>For any collection implementation to work properly, you need to override the default implementation of equals and hashCode of the objects to be stored in the collection.</p>

<p>For your Pair class, it should look something like this:</p>

<pre><code>@Override
public boolean equals(Object other) {
    if (this == other) {
        return true; // shortcut for referential equality
    }
    if (other == null) {
        return false; // by definition, 'this' object is not null
    }
    if (!(other instanceof Pair)) {
        return false;
    }
    Pair otherPair  = (Pair) other; // Cast to the known type
    // check equality of the members
    if (this.table == null) {  
        if (otherPair.table != null) {
            return false;
        }
    } else if (!this.table.equals(otherPair.table)) {
        return false;
    }
    if (this.col == null) {  
        if (otherPair.col != null) {
            return false;
        }
    } else if (!this.col.equals(otherPair.col)) {
        return false;
    }
    return true;
}
</code></pre>

<p>HashCode follows suite. You should understand and follow <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#hashCode%28%29" rel="nofollow">the general contract of Hashcode</a>. </p>

<pre><code>@Override
public int hashCode() {
    int hash = this.table==null?0:table.hashCode();
    hash += 41 * this.col==null?0:col.hashCode();
    return hash;
 }
</code></pre>
