<p>I came across this post in <a href="http://vanillajava.blogspot.com/2016/03/printing-arrays-by-hacking-jvm.html" rel="nofollow">Vanilla #Java</a> recently. It's not very convenient writing <code>Arrays.toString(arr);</code>, then importing <code>java.util.Arrays;</code> all the time.</p>

<p><strong>Please note, this is not a permanent fix by any means. Just a hack that can make debugging simpler.</strong> </p>

<p>Printing an array directly gives the internal representation and the hashCode. Now, all classes have <code>Object</code> as the parent-type. So, why not hack the <code>Object.toString()</code>? Without modification, the Object class looks like this:</p>

<pre><code>public String toString() {
    return getClass().getName() + "@" + Integer.toHexString(hashCode());
}
</code></pre>

<p>What if this is changed to:</p>

<pre><code>public String toString() {
    if (this instanceof boolean[])
        return Arrays.toString((boolean[]) this);
    if (this instanceof byte[])
        return Arrays.toString((byte[]) this);
    if (this instanceof short[])
        return Arrays.toString((short[]) this);
    if (this instanceof char[])
        return Arrays.toString((char[]) this);
    if (this instanceof int[])
        return Arrays.toString((int[]) this);
    if (this instanceof long[])
        return Arrays.toString((long[]) this);
    if (this instanceof float[])
        return Arrays.toString((float[]) this);
    if (this instanceof double[])
        return Arrays.toString((double[]) this);
    if (this instanceof Object[])
        return Arrays.deepToString((Object[]) this);
    return getClass().getName() + "@" + Integer.toHexString(hashCode());
}
</code></pre>

<p>This modded class may simply be added to the class path by adding the following to the command line: <code>-Xbootclasspath/p:target/classes</code>.</p>

<p>Now, with the availability of <code>deepToString(..)</code> since Java 5, the <code>toString(..)</code> can easily be changed to <code>deepToString(..)</code> to add support for arrays that contain other arrays.</p>

<p>I found this to be a quite useful hack and it would be great if Java could simply add this. I understand potential issues with having very large arrays since the string representations could be problematic. Maybe pass something like a <code>System.out</code>or a <code>PrintWriter</code> for such eventualities. </p>
