<p>Call this method in for Loop</p>

<h2>sendSMS("98********","This is test message");</h2>

<p>Complete method</p>

<pre><code>/*
* BroadcastReceiver mBrSend; BroadcastReceiver mBrReceive;
*/
private void sendSMS(String phoneNumber, String message) {
ArrayList&lt;PendingIntent&gt; sentPendingIntents = new ArrayList&lt;PendingIntent&gt;();
ArrayList&lt;PendingIntent&gt; deliveredPendingIntents = new ArrayList&lt;PendingIntent&gt;();
PendingIntent sentPI = PendingIntent.getBroadcast(mContext, 0,
        new Intent(mContext, SmsSentReceiver.class), 0);
PendingIntent deliveredPI = PendingIntent.getBroadcast(mContext, 0,
        new Intent(mContext, SmsDeliveredReceiver.class), 0);
try {
    SmsManager sms = SmsManager.getDefault();
    ArrayList&lt;String&gt; mSMSMessage = sms.divideMessage(message);
    for (int i = 0; i &lt; mSMSMessage.size(); i++) {
        sentPendingIntents.add(i, sentPI);
        deliveredPendingIntents.add(i, deliveredPI);
    }
    sms.sendMultipartTextMessage(phoneNumber, null, mSMSMessage,
            sentPendingIntents, deliveredPendingIntents);

} catch (Exception e) {

    e.printStackTrace();
    Toast.makeText(getBaseContext(), "SMS sending failed...",Toast.LENGTH_SHORT).show();
  }

}
</code></pre>

<p>Now two more classes SmsDeliveredReceiver,SmsSentReceiver as below.</p>

<pre><code> public class SmsDeliveredReceiver extends BroadcastReceiver {
 @Override
 public void onReceive(Context context, Intent arg1) {
     switch (getResultCode()) {
     case Activity.RESULT_OK:
         Toast.makeText(context, "SMS delivered", Toast.LENGTH_SHORT).show();
     break;
     case Activity.RESULT_CANCELED:
         Toast.makeText(context, "SMS not delivered", Toast.LENGTH_SHORT).show();
     break;
     }
   }

 }
</code></pre>

<p>Now SMSSentReceiver.</p>

<pre><code> public class SmsSentReceiver extends BroadcastReceiver {
 @Override
 public void onReceive(Context context, Intent arg1) {
     switch (getResultCode()) {
       case Activity.RESULT_OK:
          Toast.makeText(context, "SMS Sent", Toast.LENGTH_SHORT).show();

       break;
case SmsManager.RESULT_ERROR_GENERIC_FAILURE:
    Toast.makeText(context, "SMS generic failure", Toast.LENGTH_SHORT)
            .show();

    break;
case SmsManager.RESULT_ERROR_NO_SERVICE:
    Toast.makeText(context, "SMS no service", Toast.LENGTH_SHORT)
            .show();

    break;
case SmsManager.RESULT_ERROR_NULL_PDU:
    Toast.makeText(context, "SMS null PDU", Toast.LENGTH_SHORT).show();
    break;
case SmsManager.RESULT_ERROR_RADIO_OFF:
    Toast.makeText(context, "SMS radio off", Toast.LENGTH_SHORT).show();
    break;
   }
  }

}
</code></pre>

<p>Now Permissions open your AndroidManifest.xml and add below line</p>

<pre><code>&lt;uses-permission android:name="android.permission.SEND_SMS"/&gt;
</code></pre>

<p>and its done.......</p>
