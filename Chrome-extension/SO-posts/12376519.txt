<p>Ended up with implementing a workaround that uses a TextSwitcher that is automatically changed to the remaining substring every x seconds. </p>

<p>Here is the relevant xml definition from the layout</p>

<pre><code>        &lt;TextSwitcher 
        android:id="@+id/slideshow_description"
        android:textSize="@dimen/description_font_size"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"&gt;
            &lt;TextView
            android:id="@+id/slideshow_description_anim1"
            android:textSize="@dimen/description_font_size"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:maxLines="2"
            android:textColor="@color/white"
            android:singleLine="false"/&gt;
                        &lt;TextView
            android:id="@+id/slideshow_description_anim2"
            android:textSize="@dimen/description_font_size"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:maxLines="2"
            android:textColor="@color/white"
            android:singleLine="false"/&gt;
    &lt;/TextSwitcher&gt;
</code></pre>

<p>Here I add the transition animation to the TextSwitcher (in the adapter's getView method)</p>

<pre><code>final TextSwitcher slideshowDescription = (TextSwitcher)slideshowView.findViewById(R.id.slideshow_description);
            Animation outAnim = AnimationUtils.loadAnimation(context,
                    R.anim.slide_out_down);
            Animation inAnim = AnimationUtils.loadAnimation(context,
                    R.anim.slide_in_up);        

            slideshowDescription.setInAnimation(inAnim);
            slideshowDescription.setOutAnimation(outAnim);
</code></pre>

<p>Here is how I swap to the part of the description</p>

<pre><code>        private void updateScrollingDescription(SlideshowPhoto currentSlideshowPhoto, TextSwitcher switcherDescription){
        String description = currentSlideshowPhoto.getDescription();

        TextView descriptionView = ((TextView)switcherDescription.getCurrentView());
        //note currentDescription may contain more text that is shown (but is always a substring
        String currentDescription = descriptionView.getText().toString();

        if(currentDescription == null || description==null){
            return;
        }

        int indexEndCurrentDescription= descriptionView.getLayout().getLineEnd(1);      

        //if we are not displaying all characters, let swap to the not displayed substring
        if(indexEndCurrentDescription&gt;0 &amp;&amp; indexEndCurrentDescription&lt;currentDescription.length()){
            String newDescription = currentDescription.substring(indexEndCurrentDescription);
            switcherDescription.setText(newDescription);    
        }else if(indexEndCurrentDescription&gt;=currentDescription.length() &amp;&amp; indexEndCurrentDescription&lt;description.length()){
            //if we are displaying the last of the text, but the text has multiple sections. Display the  first one again
            switcherDescription.setText(description);   
        }else {
            //do nothing (ie. leave the text)
        }           

    }
</code></pre>

<p>And finally, here is where I setup the Timer which causes it to update every 3.5 seconds</p>

<pre><code>        public void setUpScrollingOfDescription(){
        final CustomGallery gallery = (CustomGallery) findViewById(R.id.gallery);
        //use the same timer. Cancel if running
        if(timerDescriptionScrolling!=null){
            timerDescriptionScrolling.cancel();
        }

        timerDescriptionScrolling = new Timer("TextScrolling");
        final Activity activity = this;
        long msBetweenSwaps=3500;

        //schedule this to 
        timerDescriptionScrolling.scheduleAtFixedRate(
            new TimerTask() {
                int i=0;
                public void run() {                     
                    activity.runOnUiThread(new Runnable() {
                        public void run() {
                            SlideshowPhoto currentSlideshowPhoto = (SlideshowPhoto)imageAdapter.getItem(gallery.getSelectedItemPosition());

                            View currentRootView = gallery.getSelectedView();
                            TextSwitcher switcherDescription = (TextSwitcher)currentRootView.findViewById(R.id.slideshow_description);

                            updateScrollingDescription(currentSlideshowPhoto,switcherDescription);

                            //this is the max times we will swap (to make sure we don't create an infinite timer by mistake
                            if(i&gt;30){
                                timerDescriptionScrolling.cancel();
                            }
                            i++;
                        }
                    });

                }
            }, msBetweenSwaps, msBetweenSwaps);
    }
</code></pre>

<p>Finally I can put this problem to a rest :)</p>
