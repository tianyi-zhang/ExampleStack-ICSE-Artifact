<p>Structure of this intent url is described here <a href="https://developer.chrome.com/multidevice/android/intents" rel="nofollow">https://developer.chrome.com/multidevice/android/intents</a>.</p>

<p>So we can handle it in internal WebView like this:</p>

<pre><code>@Override
public boolean shouldOverrideUrlLoading(WebView view, String url) {
    if (url.startsWith("intent://")) {
        try {
            Context context = view.getContext();
            Intent intent = new Intent().parseUri(url, Intent.URI_INTENT_SCHEME);

            if (intent != null) {
                view.stopLoading();

                PackageManager packageManager = context.getPackageManager();
                ResolveInfo info = packageManager.resolveActivity(intent, PackageManager.MATCH_DEFAULT_ONLY);
                if (info != null) {
                    context.startActivity(intent);
                } else {
                    String fallbackUrl = intent.getStringExtra("browser_fallback_url");
                    view.loadUrl(fallbackUrl);

                    // or call external broswer
//                    Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(fallbackUrl));
//                    context.startActivity(browserIntent);
                }

                return true;
            }
        } catch (URISyntaxException e) {
            if (GeneralData.DEBUG) {
                Log.e(TAG, "Can't resolve intent://", e);
            }
        }
    }

    return false;
}
</code></pre>
