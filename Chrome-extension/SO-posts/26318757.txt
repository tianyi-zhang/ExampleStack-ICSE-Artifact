<p><del> As pointed out in answer below, solutions would be to create explicit intent manually:</del></p>

<pre><code>private Intent getExplicitIapIntent() {
        PackageManager pm = mContext.getPackageManager();
        Intent implicitIntent = new Intent("com.android.vending.billing.InAppBillingService.BIND");
        List&lt;ResolveInfo&gt; resolveInfos = pm.queryIntentServices(implicitIntent, 0);

        // Is somebody else trying to intercept our IAP call?
        if (resolveInfos == null || resolveInfos.size() != 1) {
            return null;
        }

        ResolveInfo serviceInfo = resolveInfos.get(0);
        String packageName = serviceInfo.serviceInfo.packageName;
        String className = serviceInfo.serviceInfo.name;
        ComponentName component = new ComponentName(packageName, className);
        Intent iapIntent = new Intent();
        iapIntent.setComponent(component);
        return iapIntent;
    }
</code></pre>

<p><del><a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.L_preview/android/app/ContextImpl.java#1472">Here</a> is the code in L preview sources for check explicit intent. It's got <a href="https://android.googlesource.com/platform/frameworks/base/+/fd6c7b1%5E!/">commented</a> currently, but on Nexus 5 with L preview it still runs and throws exception for implicit intents.
</del> </p>

<p><br>
Edit: @alav's <a href="http://stackoverflow.com/a/27027371/1213197">answer</a> is much more better and simpler. Just add </p>

<pre><code>intent.setPackage("com.android.vending");
</code></pre>

<p>All credits for <a href="http://stackoverflow.com/a/27027371/1213197">him</a>. And <a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.0.0_r1/android/app/ContextImpl.java#1675">here</a> is the code in L release sources for check explicit intent.</p>
