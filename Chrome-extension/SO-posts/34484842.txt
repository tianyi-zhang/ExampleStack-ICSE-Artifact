<p>I'm not sure what's the exact question but as it was already said : 
What you have instanciated is an <strong>anonymous class</strong>. Indeed, as you already know <strong>an interface cannot be instanciated</strong>.</p>

<p>So, when you do : </p>

<pre><code>new Comparator&lt;String&gt;()
{
@Override
public int compare(String o1, String o2) {
// TODO Auto-generated method stub
return 0;
}
});
</code></pre>

<p>it is like you've created a class called let's say : <strong>LengthComparator</strong> like this :</p>

<pre><code>public class LengthComparator implements Comparator&lt;String&gt;{
public LengthComparator()
{

}

    @Override
    public int compare(String o1, String o2) {
        int ack = 0;

        if(o1 == null &amp;&amp; o2 == null){
            ack = 0;
        }
        else if(o1 != null &amp;&amp; o2 == null){
            // Decide what you should do here !
            // returnValue = ???
        }
        else if(o1 == null &amp;&amp; o2 != null){
            // Decide here, too !
            // returnValue = ???
        }
        else{

            if(o1.length() == o2.length()){
                // Sort by order ...
                ack = o1.compareTo(o2);
            }
            else{
                ack = o1.length() &gt; o2.length() ? 1 : -1;
            }
        }

        return ack;
    }
}
</code></pre>

<p>As a personal advice, always check your arguments toward null values as you don't really know what is going to be passed in...</p>
