<p>Ideally the server from which you are pulling the data needs to return data based on the timestamp you passed.</p>

<p>For example when you query you specify the timestamp "T" of the data which you have and the server returns data only after timestamp "T"</p>

<p>If the server doesnot support this mechanism then on the client side you need to make sure you are adding data items to the listview list which have the timestamp > "T".</p>

<p>Something like following:</p>

<pre><code>          long lastStoredTimeStamp = 0;//This should be in constructor
/**
 * Parsing json reponse and passing the data to feed view list adapter
 * */
private void parseJsonFeed(JSONObject response) {
    try {
        JSONArray feedArray = response.getJSONArray("feed");

        for (int i = 0; i &lt; feedArray.length(); i++) {
            JSONObject feedObj = (JSONObject) feedArray.get(i);

            FeedItem item = new FeedItem();
            item.setId(feedObj.getInt("id"));
            item.setName(feedObj.getString("name"));

            // Image might be null sometimes
            String image = feedObj.isNull("image") ? null : feedObj
                    .getString("image");
            item.setImge(image);
            item.setStatus(feedObj.getString("status"));
            item.setProfilePic(feedObj.getString("profilePic"));
            item.setTimeStamp(feedObj.getString("timeStamp"));

            // url might be null sometimes
            String feedUrl = feedObj.isNull("url") ? null : feedObj
                    .getString("url");
            item.setUrl(feedUrl);

            if(i == feedArray.length()-1){
                 lastStoredTimeStamp = feedObj.getLong("timeStamp");
            }

            if(feedObj.getLong("timeStamp") &gt; lastStoredTimeStamp){
                feedItems.add(item);
                }
        }

        // notify data changes to list adapater
        listAdapter.notifyDataSetChanged();
    } catch (JSONException e) {
        e.printStackTrace();
    }
}
</code></pre>
