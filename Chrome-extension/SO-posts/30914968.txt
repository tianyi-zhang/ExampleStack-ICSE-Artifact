<p>To expand an array dynamically, you should create a new array, copy all the existing array elements and add the value to be added to the head or tail. Then you can return the new array.</p>

<p>1) To expand an array by adding value to the head, you can use this method below;</p>

<pre><code>// adds an integer to the head of the array, returns array with N+1 length
public static int[] addToArrayHead(int[] array, int value) {
    int[] newArray = new int[array.length+1];

    newArray[0] = value;

    for( int i = 1; i &lt; array.length; i++ )
        newArray[i] = array[i];

    return newArray;
}
</code></pre>

<p>2) To expand an array by adding value to the tail, you can use this method below;</p>

<pre><code>// adds an integer to the end of the array, returns array with N+1 length
public static int[] addToArrayTail(int[] array, int value) {
    int[] newArray = new int[array.length+1];

    int i = 0;
    for( ; i &lt; array.length; i++ )
        newArray[i] = array[i];

    newArray[i] = value;    //already incremented with post-increment operator

    return newArray;
}
</code></pre>

<p>With these methods, you can expand your array by head or tail, check out the code below. In this example, the array is expanding on both directions by adding '-5' to head and '99' to the tail;</p>

<pre><code>import java.util.Arrays;

public class Bubble {

    public static void main(String[] args) {
        int arraylist[] = { 6, 5, 4, 3, 2, 1 };
        System.out.println("Final result:"
                + Arrays.toString(BubbleMethod(arraylist)));

        for ( int i = 0 ; i &lt; arraylist.length; i++ )
            System.out.print(arraylist[i] + " ");

        arraylist = addToArrayHead(arraylist,-5);   // add to head
        arraylist = addToArrayTail(arraylist, 99);  // add to tail

        System.out.println("\nUpdated array");
        for(int i = 0; i &lt; arraylist.length; i++)
            System.out.print(arraylist[i] + " " );

    }

    public static int[] BubbleMethod(int[] arr) {
        int temp;
        for (int i = 0; i &lt; arr.length - 1; i++) {

            for (int j = 1; j &lt; arr.length - i; j++) {
                if (arr[j - 1] &gt; arr[j]) {
                    temp = arr[j - 1];
                    arr[j - 1] = arr[j];
                    arr[j] = temp;
                }
            }
            System.out.println("Result " + (i + 1) + ": "
                    + Arrays.toString(arr));
        }
        return arr;
    }

    // adds an integer to the end of the array, returns array with N+1 length
    public static int[] addToArrayTail(int[] array, int value) {
        int[] newArray = new int[array.length+1];

        int i = 0;
        for( ; i &lt; array.length; i++ )
            newArray[i] = array[i];

        newArray[i] = value;    //already incremented with post-increment operator

        return newArray;
    }

    // adds an integer to the head of the array, returns array with N+1 length
    public static int[] addToArrayHead(int[] array, int value) {
        int[] newArray = new int[array.length+1];

        newArray[0] = value;

        for( int i = 1; i &lt; array.length; i++ )
            newArray[i] = array[i];

        return newArray;
    }
}
</code></pre>

<p>The output of this program is as follows;</p>

<pre><code>Result 1: [5, 4, 3, 2, 1, 6]
Result 2: [4, 3, 2, 1, 5, 6]
Result 3: [3, 2, 1, 4, 5, 6]
Result 4: [2, 1, 3, 4, 5, 6]
Result 5: [1, 2, 3, 4, 5, 6]
Final result:[1, 2, 3, 4, 5, 6]
1 2 3 4 5 6 
Updated array
-5 2 3 4 5 6 99 0 
</code></pre>

<p>To go one step further with user interaction, update expanding array as below with <strong>null array checks</strong>;</p>

<pre><code>// adds an integer to the end of the array, returns array with N+1 length
public static int[] addToArrayTail(int[] array, int value) {
    //null array check
    if( array == null ) {
        array = new int[1];
        array[0] = value;

        return array;
    }

    int[] newArray = new int[array.length+1];

    int i = 0;
    for( ; i &lt; array.length; i++ )
        newArray[i] = array[i];

    newArray[i] = value;    //already incremented with post-increment operator

    return newArray;
}

// adds an integer to the head of the array, returns array with N+1 length
public static int[] addToArrayHead(int[] array, int value) {
    //null array check
    if( array == null ) {
        array = new int[1];
        array[0] = value;

        return array;
    }

    int[] newArray = new int[array.length+1];

    newArray[0] = value;

    for( int i = 1; i &lt; array.length; i++ )
        newArray[i] = array[i];

    return newArray;
}
</code></pre>

<p>And the latest user input interaction functionality added code is as below.
Notice that this is the <strong>complete code</strong> and your <strong>answer</strong>;</p>

<pre><code>import java.util.Arrays;
import java.util.Scanner;

public class BubbleUserInput {

    public static void main(String[] args) {    
        int[] array = initArrayWithUserInput();

        System.out.println("User Generated Array;");
        System.out.println("*********************");
        printArray(array);
        System.out.println("Sorted Array;");
        System.out.println("*************");
        printArray(BubbleMethod(array));

    }

    public static int[] BubbleMethod(int[] arr) {
        int temp;
        for (int i = 0; i &lt; arr.length - 1; i++) {

            for (int j = 1; j &lt; arr.length - i; j++) {
                if (arr[j - 1] &gt; arr[j]) {
                    temp = arr[j - 1];
                    arr[j - 1] = arr[j];
                    arr[j] = temp;
                }
            }
            System.out.println("Result " + (i + 1) + ": "
                    + Arrays.toString(arr));
        }
        return arr;
    }

    // adds an integer to the end of the array, returns array with N+1 length
    public static int[] addToArrayTail(int[] array, int value) {
        //null array check
        if( array == null ) {
            array = new int[1];
            array[0] = value;

            return array;
        }

        int[] newArray = new int[array.length+1];

        int i = 0;
        for( ; i &lt; array.length; i++ )
            newArray[i] = array[i];

        newArray[i] = value;    //already incremented with post-increment operator

        return newArray;
    }

    // adds an integer to the head of the array, returns array with N+1 length
    public static int[] addToArrayHead(int[] array, int value) {
        //null array check
        if( array == null ) {
            array = new int[1];
            array[0] = value;

            return array;
        }

        int[] newArray = new int[array.length+1];

        newArray[0] = value;

        for( int i = 1; i &lt; array.length; i++ )
            newArray[i] = array[i];

        return newArray;
    }

    // initialize the array with user input
    public static int[] initArrayWithUserInput() {
        Scanner in = new Scanner(System.in);
        boolean cont = true;
        int[] array = null;
        String choice;

        while( cont ) {
            System.out.println("Want to add element ?");
            choice = in.nextLine();
            if( choice.equalsIgnoreCase("y") ) {
                System.out.println("Please enter an integer");
                array = addToArrayTail( array, in.nextInt() );
                in.nextLine();
            }
            else {
                System.out.println("Array generated");
                cont = false;               
            }

        }

        in.close();     // close the resource to prevent resource leak

        return array;
    }

    //prints array to the console
    public static void printArray(int[] array) {
        for(int i = 0; i &lt; array.length; i++)
            System.out.printf("%3d ", array[i]);
        System.out.println();
    }

}
</code></pre>

<p>The output is as follows;</p>

<pre><code>Want to add element ?
y
Please enter an integer
6
Want to add element ?
y
Please enter an integer
4
Want to add element ?
y
Please enter an integer
5
Want to add element ?
y
Please enter an integer
3
Want to add element ?
y
Please enter an integer
1
Want to add element ?
y
Please enter an integer
2
Want to add element ?
n
Array generated
User Generated Array;
  6   4   5   3   1   2 
Sorted Array;
Result 1: [4, 5, 3, 1, 2, 6]
Result 2: [4, 3, 1, 2, 5, 6]
Result 3: [3, 1, 2, 4, 5, 6]
Result 4: [1, 2, 3, 4, 5, 6]
Result 5: [1, 2, 3, 4, 5, 6]
  1   2   3   4   5   6 
</code></pre>
