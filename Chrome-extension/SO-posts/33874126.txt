<p>You may modify the version of TLS used in Volley by creating a custom HTTPStack and setting the stack in the <code>Volley.newRequestQueue(context, httpStack)</code> method in <a href="https://github.com/mcxiaoke/android-volley/blob/9aba4f5f861ab547751aa572c8559467dfa59270/src/main/java/com/android/volley/toolbox/Volley.java" rel="nofollow">Volley.java</a>. Although, you only need to do this for Android versions 16-19. Before v16, TLS 1.2 isn't supported and after v19, TLS 1.2 is enabled by default. So, you should focus on manually setting TLS to 1.2 for Android versions 16-19.</p>

<pre><code>if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN
            &amp;&amp; Build.VERSION.SDK_INT &lt;= Build.VERSION_CODES.KITKAT) {
        HttpStack stack = null;
        try {
            stack = new HurlStack(null, new TLSSocketFactory());
        } catch (KeyManagementException e) {
            e.printStackTrace();
            Log.d("Your Wrapper Class", "Could not create new stack for TLS v1.2");
            stack = new HurlStack();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            Log.d("Your Wrapper Class", "Could not create new stack for TLS v1.2");
            stack = new HurlStack();
        }
        requestQueue = Volley.newRequestQueue(context, stack);
    } else {
        requestQueue = Volley.newRequestQueue(context);
    }
</code></pre>

<p>And then use a TLSSocketFactory class which extends SSLSocketFactory like the one Florian Krauthan created here, where the v1.2 TLS protocol is enabled: <a href="https://gist.github.com/fkrauthan/ac8624466a4dee4fd02f#file-tlssocketfactory-java" rel="nofollow">https://gist.github.com/fkrauthan/ac8624466a4dee4fd02f#file-tlssocketfactory-java</a></p>
