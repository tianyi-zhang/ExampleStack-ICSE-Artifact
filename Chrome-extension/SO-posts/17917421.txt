<p>Well you have to use BaseAdapter for that,
Here is your code</p>

<pre><code>public class MainActivity extends Activity 
{
private String[] nums= { "One", "Two", "Three" };
private String[] names= { "HoneyComb", "JellyBean", "ICS" };

@Override
protected void onCreate(Bundle savedInstanceState) 
{       
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    ListView listView= (ListView) findViewById(R.id.lv_list);

    count = this.names.length();
    listView.setAdapter(new CustomAdapter(MainActivity.this));
}

public class CustomAdapter extends BaseAdapter 
{
    /*
     * Variables Declaration section
     */
    private Context mContext;

    public CustomAdapter(Context context) 
    {
        mContext = context;
    }//End of CustomAdapter constructor

    public int getCount() 
    {
        return count;
    }//End of getCount method

    public Object getItem(int position) 
    {
        return position;
    }//End of getItem method

    public long getItemId(int position) 
    {
        return position;
    }//End of getItemId method

    public View getView(int position, View convertView, ViewGroup parent) 
    {
        ViewHolder holder;

        if (convertView == null) 
        {
            holder = new ViewHolder();

            convertView = LayoutInflater.from(mContext).inflate(R.layout.text_view, null);
            holder.textviewName = (TextView) convertView.findViewById(R.id.name);
            holder.textviewNumber = (TextView) convertView.findViewById(R.id.number);

            convertView.setTag(holder);
        }//End of if condition
        else
        {
            holder = (ViewHolder) convertView.getTag();
        }//End of else

        holder.textviewName.setText(names[position]);
        holder.textviewNumber.setText(nums[position]);

        return convertView;
    }//End of getView method
}//End of CustomAdapter instance inner class

class ViewHolder 
{
    TextView textviewName;
    TextView textviewNumber;
}//End of ViewHolder instance inner class
}
</code></pre>

<p>your <code>main.xml</code></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="fill_parent"
android:background="#FFFFFF"
android:orientation="vertical" &gt;
&lt;ListView
        android:id="@+id/lv_list"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" &gt;
    &lt;/ListView&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>create a xml under <code>res/layout</code> in the name <code>text_view.xml</code></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="fill_parent" &gt;

&lt;TextView
        android:id="@+id/name"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="TextView"
        android:textColor="#00ccFF"
        android:textSize="18sp"
        android:paddingTop="10sp"
        android:textStyle="normal" /&gt;

    &lt;TextView
        android:id="@+id/number"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_alignLeft="@+id/name"
        android:layout_alignRight="@+id/name"
        android:layout_toRightOf="@+id/icon"
        android:layout_below="@+id/name"
        android:text="TextView"
        android:textColor="#00ccFF"
        android:textSize="16sp"
        android:paddingTop="30sp"
        android:textStyle="normal" /&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<p>This will do the job for you.<code>Tweak the code for your purpose.</code> Thanks</p>
