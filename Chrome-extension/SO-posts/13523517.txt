<p>Use the following method. It'll work with all android versions.</p>

<pre><code>int bv = Build.VERSION.SDK_INT;

boolean turnOnDataConnection(boolean ON,Context context)
 {

     try{
      if(bv == Build.VERSION_CODES.FROYO)

         {
          Method dataConnSwitchmethod;
            Class&lt;?&gt; telephonyManagerClass;
            Object ITelephonyStub;
            Class&lt;?&gt; ITelephonyClass;

            TelephonyManager telephonyManager = (TelephonyManager) context
                    .getSystemService(Context.TELEPHONY_SERVICE);

            telephonyManagerClass = Class.forName(telephonyManager.getClass().getName());
            Method getITelephonyMethod = telephonyManagerClass.getDeclaredMethod("getITelephony");
            getITelephonyMethod.setAccessible(true);
            ITelephonyStub = getITelephonyMethod.invoke(telephonyManager);
            ITelephonyClass = Class.forName(ITelephonyStub.getClass().getName());

            if (ON) {
                dataConnSwitchmethod = ITelephonyClass
                        .getDeclaredMethod("enableDataConnectivity");
            } else {
                dataConnSwitchmethod = ITelephonyClass
                        .getDeclaredMethod("disableDataConnectivity");   
            }
            dataConnSwitchmethod.setAccessible(true);
            dataConnSwitchmethod.invoke(ITelephonyStub);

           }
         else
           {
             //log.i("App running on Ginger bread+");
             final ConnectivityManager conman = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
             final Class&lt;?&gt; conmanClass = Class.forName(conman.getClass().getName());
             final Field iConnectivityManagerField = conmanClass.getDeclaredField("mService");
             iConnectivityManagerField.setAccessible(true);
             final Object iConnectivityManager = iConnectivityManagerField.get(conman);
             final Class&lt;?&gt; iConnectivityManagerClass =  Class.forName(iConnectivityManager.getClass().getName());
             final Method setMobileDataEnabledMethod = iConnectivityManagerClass.getDeclaredMethod("setMobileDataEnabled", Boolean.TYPE);
             setMobileDataEnabledMethod.setAccessible(true);
             setMobileDataEnabledMethod.invoke(iConnectivityManager, ON);
           }


         return true;
     }catch(Exception e){
                        Log.e(TAG,"error turning on/off data");

                        return false;
                        }

 }
</code></pre>

<p>Permissions Required:</p>

<pre><code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
&lt;uses-permission android:name="android.permission.CHANGE_NETWORK_STATE"/&gt;
&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
&lt;uses-permission android:name="android.permission.UPDATE_DEVICE_STATS"/&gt;
&lt;uses-permission android:name="android.permission.MODIFY_PHONE_STATE"/&gt;
&lt;uses-permission android:name="android.permission.READ_PHONE_STATE"/&gt;
</code></pre>

<p><strong>UPDATE:</strong></p>

<p>Starting from Android L this works only for System applications</p>
