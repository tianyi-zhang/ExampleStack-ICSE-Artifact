<p>Be sure to implement recycling on your ListView adapter.. Here is a sample of Listview adapter that has recycling:</p>

<pre><code>public class NewsAdapter extends ArrayAdapter&lt;NewsDto&gt; {
    private final Context context;
    ArrayList&lt;NewsDto&gt; nList;

    public NewsAdapter(Context context, ArrayList&lt;NewsDto&gt; nList) {
        super(context, R.layout.fragment_news_item, nList);
        this.context = context;
        this nList = nList;
        // TODO Auto-generated constructor stub
    }

    public class ViewHolder {
        TextView description;
        ImageView image1

    }

    @Override
    public View getView(final int position, View convertView, ViewGroup parent) {
        View view = convertView;
        final ViewHolder holder;
        LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        if (view == null) {
            view = inflater.inflate(R.layout.fragment_news_item, parent, false);
            holder = new ViewHolder();
            holder.description = (TextView) view
                    .findViewById(R.id.news_description);
            holder.image1 = (ImageView) view.findViewById(R.id.news_image1);
            view.setTag(holder);
        } else {
            holder = (ViewHolder) view.getTag();
        }
    // get a single data from your list.
    NewsDto newsDto= nlist.get(position);

    //initialization of Image
    holder.image1.setImageBitmap(newsDto.getImage());

        return view;

    }

}
</code></pre>

<p>It makes use of a class to save tags of every items in the listview when scrolling. So that your initializations will be recycled when you scroll back to a specific item that is already initialized.</p>
