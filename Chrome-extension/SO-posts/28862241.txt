<p>Figured it out.  I changed that method to a getCustomView method and returned it from both getView and getDropDownView.</p>

<pre><code>@Override
public View getView(int position, View convertView, ViewGroup parent) {
    return getCustomView(position, convertView, parent);
}

@Override
public View getDropDownView(int position, View convertView, ViewGroup parent) {
    return getCustomView(position, convertView, parent);
}

public View getCustomView(int position, View convertView, ViewGroup parent) {
    int sortItem = getItem(position);
    ViewHolder viewHolder;
    if (convertView == null) {
        viewHolder = new ViewHolder();
        LayoutInflater inflater = LayoutInflater.from(getContext());
        convertView = inflater.inflate(R.layout.sort_item, parent, false);

        viewHolder.sortItemTv = (TextView) convertView.findViewById(R.id.sort_item_textview);

        convertView.setTag(viewHolder);
    } else {
        viewHolder = (ViewHolder) convertView.getTag();
    }

    viewHolder.sortItemTv.setText(convertView.getResources().getString(sortItem));
    return convertView;
}
</code></pre>
