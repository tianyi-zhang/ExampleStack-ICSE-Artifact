<h2>Notepad Apps  ## <a href="https://play.google.com/store/apps/details?id=com.FreeNotePad.Notes" rel="nofollow">https://play.google.com/store/apps/details?id=com.FreeNotePad.Notes</a>[Free Notepad is the simple, elegant, easy way to keep notes on your smart phone.</h2>

<p>Once upon a time, you have to write down notes in a paper notepad.]<a href="https://play.google.com/store/apps/details?id=com.FreeNotePad.Notes" rel="nofollow">2</a></p>

<pre><code>public class FontTypePreference extends DialogPreference {
private List&lt;String&gt; fonts = null;
private int selected;

public FontTypePreference(Context context, AttributeSet attrs) {
    super(context, attrs);

    SharedPreferences sharedPref = PreferenceManager
            .getDefaultSharedPreferences(getContext());
    String font = sharedPref.getString("font", "Monospace");

    if (font.equals("Serif"))
        selected = 1;
    else if (font.equals("Sans Serif"))
        selected = 2;
    else
        selected = 0;
}

protected void onPrepareDialogBuilder(AlertDialog.Builder builder) {
    // Data has changed, notify so UI can be refreshed!
    builder.setTitle("Choose a font type");
    builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
        public void onClick(DialogInterface dialog, int whichButton) {

            Editor editor = PreferenceManager.getDefaultSharedPreferences(
                    getContext()).edit();

            if (selected == 0)
                editor.putString("font", "Monospace");
            else if (selected == 1)
                editor.putString("font", "Serif");
            else
                editor.putString("font", "Sans Serif");

            editor.commit();

            notifyChanged();
        }
    });
    builder.setNegativeButton("Cancel",
            new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int whichButton) {
                    // do nothing on a cancel
                }
            });

    // load the font names
    String[] arrayOfFonts = { "Monospace", "Serif", "Sans Serif" };
    fonts = Arrays.asList(arrayOfFonts);

    FontTypeArrayAdapter adapter = new FontTypeArrayAdapter(getContext(),
            android.R.layout.simple_list_item_single_choice, fonts);
    builder.setSingleChoiceItems(adapter, selected,
            new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int which) {

                    selected = which;
                }
            });
} 

public class FontTypeArrayAdapter extends ArrayAdapter&lt;String&gt; {
    public FontTypeArrayAdapter(Context context, int resource,
            List&lt;String&gt; objects) {
        super(context, resource, objects);

    }

    public View getView(int position, View convertView, ViewGroup parent) {

        View v = super.getView(position, convertView, parent);
        final TextView tv = (TextView) v;

        final String option = tv.getText().toString();
        if (option.equals("Serif"))
            tv.setTypeface(Typeface.SERIF);
        else if (option.equals("Sans Serif"))
            tv.setTypeface(Typeface.SANS_SERIF);
        else if (option.equals("Monospace"))
            tv.setTypeface(Typeface.MONOSPACE);

        tv.setTextColor(Color.BLACK);
        tv.setPadding(10, 3, 3, 3);

        return v;
    }

}
</code></pre>

<p>}</p>
