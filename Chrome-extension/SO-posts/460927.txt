<p>I'd start with something like this (and if there is something wrong with my code, I'd of course appreciate any comment):</p>

<pre><code>public class ItemsList extends ListActivity {

private ItemsAdapter adapter;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    setContentView(R.layout.items_list);

    this.adapter = new ItemsAdapter(this, R.layout.items_list_item, ItemManager.getLoadedItems());
    setListAdapter(this.adapter);
}

private class ItemsAdapter extends ArrayAdapter&lt;Item&gt; {

    private Item[] items;

    public ItemsAdapter(Context context, int textViewResourceId, Item[] items) {
        super(context, textViewResourceId, items);
        this.items = items;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View v = convertView;
        if (v == null) {
            LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            v = vi.inflate(R.layout.items_list_item, null);
        }

        Item it = items[position];
        if (it != null) {
            ImageView iv = (ImageView) v.findViewById(R.id.list_item_image);
            if (iv != null) {
                iv.setImageDrawable(it.getImage());
            }
        }

        return v;
    }
}

@Override
protected void onListItemClick(ListView l, View v, int position, long id) {
    this.adapter.getItem(position).click(this.getApplicationContext());
}
}
</code></pre>

<p>E.g. extending ArrayAdapter with own type of Items (holding information about your pictures) and overriden <code>getView()</code> method, that prepares view for items within list. There is also method <code>add()</code> on ArrayAdapter to add items to the end of the list.</p>

<p><code>R.layout.items_list</code> is simple layout with <code>ListView</code></p>

<p><code>R.layout.items_list_item</code> is layout representing one item in list</p>
