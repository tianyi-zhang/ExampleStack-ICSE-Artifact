<p>you have to make your own layout for example,</p>

<pre><code> &lt;RelativeLayout 
        android:id="@+id/relGrid"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"  &gt;

            &lt;GridView  
                android:id="@+id/gridview"
                android:layout_width="fill_parent" 
                android:layout_height="wrap_content"
                android:columnWidth="90dp"
                android:numColumns="3"
                android:verticalSpacing="10dp"
                android:horizontalSpacing="10dp"
                android:stretchMode="columnWidth"
                android:listSelector="@null" /&gt;

    &lt;/RelativeLayout&gt;
</code></pre>

<p>make one more layout for each item in the grid</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout
  xmlns:android="http://schemas.android.com/apk/res/android"  
  android:layout_width="wrap_content"
  android:layout_height="120dp"
  android:background="@drawable/background"&gt;

    &lt;ImageView 
        android:layout_width="wrap_content"
        android:id="@+id/imgGrid"    
        android:layout_centerHorizontal="true"

        android:layout_height="wrap_content"/&gt;

    &lt;TextView
        android:layout_below="@+id/imgGrid" 
        android:layout_centerInParent="true"
        android:id="@+id/txtTitle"
        android:layout_height="wrap_content" 
        android:layout_width="wrap_content" 
        android:gravity="center"
        android:text=""
        android:textStyle="bold"
        android:textSize="15dp"     
        android:textColor="@color/blue"/&gt;


&lt;/RelativeLayout&gt;
</code></pre>

<p>Then use gridView like this,</p>

<pre><code>setContentView(R.layout.main);

    GridView gridview = (GridView) findViewById(R.id.gridview);
            gridview.setAdapter(new ImageAdapter(MainActivity.this,R.layout.grid_layout , imgArray, titleArray));

            gridview.setOnItemClickListener(new OnItemClickListener() {
                public void onItemClick(AdapterView&lt;?&gt; parent, View v, int position, long id) 
                {
                    if(position == 0)
                    {
                       //your code
                    }
                }
            });
</code></pre>

<p>ImageAdapter.java</p>

<pre><code>import android.content.Context;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;


public class ImageAdapter extends ArrayAdapter&lt;Object&gt;
{
    String TAG = "ImageAdapter";

    private int resource;
    private Integer[] mImgGrid;
    private String[] mTitleText;

    public ImageAdapter(Context context, int resorce, Integer[] imgGrid,String[] titleText) 
    {
        super(context, resorce, imgGrid);
        Log.i(TAG," in set adapter lstRecipes "+ imgGrid.length );
        this.resource = resorce;
        this.mImgGrid = imgGrid;
        this.mTitleText = titleText;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) 
    {
        ViewHolder holder;

        if (convertView == null)
        {
            LayoutInflater layoutInflater = LayoutInflater.from(getContext());
            convertView  = layoutInflater.inflate(resource, parent, false);
            holder = new ViewHolder();
            holder.txtTitle = (TextView)convertView.findViewById(R.id.txtTitle);
            holder.imgGrid = (ImageView)convertView.findViewById(R.id.imgGrid);

            convertView.setTag(holder);
        }
        else 
        {
             holder=(ViewHolder)convertView.getTag();
        }

        try
        {
            holder.txtTitle.setText(mTitleText[position]);
            holder.imgGrid.setImageResource(mImgGrid[position]);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }

        return convertView;
    }

    public static class ViewHolder
    {
        private TextView txtTitle;
        private ImageView imgGrid;
    }
}
</code></pre>

<p>If you are use images and text directly from webservice then its not big deal you can parse your data from webService and you can set that in this ImageView and TextView.</p>
