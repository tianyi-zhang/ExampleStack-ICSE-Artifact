<p>This is pretty much similar to <a href="http://stackoverflow.com/questions/3115711/android-automatic-circular-gallery">this question</a>. you need to create a condition in your <code>getView()</code> method where you check if you are at the last element, and then you restart at the first using a modulo in the getCount.</p>

<p><strong>EDIT</strong>
This could be an example you could reuse : </p>

<pre><code>public class TestGallery extends Activity {
private Integer[] mImageIds = { R.drawable.sample_1, R.drawable.sample_2, R.drawable.sample_3, R.drawable.sample_4 };

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.gallery);

    Gallery g = (Gallery) findViewById(R.id.gallery);
    g.setAdapter(new ImageAdapter(this));

    g.setOnItemClickListener(new OnItemClickListener() {
        public void onItemClick(AdapterView parent, View v, int position, long id) {
            if (position &gt;= mImageIds.length) {
                position = position % mImageIds.length;
            }
            Toast.makeText(TestGallery.this, "" + position, Toast.LENGTH_SHORT).show();
        }
    });
}

public class ImageAdapter extends BaseAdapter {
    int mGalleryItemBackground;
    private Context mContext;

    public ImageAdapter(Context c) {
        mContext = c;
        TypedArray a = obtainStyledAttributes(R.styleable.default_gallery);
        mGalleryItemBackground = a.getResourceId(R.styleable.default_gallery_android_galleryItemBackground, 0);

        a.recycle();
    }

    public int getCount() {
        return Integer.MAX_VALUE;
    }

    public Object getItem(int position) {
        if (position &gt;= mImageIds.length) {
            position = position % mImageIds.length;
        }
        return position;
    }

    public long getItemId(int position) {
        if (position &gt;= mImageIds.length) {
            position = position % mImageIds.length;
        }
        return position;
    }

    public View getView(int position, View convertView, ViewGroup parent) {
        ImageView i = new ImageView(mContext);
        if (position &gt;= mImageIds.length) {
            position = position % mImageIds.length;
        }
        i.setImageResource(mImageIds[position]);
        i.setLayoutParams(new Gallery.LayoutParams(80, 80));
        i.setScaleType(ImageView.ScaleType.FIT_XY);
        i.setBackgroundResource(mGalleryItemBackground);
        return i;
    }

    public int checkPosition(int position) {
        if (position &gt;= mImageIds.length) {
            position = position % mImageIds.length;
        }
        return position;
    }
}
</code></pre>

<p>}</p>
