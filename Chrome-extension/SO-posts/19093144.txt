<p>I have never tried gson before but I always use parser class to solve the solution for json</p>

<pre><code>public class JSONParser {

static InputStream is;
static JSONObject jObj;
static String json = "";

public JSONParser()
{

}
public JSONObject makeHttpRequest(String Url, String Method, List&lt;NameValuePair&gt; params)
{
    try {

        if (Method == "POST")
        {
            DefaultHttpClient httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost(Url);
            httpPost.setEntity(new UrlEncodedFormEntity(params));

            HttpResponse httpResponse = httpClient.execute(httpPost);
            HttpEntity httpEntity = httpResponse.getEntity();
            is = httpEntity.getContent();
        }
        else if(Method == "GET")
        {
            // request method is GET
            DefaultHttpClient httpClient = new DefaultHttpClient();
            String paramString = URLEncodedUtils.format(params, "utf-8");
            Url += "?" + paramString;

             HttpGet httpGet = new HttpGet(Url);
             HttpResponse httpResponse = httpClient.execute(httpGet);
            HttpEntity httpEntity = httpResponse.getEntity();

            is = httpEntity.getContent();
        }   
    } catch (UnsupportedEncodingException e) {
        // TODO: handle exception
        e.printStackTrace();
    } catch (ClientProtocolException e) {
        // TODO: handle exception
        e.printStackTrace();
    } catch (IOException e) {
        // TODO: handle exception
        e.printStackTrace();
    }

    try {
        BufferedReader reader = new BufferedReader(new InputStreamReader(is, "iso-8859-1"), 8);
        StringBuilder sb = new StringBuilder();
        String Line = null;

        while ((Line = reader.readLine()) != null)
        {
            sb.append(Line + "\n");
        }

        is.close();
        json = sb.toString();
    } catch (Exception e) {
        // TODO: handle exception
        Log.e("Buffer Error", "Error converting result " + e.toString());
    }

    try{
        jObj = new JSONObject(json);
    } catch (JSONException e) {
        // TODO: handle exception
        Log.e("JSON Parser", "Error parsing data " + e.toString());
    }
    return jObj;
} }
</code></pre>

<p>on the loginactivity:</p>

<p>------------------------------edited----------------------</p>

<pre><code>protected String doInBackground(String... p) {
try {
List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
            params.add(new BasicNameValuePair("email", email));
            params.add(new BasicNameValuePair("password", password));
JSONObject json = new JSONParser.makeHttpRequest(loginURL, "POST/GET", params);
</code></pre>

<p>in the first element of the params (the name) refers to the $_POST['email'] that you use in the php script. and i don't know what are you using get or POST so you need to specify it in the second parameter of the function
then you can retrieve the result as</p>

<pre><code>success = json.getString("success");
if (success.equals("ok")
// do something
}// try } // background
</code></pre>
