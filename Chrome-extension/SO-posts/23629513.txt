<p>Try this</p>

<pre><code>String mCurrentPhotoPath = destination.getAbsolutePath();

protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    // TODO Auto-generated method stub
    super.onActivityResult(requestCode, resultCode, data);

    switch (requestCode) {
    case TAKE_PHOTO_CODE: {
        if (resultCode == RESULT_OK) {

            if (mCurrentPhotoPath != null) {
                getBitmap(mCurrentPhotoPath);
            }
        }
        break;
    }

    default:

        break;
    }

}

private Bitmap getBitmap(String mCurrentPhotoPath) {

    /* There isn't enough memory to open up more than a couple camera photos */
    /* So pre-scale the target bitmap into which the file is decoded */

    /* Get the size of the ImageView */
    int targetW = imageView.getMeasuredWidth();
    int targetH = imageView.getMeasuredHeight();

    /* Get the size of the image */
    BitmapFactory.Options bmOptions = new BitmapFactory.Options();
    bmOptions.inJustDecodeBounds = true;
    Bitmap oribitmap = BitmapFactory.decodeFile(mCurrentPhotoPath,
            bmOptions);
    int photoW = bmOptions.outWidth;
    int photoH = bmOptions.outHeight;

    /* Figure out which way needs to be reduced less */
    int scaleFactor = 3;

    /* Set bitmap options to scale the image decode target */
    bmOptions.inJustDecodeBounds = false;
    bmOptions.inSampleSize = scaleFactor;
    bmOptions.inPurgeable = true;

    /* Decode the JPEG file into a Bitmap */
    return oribitmap = BitmapFactory.decodeFile(mCurrentPhotoPath,
            bmOptions);

}
</code></pre>

<p>This permission in your manifest file</p>

<pre><code>&lt;uses-feature android:name="android.hardware.camera" /&gt; 
</code></pre>
