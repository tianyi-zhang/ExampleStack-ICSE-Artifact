<p>I could get it fixed and giving you in working condition. Hope it helps</p>

<pre><code>public class SecurityQuestionDTO
{
    @JsonProperty(value = "question")
    private char[] question;

    @JsonProperty(value = "status")
    private boolean status;

    public char[] getQuestion()
    {
        return question;
    }

    public void setQuestion(char[] question)
    {
        this.question = question;
    }

    public boolean isStatus()
    {
        return status;
    }

    public void setStatus(boolean status)
    {
        this.status = status;
    }

    @Override
    public String toString()
    {
        return "SecurityQuestionDTO [question=" + Arrays.toString(question) + ", status=" + status + "]";
    }
}
</code></pre>

<p>Controller method:</p>

<pre><code>@RequestMapping(value =
    {"/test"}, method = RequestMethod.POST)
    public String test(@RequestBody SecurityQuestionDTO securityQuestionDTO)
    {
        return "Value is set! " + securityQuestionDTO.toString();
    }
</code></pre>

<p>calling client:</p>

<pre><code>public static void sendPost1() throws Exception

    {
        String url = "http://localhost:8080/test";
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type", "application/json");

        String urlParameters = "{\"question\" : \"Question\",\"status\" : \"true\"}";

        // Send post request
        System.out.println("\nSending request to URL : " + url);
        con.setDoOutput(true);
        DataOutputStream wr = new DataOutputStream(con.getOutputStream());
        wr.writeBytes(urlParameters);
        wr.flush();
        wr.close();

        int responseCode = con.getResponseCode();

        System.out.println("Post parameters : " + urlParameters);
        System.out.println("Response Code : " + responseCode);

        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
        String inputLine;
        StringBuffer response = new StringBuffer();

        while ((inputLine = in.readLine()) != null)
        {
            response.append(inputLine);
        }
        in.close();

        // print result
        System.out.println(response.toString());
    }
</code></pre>

<p>Output: </p>

<p>Sending request to URL : http://:8080/test
Post parameters : {"question" : "Question","status" : "true"}
Response Code : 200
Value is set! SecurityQuestionDTO [question=[Q, u, e, s, t, i, o, n], status=true]</p>

<p>Note that you have to pass "Question" is passed as string and Spring will split it as char[].</p>
