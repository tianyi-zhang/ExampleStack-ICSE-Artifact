<p>finally i got the answer pls see this </p>

<p><strong>Get the present Week:</strong></p>

<pre><code>    public String [] getWeekDay()
    {

        Calendar now = Calendar.getInstance();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String [] days = new String[7];
        int delta = -now.get(GregorianCalendar.DAY_OF_WEEK) + 1;
        now.add(Calendar.DAY_OF_MONTH , delta);
        for (int i = 0; i &lt; 7; i++)
            {
                days [i] = format.format(now.getTime());
                now.add(Calendar.DAY_OF_MONTH , 1);
            }

        return days;

    }
</code></pre>

<p><strong>Get the Next Week:</strong></p>

<pre><code>     int weekDaysCount=0;

          public String [] getWeekDayNext()
    {

        weekDaysCount++;
        Calendar now1 = Calendar.getInstance();
        Calendar now = (Calendar) now1.clone();

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String [] days = new String[7];
        int delta = -now.get(GregorianCalendar.DAY_OF_WEEK) + 1;
        now.add(Calendar.WEEK_OF_YEAR , weekDaysCount);
        now.add(Calendar.DAY_OF_MONTH , delta);
        for (int i = 0; i &lt; 7; i++)
            {
                days [i] = format.format(now.getTime());
                now.add(Calendar.DAY_OF_MONTH , 1);
            }

        return days;

    }
</code></pre>

<p><strong>Get the previous Week:</strong></p>

<pre><code>  public String [] getWeekDayPrev()
    {

        weekDaysCount--;
        Calendar now1 = Calendar.getInstance();
        Calendar now = (Calendar) now1.clone();

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String [] days = new String[7];
        int delta = -now.get(GregorianCalendar.DAY_OF_WEEK) + 1;
        now.add(Calendar.WEEK_OF_YEAR , weekDaysCount);
        now.add(Calendar.DAY_OF_MONTH , delta);
        for (int i = 0; i &lt; 7; i++)
            {
                days [i] = format.format(now.getTime());
                now.add(Calendar.DAY_OF_MONTH , 1);
            }

        return days;

    }
</code></pre>

<p><strong>to assign the textView</strong> </p>

<pre><code>       NextPreWeekday = getWeekDay();
        firstDayOfWeek = CommonMethod.convertWeekDays(NextPreWeekday [0]);
        lastDayOfWeek = CommonMethod.convertWeekDays(NextPreWeekday [6]);
        textViewDate.setText(firstDayOfWeek + "-" + lastDayOfWeek + " " + CommonMethod.convertWeekDaysMouth(NextPreWeekday [6]));

        textViewSun.setText(CommonMethod.convertWeekDays(NextPreWeekday [0]) + "\nSun");
        textViewMon.setText(CommonMethod.convertWeekDays(NextPreWeekday [1]) + "\nMon");
        textViewTue.setText(CommonMethod.convertWeekDays(NextPreWeekday [2]) + "\nTue");
        textViewWed.setText(CommonMethod.convertWeekDays(NextPreWeekday [3]) + "\nWeb");
        textViewThu.setText(CommonMethod.convertWeekDays(NextPreWeekday [4]) + "\nThu");
        textViewFri.setText(CommonMethod.convertWeekDays(NextPreWeekday [5]) + "\nFri");
        textViewSat.setText(CommonMethod.convertWeekDays(NextPreWeekday [6]) + "\nSat");







 public static String convertWeekDays(String date)
    {
        String formattedDate = null;
        try
            {
                SimpleDateFormat originalFormat = new SimpleDateFormat("yyyy-MM-dd" , Locale.ENGLISH);
                SimpleDateFormat targetFormat = new SimpleDateFormat("dd");
                Date date12 = originalFormat.parse(date);
                formattedDate = targetFormat.format(date12);
            } catch (Exception e)
            {
                e.printStackTrace();
            }

        return formattedDate;

    }



public static String convertWeekDaysMouth(String date)
    {
        String formattedDate = null;
        try
            {
                SimpleDateFormat originalFormat = new SimpleDateFormat("yyyy-MM-dd" , Locale.ENGLISH);
                SimpleDateFormat targetFormat = new SimpleDateFormat("MMM yyyy");
                Date date12 = originalFormat.parse(date);
                formattedDate = targetFormat.format(date12);
            } catch (Exception e)
            {
                e.printStackTrace();
            }

        return formattedDate;

    }
</code></pre>
