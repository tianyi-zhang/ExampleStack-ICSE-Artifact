<p>Thank you all  for response... I found this link 
<a href="http://www.coderzheaven.com/2012/04/26/upload-image-android-device-server-method-4/" rel="nofollow">http://www.coderzheaven.com/2012/04/26/upload-image-android-device-server-method-4/</a>
and I change my android code and php as well, maybe it  help someone.</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    &gt;
    &lt;Button 
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="Upload File"
        android:id="@+id/but"
    /&gt;

    &lt;TextView 
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="@string/hello"
        android:id="@+id/tv"
        android:textColor="#00FF00"
        android:textStyle="bold"
    /&gt;
 &lt;/LinearLayout&gt;
</code></pre>

<p>here is the android part    </p>

<pre><code>TextView tv;
Button b;
int serverResponseCode = 0;
ProgressDialog dialog = null;
@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    b = (Button)findViewById(R.id.but);
    tv = (TextView)findViewById(R.id.tv);
    tv.setText("Uploading file path :- '/sdcard/android_1.png'");

    b.setOnClickListener(new OnClickListener() {            
        @Override
        public void onClick(View v) {
            dialog = ProgressDialog.show(UploadImageDemo.this, "", "Uploading file...", true);
             new Thread(new Runnable() {
                    public void run() {
                         runOnUiThread(new Runnable() {
                                public void run() {
                                    tv.setText("uploading started.....");
                                }
                            });                      
                     int response= uploadFile("/sdcard/android_1.png");
                     System.out.println("RES : " + response);                         
                    }
                  }).start();        
            }
    });
}

public int uploadFile(String sourceFileUri) {
      String upLoadServerUri = "http://10.0.2.2/upload_test/upload_media_test.php";
      String fileName = sourceFileUri;

      HttpURLConnection conn = null;
      DataOutputStream dos = null;  
      String lineEnd = "\r\n";
      String twoHyphens = "--";
      String boundary = "*****";
      int bytesRead, bytesAvailable, bufferSize;
      byte[] buffer;
      int maxBufferSize = 1 * 1024 * 1024; 
      File sourceFile = new File(sourceFileUri); 
      if (!sourceFile.isFile()) {
       Log.e("uploadFile", "Source File Does not exist");
       return 0;
      }
          try { // open a URL connection to the Servlet
           FileInputStream fileInputStream = new FileInputStream(sourceFile);
           URL url = new URL(upLoadServerUri);
           conn = (HttpURLConnection) url.openConnection(); // Open a HTTP  connection to  the URL
           conn.setDoInput(true); // Allow Inputs
           conn.setDoOutput(true); // Allow Outputs
           conn.setUseCaches(false); // Don't use a Cached Copy
           conn.setRequestMethod("POST");
           conn.setRequestProperty("Connection", "Keep-Alive");
           conn.setRequestProperty("ENCTYPE", "multipart/form-data");
           conn.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary);
           conn.setRequestProperty("uploaded_file", fileName); 
           dos = new DataOutputStream(conn.getOutputStream());

           dos.writeBytes(twoHyphens + boundary + lineEnd); 
           dos.writeBytes("Content-Disposition: form-data; name=\"uploaded_file\";filename=\""+ fileName + "\"" + lineEnd);
           dos.writeBytes(lineEnd);

           bytesAvailable = fileInputStream.available(); // create a buffer of  maximum size

           bufferSize = Math.min(bytesAvailable, maxBufferSize);
           buffer = new byte[bufferSize];

           // read file and write it into form...
           bytesRead = fileInputStream.read(buffer, 0, bufferSize);  

           while (bytesRead &gt; 0) {
             dos.write(buffer, 0, bufferSize);
             bytesAvailable = fileInputStream.available();
             bufferSize = Math.min(bytesAvailable, maxBufferSize);
             bytesRead = fileInputStream.read(buffer, 0, bufferSize);               
            }

           // send multipart form data necesssary after file data...
           dos.writeBytes(lineEnd);
           dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);

           // Responses from the server (code and message)
           serverResponseCode = conn.getResponseCode();
           String serverResponseMessage = conn.getResponseMessage();

           Log.i("uploadFile", "HTTP Response is : " + serverResponseMessage + ": " + serverResponseCode);
           if(serverResponseCode == 200){
               runOnUiThread(new Runnable() {
                    public void run() {
                        tv.setText("File Upload Completed.");
                        Toast.makeText(UploadImageDemo.this, "File Upload Complete.", Toast.LENGTH_SHORT).show();
                    }
                });                
           }    

           //close the streams //
           fileInputStream.close();
           dos.flush();
           dos.close();

      } catch (MalformedURLException ex) {  
          dialog.dismiss();  
          ex.printStackTrace();
          Toast.makeText(UploadImageDemo.this, "MalformedURLException", Toast.LENGTH_SHORT).show();
          Log.e("Upload file to server", "error: " + ex.getMessage(), ex);  
      } catch (Exception e) {
          dialog.dismiss();  
          e.printStackTrace();
          Toast.makeText(UploadImageDemo.this, "Exception : " + e.getMessage(), Toast.LENGTH_SHORT).show();
          Log.e("Upload file to server Exception", "Exception : " + e.getMessage(), e);  
      }
      dialog.dismiss();       
      return serverResponseCode;  
     } 
}
</code></pre>
