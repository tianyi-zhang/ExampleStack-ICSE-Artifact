<p>Try to update the adapter outside the onClick : </p>

<pre><code>protected void onCreate(Bundle savedInstanceState) {
  super.onCreate(savedInstanceState);
  //Whatever else
  listsp = (Spinner) findViewById(R.id.listspinned);
  list = new ArrayList&lt;String&gt;();
  listadapter = new MyArrayAdapter(getApplicationContext(), android.R.layout.simple_spinner_item, list);
  listadapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  listsp.setAdapter(adapter);
</code></pre>

<p>}</p>

<pre><code>protected void showInputDialog() {

// get prompts.xml view
LayoutInflater layoutInflater = LayoutInflater.from(MainActivity.this);
View promptView = layoutInflater.inflate(R.layout.input_dialog, null);
AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(
        MainActivity.this);
alertDialogBuilder.setView(promptView);


// setup a dialog window
alertDialogBuilder
        .setCancelable(false)
        .setPositiveButton("OK", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog, int id) {
                listtext = (EditText) findViewById(R.id.list_text);
                updateAdapter(listtext.getText().toString());
            }
        })
        .setNegativeButton("Cancel",
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        dialog.cancel();
                    }
                });

// create an alert dialog
AlertDialog alert = alertDialogBuilder.create();
alert.show();

}

protected void updateAdapter(String input) {
  list.add(input);
  listadapter.notifyDataSetChanged();
}
</code></pre>

<p>EDIT : Here's how to implement your custom adapter (I made it private so it'd use the same dataList. Therefore, you don't need to call any <code>updateData()</code> function, just to notify the adapter that the data has changed with <code>notifyDataSetChanged()</code>) : </p>

<pre><code>private class MyArrayAdapter extends BaseAdapter implements SpinnerAdapter {

        @Override
        public int getCount() {
            return list.size();
        }

        @Override
        public Object getItem(int position) {
            return list.get(position);
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(int position, View view, ViewGroup parent) {
            TextView text = new TextView(lexs);
            text.setText(list.get(position).getName());
            return text;
        }

    }
</code></pre>
