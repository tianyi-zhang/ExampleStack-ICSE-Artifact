<p><strong>Edit to answer latest question</strong></p>

<p>You can avoid using an intent to search for paired devices. When connecting to a device that is not paired, a notification will pop up asking to pair the devices. Once paired this message should not show again for these devices, the connection should be automatic (according to how you have written your program).</p>

<p>I use an intent to enable bluetooth, and to make my device discoverable, I then set up my code to connect, and press a button to connect. In your case, you will need to ensure your accessories are discoverable also. In my case I use a unique UUID, and both devices must recognise this to connect. This can only be used if you are programming both devices, whether both are android or one android and one other device type.</p>

<p>Try this, and see if it solves your problem.</p>

<hr>

<p><strong>This answer is to the original question before it was edited to be another question.</strong></p>

<p>I've edited my answer for clarity as I can see from the comments it is misleading. Your question has two parts. </p>

<blockquote>
  <p>On my MotoG (KitKat) if I turn my Bluetooth it connects autommatically
  to device (if it's near and paired ofc...) but on my LG G3 I must go
  to Configuration/Bluetooth/Paired devices/ and there tap the device to
  connect... and I want to avoid this... should be possible?</p>
</blockquote>

<p><strong>This is less of a programming issue and more of a platform issue.</strong><br>
There is a <strong>well documented bug in Android 5.0</strong> with Bluetooth not automatically connecting and many other BT issues.  These issues continue with all the updates on 5.0. versions and is not fixed until the 5.1. upgrade. </p>

<p><a href="http://www.digitaltrends.com/mobile/android-lollipop-problems/11/" rel="nofollow">http://www.digitaltrends.com/mobile/android-lollipop-problems/11/</a></p>

<p><a href="http://forums.androidcentral.com/lg-g3/473064-bluetooth-streaming-choppy-lg-3-lollipop.html" rel="nofollow">http://forums.androidcentral.com/lg-g3/473064-bluetooth-streaming-choppy-lg-3-lollipop.html</a></p>

<p><strong>First port of call is to update to 5.1</strong></p>

<p>These issues have been addressed in the Lollipop update 5.1</p>

<p><a href="http://www.reddit.com/r/Android/comments/306m3y/lollipop_51_bluetooth/" rel="nofollow">http://www.reddit.com/r/Android/comments/306m3y/lollipop_51_bluetooth/</a></p>

<hr>

<p><strong>Edit:</strong>
<em>I don't believe this is going to fix your problem of the automatic pairing, you wanted to know how to use BTGatt.</em></p>

<blockquote>
  <p>I've seen if I type device. to check what can I do it let me
  connectGatt() means /.../
  But I can't figure it out how to do this...</p>
</blockquote>

<p><strong>To use BluetoothGatt</strong></p>

<p><a href="https://developer.android.com/reference/android/bluetooth/BluetoothGatt.html" rel="nofollow">https://developer.android.com/reference/android/bluetooth/BluetoothGatt.html</a></p>

<blockquote>
  <p>This class provides Bluetooth GATT functionality to enable
  communication with Bluetooth Smart or Smart Ready devices.
   /.../
  GATT capable devices can be discovered using the Bluetooth device
  discovery or BLE scan process.</p>
</blockquote>

<p><a href="https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html" rel="nofollow">https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html</a></p>

<p>Here is a great example of how to use BluetoothGatt (it uses hear rate):<br>
<a href="https://github.com/googlesamples/android-BluetoothLeGatt/blob/master/Application/src/main/java/com/example/android/bluetoothlegatt/BluetoothLeService.java" rel="nofollow">https://github.com/googlesamples/android-BluetoothLeGatt/blob/master/Application/src/main/java/com/example/android/bluetoothlegatt/BluetoothLeService.java</a></p>

<p>I have reproduced some of the code here, in case the link dies.</p>

<p>It basically follows similar lines to a regular bluetooth connection. You need to discover and find supported devices. 
Monitor state, etc.<br>
These are the two most pertinent features to gatt.</p>

<p>The callback:</p>

<pre><code>// Implements callback methods for GATT events that the app cares about.  For example,
// connection change and services discovered.
private final BluetoothGattCallback mGattCallback = new BluetoothGattCallback() {
    @Override
    public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState) {
        String intentAction;
        if (newState == BluetoothProfile.STATE_CONNECTED) {
            intentAction = ACTION_GATT_CONNECTED;
            mConnectionState = STATE_CONNECTED;
            broadcastUpdate(intentAction);
            Log.i(TAG, "Connected to GATT server.");
            // Attempts to discover services after successful connection.
            Log.i(TAG, "Attempting to start service discovery:" +
                    mBluetoothGatt.discoverServices());

        } else if (newState == BluetoothProfile.STATE_DISCONNECTED) {
            intentAction = ACTION_GATT_DISCONNECTED;
            mConnectionState = STATE_DISCONNECTED;
            Log.i(TAG, "Disconnected from GATT server.");
            broadcastUpdate(intentAction);
        }
    }

    @Override
    public void onServicesDiscovered(BluetoothGatt gatt, int status) {
        if (status == BluetoothGatt.GATT_SUCCESS) {
            broadcastUpdate(ACTION_GATT_SERVICES_DISCOVERED);
        } else {
            Log.w(TAG, "onServicesDiscovered received: " + status);
        }
    }

    @Override
    public void onCharacteristicRead(BluetoothGatt gatt,
                                     BluetoothGattCharacteristic characteristic,
                                     int status) {
        if (status == BluetoothGatt.GATT_SUCCESS) {
            broadcastUpdate(ACTION_DATA_AVAILABLE, characteristic);
        }
    }

    @Override
    public void onCharacteristicChanged(BluetoothGatt gatt,
                                        BluetoothGattCharacteristic characteristic) {
        broadcastUpdate(ACTION_DATA_AVAILABLE, characteristic);
    }
};
</code></pre>

<p>The broadcast:</p>

<pre><code>private void broadcastUpdate(final String action,
                             final BluetoothGattCharacteristic characteristic) {
    final Intent intent = new Intent(action);

    // This is special handling for the Heart Rate Measurement profile.  Data parsing is
    // carried out as per profile specifications:
    // http://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.heart_rate_measurement.xml
    if (UUID_HEART_RATE_MEASUREMENT.equals(characteristic.getUuid())) {
        int flag = characteristic.getProperties();
        int format = -1;
        if ((flag &amp; 0x01) != 0) {
            format = BluetoothGattCharacteristic.FORMAT_UINT16;
            Log.d(TAG, "Heart rate format UINT16.");
        } else {
            format = BluetoothGattCharacteristic.FORMAT_UINT8;
            Log.d(TAG, "Heart rate format UINT8.");
        }
        final int heartRate = characteristic.getIntValue(format, 1);
        Log.d(TAG, String.format("Received heart rate: %d", heartRate));
        intent.putExtra(EXTRA_DATA, String.valueOf(heartRate));
    } else {
        // For all other profiles, writes the data formatted in HEX.
        final byte[] data = characteristic.getValue();
        if (data != null &amp;&amp; data.length &gt; 0) {
            final StringBuilder stringBuilder = new StringBuilder(data.length);
            for(byte byteChar : data)
                stringBuilder.append(String.format("%02X ", byteChar));
            intent.putExtra(EXTRA_DATA, new String(data) + "\n" + stringBuilder.toString());
        }
    }
    sendBroadcast(intent);
}
</code></pre>

<p>This question also has some relevant code that may help cut it down when learning:<br>
<a href="http://stackoverflow.com/questions/29758890/bluetooth-gatt-callback-not-working-with-new-api-for-lollipop">BLuetooth Gatt Callback not working with new API for Lollipop</a></p>

<p>Now here's the rub. Are your devices bluetooth smart or smart ready?</p>

<p>This link gives a great list of smart devices. You will also find out when you implement your program.</p>

<p><a href="http://www.bluetooth.com/Pages/Bluetooth-Smart-Devices-List.aspx" rel="nofollow">http://www.bluetooth.com/Pages/Bluetooth-Smart-Devices-List.aspx</a></p>
