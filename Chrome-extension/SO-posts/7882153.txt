<p>Ok, i got rid of the exception by doing:</p>

<pre><code>kp.setAdapter(new MyCustomBaseAdapter(AppName.this, searchResults));
</code></pre>

<p>But the fields are still filled incorrectly with JSoup, first all the naam fields are displayed and then the waarde fields.</p>

<pre><code>naam:
naam:
naam:
waarde
waarde
waarde
</code></pre>

<p>It should be:</p>

<pre><code>naam: waarde
naam: waarde
</code></pre>

<p>Does somebody know how to combine the 2 for loops of JSoup so that the fields are filled correctly:</p>

<pre><code>       Document doc = Jsoup.parse(kpn); 
       Elements tdsFromSecondColumn = doc.select("table.personaltable td:eq(0)");
       Elements tdsFromSecondColumn1 = doc.select("table.personaltable td:eq(1)");
       SearchResults sr1 = new SearchResults();

          for (Element tdFromSecondColumn : tdsFromSecondColumn) {                           
               sr1 = new SearchResults();
               sr1.setNaam(tdFromSecondColumn.text());
               results.add(sr1);
          }

          for (Element tdFromSecondColumn1 : tdsFromSecondColumn1) {                             
               sr1 = new SearchResults();
               sr1.setWaarde(tdFromSecondColumn1.text());
               results.add(sr1);
          }
</code></pre>

<p>Here my CustomBaseAdapter as requested:</p>

<pre><code>public class MyCustomBaseAdapter extends BaseAdapter {

private static ArrayList&lt;SearchResults&gt; searchArrayList;

  private LayoutInflater mInflater;


 public MyCustomBaseAdapter(Context context, ArrayList&lt;SearchResults&gt; results) {
   searchArrayList = results;
   mInflater = LayoutInflater.from(context);
  }


public int getCount() {
   return searchArrayList.size();
  }

 public Object getItem(int position) {
   return searchArrayList.get(position);
  }

 public long getItemId(int position) {
   return position;
  }

 public View getView(int position, View convertView, ViewGroup parent) {
   ViewHolder holder;
   if (convertView == null) {
    convertView = mInflater.inflate(R.layout.test, null);
    holder = new ViewHolder();
    holder.txtNaam = (TextView) convertView.findViewById(R.id.naam);
    holder.txtWaarde = (TextView) convertView.findViewById(R.id.waarde);

   convertView.setTag(holder);
   } else {
    holder = (ViewHolder) convertView.getTag();
   }

   holder.txtNaam.setText(searchArrayList.get(position).getNaam());
   holder.txtWaarde.setText(searchArrayList.get(position).getWaarde());

  return convertView;
  }

 static class ViewHolder {
   TextView txtNaam;
   TextView txtWaarde;
  }


}
</code></pre>
