<p>I think that this will get you to the point.
You will have to grab the cookies and include them in your HTTP request.</p>

<p>Get the cookies from the Login request:</p>

<pre><code>HttpClient httpclient = new DefaultHttpClient();
    try {
        // Create a local instance of cookie store
        CookieStore cookieStore = new BasicCookieStore();

        // Create local HTTP context
        HttpContext localContext = new BasicHttpContext();
        // Bind custom cookie store to the local context
        localContext.setAttribute(ClientContext.COOKIE_STORE, cookieStore);

        HttpGet httpget = new HttpGet("http://www.yourpage/");

        System.out.println("executing request " + httpget.getURI());

        // Pass local context as a parameter
        HttpResponse response = httpclient.execute(httpget, localContext);
        HttpEntity entity = response.getEntity();

        System.out.println("----------------------------------------");
        System.out.println(response.getStatusLine());
        if (entity != null) {
            System.out.println("Response content length: " + entity.getContentLength());
        }
        List&lt;Cookie&gt; cookies = cookieStore.getCookies();
        for (int i = 0; i &lt; cookies.size(); i++) {
            System.out.println("Local cookie: " + cookies.get(i));
        }

        // Consume response content
        EntityUtils.consume(entity);

        System.out.println("----------------------------------------");

    } finally {
        // When HttpClient instance is no longer needed,
        // shut down the connection manager to ensure
        // immediate deallocation of all system resources
        httpclient.getConnectionManager().shutdown();
    }
</code></pre>

<p>Then pass them as a local contect:</p>

<pre><code>HttpPost httppost = new HttpPost("http://www.yourpage/");

// Pass local context as a parameter     
HttpResponse response = httpclient.execute(httppost, localContext); 
</code></pre>
