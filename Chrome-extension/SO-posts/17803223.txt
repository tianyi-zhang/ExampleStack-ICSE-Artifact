<p>You can define your own json parser class-</p>

<pre><code>public class JSONParser {

    static InputStream is = null;
    static JSONObject jObj = null;
    static JSONArray jsonArray = null;
    static String json = "";
    // constructor
    public JSONParser() {

    }    
        public JSONArray getJSONFromUrl(String url, List&lt;NameValuePair&gt; params) {    
            System.out.println("url:: "+url );
            System.out.println("params:: "+ params +" " +params.get(0) );
            // Making HTTP request
            try {
                // defaultHttpClient
                DefaultHttpClient httpClient = new DefaultHttpClient();
                HttpPost httpPost = new HttpPost(url);
                httpPost.setEntity(new UrlEncodedFormEntity(params));

                HttpResponse httpResponse = httpClient.execute(httpPost);
                HttpEntity httpEntity = httpResponse.getEntity();
                is = httpEntity.getContent();

            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            } catch (ClientProtocolException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }

            try {
                BufferedReader reader = new BufferedReader(new InputStreamReader(
                        is, "iso-8859-1"), 8);
                StringBuilder sb = new StringBuilder();
                String line = null;
                while ((line = reader.readLine()) != null) {
                    sb.append(line);
                }
                is.close();
                json = sb.toString();
                //Log.e("JSON::: ", json);
            } catch (Exception e) {
                Log.e("Buffer Error", "Error converting result " + e.toString());
            }      

            // try parse the string to a JSON object
            try {
                if(!json.equals("null")){
                    jsonArray = new JSONArray(json);
                     Log.d("jsonArray:: ",  jsonArray+"");
                }else{
                    jsonArray = null;
                }

            } catch (JSONException e) {
                Log.e("JSON Parser", "Error parsing data " + e.toString());
            }


            // return JSON String
            return jsonArray;

        }

      }
</code></pre>

<p>And your calling class like-</p>

<pre><code>public class UserFuctions {
    private JSONParser jsonParser;

     // constructor
    public UserFuctions(){
        jsonParser = new JSONParser();
    }

    private static String HOST_URL = "http://100.43.0.21/pharmacy";
    public static final String FS  = File.separator;
    private static String genericListByNameSearchURL    = HOST_URL+FS +"getGenericByName.php";

    /**
     * 
     * function make Login Request
     * @param email
     * @param password
     * */

    public JSONArray getGenericByName(String genName){
        // Building Parameters
        List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();        
        params.add(new BasicNameValuePair("genName", genName));       
        JSONArray json = jsonParser.getJSONFromUrl(getGenericByName, params);

        return json;
    }


}
</code></pre>
