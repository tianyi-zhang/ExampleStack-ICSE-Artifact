<p>I see you are using Picasso for image loading why not use picasso image transformations. it's very simple to implement :-</p>

<pre><code>ImageView im = (ImageView) findViewById(R.id.img1);

    Picasso.with(MainActivity2.this).load(R.drawable.kitten)
            .transform(new CropCircleTransformation()).into(im);
</code></pre>

<p>and it looks like this</p>

<p><a href="http://i.stack.imgur.com/AtWC4.png" rel="nofollow"><img src="http://i.stack.imgur.com/AtWC4.png" alt="enter image description here"></a></p>

<p>You just need to add transformation class </p>

<pre><code>import com.squareup.picasso.Transformation;

import android.graphics.Bitmap;
import android.graphics.BitmapShader;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;

public class CropCircleTransformation implements Transformation {

  @Override public Bitmap transform(Bitmap source) {
    int size = Math.min(source.getWidth(), source.getHeight());

    int width = (source.getWidth() - size) / 2;
    int height = (source.getHeight() - size) / 2;

    Bitmap bitmap = Bitmap.createBitmap(size, size, Bitmap.Config.ARGB_8888);

    Canvas canvas = new Canvas(bitmap);
    Paint paint = new Paint();
    BitmapShader shader =
        new BitmapShader(source, BitmapShader.TileMode.CLAMP, BitmapShader.TileMode.CLAMP);
    if (width != 0 || height != 0) {
      // source isn't square, move viewport to center
      Matrix matrix = new Matrix();
      matrix.setTranslate(-width, -height);
      shader.setLocalMatrix(matrix);
    }
    paint.setShader(shader);
    paint.setAntiAlias(true);

    float r = size / 2f;
    canvas.drawCircle(r, r, r, paint);

    source.recycle();

    return bitmap;
  }

  @Override public String key() {
    return "CropCircleTransformation()";
  }
}
</code></pre>

<p>More transformations can we find here <a href="https://github.com/wasabeef/picasso-transformations" rel="nofollow">https://github.com/wasabeef/picasso-transformations</a></p>
