<p>If you override getPageTitle in your FragmentPagerAdapter, then call</p>

<pre><code>mTabs.setupWithViewPager(mFragmentPager);
</code></pre>

<p>the tabs text is set for you.</p>

<p>Then to change the font I used this method from <a href="http://stackoverflow.com/a/31067431/3716281">this</a> SO post</p>

<pre><code> Typeface tf = Typeface.createFromAsset(getAssets(), "myfont.ttf");
    ViewGroup vg = (ViewGroup) tabLayout.getChildAt(0);
    int tabsCount = vg.getChildCount();
    for (int j = 0; j &lt; tabsCount; j++) {
        ViewGroup vgTab = (ViewGroup) vg.getChildAt(j);
        int tabChildsCount = vgTab.getChildCount();
        for (int i = 0; i &lt; tabChildsCount; i++) {
            View tabViewChild = vgTab.getChildAt(i);
            if (tabViewChild instanceof TextView) {
                ((TextView) tabViewChild).setTypeface(tf);
            }
        }
    }
</code></pre>

<p>Here is the FragmentPagerAdapter in its entirety for reference</p>

<pre><code>class PagerAdapter extends FragmentPagerAdapter {

    private final List&lt;Fragment&gt; fragmentList = new ArrayList&lt;&gt;();
    private final List&lt;String&gt; fragmentTitleList = new ArrayList&lt;&gt;();

    public PagerAdapter(FragmentManager fragmentManager) {
        super(fragmentManager);
    }

    public void addFragment(Fragment fragment, String title) {
        fragmentList.add(fragment);
        fragmentTitleList.add(title);
    }

    @Override
    public Fragment getItem(int position) {
        return fragmentList.get(position);
    }

    @Override
    public int getCount() {
        return fragmentList.size();
    }

    @Override
    public CharSequence getPageTitle(int position) {
        return fragmentTitleList.get(position);
    }
}
</code></pre>
