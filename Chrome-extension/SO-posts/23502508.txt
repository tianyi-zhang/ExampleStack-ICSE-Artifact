<p>I can't remember for the life of me where I got this from years ago to give proper credit, but why not have the app tell you:</p>

<pre><code>@SuppressLint("NewApi")
public static void getApplicationSignature(Activity activity){
    try {
        PackageInfo info = activity.getPackageManager().getPackageInfo("your.package.name.here", PackageManager.GET_SIGNATURES);
        for (Signature signature : info.signatures) {
            MessageDigest md = MessageDigest.getInstance("SHA");
            md.update(signature.toByteArray());
            Log.e("MY KEY HASH:", Base64.encodeToString(md.digest(), Base64.DEFAULT));
        }
    } catch (NameNotFoundException e) {

    } catch (NoSuchAlgorithmException e) {

    }
}
</code></pre>

<p>Just be sure to replace "your.package.name.here" with your root package name.</p>

<p>Edit: But if you want to go the openSSL route, TDMaster's answer about adding it to your Path variable is the solution you want. Just kinda thought I'd throw this one out there too.</p>
