<p>i could solve my Problems. Here my solution!</p>

<pre><code>    package hsos.ds.helper;

import hsos.ds.db.Poi;

import java.util.ArrayList;
import java.util.List;
import android.widget.Filter;

public class ItemsFilter extends Filter {

    private PoiListAdapter poiAdapter;
    private List&lt;Poi&gt; valuesPoi;
    private List&lt;Poi&gt; filteredPoi;

    public ItemsFilter(PoiListAdapter _poiAdapter) {
        this.poiAdapter = _poiAdapter;
        this.valuesPoi = poiAdapter.getValuesPoi();
        this.filteredPoi = poiAdapter.getFilteredPoi();
    }

    @Override
    protected FilterResults performFiltering(CharSequence constraint) {
        FilterResults result = new FilterResults();
        constraint = constraint.toString().toLowerCase();

        if (constraint == null || constraint.length() == 0) {
            ArrayList&lt;Poi&gt; list = new ArrayList&lt;Poi&gt;(valuesPoi);
            result.values = valuesPoi;
            result.count = valuesPoi.size();

        } else {
            final ArrayList&lt;Poi&gt; orginalList = new ArrayList&lt;Poi&gt;(valuesPoi);
            final ArrayList&lt;Poi&gt; filterList = new ArrayList&lt;Poi&gt;();
            int count = orginalList.size();
            for (int i = 0; i &lt; count; i++) {
                final Poi p = orginalList.get(i);
                if (p.getName().toLowerCase().contains(constraint))
                    filterList.add(p);
            }
            result.values = filterList;
            result.count = filterList.size();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected void publishResults(CharSequence constraint, FilterResults results) {
        filteredPoi = (List&lt;Poi&gt;) results.values;
        poiAdapter.notifyDataSetChanged();
        poiAdapter.clear();
        int count = filteredPoi.size();
        for (int i = 0; i &lt; count; i++) {
            poiAdapter.add(filteredPoi.get(i));
            poiAdapter.notifyDataSetInvalidated();
        }
    }
}
</code></pre>

<p>and the Adapter:</p>

<p>public class PoiListAdapter extends ArrayAdapter implements Filterable {</p>

<pre><code>private List&lt;Poi&gt; valuesPoi;
private List&lt;Poi&gt; filteredPoi;
private ItemsFilter mFilter;

public PoiListAdapter(Context context, List&lt;Poi&gt; valuesPoi) {
    super(context, R.layout.poilist);
    this.valuesPoi = new ArrayList&lt;Poi&gt;(valuesPoi);
    this.filteredPoi = new ArrayList&lt;Poi&gt;(valuesPoi);
    this.mFilter = new ItemsFilter(this);
}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    View v = convertView;
    if (v == null) {
        LayoutInflater vi = (LayoutInflater) getContext().getSystemService(
                Context.LAYOUT_INFLATER_SERVICE);
        v = vi.inflate(R.layout.poilist, null);
    }

    Poi p = filteredPoi.get(position);

    if (p != null) {
        TextView tt = (TextView) v.findViewById(R.id.name_poi);
        TextView bt = (TextView) v.findViewById(R.id.discrip_poi);
        if (tt != null) {
            tt.setText(p.getName());
        }
        if (bt != null) {
            bt.setText(p.getDiscription());
        }
    }
    return v;
}

@Override
public Filter getFilter() {
    if (mFilter == null) {
        mFilter = new ItemsFilter(this);
    }
    return mFilter;
}

public List&lt;Poi&gt; getValuesPoi() {
    return valuesPoi;
}


public List&lt;Poi&gt; getFilteredPoi() {
    return filteredPoi;

}
</code></pre>

<p>}</p>

<p>To show the complete list <code>onStart()</code>  i insert the a little "hack" in the <code>onStart()</code>-Method of my activity because the complete list is shown after an input:</p>

<pre><code>if(searchText!=null){
        searchText.setText(" ");
        searchText.setText("");
    }
</code></pre>
