<p>You can try this.</p>

<p>FOR xml PART DO THIS:</p>

<pre><code>Put your entire layout data under one Scroll View, For example


    &lt;ScrollView
        android:id="@+id/scrollViewId"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fillViewport="true" &gt;             

        &lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical" &gt;

                &lt;ListView
                    android:id="@+id/list"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content" /&gt; // SAY YOUR FIRST LIST VIEW

                &lt;ListView
                    android:id="@+id/list"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content" /&gt; // SAY YOUR SECONDLIST VIEW

                 // Add your other views as per requirement....

        &lt;/LinearLayout&gt;

    &lt;/ScrollView&gt;
</code></pre>

<p>NOW IN JAVA CLASS DO THE FOLLOWING THING...</p>

<pre><code>  Just add this custom method to your code after setting  adapter to list view
  setListViewHeightBasedOnChildren(listview)
</code></pre>

<p>For Example:</p>

<pre><code>      list = (ListView) findViewById(R.id.listview);
      list.setAdapter(new ArrayAdapter&lt;String&gt; 
                      (MainActivity.this,android.R.layout.simple_list_item_1,name));
      setListViewHeightBasedOnChildren(list);
</code></pre>

<p>Do it same for second list view too.</p>

<p>Here is body of setListViewHeightBasedOnChildren METHOD</p>

<pre><code>   public static void setListViewHeightBasedOnChildren(ListView listView) 
{
    ListAdapter listAdapter = listView.getAdapter();
    if (listAdapter == null)
        return;

    int desiredWidth = MeasureSpec.makeMeasureSpec(listView.getWidth(), MeasureSpec.UNSPECIFIED);
    int totalHeight=0;
    View view = null;

    for (int i = 0; i &lt; listAdapter.getCount(); i++) 
    {
        view = listAdapter.getView(i, view, listView);

        if (i == 0)
            view.setLayoutParams(new ViewGroup.LayoutParams(desiredWidth,  
                                      LayoutParams.MATCH_PARENT));

        view.measure(desiredWidth, MeasureSpec.UNSPECIFIED);
        totalHeight += view.getMeasuredHeight();

    }

    ViewGroup.LayoutParams params = listView.getLayoutParams();
    params.height = totalHeight + ((listView.getDividerHeight()) * (listAdapter.getCount()));

    listView.setLayoutParams(params);
    listView.requestLayout();

}
</code></pre>

<p>Hope it works for you.</p>
