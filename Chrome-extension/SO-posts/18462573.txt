<p>You're attempting to build an alertDialog with the <code>getApplicationContext().</code>
You need to pass it the activities context.</p>

<p>try</p>

<pre><code>private class ApplicationLauncher implements
            AdapterView.OnItemClickListener {

        Context context;

        public ApplicationLauncher(Context context){
          this.context = context;
        }
        @Override
        public void onItemClick(final AdapterView parent, View v,
                final int position, long id) {
            // //////////////////////////////////////////////////////////
            AlertDialog.Builder builder = new AlertDialog.Builder(
                   context);
            builder.setCancelable(true);
            builder.setTitle("TestsAuthen");
            builder.setInverseBackgroundForced(true);
            builder.setPositiveButton("Yes",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            ApplicationInfo app = (ApplicationInfo) parent
                                    .getItemAtPosition(position);
                            startActivity(app.intent);
                        }
                    });
            builder.setNegativeButton("No",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            dialog.dismiss();
                        }
                    });
            AlertDialog alert = builder.create();
            alert.show();

            // //////////////////
        }
    }
</code></pre>

<p>Now simply pass your context <code>this</code> to the constructor like</p>

<pre><code>  new ApplicationLauncher(this);
</code></pre>
