<p>So here is the SOLUTION</p>

<p>android.support.v4.widget.DrawerLayout is an amazing UI Element in the Android History. Suppose you've two ChildViews in android.support.v4.widget.DrawerLayout. Then the First Child is the LEFT DRAWER and NEXT CHILD IS THE RIGHT DRAWER</p>

<p>Here's a sample, read code carefully and understand the structure.</p>

<pre><code>&lt;android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res/com.rh.bookmany"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;


    &lt;!--What ever your want in the Right drawer, put it in  below RelativeLayout --&gt;

    &lt;RelativeLayout
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:background="@color/white" &gt;

        &lt;!-- TO SHOW FRAGMENTS --&gt;

        &lt;FrameLayout
            android:id="@+id/mFragmentContainer"
            android:layout_width="match_parent"
            android:layout_height="match_parent" /&gt;

    &lt;/RelativeLayout&gt;





    &lt;!--What ever your want in the LEFT drawer, put it in  below RelativeLayout --&gt;

    &lt;!-- LEFT DRAWER --&gt;

    &lt;RelativeLayout
        android:id="@+id/whatYouWantInLeftDrawer"
        android:layout_width="240dp"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:background="@android:color/black" &gt;

        &lt;!-- Cover or Banner --&gt;

        &lt;RelativeLayout
            android:id="@+id/rlBanner"
            android:layout_width="match_parent"
            android:layout_height="150dp"
            android:orientation="vertical" &gt;

            &lt;!-- Cover Pic Container --&gt;
            &lt;RelativeLayout 
                android:layout_width="match_parent"
                android:layout_height="150dp"
                &gt;
                &lt;!-- Cover Picture --&gt;
                &lt;ImageView
                android:id="@+id/ivCoverPic"
                android:layout_width="match_parent"
                android:layout_height="150dp"
                android:contentDescription="@string/dummy_desc"
                android:scaleType="centerCrop"
                android:src="@drawable/skrillex" /&gt;

                &lt;!-- Tint --&gt;
                &lt;LinearLayout
                    android:orientation="vertical"
                    android:id="@+id/llCoverTint" 
                    android:layout_height="150dp"
                    android:layout_width="match_parent"
                    &gt;&lt;/LinearLayout&gt;

            &lt;/RelativeLayout&gt;

            &lt;!-- Profile Pic Container --&gt;
            &lt;LinearLayout
                android:id="@+id/llProfilePicContainer"
                android:layout_width="65dp"
                android:layout_height="65dp"
                android:layout_alignParentBottom="true"
                android:layout_alignParentLeft="true"
                android:layout_marginBottom="5dp"
                android:layout_marginLeft="5dp"
                android:layout_marginRight="7dp"
                android:orientation="vertical" &gt;

                 &lt;com.rh.bookmany.view.MLRoundedImageView
                        android:id="@+id/civProfilePic"
                        android:src="@drawable/tony"
                        android:layout_height="65dp"
                        android:layout_width="65dp"
                        /&gt;

            &lt;/LinearLayout&gt;

            &lt;TextView
                android:id="@+id/tvUserEmail"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_alignLeft="@+id/tvUserName"
                android:layout_below="@+id/tvUserName"
                android:textColor="@color/white"
                android:textSize="12sp" /&gt;

            &lt;TextView
                android:id="@+id/tvUserName"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_alignTop="@+id/llProfilePicContainer"
                android:layout_marginTop="10dp"
                android:layout_toRightOf="@+id/llProfilePicContainer"
                android:textColor="@color/white"
                android:textSize="15sp" /&gt;

        &lt;/RelativeLayout&gt;

        &lt;!-- ListMenu --&gt;

        &lt;ListView
            android:id="@+id/navigation_menu_container"
            android:layout_width="240dp"
            android:layout_height="match_parent"
            android:layout_below="@id/rlBanner"
            android:layout_gravity="start"
            android:background="@color/nyc_black"
            android:choiceMode="singleChoice"
            android:divider="@color/border_black"
            android:dividerHeight="@dimen/divider_height"
            android:listSelector="@drawable/item_selector" &gt;
        &lt;/ListView&gt;

    &lt;/RelativeLayout&gt;

&lt;/android.support.v4.widget.DrawerLayout&gt;
</code></pre>

<p><strong>MLRoundedImageView.java</strong></p>

<pre><code>package your.package.name;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.util.Log;
import android.widget.ImageView;

public class MLRoundedImageView extends ImageView {

    public MLRoundedImageView(Context context) {
        super(context);
    }

    public MLRoundedImageView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public MLRoundedImageView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    @Override
    protected void onDraw(Canvas canvas) {

        Log.d("X","MLRoundedImageView ONDRAW");

        Drawable drawable = getDrawable();

        if (drawable == null) {
            return;
        }

        if (getWidth() == 0 || getHeight() == 0) {
            return;
        }
        Bitmap b = ((BitmapDrawable) drawable).getBitmap();
        Bitmap bitmap = b.copy(Bitmap.Config.ARGB_8888, true);

        int w = getWidth(), h = getHeight();

        Bitmap roundBitmap = getCroppedBitmap(bitmap, w);
        canvas.drawBitmap(roundBitmap, 0, 0, null);

    }

    public static Bitmap getCroppedBitmap(Bitmap bmp, int radius) {
        Bitmap sbmp;

        if (bmp.getWidth() != radius || bmp.getHeight() != radius) {
            float smallest = Math.min(bmp.getWidth(), bmp.getHeight());
            float factor = smallest / radius;
            sbmp = Bitmap.createScaledBitmap(bmp, (int)(bmp.getWidth() / factor), (int)(bmp.getHeight() / factor), false);
        } else {
            sbmp = bmp;
        }

        Bitmap output = Bitmap.createBitmap(radius, radius,
                Config.ARGB_8888);
        Canvas canvas = new Canvas(output);

        final int color = 0xffa19774;
        final Paint paint = new Paint();
        final Rect rect = new Rect(0, 0, radius, radius);

        paint.setAntiAlias(true);
        paint.setFilterBitmap(true);
        paint.setDither(true);
        canvas.drawARGB(0, 0, 0, 0);
        paint.setColor(Color.parseColor("#BAB399"));
        canvas.drawCircle(radius / 2 + 0.7f,
                radius / 2 + 0.7f, radius / 2 + 0.1f, paint);
        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
        canvas.drawBitmap(sbmp, rect, rect, paint);

        return output;
    }

}
</code></pre>

<p>The above code can produce exactly the below output.</p>

<ul>
<li>Note that with ONLY XML, you can't make something like this. though you have to do something in your Activity with JAVA.*</li>
</ul>

<p><img src="http://i.stack.imgur.com/tIbnj.png" alt="enter image description here"></p>
