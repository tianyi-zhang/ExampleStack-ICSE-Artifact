<p>I would suggest using volley instead, here's a good and easy tutorial: <a href="http://www.itsalif.info/content/android-volley-tutorial-http-get-post-put" rel="nofollow">http://www.itsalif.info/content/android-volley-tutorial-http-get-post-put</a></p>

<p>But here is how I used httpURLConnection:</p>

<pre><code>public String executePost() {
    URL url;
    HttpURLConnection connection = null;
    try {
        //Create connection
        url = new URL(/*URL HERE*/);

    String urlParameters = "/*THE PARAMS. YOU KNOW THIS ;) */";

    connection = (HttpURLConnection) url.openConnection();
    connection.setRequestMethod("POST");
    connection.setRequestProperty("Content-Type",
            "application/x-www-form-urlencoded");

    connection.setRequestProperty("Content-Length", "" +
            Integer.toString(urlParameters.getBytes().length));
    connection.setRequestProperty("Content-Language", "en-US");

    connection.setUseCaches(false);
    connection.setDoInput(true);
    connection.setDoOutput(true);

    //Send request
    DataOutputStream wr = new DataOutputStream(
            connection.getOutputStream());
    wr.writeBytes(urlParameters);
    wr.flush();
    wr.close();

    //Get Response
    InputStream is = connection.getInputStream();
    BufferedReader rd = new BufferedReader(new InputStreamReader(is));
    String line;
    StringBuffer response = new StringBuffer();
    while ((line = rd.readLine()) != null) {
        response.append(line);
        response.append('\r');
    }
    rd.close();
    return response.toString();

} catch (Exception e) {

    e.printStackTrace();
    return null;

} finally {

    if (connection != null) {
        connection.disconnect();
    }
}
}
</code></pre>
