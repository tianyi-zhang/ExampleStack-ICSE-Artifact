<p>You can take a look at <a href="https://android.googlesource.com/platform/frameworks/base/+/refs/heads/master/core/java/android/app/Activity.java" rel="nofollow"><code>Activity</code>'s source code</a>.</p>

<p>For example, the <a href="http://developer.android.com/reference/android/app/Activity.html#onCreate%28android.os.Bundle%29" rel="nofollow"><code>onCreate()</code></a> method (line 879):</p>

<pre><code>protected void onCreate(Bundle savedInstanceState) {
    if (DEBUG_LIFECYCLE) Slog.v(TAG, "onCreate " + this + ": " + savedInstanceState);
    if (mLastNonConfigurationInstances != null) {
        mAllLoaderManagers = mLastNonConfigurationInstances.loaders;
    }
    if (mActivityInfo.parentActivityName != null) {
        if (mActionBar == null) {
            mEnableDefaultActionBarUp = true;
        } else {
            mActionBar.setDefaultDisplayHomeAsUpEnabled(true);
        }
    }
    if (savedInstanceState != null) {
        Parcelable p = savedInstanceState.getParcelable(FRAGMENTS_TAG);
        mFragments.restoreAllState(p, mLastNonConfigurationInstances != null
                ? mLastNonConfigurationInstances.fragments : null);
    }
    mFragments.dispatchCreate();
    getApplication().dispatchActivityCreated(this, savedInstanceState);
    mCalled = true;
}
</code></pre>

<hr>

<p>When you extend <code>Activity</code> with somthing like:</p>

<pre><code>public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    // Some stuff
}
</code></pre>

<p>You actually call the above method by calling <code>super.onCreate()</code>.</p>

<p>Why is it required? It's a requirement of the Android platform, as the <code>onCreate()</code> method performs essential operations for the activity's lifecycle.</p>
