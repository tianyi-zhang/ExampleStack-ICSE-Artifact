<p>Declare a static <code>sourceBitmap</code> and do this only once: <code>Bitmap sourceBitmap = view.getDrawingCache();</code> let's say in <code>onResume()</code> of your activity (or when you change the image from ImageView).</p>

<p>And your function should be:</p>

<pre><code>void setImageColor(RGBColor rgbcolor, ImageView view, Bitmap sourceBitmap) {
    if (sourceBitmap == null) return;

    float r = (float) rgbcolor.getR(),
          g = (float) rgbcolor.getG(),
          b = (float) rgbcolor.getB();

    Log.v("R:G:B", r + ":" + g + ":" + b);       

    float[] colorTransform =
    {       
        r/255, 0    , 0    , 0, 0,  // R color
        0    , g/255, 0    , 0, 0,  // G color
        0    , 0    , b/255, 0, 0,  // B color
        0    , 0    , 0    , 1, 0
    };

    ColorMatrix colorMatrix = new ColorMatrix();
    colorMatrix.setSaturation(0f); // Remove colour 
    colorMatrix.set(colorTransform); 

    ColorMatrixColorFilter colorFilter = new ColorMatrixColorFilter(colorMatrix);

    Paint paint = new Paint();
    paint.setColorFilter(colorFilter);   

    Bitmap mutableBitmap = sourceBitmap.copy(Bitmap.Config.ARGB_8888, true);
    view.setImageBitmap(mutableBitmap);

    Canvas canvas = new Canvas(mutableBitmap);
    canvas.drawBitmap(mutableBitmap, 0, 0, paint);      
}
</code></pre>

<p>This way you will hold the unaltered image and apply the filters on the original.</p>
