<p>After doing tons of research, here's the deal:
<br/>
<br/>
Yes, these messages that you get are the broken down pieces of a larger message.
<br/>
<br/>
The array of <code>SmsMessage</code>s contains messages that may or may not be related to each other (different senders). Why Android mixes them up like that? I don't know. You should always loop through them and group them by <code>SmsMessage.getDisplayOriginatingAddress()</code>. Then, for each group of messages, append their bodies from <code>SmsMessage.getDisplayMessageBody()</code> to reconstruct the larger message.
<br/>
<br/>
Here's an example from the GTalk app source (thanks @hungryghost):</p>

<pre><code>private static Map&lt;String, String&gt; RetrieveMessages(Intent intent) {
    Map&lt;String, String&gt; msg = null; 
    SmsMessage[] msgs;
    Bundle bundle = intent.getExtras();

    if (bundle != null &amp;&amp; bundle.containsKey("pdus")) {
        Object[] pdus = (Object[]) bundle.get("pdus");

        if (pdus != null) {
            int nbrOfpdus = pdus.length;
            msg = new HashMap&lt;String, String&gt;(nbrOfpdus);
            msgs = new SmsMessage[nbrOfpdus];

            // There can be multiple SMS from multiple senders, there can be a maximum of nbrOfpdus different senders
            // However, send long SMS of same sender in one message
            for (int i = 0; i &lt; nbrOfpdus; i++) {
                msgs[i] = SmsMessage.createFromPdu((byte[])pdus[i]);

                String originatinAddress = msgs[i].getDisplayOriginatingAddress();

                // Check if index with number exists                    
                if (!msg.containsKey(originatinAddress)) { 
                    // Index with number doesn't exist                                               
                    // Save string into associative array with sender number as index
                    msg.put(msgs[i].getOriginatingAddress(), msgs[i].getDisplayMessageBody()); 

                } else {    
                    // Number has been there, add content but consider that
                    // msg.get(originatinAddress) already contains sms:sndrNbr:previousparts of SMS, 
                    // so just add the part of the current PDU
                    String previousparts = msg.get(originatinAddress);
                    String msgString = previousparts + msgs[i].getMessageBody();
                    msg.put(originatinAddress, msgString);
                }
            }
        }
    }

    return msg;
}
</code></pre>
