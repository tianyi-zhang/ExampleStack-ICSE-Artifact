<p>All above solutions didn't work for me, then I found this <a href="http://myshittycode.com/2014/02/10/java-properly-indenting-xml-string/" rel="nofollow">http://myshittycode.com/2014/02/10/java-properly-indenting-xml-string/</a></p>

<p>The clue is remove whitespaces with XPath</p>

<pre><code>    String xml = "&lt;root&gt;" +
             "\n   " +
             "\n&lt;name&gt;Coco Puff&lt;/name&gt;" +
             "\n        &lt;total&gt;10&lt;/total&gt;    &lt;/root&gt;";

try {
    Document document = DocumentBuilderFactory.newInstance()
            .newDocumentBuilder()
            .parse(new InputSource(new ByteArrayInputStream(xml.getBytes("utf-8"))));

    XPath xPath = XPathFactory.newInstance().newXPath();
    NodeList nodeList = (NodeList) xPath.evaluate("//text()[normalize-space()='']",
                                                  document,
                                                  XPathConstants.NODESET);

    for (int i = 0; i &lt; nodeList.getLength(); ++i) {
        Node node = nodeList.item(i);
        node.getParentNode().removeChild(node);
    }

    Transformer transformer = TransformerFactory.newInstance().newTransformer();
    transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
    transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "yes");
    transformer.setOutputProperty(OutputKeys.INDENT, "yes");
    transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "4");

    StringWriter stringWriter = new StringWriter();
    StreamResult streamResult = new StreamResult(stringWriter);

    transformer.transform(new DOMSource(document), streamResult);

    System.out.println(stringWriter.toString());
}
catch (Exception e) {
    e.printStackTrace();
}
</code></pre>
