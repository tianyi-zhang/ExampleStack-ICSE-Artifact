<blockquote>
  <p>i think every multiplication a new vector is created</p>
</blockquote>

<p>Yes, it is. <a href="http://grepcode.com/file/repo1.maven.org/maven2/org.apache.commons/commons-math3/3.0/org/apache/commons/math3/linear/Array2DRowRealMatrix.java#Array2DRowRealMatrix.multiply%28org.apache.commons.math3.linear.Array2DRowRealMatrix%29" rel="nofollow">Source code</a> of <code>multiply()</code>:</p>

<pre><code>public Array2DRowRealMatrix multiply(final Array2DRowRealMatrix m) {
        // Safety check.
        MatrixUtils.checkMultiplicationCompatible(this, m);

        final int nRows = this.getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = this.getColumnDimension();

        final double[][] outData = new double[nRows][nCols];
        // Will hold a column of "m".
        final double[] mCol = new double[nSum];
        final double[][] mData = m.data;

        // Multiply.
        for (int col = 0; col &lt; nCols; col++) {
            // Copy all elements of column "col" of "m" so that
            // will be in contiguous memory.
            for (int mRow = 0; mRow &lt; nSum; mRow++) {
                mCol[mRow] = mData[mRow][col];
            }

            for (int row = 0; row &lt; nRows; row++) {
                final double[] dataRow = data[row];
                double sum = 0;
                for (int i = 0; i &lt; nSum; i++) {
                    sum += dataRow[i] * mCol[i];
                }
                outData[row][col] = sum;
            }
        }

        return new Array2DRowRealMatrix(outData, false);
    }
</code></pre>

<p>Input vector <code>m</code> is copied, as stated in a comment <code>Copy all elements of column "col" of "m" so that will be in contiguous memory</code>.</p>

<blockquote>
  <p>Can i reassign the old one?</p>
</blockquote>

<p>Yes, you can perform the multiplication by yourself, writing two loops. Use <code>getData()</code> to get a reference to the underlying <code>double[][] data</code>.</p>
