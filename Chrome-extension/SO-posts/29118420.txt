<p>I found an example here:</p>

<p><a href="http://my.oschina.net/uniquejava/blog/87573" rel="nofollow">http://my.oschina.net/uniquejava/blog/87573</a></p>

<p>I modified it slightly so it clears the <code>Combo</code> if no match was found:</p>

<pre><code>private static String[] items   = new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };

public static void main(String[] args)
{
    Display display = new Display();
    Shell shell = new Shell(display);
    shell.setText("StackOverflow");
    shell.setLayout(new FillLayout());

    Combo combo = new Combo(shell, SWT.BORDER);
    for (int i = 0; i &lt; items.length; i++)
    {
        combo.add(items[i]);
    }

    addAutoCompleteFeature(combo);

    shell.pack();
    shell.open();
    while (!shell.isDisposed())
    {
        if (!display.readAndDispatch())
        {
            display.sleep();
        }
    }
    display.dispose();
}

public static void addAutoCompleteFeature(Combo combo)
{
    // Add a key listener
    combo.addKeyListener(new KeyAdapter()
    {
        public void keyReleased(KeyEvent keyEvent)
        {
            Combo cmb = ((Combo) keyEvent.getSource());
            setClosestMatch(cmb);
        }

        // Move the highlight back by one character for backspace
        public void keyPressed(KeyEvent keyEvent)
        {
            if (keyEvent.keyCode == SWT.BS)
            {
                Combo cmb = ((Combo) keyEvent.getSource());
                Point pt = cmb.getSelection();
                cmb.setSelection(new Point(Math.max(0, pt.x - 1), pt.y));
            }
        }

        private void setClosestMatch(Combo combo)
        {
            String str = combo.getText();
            String[] cItems = combo.getItems();
            // Find Item in Combo Items. If full match returns index
            int index = -1;
            for (int i = 0; i &lt; cItems.length; i++)
            {
                if (cItems[i].toLowerCase().startsWith(str.toLowerCase()))
                {
                    index = i;
                    break;
                }
            }

            if (index != -1)
            {
                Point pt = combo.getSelection();
                combo.select(index);
                combo.setText(cItems[index]);
                combo.setSelection(new Point(pt.x, cItems[index].length()));
            }
            else
            {
                combo.setText("");
            }
        }
    });
}
</code></pre>
