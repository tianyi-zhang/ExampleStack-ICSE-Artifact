<p>Widget can't actually respond to clicks because it's not a separate process running. But it can start service to process your command:</p>

<pre><code>public class TestWidget extends AppWidgetProvider {
  public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
        final int N = appWidgetIds.length;

        // Perform this loop procedure for each App Widget that belongs to this provider
        for (int i=0; i&lt;N; i++) {
            int appWidgetId = appWidgetIds[i];

            // Create an Intent to launch UpdateService
            Intent intent = new Intent(context, UpdateService.class);
            PendingIntent pendingIntent = PendingIntent.getService(context, 0, intent, 0);

            // Get the layout for the App Widget and attach an on-click listener to the button
            RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.appwidget_provider_layout);
            views.setOnClickPendingIntent(R.id.button, pendingIntent);

            // Tell the AppWidgetManager to perform an update on the current App Widget
            appWidgetManager.updateAppWidget(appWidgetId, views);
        }
    }

    public static class UpdateService extends Service {
        @Override
        public int onStartCommand(Intent intent, int flags, int startId) {
          //process your click here
          return START_NOT_STICKY;
        }
    }
}
</code></pre>

<p>You should also register the new service in your manifest file:</p>

<pre><code>&lt;service android:name="com.xxx.yyy.TestWidget$UpdateService"&gt;
</code></pre>

<p>You can find another example of UpdateService implementation in Wiktionary sample in SDK</p>

<p>And here's another good approach <a href="http://stackoverflow.com/questions/2748590/clickable-widgets-in-android/2748759#2748759">Clickable widgets in android</a></p>
