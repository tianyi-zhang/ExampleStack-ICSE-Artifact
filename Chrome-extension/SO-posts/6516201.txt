<p>When developing applications for mobile devices using Java, you may require mathematical methods not available on your particular Java VM. You can use this code. It will helps you.</p>

<pre><code>public double pow(double x, double y)
    {
        return powTaylor(x,y);
    }

    public double powSqrt(double x, double y)
    {
        int den = 1024, num = (int)(y*den), iterations = 10;
        double n = Double.MAX_VALUE;

        while( n &gt;= Double.MAX_VALUE &amp;&amp; iterations &gt; 1)
        {
            n = x;

            for( int i=1; i &lt; num; i++ )n*=x;

            if( n &gt;= Double.MAX_VALUE ) 
            {
                iterations--;
                den = (int)(den / 2);
                num = (int)(y*den);
            }
        }   

        for( int i = 0; i &lt;iterations; i++ )n = Math.sqrt(n);

        return n;
    }

    public double powDecay(double x, double y)
    {
        int num, den = 1001, s = 0;
        double n = x, z = Double.MAX_VALUE;

        for( int i = 1; i &lt; s; i++)n *= x;

        while( z &gt;= Double.MAX_VALUE )
        {
            den -=1;
            num = (int)(y*den);
            s = (num/den)+1;

            z = x; 
            for( int i = 1; i &lt; num; i++ )z *= x;
        }

        while( n &gt; 0 )
        {
            double a = n;

            for( int i = 1; i &lt; den; i++ )a *= n;

            if( (a-z) &lt; .00001 || (z-a) &gt; .00001 ) return n;

            n *= .9999;                          
        }

        return -1.0;
    }

    double powTaylor(double a, double b)
    {
        boolean gt1 = (Math.sqrt((a-1)*(a-1)) &lt;= 1)? false:true; 
        int oc = -1,iter = 30;
        double p = a, x, x2, sumX, sumY;

        if( (b-Math.floor(b)) == 0 )
        {
            for( int i = 1; i &lt; b; i++ )p *= a;
            return p;
        }

        x = (gt1)?(a /(a-1)):(a-1);
        sumX = (gt1)?(1/x):x;

        for( int i = 2; i &lt; iter; i++ )
        {
            p = x;
            for( int j = 1; j &lt; i; j++)p *= x;

            double xTemp = (gt1)?(1/(i*p)):(p/i);

            sumX = (gt1)?(sumX+xTemp):(sumX+(xTemp*oc));

            oc *= -1;
        }

        x2 = b * sumX;
        sumY = 1+x2;

        for( int i = 2; i &lt;= iter; i++ )
        {
            p = x2;
            for( int j = 1; j &lt; i; j++)p *= x2;

            int yTemp = 2;
            for( int j = i; j &gt; 2; j-- )yTemp *= j;

            sumY += p/yTemp;
        }

        return sumY;
    }
</code></pre>
