<p>You can call
<a href="http://developer.android.com/reference/android/content/Context.html#unregisterReceiver%28android.content.BroadcastReceiver%29" rel="nofollow">unregisterReceiver (BroadcastReceiver receiver)</a> to unregister the broadcast receivers. The context you have received as part of <code>sendSMS</code> should be stored and then later the same can be used to unregister the receiver.</p>

<p><strong>EDIT:</strong></p>

<pre><code>private static Context mContext = null;

static BroadcastReceiver mSentReceiver = new BroadcastReceiver(){
    @Override
    public void onReceive(Context arg0, Intent arg1) {
        switch (getResultCode()) {
        case Activity.RESULT_OK:
            Toast.makeText(mContext, "SMS sent", 
                    Toast.LENGTH_SHORT).show();
            break;
        case SmsManager.RESULT_ERROR_GENERIC_FAILURE:
            Toast.makeText(mContext, "Generic failure", 
                    Toast.LENGTH_SHORT).show();
            break;
        case SmsManager.RESULT_ERROR_NO_SERVICE:
            Toast.makeText(mContext, "No cellular network service Available", 
                    Toast.LENGTH_SHORT).show();
            break;
        case SmsManager.RESULT_ERROR_NULL_PDU:
            Toast.makeText(mContext, "Null PDU", 
                    Toast.LENGTH_SHORT).show();
            break;
        case SmsManager.RESULT_ERROR_RADIO_OFF:
            Toast.makeText(mContext, "Radio off", 
                    Toast.LENGTH_SHORT).show();
            break;
        }
    }

};

static BroadcastReceiver mDeleiveredReceiver = new BroadcastReceiver(){
    @Override
    public void onReceive(Context arg0, Intent arg1) {
        switch (getResultCode()) {
        case Activity.RESULT_OK:
            Toast.makeText(mContext, "SMS delivered", 
                    Toast.LENGTH_SHORT).show();
            break;
        case Activity.RESULT_CANCELED:
            Toast.makeText(mContext, "SMS not delivered", 
                    Toast.LENGTH_SHORT).show();
            break;                        
        }
    }
};

public static void sendSMS(final Context context,String phoneNumber, String message) {
    if(mContext == null) {
        mContext = context;
        mContext.registerReceiver(mSentReceiver, new IntentFilter(SENT));
        mContext.registerReceiver(mDeleiveredReceiver, new IntentFilter(DELIVERED));
    }

    // rest of your code ....
}

// this method should be called whenever you want to remove the receivers
public static void removeReceivers() {
    mContext.unregisterReceiver(mSentReceiver);
    mContext.unregisterReceiver(mDeleiveredReceiver);
    mContext = null;
}
</code></pre>
