<p>The question has been answered. But still I would like to post the whole answer for other users who face difficulty to do so.</p>

<p>Here are the screenshots of the final solution </p>

<p><img src="http://i.stack.imgur.com/I6Bhb.png" alt="Toolbarr"></p>

<p><img src="http://i.stack.imgur.com/qZnL6.png" alt="Navigation Drawer overlapping action Bar/ toolbar"></p>

<ol>
<li><p>Java Class</p>

<pre><code> public class MainActivity extends ActionBarActivity {
 private String[] mPlanetTitles = { "a", "b", "c", "d" };
    private DrawerLayout mDrawerLayout;
    private ListView mDrawerList;
    private ActionBarDrawerToggle mDrawerToggle;

@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
setSupportActionBar(toolbar);

getSupportActionBar().setDisplayHomeAsUpEnabled(true);
getSupportActionBar().setHomeButtonEnabled(true);
mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
mDrawerList = (ListView) findViewById(R.id.left_drawer);

// Set the adapter for the list view
mDrawerList.setAdapter(new ArrayAdapter&lt;String&gt;(this,
        R.layout.list_item1, mPlanetTitles));
// Set the list's click listener
mDrawerList.setOnItemClickListener(new DrawerItemClickListener());
mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout,
        R.string.action_settings, R.string.action_settings) {

    /** Called when a drawer has settled in a completely closed state. */
    public void onDrawerClosed(View view) {
        super.onDrawerClosed(view);
        getSupportActionBar().setTitle("OPEN");
        invalidateOptionsMenu(); // creates call to
                                    // onPrepareOptionsMenu()
    }

    /** Called when a drawer has settled in a completely open state. */
    public void onDrawerOpened(View drawerView) {
        super.onDrawerOpened(drawerView);
        getSupportActionBar().setTitle("CLOSE");
        invalidateOptionsMenu(); // creates call to
                                    // onPrepareOptionsMenu()
    }
};

// Set the drawer toggle as the DrawerListener
mDrawerLayout.setDrawerListener(mDrawerToggle);
}

private class DrawerItemClickListener implements
    ListView.OnItemClickListener {
@Override
public void onItemClick(AdapterView parent, View view, int position,
        long id) {

    TextView t = (TextView) view.findViewById(R.id.tvExtra);
    Log.e("text", t.getText().toString());
    startActivity(new Intent(MainActivity.this,
            JavaDrawerActivity.class));
}
}

@Override
public boolean onPrepareOptionsMenu(Menu menu) {
// If the nav drawer is open, hide action items related to the content
// view
// boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
// menu.findItem(R.id.action_websearch).setVisible(!drawerOpen);
return super.onPrepareOptionsMenu(menu);
}

@Override
public boolean onCreateOptionsMenu(Menu menu) {
// Inflate the menu; this adds items to the action bar if it is present.
getMenuInflater().inflate(R.menu.main, menu);
return true;
}

 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
// Handle action bar item clicks here. The action bar will
// automatically handle clicks on the Home/Up button, so long
// as you specify a parent activity in AndroidManifest.xml.
int id = item.getItemId();
if (id == R.id.action_settings) {
    return true;
}
if (mDrawerToggle.onOptionsItemSelected(item)) {
    return true;
}
return super.onOptionsItemSelected(item);
}

@Override
protected void onPostCreate(Bundle savedInstanceState) {
super.onPostCreate(savedInstanceState);
// Sync the toggle state after onRestoreInstanceState has occurred.
mDrawerToggle.syncState();
}

@Override
public void onConfigurationChanged(Configuration newConfig) {
super.onConfigurationChanged(newConfig);
mDrawerToggle.onConfigurationChanged(newConfig);
}

}
</code></pre></li>
<li><p>XML</p>

<pre><code>  &lt;android.support.v4.widget.DrawerLayout        xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
   android:id="@+id/drawer_layout"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   tools:context="com.example.drawermenu.MainActivity" &gt;

  &lt;FrameLayout
   android:id="@+id/content_frame"
   android:layout_width="match_parent"
    android:background="#FFFFFF"
   android:layout_height="match_parent" &gt;

&lt;RelativeLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;android.support.v7.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#2196F3"
        android:minHeight="?attr/actionBarSize" &gt;
    &lt;/android.support.v7.widget.Toolbar&gt;

    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textColor="#000000"
        android:layout_below="@+id/toolbar"
        android:text="@string/hello_world" /&gt;
&lt;/RelativeLayout&gt;
&lt;/FrameLayout&gt;

    &lt;LinearLayout
     android:layout_width="240dp"
     android:layout_height="match_parent"
     android:layout_gravity="start"
     android:background="#111"
     android:orientation="vertical" &gt;

&lt;ListView
    android:id="@+id/left_drawer"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:choiceMode="singleChoice"
    android:divider="@android:color/transparent"
    android:dividerHeight="0dp" /&gt;

&lt;ImageView
    android:id="@+id/imageView1"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_gravity="center_horizontal"
    android:src="@drawable/ic_launcher" /&gt;
   &lt;/LinearLayout&gt;

&lt;/android.support.v4.widget.DrawerLayout&gt;
</code></pre></li>
<li><p>Set a style for activity</p>

<pre><code> &lt;style name="AppTheme" parent="Theme.AppCompat"&gt;
&lt;item name="android:windowNoTitle"&gt;true&lt;/item&gt;
&lt;item name="windowActionBar"&gt;false&lt;/item&gt;
&lt;/style&gt;
</code></pre></li>
<li><p>Finally set the style in manifest</p>

<pre><code>  &lt;activity
    android:name=".MainActivity"
    android:theme="@style/AppTheme" &gt;

    &lt;intent-filter&gt;
        &lt;action android:name="android.intent.action.MAIN" /&gt;

        &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
    &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre></li>
</ol>

<p>And Voila you are all set!!!</p>
