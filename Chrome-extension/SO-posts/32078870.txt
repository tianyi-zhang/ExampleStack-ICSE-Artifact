<p>I did this in one way like ,</p>

<ol>
<li><p>I converted the texture image into bitmap using glreadpixles() method</p></li>
<li><p>I then saved the bitmap to the sd card</p></li>
</ol>

<p>Texture to bitmap code </p>

<pre><code>public static Bitmap SavePixels(int x, int y, int w, int h){
    int b[]=new int[w*(y+h)];
    int bt[]=new int[w*h];
    IntBuffer ib = IntBuffer.wrap(b);
    ib.position(0);
    GLES20.glReadPixels(0, 0, w, h, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_BYTE, ib);

    for(int i=0, k=0; i&lt;h; i++, k++)
    {//remember, that OpenGL bitmap is incompatible with Android bitmap
        //and so, some correction need.
        for(int j=0; j&lt;w; j++)
        {
            int pix=b[i*w+j];
            int pb=(pix&gt;&gt;16)&amp;0xff;
            int pr=(pix&lt;&lt;16)&amp;0x00ff0000;
            int pix1=(pix&amp;0xff00ff00) | pr | pb;
            bt[(h-k-1)*w+j]=pix1;
        }
    }

    Bitmap sb=Bitmap.createBitmap(bt, w, h, Bitmap.Config.ARGB_8888);
    return sb;
}
</code></pre>

<p>Bitmap to internal storage code,</p>

<pre><code> public  static void saveImage(Bitmap finalBitmap) {

    File myDir=new File("/sdcard/saved_images");
    myDir.mkdirs();
    Random generator = new Random();
    int n = 10000;
    n = generator.nextInt(n);
    String fname = "Image-"+ n +".jpg";
    File file = new File (myDir, fname);
    if (file.exists ()) file.delete ();
    try {
        FileOutputStream out = new FileOutputStream(file);
        finalBitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);
        out.flush();
        out.close();

    } catch (Exception e) {
        e.printStackTrace();
    }
}
</code></pre>
