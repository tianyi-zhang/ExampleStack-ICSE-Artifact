<p>Make an interface in your project first</p>

<pre><code>public interface mMyInterface {

void processFinish(String response);
}
</code></pre>

<p>Then in your AsyncTaskClass do the following modifications</p>

<pre><code>public class ConfigParser extends AsyncTask&lt;Void, Void,Void &gt; {


        public mMyInterface delegate=null;

private String url="http://www.nasa.gov/rss/dyn/image_of_the_day.rss";

@Override
protected Void doInBackground(Void... params) {
            try {
            //Log.i("inJSONPARSERCLASS","success");

            DefaultHttpClient client=new DefaultHttpClient();
            HttpPost post=new HttpPost(url);
            HttpResponse httpResponse=client.execute(post);
            HttpEntity entity=httpResponse.getEntity();

            is=entity.getContent();

        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        catch (Exception e) {
            Log.e("Connection Error", "Error  " + e.toString());
        }

        try {
            BufferedReader reader=new BufferedReader(new InputStreamReader(is, "iso-8859-1"),8);
            StringBuilder sb=new StringBuilder();
            String line=null;

            while((line=reader.readLine())!=null){
                sb.append(line+"\n");
            }
            is.close();
            xml=sb.toString();

        } catch (Exception e) {
            Log.e("Buffer Error", "Error converting result " + e.toString());
        }
        Log.i("main XML",""+xml);
        return xml;
}
@Override
    protected void onPostExecute(String result) {
        // TODO Auto-generated method stub
        super.onPostExecute(result);
        delegate.processFinish(result);


    }
}
</code></pre>

<p>Now in your class which is extending the activity , implement the interface mMyInterface , this will override its method processFinish(String response), now use "response" as a string and pass it to the  class where the parsing is being done</p>

<pre><code>    @Override
    public void processFinish(String response) {
       String xml=response;
       //do SAXparsing stuff here, parse this xml string which contains the whole data u need to             
         parse
         } 
</code></pre>

<p>I hope this hint will work out for you very well. :)</p>
