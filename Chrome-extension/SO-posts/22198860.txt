<p>I've tried your code.
Seems everything works at my laptop (HP EliteBook)
At first I had an error, but I found it was because I needed to run Eclipse as Admin.
But I found that solution on the forum that goes with your book, I suppose.
see: <a href="http://forums.oreilly.com/topic/88039-windows-regcreatekeyex-returned-error-code-5/" rel="nofollow">http://forums.oreilly.com/topic/88039-windows-regcreatekeyex-returned-error-code-5/</a></p>

<p>The only thing I noticed, is that if the loop is running, and I check other sounds, it often does not play these sounds until I click the 'start'-button again.
But that's all.</p>

<h3>EDIT</h3>

<p>I've found a somewhat similar topic. Maybe it's any use to you?
<a href="http://stackoverflow.com/questions/8148898/java-midi-in-mac-osx-broken">Java Midi in Mac OSX Broken?</a></p>

<h3>EDIT</h3>

<p>For refreshing the pattern, afther every selection, I would suggest a change to your code, like this:</p>

<pre><code> public void buildTrack() {
         // this will hold the instruments for each vertical column,
         // in other words, each tick (may have multiple instruments)
         int[] trackList = null;

         sequence.deleteTrack(track);
         track = sequence.createTrack();


       for (int i = 0; i &lt; 16; i++) {
          trackList = new int[16];

          int key = instruments[i];

          for (int j = 0; j &lt; 16; j++ ) {         
                JCheckBox jc = (JCheckBox) checkboxList.get(j + (16*i));

               if ( jc.isSelected()) {
                  trackList[j] = key;
               } else {
                  trackList[j] = 0;
               }       
           } // close inner

        makeTracks(trackList);
      } // close outer

      track.add(makeEvent(192,9,1,0,15)); // - so we always go to full 16 beats 



        try {

            sequencer.setSequence(sequence);  

        } catch(Exception e) {e.printStackTrace();}

       } // close method

  public void buildTrackAndStart() {

    try {

        buildTrack();
        sequencer.setLoopCount(sequencer.LOOP_CONTINUOUSLY);                  
        sequencer.start();
        sequencer.setTempoInBPM(120);
    } catch(Exception e) {e.printStackTrace();}

   } // close method
</code></pre>

<p>And then you need to create a CheckBoxListener:</p>

<pre><code>public class MyCheckboxListener implements ActionListener {
     public void actionPerformed(ActionEvent a) {
         buildTrack();
     }
 }
</code></pre>

<p>Add it to your checkboxes, by adding this line:</p>

<pre><code>c.addActionListener(new MyCheckboxListener());
</code></pre>

<p>To your 'for' block, just before 'setupMidi()'
like this:</p>

<pre><code>for (int i = 0; i &lt; 256; i++) {                    
             JCheckBox c = new JCheckBox();
             c.setSelected(false);
             c.addActionListener(new MyCheckboxListener());
             checkboxList.add(c);
             mainPanel.add(c);            
       } // end loop
</code></pre>

<p>And that should do the trick!</p>
