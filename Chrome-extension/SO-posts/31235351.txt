<p>Your are not encoding it into json see this example will help you its 100% percent working code</p>

<p>Index.php</p>

<pre><code>&lt;?php

   header("Content-Type:application/json");

   include("function.php");

$fname=$_REQUEST['fname'];
$email=$_REQUEST['email'];
$mobile=$_REQUEST['mobile'];
$passwd=$_REQUEST['passwd'];

 $record = fetchrecord($fname,$email,$mobile,$passwd);


         if(empty($record))
         {
           deliverresponse(200,"Record not found",NULL,0);  
         }
         else
         {
           deliverresponse(200,"Record Displayed",$record,1);   
         }


   function deliverresponse($status,$status_message,$data,$success)
   {
         header("HTTP/1.1 $status $status_message");
         $response['status'] = $status;
         $response['status_message'] = $status_message;
          $response['code'] = $code;
          $response['data'] = $data;
          $jsonresponse = json_encode($response);
          echo $jsonresponse;

   }
?&gt;
</code></pre>

<p>Function.php</p>

<pre><code>&lt;?php
        $conn = mysql_connect("localhost", "root", "");

        mysql_select_db('your db name', $conn);

  function fetchrecord($fname,$email,$mobile,$passwd)
  {


     $qur = mysql_query("INSERT INTO `sample` (fname,email,mobile,passwd) VALUES (NULL, '$fname','$email','$mobile','$passwd')") or die ("Query Failed");

     if($qur)
     {
        $msg = "Record Inserted";   

        $user[] = array($msg); 

     }
     else
     {
       $msg = "Record not Inserted";   

        $user[] = array($msg);   
     }
        return $user;

  }
</code></pre>

<p>use Async Class for net threading </p>

<pre><code> public class SignupProcess extends  AsyncTask&lt;String, String, String&gt;

    {
        JSONObject json = new JSONObject();
   private static final String TAG_SUCCESS = "code";
        @Override
        protected void onPreExecute() {

            pDialog = new ProgressDialog(signup.this);
            pDialog.setMessage("Login..");
            pDialog.setIndeterminate(false);
            pDialog.setCancelable(true);
            pDialog.show();

            super.onPreExecute();
        }

        @Override
        protected String doInBackground(String... args) {




            List&lt;NameValuePair&gt; pair = new ArrayList&lt;&gt;();
            pair.add(new BasicNameValuePair("name", name));
            pair.add(new BasicNameValuePair("email", email));
            pair.add(new BasicNameValuePair("password", mobile));
            pair.add(new BasicNameValuePair("status",String,psswd);


            json = JSONParser.makeHttpRequest("http://xxxxxxx","GET", pair);

            Log.d("Create Response", json.toString());

            try {

                int success = json.getInt(TAG_SUCCESS);
                getstatus = success;
                if (success == 1) {

                    Log.d("success!", json.toString());

                }

                else if (success==0){


                    return json.getString(TAG_SUCCESS);

                }


            } catch (JSONException e) {
                e.printStackTrace();
            }
            return null;
        }
</code></pre>

<p>JSONParser.java</p>

<pre><code>public class JSONParser {

    static InputStream is = null;
    static JSONObject jObj = null;
    static String json = "";
    public static String Result=null;

    public JSONParser()
    {

    }

    public static JSONObject makeHttpRequest(String url,String method, List&lt;NameValuePair&gt;  pair) {

        try {

            // check for request method
            if(method.equals("POST")){
                // request method is POST
                // defaultHttpClient
                DefaultHttpClient httpClient = new DefaultHttpClient();
                HttpPost httpPost = new HttpPost(url);
                httpPost.setEntity(new UrlEncodedFormEntity(pair));

                HttpResponse httpResponse = httpClient.execute(httpPost);
                HttpEntity httpEntity = httpResponse.getEntity();
                is = httpEntity.getContent();

            }else if(method.equals("GET")){
                // request method is GET
                DefaultHttpClient httpClient = new DefaultHttpClient();
                String paramString = URLEncodedUtils.format(pair, "utf-8");
                url += "?" + paramString;
                HttpGet httpGet = new HttpGet(url);

                HttpResponse httpResponse = httpClient.execute(httpGet);
                HttpEntity httpEntity = httpResponse.getEntity();
                is = httpEntity.getContent();
            }

        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    is, HTTP.UTF_8), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
            is.close();
            json = sb.toString();
            Result = json;
        } catch (Exception e) {
            Log.e("Buffer Error", "Error converting result " + e.toString());
        }

        // try parse the string to a JSON object
        try {
            jObj = new JSONObject(json);
        } catch (JSONException e) {
            Log.e("JSON Parser", "Error parsing data " + e.toString());
        }

        return jObj;
    }


}
</code></pre>

<p>On Button click listener write </p>

<pre><code>new SignupProcess().execute();
</code></pre>
