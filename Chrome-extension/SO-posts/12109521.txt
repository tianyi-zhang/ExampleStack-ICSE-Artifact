<pre><code>public class Dashboard extends Activity
    implements OnItemClickListener {
Context con;
static LauncherIcon[] ICONS = {
        new LauncherIcon(R.drawable.breakfasdd, "text1"),
        new LauncherIcon(R.drawable.lunch, "text2"),
        new LauncherIcon(R.drawable.dinner1, "text3"),
        new LauncherIcon(R.drawable.syn1, "text4"),

};

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.dashboard);
    GridView gridview = (GridView) findViewById(R.id.dashboard_grid);
    gridview.setAdapter(new ImageAdapter(this));
    gridview.setOnItemClickListener(this);
    }

static class LauncherIcon {
    final String text;
    final int imgId;

    public LauncherIcon(int imgId, String text) {
        super();
        this.imgId = imgId;
        this.text = text;
    }

}

static class ImageAdapter extends BaseAdapter {
    private Context mContext;

    public ImageAdapter(Context c) {
        mContext = c;
    }

    @Override
    public int getCount() {
        return ICONS.length;
    }

    @Override
    public LauncherIcon getItem(int position) {
        return null;
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }

    static class ViewHolder {
        public ImageView icon;
        public TextView text;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View v = convertView;
        ViewHolder holder;
        if (v == null) {
            LayoutInflater vi = (LayoutInflater) mContext
                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);

            v = vi.inflate(R.layout.dashboard_icon, null);
            holder = new ViewHolder();
            holder.text = (TextView) v
                    .findViewById(R.id.dashboard_icon_text);
            holder.icon = (ImageView) v
                    .findViewById(R.id.dashboard_icon_img);
            v.setTag(holder);
        } else {
            holder = (ViewHolder) v.getTag();
        }

        holder.icon.setImageResource(ICONS[position].imgId);
        holder.text.setText(ICONS[position].text);

        return v;

    }
}
</code></pre>

<p>and to get item selected</p>

<pre><code>    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View v, int position, long id) {
        int pos = position;{
}
</code></pre>

<p>dashboard_icon.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" &gt;

    &lt;ImageView
        android:id="@+id/dashboard_icon_img"
        android:layout_width="fill_parent"
        android:layout_height="96.0dip"
        android:scaleType="fitCenter" /&gt;

    &lt;TextView
        android:id="@+id/dashboard_icon_text"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="20.0dip"
        android:layout_marginTop="2.0dip"
        android:gravity="center"
        android:textAppearance="?android:textAppearanceSmall"
        android:textColor="@android:color/black" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>dashboard.xml</p>

<pre><code> &lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" &gt;
    &lt;Button
        android:id="@+id/back"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="center_vertical|center_horizontal"
        android:layout_weight="1"
        android:text="BACK" /&gt;

    &lt;GridView
        android:id="@+id/dashboard_grid"
        style="@style/dashboard"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:listSelector="@android:color/transparent"
        android:stretchMode="columnWidth"
        android:verticalSpacing="20.0dip" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>
