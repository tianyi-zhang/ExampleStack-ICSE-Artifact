<p>finally I find a how to do it . and it's wokr fine</p>

<pre><code>@Override
public Filter getFilter() 
{
    if (planetFilter == null)
        planetFilter = new PlanetFilter();

    return planetFilter;
}

private class PlanetFilter extends Filter 
{

    @Override
    protected FilterResults performFiltering(CharSequence constraint) 
    {
        FilterResults results = new FilterResults();
        // We implement here the filter logic
        if (constraint == null || constraint.length() == 0) 
        {
            // No filter implemented we return all the list
            results.values = origPlanetList;
            results.count = origPlanetList.size();
        }
        else 
        {
            // We perform filtering operation
            List&lt;Country&gt; nPlanetList = new ArrayList&lt;Country&gt;();

            for (Country p : planetList) 
            {
                if (p.getE().toUpperCase()
                        .startsWith(constraint.toString().toUpperCase()))
                    nPlanetList.add(p);
            }

            results.values = nPlanetList;
            results.count = nPlanetList.size();

        }
        return results;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected void publishResults(CharSequence constraint,
            FilterResults results) 
    {

        // Now we have to inform the adapter about the new list filtered
        if (results.count == 0)
            notifyDataSetInvalidated();
        else 
        {
            planetList = (List&lt;Country&gt;) results.values;
            notifyDataSetChanged();
        }

    }

}
</code></pre>
