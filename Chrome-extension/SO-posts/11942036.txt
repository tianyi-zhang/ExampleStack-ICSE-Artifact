<p>@Korhan surely is a much elegant way than what I figured out.My code works but @Korhan's is much simpler.Thank you. I created this custom adapter class for reading the contacts</p>

<pre><code>class ContactListAdapter extends CursorAdapter implements Filterable {  
        private ContentResolver mCR;

        public ContactListAdapter(Context context, Cursor c,boolean a) {  
            super(context, c, true);  
            mCR = context.getContentResolver();  
        }


        @Override
        public void bindView(View view, Context context, Cursor cursor) {


                 ((TextView) view).setText(cursor.getString(1));
        }


        @Override
        public View newView(Context context, Cursor cursor, ViewGroup parent) {
             final LayoutInflater inflater = LayoutInflater.from(context);
                final TextView view = (TextView) inflater.inflate( android.R.layout.simple_dropdown_item_1line, parent, false);


                view.setText(cursor.getString(1));

                return view;

        }  
        @Override
        public String convertToString(Cursor cursor) {  



            return cursor.getString(1);
        }
        public Cursor runQueryOnBackgroundThread(CharSequence constraint) {
            if (getFilterQueryProvider() != null) {
                return getFilterQueryProvider().runQuery(constraint);
        }

        StringBuilder buffer = null;
        String[] args = null;
        if (constraint != null) {
            buffer = new StringBuilder();
            buffer.append("UPPER(");
            buffer.append(ContactsContract.CommonDataKinds.Email.ADDRESS);
            buffer.append(") GLOB ?");
            args = new String[] { constraint.toString().toUpperCase() + "*" };
        }

        return mCR.query(ContactsContract.CommonDataKinds.Email.CONTENT_URI,CreateEventActivity.PEOPLE_PROJECTION ,buffer == null ? null : buffer.toString(), args,
               null);
        }

    }
</code></pre>

<p>And the main Activity:</p>

<pre><code>MultiAutoCompleteTextView act = (MultiAutoCompleteTextView)findViewById(R.id.attende_list);
ContentResolver content = getContentResolver();
Cursor cursor = content.query(ContactsContract.CommonDataKinds.Email.CONTENT_URI,PEOPLE_PROJECTION, null, null, null);
ContactListAdapter adapter = new ContactListAdapter(this, cursor, true);
act.setThreshold(0);
act.setAdapter(adapter);
act.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());
</code></pre>
