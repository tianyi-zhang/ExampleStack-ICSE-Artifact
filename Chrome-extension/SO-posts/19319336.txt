<p>Injection only works, if the DI container (in JBoss it is weld) knows about the object. This normally happens because the container itself creates the instance. You may also pass an existing object to the container an let it inject all dependencies.</p>

<p>It looks like CDI injection into JSP pages does not work in JBoss AS 7:</p>

<ul>
<li><a href="https://community.jboss.org/thread/195487?start=0&amp;tstart=0" rel="nofollow">https://community.jboss.org/thread/195487?start=0&amp;tstart=0</a></li>
<li><a href="https://community.jboss.org/thread/176930?start=0&amp;tstart=0" rel="nofollow">https://community.jboss.org/thread/176930?start=0&amp;tstart=0</a></li>
</ul>

<p>Maybe you take a look at alternatives to JSP:</p>

<ul>
<li>JSF: <a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=2&amp;cad=rja&amp;ved=0CDMQFjAB&amp;url=http://www.mkyong.com/jsf2/jsf-2-0-hello-world-example/&amp;ei=uutXUt6pCY6R0QWU9YDYCg&amp;usg=AFQjCNGTyD9ZEKBPzHSDZmW39iSEp6EViw&amp;bvm=bv.53899372,d.d2k" rel="nofollow">Short JSF tutorial</a></li>
<li>Servlets: <a href="http://middlewaremagic.com/jboss/?cat=22" rel="nofollow">Short CDI injection tutorial for Servlets</a></li>
</ul>

<p>If you cannot switch to another technology, then you might have to do the injection yourself. Use the following method to let the CDI container performa all injections for the given object:</p>

<pre><code>public static &lt;T&gt; void programmaticInjection(Class&lt;T&gt; clazz, T injectionObject) throws NamingException {
    InitialContext initialContext = new InitialContext();
    Object lookup = initialContext.lookup("java:comp/BeanManager");
    BeanManager beanManager = (BeanManager) lookup;
    AnnotatedType&lt;T&gt; annotatedType = beanManager.createAnnotatedType(clazz);
    InjectionTarget&lt;T&gt; injectionTarget = beanManager.createInjectionTarget(annotatedType);
    CreationalContext&lt;T&gt; creationalContext = beanManager.createCreationalContext(null);
    injectionTarget.inject(injectionObject, creationalContext);
    creationalContext.release();
}
</code></pre>

<p>Then call this method from your JSP:</p>

<pre><code>&lt;h3&gt;Inject Test&lt;/h3&gt;
          &lt;%
                    MyBean myBean = new MyBean();
                    myBean.programmaticInjection(MyBean.class, myBean);
                    // now call a method on myBean that invokes the injected EJB
          %&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><code>MyBean</code> is here a simple JSF bean, similar to yours:</p>

<pre><code>@Named("myBean")
@SessionScoped
public class MyBean implements Serializable {
    private static final Logger logger = LoggerFactory.getLogger(MyBean.class);
    private static final long serialVersionUID = 1L;
    private long taskId;
    @EJB
    private MyEjb myEjb;
</code></pre>

<p>After calling <code>programmaticInjection()</code> the @EJB annotated object will be injected.</p>
