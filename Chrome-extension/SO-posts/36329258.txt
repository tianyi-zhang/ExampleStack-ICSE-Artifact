<p>Looks like the problem is in supportFragmentMannager:</p>

<pre><code> public Fragment findFragmentById(int id) {
    if (mAdded != null) {
        // First look through added fragments.
        for (int i=mAdded.size()-1; i&gt;=0; i--) {
            Fragment f = mAdded.get(i);
            if (f != null &amp;&amp; f.mFragmentId == id) {
                return f;
            }
        }
    }
    if (mActive != null) {
        // Now for any known fragment.
        for (int i=mActive.size()-1; i&gt;=0; i--) {
            Fragment f = mActive.get(i);
            if (f != null &amp;&amp; f.mFragmentId == id) {
                return f;
            }
        }
    }
    return null;
}
</code></pre>

<p>If you call <code>findFragmentById</code>not in the main thread then fragment's count may be changed during the call. You can try to call this method in the main thread.</p>

<p>You can use <code>YourActivity.this.runOnUiThread</code> or either handler:</p>

<pre><code>        new AsyncTask&lt;Void, String, String&gt;() {
        @Override
        protected String doInBackground(Void... params) {
            final int ID_FRAME_LAYOUT = 0;
            final Fragment[] auxCurrentFragment = {getSupportFragmentManager().findFragmentById(ID_FRAME_LAYOUT)};

            while (auxCurrentFragment[0] instanceof FilterNavigationFragment) {
                YourActivity.this.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        auxCurrentFragment[0] = getSupportFragmentManager().findFragmentById(ID_FRAME_LAYOUT);
                    }
                });
                try {
                    Thread.sleep(500);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }

            return "Executed";
        }
    };
</code></pre>
