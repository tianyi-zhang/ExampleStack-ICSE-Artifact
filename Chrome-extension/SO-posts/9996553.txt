<p>I have a working example, try this:</p>

<pre><code>filterEditText = (EditText)findViewById(R.id.filter);
filterEditText.addTextChangedListener(filterTextWatcher);

TextWatcher filterTextWatcher = new TextWatcher() {

        public void beforeTextChanged(CharSequence s, int start, int count,int after) {  

        }  
        public void onTextChanged(CharSequence s, int start, int before,int count) {  
            adapter.getFilter().filter(s);
        }

        @Override
        public void afterTextChanged(Editable s) {
            // TODO Auto-generated method stub              
        }  
    };
</code></pre>

<p>The adapter must <code>implements Filterable</code></p>

<pre><code>            @Override
            public Filter getFilter() {
//              Filter filter = null;

                if(filter == null)
                    filter = new CheeseFilter();
                return filter;
            }
</code></pre>

<p>And the filter class:</p>

<pre><code>        public class CheeseFilter extends Filter {

            @Override
            protected FilterResults performFiltering(CharSequence constraint) {
                // TODO Auto-generated method stub

                constraint = constraint.toString().toLowerCase();

                FilterResults newFilterResults = new FilterResults();

                if (constraint != null &amp;&amp; constraint.length() &gt; 0) {


                    ArrayList&lt;String&gt; auxData = new ArrayList&lt;String&gt;();

                    for (int i = 0; i &lt; data.size(); i++) {
                        if (data.get(i).toLowerCase().contains(constraint))
                            auxData.add(data.get(i));
                    }

                    newFilterResults.count = auxData.size();
                    newFilterResults.values = auxData;
                } else {

                    newFilterResults.count = data.size();
                    newFilterResults.values = data;
                }

                return newFilterResults;
            }

            @Override
            protected void publishResults(CharSequence constraint, FilterResults results) {

                ArrayList&lt;String&gt; resultData = new ArrayList&lt;String&gt;();

                resultData = (ArrayList&lt;String&gt;) results.values;

                EfficientAdapter adapter = new EfficientAdapter(context, resultData);
                list.setAdapter(adapter);

//              notifyDataSetChanged();
            }

        }
</code></pre>

<p>You can check this post for more info:</p>

<p><a href="http://stackoverflow.com/questions/5775774/custom-expandable-list-view-with-child-search-filter">Filter expandableList</a></p>

<p><a href="http://stackoverflow.com/questions/5658751/filter-list-view-from-edit-text">Filter ListView</a></p>
