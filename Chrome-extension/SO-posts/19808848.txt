<p>Try something like this, it looks much neater (I have 4 tables):</p>

<pre><code>public class DatabaseHelper extends SQLiteOpenHelper
{
    private static final String TAG = "DatabaseHelper";
    private static DatabaseHelper sInstance = null;
    private static final String DATABASE_NAME = "dbname";
    private static final int DATABASE_VERSION = 1;

    @Override
    public void onCreate(SQLiteDatabase db)
    {
        // create books table
        String sql = "CREATE TABLE [Book] ([_id] INTEGER NOT NULL PRIMARY KEY, [Arabic] TEXT, [English] TEXT)";
        db.execSQL(sql);

        // create hadiths table
        sql = "CREATE TABLE [Hadith] ([_id] INTEGER NOT NULL PRIMARY KEY, [Arabic] TEXT, [English] TEXT, [Urdu] TEXT, [Indonesian] TEXT, [Book] INTEGER NOT NULL, FOREIGN KEY(Book) REFERENCES Book(_id))";
        db.execSQL(sql);

        // add index on hadiths table
        sql = "CREATE INDEX [FK_Book] ON [Hadith]([Book] ASC)";
        db.execSQL(sql);

        // create bookmarks table
        sql = "CREATE TABLE [Bookmark] ([_id] INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, [Hadith] INTEGER NOT NULL, [Summary] TEXT)";
        db.execSQL(sql);

        // create settings table
        sql = "CREATE TABLE [Setting] ([_id] INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, [Name] TEXT, [Value] TEXT)";
        db.execSQL(sql);

        // add a sample book
        sql = "INSERT INTO Book (_id,Arabic,English) VALUES(1,'???? ??? ?????','Revelation')";
        db.execSQL(sql);

        // insert sample hadith
        sql = "INSERT INTO Hadith (_id,Arabic,English,Urdu,Indonesian,Book) VALUES(1,'English...','Arabic...','Urdu...','Indonesian...',1)";
        db.execSQL(sql);

        // insert sample bookmark
        sql = "INSERT INTO Bookmark (Hadith,Summary) VALUES(1,'Summary...')";
        db.execSQL(sql);

        // insert default settings
        sql = "INSERT INTO Setting (Name,Value) VALUES('FontSize','17')";
        db.execSQL(sql);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)
    {
        Log.w(DatabaseHelper.class.getName(), "Upgrading database from version " + oldVersion + " to " + newVersion + ", which will destroy all old data");
        db.execSQL("DROP TABLE IF EXISTS Setting");
        db.execSQL("DROP TABLE IF EXISTS Bookmark");
        db.execSQL("DROP TABLE IF EXISTS Hadith");
        db.execSQL("DROP TABLE IF EXISTS Book");
        onCreate(db);
    }

    public static DatabaseHelper getInstance(Context context)
    {
        // Use the application context, which will ensure that you
        // don't accidentally leak an Activity's context.
        // See this article for more information: http://bit.ly/6LRzfx
        if (sInstance == null)
        {
            sInstance = new DatabaseHelper(context.getApplicationContext());
        }
        return sInstance;
    }

    /**
     * Constructor should be private to prevent direct instantiation.
     * make call to static factory method "getInstance()" instead.
     */
    private DatabaseHelper(Context context)
    {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }
}
</code></pre>

<p>Then call it from any part of the code using :</p>

<pre><code>// get list of books from db
DatabaseHelper dbHelper = DatabaseHelper.getInstance(this);
SQLiteDatabase db = dbHelper.getReadableDatabase();
final Cursor cursor = db.rawQuery("SELECT * FROM Book", null);
while(cursor.moveToNext())
{
    bookNames.add(cursor.getString(2));
}
</code></pre>
