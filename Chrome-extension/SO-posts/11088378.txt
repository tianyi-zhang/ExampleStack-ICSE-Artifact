<p>Usually these are the following steps to create json object through the Http connection in android.</p>

<ol>
<li>open the connection and get the response.</li>
<li>get the content and create a string builder.</li>
<li>make the string builder into json array object (this step you have not done)</li>
<li>get json object from the json array object.</li>
</ol>

<p>I think you missed to convert String Buffer(sb) into json array object. Instead of that you directly create the json object from string buffer. I dont know how its was worked in android 4.0.
The modified code is</p>

<pre><code>public JSONObject getJSONFromUrl(String url) {
    try {
        DefaultHttpClient httpClient = new DefaultHttpClient();
        HttpPost httpPost = new HttpPost(url);

        HttpResponse httpResponse = httpClient.execute(httpPost);
        HttpEntity httpEntity = httpResponse.getEntity();
        is = httpEntity.getContent();

    } catch (UnsupportedEncodingException e) {
        e.printStackTrace();
    } catch (ClientProtocolException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }

    try {
        BufferedReader reader = new BufferedReader(new InputStreamReader(
                is, "UTF-8"), 8);
        StringBuilder sb = new StringBuilder();
        String line = null;
        while ((line = reader.readLine()) != null) {
            sb.append(line + "\n");
        }
        is.close();
        json = sb.toString();
    } catch (Exception e) {
        Log.e("Buffer Error", "Error converting result " + e.toString());
    }

    try {
       JSONArray jObj = new JSONArray(json);
    } catch (JSONException e) {
        Log.e("JSON Parser", "Error parsing data " + e.toString());
    }

    return jObj;

}
</code></pre>

<p>And you can get the json object by passing index value like,</p>

<p><code>jObj.getJSONObject(i); /*i is a integer,  index value*/</code></p>
