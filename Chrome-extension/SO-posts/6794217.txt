<p>Here is the custom list adapter:</p>

<pre><code>private class ListAdapter extends ArrayAdapter&lt;RSSItem&gt; {

        private List&lt;Item&gt; items;

        public ListAdapter(Context context, int textViewResourceId, List&lt;Item&gt; items) {
            super(context, textViewResourceId, items);
            this.items = items;
        }

        public View getView(int position, View convertView, ViewGroup parent) {
            View v = convertView;

            if (v == null) {
                LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                v = vi.inflate(R.layout.list_item, null);
            }

            Item item = items.get(position);

            if (item != null) {             
                TextView title = (TextView) v.findViewById(R.id.tvTitle);
                TextView description = (TextView) v.findViewById(R.id.tvDescription);
                if (title != null) {
                    title.setText(item.getTitle());
                }
                if (description != null) {
                    description.setText(item.toString());
                }
            }

            return v;
        }
    }
</code></pre>

<p>this is an <strong><em>Item</em></strong> class, witch will holds your data:</p>

<pre><code>public class Item {
    private String title = null;
    private String description = null;

    RSSItem() {
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getTitle() {
        return title;
    }

    public String getData() {
        return data;
    }
}
</code></pre>

<p>...and here is a class with which you can take all list data in some kind of array:</p>

<pre><code>public class ListData {
    private int itemcount = 0;
    private List&lt;Item&gt; itemlist;

    ListData () {
        itemlist = new Vector&lt;Item&gt;();
    }

    int addItem(Item item) {
        itemlist.add(item);
        itemcount++;
        return itemcount;
    }

    Item getItem(int location) {
        return itemlist.get(location);
    }

    List&lt;Item&gt; getAllItems() {
        return itemlist;
    }

    int getItemCount() {
        return itemcount;
    }
}
</code></pre>

<p>In your main class (<strong><em>Activity</em></strong>) you should fill up properly your data. </p>
