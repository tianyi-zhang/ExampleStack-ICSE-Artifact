<p>Use <code>Collections.shuffle</code> on your <code>List&lt;Question&gt;</code>, then use an <code>Iterator&lt;Question&gt;</code> to pick out the questions as you click a button. </p>

<p>Assuming you implemented both <code>equals</code> and <code>hashcode</code> for your <code>Question</code> class, then a <code>LinkedHashSet</code> will remove the duplicates, so repetition won't happen.</p>

<p>Here is an Activity based on your class that should show these concepts. </p>

<pre><code>public class QuizActivityMarketing extends Activity {

    private Iterator&lt;Question&gt; questionIterator;
    private TextView txtQuestion;
    private RadioButton rda, rdb, rdc, rdd;
    private Button butNext;

    private Question currentQ;
    private int score = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Define your views
        txtQuestion = (TextView) findViewById(R.id.textView1);
        rda = (RadioButton) findViewById(R.id.radio0);
        rdb = (RadioButton) findViewById(R.id.radio1);
        rdc = (RadioButton) findViewById(R.id.radio2);
        rdd = (RadioButton) findViewById(R.id.radio3);
        butNext = (Button) findViewById(R.id.button1);

        // Get and randomize the questions
        DbHelperMarketing db = new DbHelperMarketing(this);
        final List&lt;Question&gt; questions = db.getAllQuestions();
        Collections.shuffle(questions);
        questionIterator = new LinkedHashSet&lt;Question&gt;(questions).iterator();

        // Setup the first question
        if (questionIterator.hasNext()) {
            currentQ = questionIterator.next();
            setQuestionView(currentQ);
        }

        // Hook up the button-clicking
        butNext.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                // Check the correct answer
                RadioGroup grp = (RadioGroup) findViewById(R.id.radioGroup1);
                RadioButton answer = (RadioButton) findViewById(grp.getCheckedRadioButtonId());
                Log.d("yourans", currentQ.getANSWER() + " " + answer.getText());
                if (currentQ.getANSWER().equals(answer.getText())) {
                    score++;
                    Log.d("score", "Your score" + score);
                }

                // Load the next question, if there are any
                if (questionIterator.hasNext()) {
                    currentQ = questionIterator.next();
                    setQuestionView(currentQ);
                } else { // Done asking questions
                    setQuestionView(null);

                    Intent intent = new Intent(QuizActivityMarketing.this, ResultActivity.class);
                    Bundle b = new Bundle();
                    b.putInt("score", score); //Your score
                    intent.putExtras(b); //Put your score to your next Intent
                    startActivity(intent);
                    finish();
                }
            }
        });
    }

    private void setQuestionView(Question currentQuestion) {
        if (currentQuestion != null) {
            txtQuestion.setText(currentQuestion.getQUESTION());
            rda.setText(currentQuestion.getOPTA());
            rdb.setText(currentQuestion.getOPTB());
            rdc.setText(currentQuestion.getOPTC());
            rdd.setText(currentQuestion.getOPTD());
        } else {
            txtQuestion.setText("");
            rda.setText("");
            rdb.setText("");
            rdc.setText("");
            rdd.setText("");
        }
    }

}
</code></pre>
