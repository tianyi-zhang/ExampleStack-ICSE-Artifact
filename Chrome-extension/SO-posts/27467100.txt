<p>About third question, if you're going to keep using <code>Volley</code>, you can try to override the <strong>getBody()</strong> to return the image's bytes, rest of other parameters should be encoding within the URL, this way would use both of GET and POST method.</p>

<pre><code>public class ContactRequest extends StringRequest {

    public static String buildRequestUrl(String url,
        Map&lt;String, String&gt; params, String paramsEncoding) {
        StringBuilder urlBud = new StringBuilder(url).append('?');
        try {
            for (Map.Entry&lt;String, String&gt; entry : params.entrySet()) {
                urlBud.append(URLEncoder.encode(entry.getKey(), paramsEncoding));
                urlBud.append('=');
                urlBud.append(URLEncoder.encode(entry.getValue(), paramsEncoding));
                urlBud.append('&amp;');
            }
            return urlBud.toString();
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException("Encoding not supported: " + paramsEncoding);
        }
    }

    private String imageFilePath;

    public ContactRequest(String url, String imageFilePath,
        Response.Listener&lt;String&gt; listener, Response.ErrorListener errorListener) {
        super(Method.POST, url, listener, errorListener);
        this.imageFilePath = imageFilePath;
    }

    @Override
    public byte[] getBody() throws AuthFailureError {
        return getBytesFromFile(new File(imageFilePath));
    }
}
</code></pre>

<p>build the <code>ContactRequest</code> and serve to RequestQueue like this :</p>

<pre><code>String originUrl = "http://.../contact_push.do";
String imageFilePath = "/sdcard/.../contact_avatar_path";
Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();
params.put("firstName", "Vince");
params.put("lastName", "Styling");
new ContactRequest(
    ContactRequest.buildRequestUrl(originUrl, params, HTTP.UTF_8),
    imageFilePath, null, null);
</code></pre>

<p>'cause I never faced this problem before, so I don't sure this Request can reach to the server correctly, it's an un-test solution for me, hope can help.</p>
