<p>Varundroid,</p>

<p>I don't think you can have a specific function launch on <code>Widget</code> click, but you can launch an <code>Activity</code> using a <code>PendingIntent</code>.  That's how mine is currently setup, and all the <code>Widge</code>t consist of is an <code>ImageView</code>.  Here is my implementation...</p>

<p>XML:</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal"&gt;

    &lt;ImageView 
        android:layout_width="64dp" 
        android:layout_height="64dp"
        android:src="@drawable/icon" 
        android:id="@+id/widget_image" 
        android:scaleType="centerCrop"
        android:layout_centerInParent="true"/&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>Code:</p>

<pre><code>public class WidgetProvider extends AppWidgetProvider {

    @Override
    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
        final int N = appWidgetIds.length;
        for (int i=0; i&lt;N; i++) {
            int appWidgetId = appWidgetIds[i];

            /* Create the PendingIntent for a QuickNote */
            Intent intent = new Intent(context, ItemEdit.class);
            PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);

         // Get the layout for the App Widget and attach an on-click listener to the button
            RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.widget_provider);
            views.setOnClickPendingIntent(R.id.widget_image, pendingIntent);

            // Tell the AppWidgetManager to perform an update on the current App Widget
            appWidgetManager.updateAppWidget(appWidgetId, views);
        }
    }
}
</code></pre>

<p>Don't forget <code>AndroidManifest.xml</code>!</p>

<pre><code>    &lt;receiver android:name=".WidgetProvider"&gt;
        &lt;intent-filter&gt;
            &lt;action android:name="android.appwidget.action.APPWIDGET_UPDATE" /&gt;
        &lt;/intent-filter&gt;
        &lt;meta-data android:name="android.appwidget.provider"
           android:resource="@xml/appwidget_provider" /&gt;
    &lt;/receiver&gt;
</code></pre>
