<p>Do you know where more specifically where the issue is (parsing the results or placing the pins)?  What types of errors are you seeing?</p>

<p>For parsing Places API results, there's a tutorial at:
<a href="https://developers.google.com/academy/apis/maps/places/autocomplete-android" rel="nofollow">https://developers.google.com/academy/apis/maps/places/autocomplete-android</a></p>

<p>The following code from the tutorial should help you get started with parsing results.  The JSON returned for the Autocomplete and Search APIs are similar, but not the same.  Be sure to follow the format at <a href="https://developers.google.com/places/documentation/#PlaceSearchResults" rel="nofollow">https://developers.google.com/places/documentation/#PlaceSearchResults</a>.</p>

<pre><code>private static final String LOG_TAG = "ExampleApp";

private static final String PLACES_API_BASE = "https://maps.googleapis.com/maps/api/place";
private static final String TYPE_AUTOCOMPLETE = "/autocomplete";
private static final String OUT_JSON = "/json";

private static final String API_KEY = "YOUR_API_KEY";

private ArrayList&lt;String&gt; autocomplete(String input) {
    ArrayList&lt;String&gt; resultList = null;

    HttpURLConnection conn = null;
    StringBuilder jsonResults = new StringBuilder();
    try {
        StringBuilder sb = new StringBuilder(PLACES_API_BASE + TYPE_AUTOCOMPLETE + OUT_JSON);
        sb.append("?sensor=false&amp;key=" + API_KEY);
        sb.append("&amp;components=country:uk");
        sb.append("&amp;input=" + URLEncoder.encode(input, "utf8"));

        URL url = new URL(sb.toString());
        conn = (HttpURLConnection) url.openConnection();
        InputStreamReader in = new InputStreamReader(conn.getInputStream());

        // Load the results into a StringBuilder
        int read;
        char[] buff = new char[1024];
        while ((read = in.read(buff)) != -1) {
            jsonResults.append(buff, 0, read);
        }
    } catch (MalformedURLException e) {
        Log.e(LOG_TAG, "Error processing Places API URL", e);
        return resultList;
    } catch (IOException e) {
        Log.e(LOG_TAG, "Error connecting to Places API", e);
        return resultList;
    } finally {
        if (conn != null) {
            conn.disconnect();
        }
    }

    try {
        // Create a JSON object hierarchy from the results
        JSONObject jsonObj = new JSONObject(jsonResults.toString());
        JSONArray predsJsonArray = jsonObj.getJSONArray("predictions");

        // Extract the Place descriptions from the results
        resultList = new ArrayList&lt;String&gt;(predsJsonArray.length());
        for (int i = 0; i &lt; predsJsonArray.length(); i++) {
            resultList.add(predsJsonArray.getJSONObject(i).getString("description"));
        }
    } catch (JSONException e) {
        Log.e(LOG_TAG, "Cannot process JSON results", e);
    }

    return resultList;
}
</code></pre>
