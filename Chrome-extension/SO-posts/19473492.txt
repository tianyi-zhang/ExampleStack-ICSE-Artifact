<p>I hope the below code is what you are expecting, just try this as a separate program &amp; execute.</p>

<pre><code>public class Movies
{
   public static DVDCollection movies;
   public static void main (String[] args)
   {
     Comparable found;
     int index;

   movies= new DVDCollection();

  movies.addDVD ("The Godfather", "Francis Ford Coppola", 1972, 24.95, true);
  movies.addDVD ("District 9", "Neill Blonkamp", 2009, 19.95, false);
  movies.addDVD ("Iron Man", "Jon Favreau", 2008, 15.95, false);
  movies.addDVD ("All About Eve", "Joseph Makiewicz", 1950, 17.50, false);
  movies.addDVD ("The Matrix", "Andy &amp; Lana Wachowski", 1999, 19.95, true);

  System.out.println (movies);

  movies.addDVD ("Iron Man 2", "Jon Favreau", 2010, 22.99, false);
  movies.addDVD ("Casablanca", "Michael Curtiz", 1942, 19.95, false);

  System.out.println (movies);

  Comparable target = ("Jon Favreau");
  System.out.println("Target: "+target.toString());
  found = DVD.searchForDVD(target.toString());
  index=Integer.parseInt(found.toString());

  System.out.println ("Found: " + index);      

  Comparable target1 = ("John Smith");
  System.out.println("Target1: "+target1.toString());
  found = DVD.searchForDVD(target1.toString());
  index=Integer.parseInt(found.toString());

    System.out.println ("Found1: " + index);   
   }
}



  class DVDCollection
   {
      public static DVD[] list;
      private int count; 
     private double totalCost;

    public DVDCollection()
   {
      list = new DVD[100];
     count = 0;
     totalCost = 0;
   }
    public void addDVD (String title, String director, int year, double cost, boolean bluray)
   {
     list[count] = new DVD (title, director, year, cost, bluray);
     for (int index = 1; index &lt; list.length; index++)
     {

       DVD key = list[count];
       int position = count;

       while (position &gt; 0 &amp;&amp; key.compareTo(list[position-1]) &lt; 0)
       {
           list[position] = list[position-1];
           position--;
       }
       list[position] = key;

   } 
   totalCost += cost;
   count++;
    }

   @Override
   public String toString()
  {
   NumberFormat fmt = NumberFormat.getCurrencyInstance();

  String report = "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
  report += "My DVD Collection\n\n";

  report += "Number of DVDs: " + count + "\n";
  report += "Total cost: " + fmt.format(totalCost) + "\n";
  report += "Average cost: " + fmt.format(totalCost/count);

  report += "\n\nDVD List:\n\n";

  for (int dvd = 0; dvd &lt; count; dvd++)
     report += list[dvd].toString() + "\n";

  return report;
   }

} 

class DVD implements Comparable
{
 private String title, director;
private int year;
private double cost;
private boolean bluray;

 public DVD (String title, String director, int year, double cost, boolean bluray)
 {
  this.title = title;
  this.director = director;
  this.year = year;
  this.cost = cost;
  this.bluray = bluray;
}

 @Override
public String toString ()
{
  NumberFormat fmt = NumberFormat.getCurrencyInstance();

  String description;

  description = fmt.format(cost) + "\t" + year + "\t";
  description += title + "\t" + director;

  if (bluray)
     description += "\t" + "Blu-Ray";

  return description;
   }

  public String getDirector ()
  {
     return director;
 }

 @Override
 public int compareTo (Object list)
 {
  int result;

  String otherDirector = ((DVD)list).getDirector();
  result = director.compareTo(otherDirector);

  return result;
 }

 public static int searchForDVD (String director) 
 {
   boolean flag=false;
   for(int i=0;i&lt;DVDCollection.list.length;i++)
   {
       if(DVDCollection.list[i]!=null)
       {
           System.out.println("Director: "+DVDCollection.list[i].getDirector());
           if(DVDCollection.list[i].getDirector().equals(director))
           {
               flag=true;
               return i;
           }
       }               
   }
   if(!flag)
       return -1;
   return -1;

   }     

 }
</code></pre>
