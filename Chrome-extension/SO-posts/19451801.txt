<p>The way I see it, counting the number of inversions in an array is finding a way to sort the array in an ascending order. Following that thought, here is my solution:</p>

<pre><code>int countInversionArray(int[] A) {
    if(A.length&lt;=1) return 0;
    int solution = 0;

    for(int i=1;i&lt;A.length;i++){
        int j = i;
        while(j+2&lt;A.length &amp;&amp; A[j] &gt; A[j+1]){
            invert2(j,j+1,A);
            solution++;
            j++;
        }
        j=i;
        while(j&gt;0 &amp;&amp; A[j] &lt; A[j-1]){
            invert2(j,j-1,A);
            solution++;
            j--;
        }
    }

    return solution;
}

private void invert2(int index1, int index2, int[] A){
    int temp = A[index1];
    A[index1] = A[index2];
    A[index2] = temp;
}
</code></pre>
