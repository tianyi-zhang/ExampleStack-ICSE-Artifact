<p>You state:</p>

<blockquote>
  <p>I have already override the equal method as shown in the following class.</p>
</blockquote>

<p>You need to also override <code>hashCode</code>, especially for the key of a HashMap. Where do you do this?</p>

<p>Your hashCode should use the same fields that equals uses, and the contract is that if two objects are equal, their hashCodes <strong>must</strong> be identical, but the converse is not necessarily true -- two objects with the same hashCode can theoretically not be equal.</p>

<p>So if this is your equals:</p>

<pre><code>   @Override
   public boolean equals(Object o){  
     if(!(o instanceof subXMLdoc))
       return false;
     subXMLdoc q = (subXMLdoc)o;
     return (this.docId.equals(q.getDocId())
              &amp;&amp; (this.elmTypeId == q.getNodeId()) 
              &amp;&amp; (this.dewId.equals(q.getDew())) );           
   }
</code></pre>

<p>Then hashCode must use the docId, the elmTypeIt and the dewId fields to calculate its value.</p>

<hr>

<p>For example (I cheated) but this is what Eclipse gave me for equals and hashCode, and it makes sense if you think about it:</p>

<pre><code>   @Override
   public int hashCode() {
      final int prime = 31;
      int result = 1;
      result = prime * result + ((dewId == null) ? 0 : dewId.hashCode());
      result = prime * result + ((docId == null) ? 0 : docId.hashCode());
      result = prime * result + elmTypeId;
      return result;
   }
   @Override
   public boolean equals(Object obj) {
      if (this == obj)
         return true;
      if (obj == null)
         return false;
      if (getClass() != obj.getClass())
         return false;
      SubXmlDoc other = (SubXmlDoc) obj;
      if (dewId == null) {
         if (other.dewId != null)
            return false;
      } else if (!dewId.equals(other.dewId))
         return false;
      if (docId == null) {
         if (other.docId != null)
            return false;
      } else if (!docId.equals(other.docId))
         return false;
      if (elmTypeId != other.elmTypeId)
         return false;
      return true;
   }
</code></pre>

<hr>

<p>As an aside, please note also that your code should comply with Java naming conventions to avoid fooling others. Class names should begin with an upper case letter, and all non-constant names should use camel case. So your class name should be <code>"SubXmlDoc"</code>.</p>
