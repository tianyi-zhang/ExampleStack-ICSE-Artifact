<blockquote>
  <ol>
  <li>When my phone is in landscape mode I cannot seem to see the detail pane at all.</li>
  </ol>
</blockquote>

<p>you mess up listfragment and dynamiclist. listfragment has a list by itself and in some part of your code you manipulate dynamiclist and in other part you manipulate listfragment's list. so in order to use the dynamiclist you must use fragment instead of listFragment and you must create separate layout for it and put your dynamic list in that. </p>

<blockquote>
  <ol start="2">
  <li>I canâ€™t remove the object after swiping, it appears as soon as the swipe is complete</li>
  </ol>
</blockquote>

<p>because  <code>myAdapter.remove(position);</code> removes the view of your title and you must remove the data set behind that but your data set is String array so you can not remove from it, what should you do? you must create a <code>List</code> and pass it to your adapter and then after the sweep occurred you must remove the data at the specified position. so your code must change and be something like:</p>

<pre><code>package edu.dartmouth.cs;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentTransaction;
import android.app.ListFragment;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.util.TypedValue;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.Toast;

import com.nhaarman.listviewanimations.appearance.simple.AlphaInAnimationAdapter;
import com.nhaarman.listviewanimations.itemmanipulation.DynamicListView;
import com.nhaarman.listviewanimations.itemmanipulation.swipedismiss.OnDismissCallback;

import edu.dartmouth.cs.apis.Shakespeare;

public class FragmentLayout extends Activity {

    static ArrayAdapter myAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        Toast.makeText(this, "FragmentLayout: OnCreate()", Toast.LENGTH_SHORT)
                .show();

        setContentView(R.layout.fragment_layout);
    }


    public static class DetailsActivity extends Activity {

        @Override
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);

            Toast.makeText(this, "DetailsActivity", Toast.LENGTH_SHORT).show();

            if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
                finish();
                return;
            }

            if (savedInstanceState == null) {


                DetailsFragment details = new DetailsFragment();

                details.setArguments(getIntent().getExtras());


                getFragmentManager().beginTransaction()
                        .add(android.R.id.content, details).commit();
            }
        }
    }

    public static class TitlesFragment extends Fragment {
        boolean mDualPane;
        int mCurCheckPosition = 0;
        List&lt;String&gt; title;
        DynamicListView listView;

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View root = inflater.inflate(R.layout.fragment_title_dynamiclist,container);

            listView = (DynamicListView) root
                     .findViewById(R.id.dynamiclistview);
            return root;
        }

        @Override
        public void onActivityCreated(Bundle savedInstanceState) {
            super.onActivityCreated(savedInstanceState);

            Toast.makeText(getActivity(), "TitlesFragment:onActivityCreated",
                    Toast.LENGTH_LONG).show();

            if (savedInstanceState != null) {
                mCurCheckPosition = savedInstanceState.getInt("curChoice", 0);
                title = savedInstanceState.getStringArrayList("Title");
            }else{

                title = new ArrayList&lt;String&gt;(Arrays.asList(Shakespeare.TITLES));
            }

            myAdapter = new ArrayAdapter&lt;String&gt;(getActivity(),
                    android.R.layout.simple_list_item_activated_1,
                    title);

            final AlphaInAnimationAdapter animationAdapter = new AlphaInAnimationAdapter(
                    myAdapter);
            animationAdapter.setAbsListView(listView);
            listView.setAdapter(animationAdapter);

            View detailsFrame = getActivity().findViewById(R.id.details);

            Toast.makeText(getActivity(), "detailsFrame " + detailsFrame,
                    Toast.LENGTH_LONG).show();
            mDualPane = detailsFrame != null
                    &amp;&amp; detailsFrame.getVisibility() == View.VISIBLE;

            Toast.makeText(getActivity(), "mDualPane " + mDualPane,
                    Toast.LENGTH_LONG).show();



            if (mDualPane) {
                listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
                // Make sure our UI is in the correct state.
                showDetails(mCurCheckPosition);
            } else {

                listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
                listView.setItemChecked(mCurCheckPosition, true);
            }



            listView.enableSwipeToDismiss(new OnDismissCallback() {
                @Override
                public void onDismiss(final ViewGroup listView,
                        final int[] reverseSortedPositions) {

                    Toast.makeText(getActivity(), "swipe detected "    ,
                            Toast.LENGTH_LONG).show();
                    for (int position : reverseSortedPositions) {
// NOT WORKING!!
                        myAdapter.remove(position);
                        title.remove(position);



                    }
                }
            });

            listView.setOnItemClickListener(new MyOnItemClickListener(listView));
        }

        private class MyOnItemClickListener implements
                AdapterView.OnItemClickListener {

            private final DynamicListView mListView;

            MyOnItemClickListener(final DynamicListView listView) {
                mListView = listView;
            }

            @Override
            public void onItemClick(final AdapterView&lt;?&gt; parent,
                    final View view, final int position, final long id) {

                //
                Toast.makeText(getActivity(),
                        "onListItemClick position is" + position,
                        Toast.LENGTH_LONG).show();

                showDetails(position);
                //
            }
        }

        @Override
        public void onSaveInstanceState(Bundle outState) {
            super.onSaveInstanceState(outState);
            Toast.makeText(getActivity(), "onSaveInstanceState",
                    Toast.LENGTH_LONG).show();
            outState.putStringArrayList("Title", new ArrayList&lt;String&gt;(title));
            outState.putInt("curChoice", mCurCheckPosition);
        }



        void showDetails(int index) {
            mCurCheckPosition = index;

            if (mDualPane) {

                listView.setItemChecked(index, true);


                DetailsFragment details = (DetailsFragment) getFragmentManager()
                        .findFragmentById(R.id.details);
                if (details == null || details.getShownIndex() != index) {

                    details = DetailsFragment.newInstance(index);
System.out.println(" Dual plane");
                    Toast.makeText(
                            getActivity(),
                            "**showDetails dual-pane: create and relplace fragment",
                            Toast.LENGTH_LONG).show();

                    FragmentTransaction ft = getFragmentManager().beginTransaction();
                    ft.replace(R.id.details, details);
                    ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);
                    ft.commit();
                }

            } else {

                Intent intent = new Intent();

                intent.setClass(getActivity(), DetailsActivity.class);

                intent.putExtra("index", index);

                startActivity(intent);
            }
        }
    }


    public static class DetailsFragment extends Fragment {

        public static DetailsFragment newInstance(int index) {
            DetailsFragment f = new DetailsFragment();

            Bundle args = new Bundle();
            args.putInt("index", index);
            f.setArguments(args);

            return f;
        }

        public int getShownIndex() {
            return getArguments().getInt("index", 0);
        }



        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {

            Toast.makeText(getActivity(), "DetailsFragment:onCreateView",
                    Toast.LENGTH_LONG).show();
            ScrollView scroller = new ScrollView(getActivity());
            TextView text = new TextView(getActivity());
            int padding = (int) TypedValue.applyDimension(
                    TypedValue.COMPLEX_UNIT_DIP, 4, getActivity()
                            .getResources().getDisplayMetrics());
            text.setPadding(padding, padding, padding, padding);
            scroller.addView(text);
            text.setText(Shakespeare.DIALOGUE[getShownIndex()]);
            return scroller;
        }
    }

}
</code></pre>

<p>and your layout must be:</p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:baselineAligned="false"
    android:orientation="horizontal" &gt;


    &lt;fragment
        android:id="@+id/titles"
        android:layout_width="0px"
        android:layout_height="match_parent"
        android:layout_weight="1"
        class="edu.dartmouth.cs.FragmentLayout$TitlesFragment" /&gt;


    &lt;FrameLayout
        android:id="@+id/details"
        android:layout_width="0px"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:background="?android:attr/detailsElementBackground" 
        /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>and the layout of title fragment: (fragment_title_dynamiclist.xml)</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;

        &lt;com.nhaarman.listviewanimations.itemmanipulation.DynamicListView
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:id="@+id/dynamiclistview"
        android:layout_width="match_parent"
        android:layout_height="match_parent" /&gt;
</code></pre>
