<p>Luksprog's answer is indeed correct, and it is very useful for lists many levels deep (you do not put limits, just keep spawning new activity instances with the proper list loaded)</p>

<p>BUT</p>

<p>If your list isn't more than 2 levels deep you can use ExpandableListActivity instead of ListActivity which is basically an enhanced version of the single-level list you're using which natively handle group collapsing/expanding and therefore you do not need the spawn of a new activity for each sublevel.</p>

<p>again note that this approach works only for lists which do not go deeper than 2 levels</p>

<ul>
<li><a href="http://developer.android.com/reference/android/app/ExpandableListActivity.html" rel="nofollow">ExpandableListActivity documentation</a> </li>
<li><a href="http://developer.android.com/reference/android/widget/ExpandableListView.html" rel="nofollow">ExpandableListView documentation</a></li>
<li><a href="http://developer.android.com/reference/android/widget/ExpandableListAdapter.html" rel="nofollow">ExpandableListAdapter documentation</a> - you should be fine with the BaseExpandableListAdapter implementation</li>
</ul>

<p>And here you have some nice example from Google itself:</p>

<pre><code>public class ExpandableList3 extends ExpandableListActivity {
    private static final String NAME = "NAME";
    private static final String IS_EVEN = "IS_EVEN";

    private ExpandableListAdapter mAdapter;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        List&lt;Map&lt;String, String&gt;&gt; groupData = new ArrayList&lt;Map&lt;String, String&gt;&gt;();
        List&lt;List&lt;Map&lt;String, String&gt;&gt;&gt; childData = new ArrayList&lt;List&lt;Map&lt;String, String&gt;&gt;&gt;();
        for (int i = 0; i &lt; 20; i++) {
            Map&lt;String, String&gt; curGroupMap = new HashMap&lt;String, String&gt;();
            groupData.add(curGroupMap);
            curGroupMap.put(NAME, "Group " + i);
            curGroupMap.put(IS_EVEN, (i % 2 == 0) ? "This group is even" : "This group is odd");
            //filling with dummy data...
            List&lt;Map&lt;String, String&gt;&gt; children = new ArrayList&lt;Map&lt;String, String&gt;&gt;();
            for (int j = 0; j &lt; 15; j++) {
                Map&lt;String, String&gt; curChildMap = new HashMap&lt;String, String&gt;();
                children.add(curChildMap);
                curChildMap.put(NAME, "Child " + j);
                curChildMap.put(IS_EVEN, (j % 2 == 0) ? "This child is even" : "This child is odd");
            }
            childData.add(children);
        }

        // Set up our adapter
        mAdapter = new SimpleExpandableListAdapter(
            this,
            groupData,
            android.R.layout.simple_expandable_list_item_1,
            new String[] { NAME, IS_EVEN },
            new int[] { android.R.id.text1, android.R.id.text2 },
            childData,
            android.R.layout.simple_expandable_list_item_2,
            new String[] { NAME, IS_EVEN },
            new int[] { android.R.id.text1, android.R.id.text2 }
            );
        setListAdapter(mAdapter);
    }

}
</code></pre>
