<p>For google analytics you need to register you application here <a href="http://www.google.com/analytics/" rel="nofollow">Google Analytics</a> as all mobile application then it wil gives you ga_trackingId id</p>

<p>Now make one analytics.xml fine values folder in analytics file put below content</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;resources&gt;

 &lt;!-- Replace placeholder ID with your tracking ID --&gt;
 &lt;string name="ga_trackingId"&gt;UA-XXXXXXXX-X&lt;/string&gt;

&lt;!-- Enable automatic activity tracking --&gt;
&lt;bool name="ga_autoActivityTracking"&gt;true&lt;/bool&gt;

&lt;!-- Enable automatic exception tracking --&gt;
&lt;bool name="ga_reportUncaughtExceptions"&gt;true&lt;/bool&gt;

&lt;string name="ga_appName"&gt;Location Serivce&lt;/string&gt;
&lt;string name="ga_appVersion"&gt;1.1.2&lt;/string&gt;

&lt;bool name="ga_debug"&gt;true&lt;/bool&gt;

&lt;item name="ga_dispatchPeriod" format="integer" type="integer"&gt;120&lt;/item&gt;

&lt;string name="ga_sampleFrequency"&gt;90&lt;/string&gt;

&lt;bool name="ga_anonymizeIp"&gt;true&lt;/bool&gt;
&lt;bool name="ga_dryRun"&gt;false&lt;/bool&gt;

&lt;string name="com.example.HomeActivity"&gt;HomeActivity&lt;/string&gt;
&lt;string name="com.example.SettingActivity"&gt;SettingActivity&lt;/string&gt;
</code></pre>

<p></p>

<p>Now in home activity put below code for activity display</p>

<pre><code>private Tracker tracker;
private String TAG_Tracker="HomeActivity";

MyApp.getGaTracker().set(Fields.SCREEN_NAME, TAG_Tracker);
tracker = GoogleAnalytics.getInstance(this).getTracker(MyApp.GA_PROPERTY_ID);
HashMap&lt;String, String&gt; hitParameters = new HashMap&lt;String, String&gt;();
hitParameters.put(Fields.HIT_TYPE, "ActivityView");
hitParameters.put(Fields.SCREEN_NAME, TAG_Tracker);
tracker.send(hitParameters);

//for button click and other event fire you need to put below code:

 public void onClick(View v) {
    tracker.send(MapBuilder.createEvent("UI", "OnClick", "btnAdd", null).build());
}
</code></pre>

<p>Now MyApp.java</p>

<pre><code>public class MyApp extends Application {

private static GoogleAnalytics mGa;
private static Tracker mTracker;

/*
 * Google Analytics configuration values.
 */
// Placeholder property ID.
public static final String GA_PROPERTY_ID = "UA-XXXXXXXX-X";

// Dispatch period in seconds.
private static final int GA_DISPATCH_PERIOD = 30;

// Prevent hits from being sent to reports, i.e. during testing.
private static final boolean GA_IS_DRY_RUN = false;

// GA Logger verbosity.
private static final LogLevel GA_LOG_VERBOSITY = LogLevel.INFO;

// Key used to store a user's tracking preferences in SharedPreferences.
private static final String TRACKING_PREF_KEY = "trackingPreference";

/*
 * Method to handle basic Google Analytics initialization. This call will
 * not block as all Google Analytics work occurs off the main thread.
 */
@SuppressWarnings("deprecation")
private void initializeGa() {
    mGa = GoogleAnalytics.getInstance(this);
    mTracker = mGa.getTracker(GA_PROPERTY_ID);

    // Set dispatch period.
    GAServiceManager.getInstance().setLocalDispatchPeriod(GA_DISPATCH_PERIOD);

    // Set dryRun flag.
    mGa.setDryRun(GA_IS_DRY_RUN);

    // Set Logger verbosity.
    mGa.getLogger().setLogLevel(GA_LOG_VERBOSITY);

    // Set the opt out flag when user updates a tracking preference.
    SharedPreferences userPrefs = PreferenceManager.getDefaultSharedPreferences(this);
    userPrefs.registerOnSharedPreferenceChangeListener(new SharedPreferences.OnSharedPreferenceChangeListener() {
            @Override
            public void onSharedPreferenceChanged(SharedPreferences sharedPreferences,
                    String key) {
                if (key.equals(TRACKING_PREF_KEY)) {
                    GoogleAnalytics.getInstance(getApplicationContext()).setAppOptOut(sharedPreferences.getBoolean(key, false));
                }
            }
        });
    }

@Override
public void onCreate() {
    super.onCreate();
    initializeGa();
}

/*
 * Returns the Google Analytics tracker.
 */
public static Tracker getGaTracker() {
    return mTracker;
}

/*
 * Returns the Google Analytics instance.
 */
public static GoogleAnalytics getGaInstance() {
    return mGa;
}
</code></pre>

<p>}</p>

<p>you need to define this myApp.java file in manifiest file like </p>

<pre><code> &lt;application
    android:name="com.example.MyApp"
</code></pre>
