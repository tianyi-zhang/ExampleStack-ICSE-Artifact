<p>Setting <code>messageBody</code> as <code>text/html</code> works perfectly in most of the context.  Little confusing why it's not working with your case.</p>

<p>Hereby I'm attaching the way to get you move with sending <code>html</code> content with your <code>email</code> inside android. There are two side which are most commonly used in android for emailing <code>contents</code>, out of them you are already using one of them. I'm showing you the way with other one.</p>

<p><em><strong>Mail.java</strong> : Used to setting properties for your mail configuration</em></p>

<pre><code>import java.util.Date;
import java.util.Properties;
import javax.activation.CommandMap;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.activation.MailcapCommandMap;
import javax.mail.BodyPart;
import javax.mail.Message.RecipientType;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import android.text.Spanned;


public class Mail extends javax.mail.Authenticator { 
private String _user; 
private String _pass; 

private String[] _to; 
public String[] getTo() {
return _to;
}

public void setTo(String[] _to) {
    this._to = _to;
}

private String _from; 

  public String getFrom() {
    return _from;
}

public void setFrom(String _from) {
    this._from = _from;
}

private String _port; 
  private String _sport; 

  private String _host; 

  private String _subject; 
  public String getSubject() {
    return _subject;
}

public void setSubject(String _subject) {
    this._subject = _subject;
}

private String _body; 

  private boolean _auth; 

  private boolean _debuggable; 

  private Multipart _multipart; 


  public Mail() { 
    _host = "smtp.gmail.com"; // default smtp server 
    _port = "465"; // default smtp port 
    _sport = "465"; // default socketfactory port 

    _user = ""; // username 
    _pass = ""; // password 
    _from = ""; // email sent from 
    _subject = ""; // email subject 
    _body = ""; // email body 

    _debuggable = false; // debug mode on or off - default off 
    _auth = true; // smtp authentication - default on 

    _multipart = new MimeMultipart(); 

    // There is something wrong with MailCap, javamail can not find a handler for the multipart/mixed part, so this bit needs to be added. 
    MailcapCommandMap mc = (MailcapCommandMap) CommandMap.getDefaultCommandMap(); 
    mc.addMailcap("text/html;; x-java-content-handler=com.sun.mail.handlers.text_html"); 
    mc.addMailcap("text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml"); 
    mc.addMailcap("text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain"); 
    mc.addMailcap("multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed"); 
    mc.addMailcap("message/rfc822;; x-java-content-handler=com.sun.mail.handlers.message_rfc822"); 
    CommandMap.setDefaultCommandMap(mc); 
  } 

  public Mail(String user, String pass) { 
    this(); 

    _user = user; 
    _pass = pass; 
  } 

  public boolean send() throws Exception { 
    Properties props = _setProperties(); 

    if(!_user.equals("") &amp;&amp; !_pass.equals("") &amp;&amp; _to.length &gt; 0 &amp;&amp; !_from.equals("") &amp;&amp; !_subject.equals("") &amp;&amp; !_body.equals("")) { 
      Session session = Session.getInstance(props, this); 
      MimeMessage msg = new MimeMessage(session); 
      msg.setFrom(new InternetAddress(_from)); 
      InternetAddress[] addressTo = new InternetAddress[_to.length]; 
      for (int i = 0; i &lt; _to.length; i++) { 
        addressTo[i] = new InternetAddress(_to[i]); 
      } 
        msg.setRecipients(RecipientType.TO, addressTo); 

      msg.setSubject(_subject); 
      msg.setSentDate(new Date()); 

      // setup message body 
      BodyPart messageBodyPart = new MimeBodyPart(); 
      messageBodyPart.setContent(_body,"text/html"); 
      _multipart.addBodyPart(messageBodyPart); 

      // Put parts in message 
      msg.setContent(_multipart); 

      // send email 
      Transport.send(msg); 

      return true; 
    } else { 
      return false; 
    } 
  } 

  public void addAttachment(String filename) throws Exception { 
    BodyPart messageBodyPart = new MimeBodyPart(); 
    DataSource source = new FileDataSource(filename); 
    messageBodyPart.setDataHandler(new DataHandler(source)); 
    messageBodyPart.setFileName(filename); 

    _multipart.addBodyPart(messageBodyPart); 
  } 

  @Override 
  public PasswordAuthentication getPasswordAuthentication() { 
    return new PasswordAuthentication(_user, _pass); 
  } 

  private Properties _setProperties() { 
    Properties props = new Properties(); 

    props.put("mail.smtp.host", _host); 

    if(_debuggable) { 
      props.put("mail.debug", "true"); 
    } 

    if(_auth) { 
      props.put("mail.smtp.auth", "true"); 
    } 

    props.put("mail.smtp.port", _port); 
    props.put("mail.smtp.socketFactory.port", _sport); 
    props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory"); 
    props.put("mail.smtp.socketFactory.fallback", "false"); 

    return props; 
  } 

  // the getters and setters 
  public String getBody() { 
    return _body; 
  } 

  public void setBody(String _body) { 
    this._body = _body; 
  }

public void setBody(Spanned fromHtml) {
    // TODO Auto-generated method stub
    this._body=_body;
} 

  // more of the getters and setters â€¦.. 
} 
</code></pre>

<p>Here's how you can use it inside your activity or fragment. call using <code>new MailTask(this).execute(); //use getActivity() inside fragments</code></p>

<pre><code>String username,password,sentto;// add your relevant username and password and sento
public class MailTask extends AsyncTask&lt;String,Void,String&gt;{
        public Context context;
        public ProgressDialog pDialog;
        public MailTask(Context c)
        {
            context = c; 
        }
        @Override
        protected String doInBackground(String... params) {
            /*
             * MAIL SENDING
             */
             Mail m = new Mail(username, password); 
              String[] toArr = {sentto}; 
              m.setTo(toArr);
              m.setFrom(username); 
              m.setSubject("Place Order | Rajvi Designing Application from an Android device.");
//            m.setBody("&lt;html&gt;&lt;body&gt;&lt;b&gt;&lt;p&gt;Dear Sir,"
//                  + "  Following are the details added on Portfolio Application."
//                  + "  Name:"+ _name +"  Contact No:"+_contact +"  Address:"+_address+"&lt;/p&gt;&lt;p&gt; These is autogenerated mail. &lt;/p&gt;&lt;/b&gt;&lt;/body&gt;&lt;/html&gt;"); 

              m.setBody("&lt;html&gt;&lt;body&gt;"+MailBody.getBody(_name,_contact,_address,_orderdate)+"&lt;/body&gt;&lt;/html&gt;");
              try { 
                  if(compressedPath!=null &amp;&amp; compressedPath.length() &gt; 0)
                m.addAttachment(compressedPath); 
                if(m.send()) { 
                    Log.e("MailApp", "Mail sent successfully!"); 
                } else { 
                    Log.e("MailApp", "Could not send email"); 
                } 
              } catch(Exception e) { 
                //Toast.makeText(MailApp.this, "There was a problem sending the email.", Toast.LENGTH_LONG).show(); 
                Log.e("MailApp", "Could not send email", e); 
              } 
            return "MailSent";
        }
        @Override
        protected void onPostExecute(String result) {
//          Toast.makeText(HomeActivity.this, "Mail Sent", Toast.LENGTH_SHORT).show();
            CustomToast.showToastMessage(PlaceOrderActivity.this, "Mail Sent");
//          submit.setEnabled(true);
//          submit.setText("Submit");
            pDialog.dismiss();
            clear();
        }

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            pDialog = new ProgressDialog(context);
            pDialog.setMessage("Sending...");
            pDialog.setIndeterminate(false);
            pDialog.setCancelable(false);
            pDialog.show();
        }
    }
</code></pre>

<p>Attaching HTML content just for reference
<em><strong>Mailbody.java</strong> : Used to generate HTML contents for your email contents</em></p>

<pre><code>public class MailBody {

    public static String getBody(String name,String contact,String address)
    {
        String str=null;

        str="&lt;td style=\"padding:40px 20px;\" id=\"yui_3_13_0_ym1_1_1392534689432_2560\"&gt;\n" +
                "\t\t\t\t&lt;table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" id=\"yui_3_13_0_ym1_1_1392534689432_2559\"&gt;\n" +
                "\t\t\t\t\t&lt;tbody id=\"yui_3_13_0_ym1_1_1392534689432_2558\"&gt;&lt;tr id=\"yui_3_13_0_ym1_1_1392534689432_2600\"&gt;\n" +
                "\t\t\t\t\t\t&lt;td align=\"left\" bgcolor=\"#272727\" style=\"padding:20px 10px;\" id=\"yui_3_13_0_ym1_1_1392534689432_2599\"&gt;\n" +
                "\t\t\t\t\t\t\t&lt;a rel=\"nofollow\" target=\"_blank\" href=\"https://www.mailkitchen.com\" id=\"yui_3_13_0_ym1_1_1392534689432_2604\"&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;img src=\"https://www.mailkitchen.com/images/logo-mk-en.png\" alt=\"MailKitchen\" title=\"MailKitchen\" border=\"0\" width=\"160\" height=\"30\" id=\"yui_3_13_0_ym1_1_1392534689432_2603\"&gt;\n" +
                "\t\t\t\t\t\t\t&lt;/a&gt;\n" +
                "\t\t\t\t\t\t&lt;/td&gt;\n" +
                "\t\t\t\t\t&lt;/tr&gt;\n" +
                "\t\t\t\t\t&lt;tr id=\"yui_3_13_0_ym1_1_1392534689432_2557\"&gt;\n" +
                "\t\t\t\t\t\t&lt;td align=\"left\" bgcolor=\"#FFFFFF\" style=\"color:#6F6E6E;font-size:16px;font-family:Lato, Helvetica, Arial, sans-serif;\" id=\"yui_3_13_0_ym1_1_1392534689432_2556\"&gt;\n" +
                "\t\t\t\t\t\t\t&lt;p align=\"center\" style=\"margin:30px 30px 0;\" id=\"yui_3_13_0_ym1_1_1392534689432_2555\"&gt;\n" +
                "\t\t\t\t\t\t\t\t Dear &lt;span style=\"color:#A7CA01;font-size:26px;\" id=\"yui_3_13_0_ym1_1_1392534689432_2597\"&gt; "+ name +",&lt;/span&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;br&gt;&lt;br&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;b&gt;Welcome to &lt;span style=\"color:#A7CA01;\"&gt;R&lt;/span&gt;ajvi Designing&lt;/b&gt;&lt;br&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;b&gt;and thank you for signing up on our Rajvi Designing Android Platform!&lt;/b&gt;\n" +
                "\t\t\t\t\t\t\t&lt;/p&gt;\n" +
                "\t\t\t\t\t\t\t&lt;p style=\"margin:20px 30px 0;text-indent:20px;\"&gt;\n" +
                "\t\t\t\t\t\t\t\tLots of new features will be added in the coming weeks for creating, sending and tracking your Portfolio - so stay tuned!&lt;br&gt;\n" +
                "\t\t\t\t\t\t\t\tFrom time to time, we will send you a newsletter keeping you updated on our activities, new functionalities and features of our software suite.\n" +
                "\t\t\t\t\t\t\t&lt;/p&gt;\n" +
                "\t\t\t\t\t\t\t&lt;p style=\"margin:20px 30px 0;text-indent:20px;\"&gt;\n" +
                "\t\t\t\t\t\t\t\t\n" +
                "\t\t\t\t\t\t\t&lt;/p&gt;\n" +
                "\t\t\t\t\t\t\t&lt;ul style=\"margin:20px 30px 0 60px;padding:0;color:#A7CA01;\"&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;li&gt;\n" +
                "\t\t\t\t\t\t\t\t\tName :&lt;a rel=\"nofollow\" target=\"_blank\" href=\"https://mail.mailkitchen.com/modeles/aide/mk.download.php?langue=en&amp;amp;guide=2\" style=\"color:#A7CA01;text-decoration:none;\"&gt;"+name+"&lt;/a&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;/li&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;li&gt;\n" +
                "\t\t\t\t\t\t\t\t\tContact :&lt;a rel=\"nofollow\" target=\"_blank\" href=\"https://mail.mailkitchen.com/modeles/aide/mk.download.php?langue=en&amp;amp;guide=3\" style=\"color:#A7CA01;text-decoration:none;\"&gt;"+contact+"&lt;/a&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;/li&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;li&gt;\n" +
                "\t\t\t\t\t\t\t\t\tAddress :&lt;a rel=\"nofollow\" target=\"_blank\" href=\"https://mail.mailkitchen.com/modeles/aide/mk.download.php?langue=en&amp;amp;guide=6\" style=\"color:#A7CA01;text-decoration:none;\"&gt;"+address+"&lt;/a&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;/li&gt;\n" +
                "\t\t\t\t\t\t\t&lt;/ul&gt;\n" +
                "\t\t\t\t\t\t\t&lt;p align=\"center\" style=\"margin:20px 30px 30px;\"&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;b&gt;We wish you beautiful email campaigns!&lt;/b&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;br&gt;&lt;br&gt;&lt;br&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;b&gt;&lt;i&gt;&lt;span style=\"color:#A7CA01;\"&gt;(&lt;/span&gt; &lt;span style=\"color:#A7CA01;\"&gt;R&lt;/span&gt;ajvi Designing Team &lt;span style=\"color:#A7CA01;\"&gt;)&lt;/span&gt;&lt;/i&gt;&lt;/b&gt;\n" +
                "\t\t\t\t\t\t\t&lt;/p&gt;\n" +
                "\t\t\t\t\t\t&lt;/td&gt;\n" +
                "\t\t\t\t\t&lt;/tr&gt;\n" +
                "\t\t\t\t\t&lt;tr&gt;\n" +
                "\t\t\t\t\t\t&lt;td align=\"center\" bgcolor=\"#EDEDED\" style=\"color:#6F6E6E;font-size:9px;font-family:Lato, Helvetica, Arial, sans-serif;padding:10px;\"&gt;\n" +
                "\t\t\t\t\t\t\tThis email has been sent by &lt;a rel=\"nofollow\" target=\"_blank\" href=\"https://www.mailkitchen.com/\" style=\"text-decoration:underline;color:#A7CA01;\"&gt;Rajvi Design&lt;/a&gt;, an Online Email Marketing Platform for Rajvi Design by Vikalp.&lt;br&gt;\n" +
                "\t\t\t\t\t\t\tPlease contact our customer service if you think that youâ€™ve received this email by mistake.\n" +
                "\t\t\t\t\t\t&lt;/td&gt;\n" +
                "\t\t\t\t\t&lt;/tr&gt;\n" +
                "\t\t\t\t\t&lt;tr&gt;\n" +
                "\t\t\t\t\t\t&lt;td bgcolor=\"#272727\" style=\"padding:10px;\"&gt;\n" +
                "\t\t\t\t\t\t\t&lt;table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;tbody&gt;&lt;tr&gt;\n" +
                "\t\t\t\t\t\t\t\t\t&lt;td width=\"30%\" align=\"right\" style=\"padding-right:10px;border-right:2px solid #4E4E4E;\"&gt;\n" +
                "\t\t\t\t\t\t\t\t\t\t&lt;a rel=\"nofollow\" target=\"_blank\" href=\"https://www.mailkitchen.com\"&gt;\n" +
                "\t\t\t\t\t\t\t\t\t\t\t&lt;img src=\"https://www.mailkitchen.com/images/logo-mk-gris-en.png\" alt=\"MailKitchen\" title=\"MailKitchen\" border=\"0\" width=\"110\" height=\"30\"&gt;\n" +
                "\t\t\t\t\t\t\t\t\t\t&lt;/a&gt;\n" +
                "\t\t\t\t\t\t\t\t\t&lt;/td&gt;\n" +
                "\t\t\t\t\t\t\t\t\t&lt;td align=\"left\" style=\"padding-left:10px;color:#6F6E6E;font-size:12px;font-family:Lato, Helvetica, Arial, sans-serif;\"&gt;\n" +
                "\t\t\t\t\t\t\t\t\t\tRajvi&lt;span style=\"color:#A7CA01;\"&gt;D &lt;/span&gt;esign&lt;span style=\"color:#FFFFF;\"&gt; (079) 66154709&lt;/span&gt; &lt;br&gt;\n" +
                "\t\t\t\t\t\t\t\t\t\t3,Near Giriraj 2 Near Vageshwari Bus Stop, Gopal Nagar Railway Station Road, Chandlodiya, Ahmedabad - 382481" +
                "\t\t\t\t\t\t\t\t\t&lt;/td&gt;\n" +
                "\t\t\t\t\t\t\t\t&lt;/tr&gt;\n" +
                "\t\t\t\t\t\t\t&lt;/tbody&gt;&lt;/table&gt;\n" +
                "\t\t\t\t\t\t&lt;/td&gt;\n" +
                "\t\t\t\t\t&lt;/tr&gt;\n" +
                "\t\t\t\t&lt;/tbody&gt;&lt;/table&gt;\n" +
                "\t\t\t&lt;/td&gt;";      

        return str;
    }
</code></pre>
