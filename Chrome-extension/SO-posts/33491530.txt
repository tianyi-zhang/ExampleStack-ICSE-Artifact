<p>Its better to use design library. And I think it is the proper way.</p>

<pre><code>compile 'com.android.support:design:22.2.0'
</code></pre>

<blockquote>
  <p>You can use <code>CoordinatorLayout</code> as a container for a specific
  interaction with one or more child views.</p>
  
  <p>And use <code>AppBarLayout</code> as a vertical LinearLayout. It implements many
  of the features of material designs app bar concept, namely scrolling
  gestures.</p>
</blockquote>

<p>Put this as your MainActivity layout</p>

<p></p>

<pre><code>&lt;android.support.design.widget.AppBarLayout
    android:id="@+id/appBarLayout"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"&gt;

    &lt;android.support.v7.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#2196F3"
        android:minHeight="?attr/actionBarSize"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        app:layout_scrollFlags="scroll|enterAlways"&gt;
    &lt;/android.support.v7.widget.Toolbar&gt;

    &lt;android.support.design.widget.TabLayout
        android:id="@+id/tab_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="?attr/colorPrimary"
        android:elevation="6dp"
        android:minHeight="?attr/actionBarSize"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar" /&gt;
&lt;/android.support.design.widget.AppBarLayout&gt;

&lt;android.support.v4.view.ViewPager
    android:id="@+id/pager"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"&gt;
&lt;/android.support.v4.view.ViewPager&gt;
</code></pre>

<p></p>

<p>Now the code</p>

<p>Put this as your MainActivity. Please mind the imports</p>

<pre><code>import android.support.design.widget.AppBarLayout;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;

public class MainActivity extends AppCompatActivity {

private Toolbar toolbar;
private TabLayout tabLayout;
private ViewPager viewPager;
private PagerAdapter adapter;
private ArrayList&lt;Fragment&gt; fragmentList = new ArrayList&lt;&gt;();//list of fragments or tabs


@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    fragmentList = getTabs();
    toolbar = (Toolbar) findViewById(R.id.toolbar);
    tabLayout = (TabLayout) findViewById(R.id.tab_layout);
    appBarLayout = (AppBarLayout) findViewById(R.id.appBarLayout);
    viewPager = (ViewPager) findViewById(R.id.pager);

    tabLayout.setBackgroundColor(Color.parseColor("#2196F3"));
    tabLayout.setSelectedTabIndicatorColor(Color.WHITE);
    tabLayout.setSelectedTabIndicatorHeight(6);

    tabLayout.addTab(tabLayout.newTab().setText("HOME"));
    tabLayout.addTab(tabLayout.newTab().setText("EVENTS"));
    toolbar.setTitle("Material Tabs");

    setSupportActionBar(toolbar);

    adapter = new PagerAdapter(getSupportFragmentManager(), tabLayout.getTabCount(), tabs);
    viewPager.setAdapter(adapter);
    viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
    tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
        @Override
        public void onTabSelected(TabLayout.Tab tab) {
            viewPager.setCurrentItem(tab.getPosition());
        }

        @Override
        public void onTabUnselected(TabLayout.Tab tab) {

        }

        @Override
        public void onTabReselected(TabLayout.Tab tab) {

        }
    });
}



public ArrayList&lt;Fragment&gt; getTabs() {
    tabs = new ArrayList&lt;&gt;();
    tabs.add(0, HomeFragment.getInstance());//your fragment instance for HOME
    tabs.add(1, EventFragment.getInstance());//your fragment instance for EVENTS
    return tabs;
}
}
</code></pre>

<p>Now create an Adapter for Tabs</p>

<pre><code>import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentStatePagerAdapter;

public class PagerAdapter extends FragmentStatePagerAdapter {
    private int mNumOfTabs;

private ArrayList&lt;Fragment&gt; tabs;


public PagerAdapter(FragmentManager fm, int NumOfTabs, ArrayList&lt;Fragment&gt; tabs) {
    super(fm);
    this.mNumOfTabs = NumOfTabs;
    this.tabs = tabs;
}

@Override
public Fragment getItem(int position) {
    return tabs.get(position);
}

@Override
public int getCount() {
    return mNumOfTabs;
}
}
</code></pre>

<p>Thats it. Now you can put any layouts/custom views in your fragments.</p>
