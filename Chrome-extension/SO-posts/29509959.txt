<p><strong>Explanation:</strong> Try writing your <code>GetRSSDataTask</code> class inside <code>RssFragment</code>, and call it from <code>RssFragment</code> on <code>onCreateView</code>. The error is because you create instance of <code>main activity</code> to call <code>GetRSSDataTask</code> in <code>RssFragment</code>.</p>

<p><strong>Solution:</strong> 
RssFragment.java:</p>

<pre><code>public class RssFragment extends Fragment {
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState) {

        GetRSSDataTask task = new GetRSSDataTask();
        task.execute("newsrss.bbc.co.uk/rss/newsonline_uk_edition/world/rss.xml");

         View rootView = inflater.inflate(R.layout.fragment_rss_news, container, false);
         return rootView;
    }


    public class GetRSSDataTask extends AsyncTask&lt;String, Void, List&lt;RssItem&gt;&gt; {

        private Activity ownerActivity;
        private Exception exceptionToBeThrown;

        @Override
        protected List&lt;RssItem&gt; doInBackground(String... urls) {

            // Debug the task thread name
            Log.d("RssReader", Thread.currentThread().getName());

            try {
                // Create RSS reader
                RssReader rssReader = new RssReader(urls[0]);

                // Parse RSS, get items
                return rssReader.getItems();

            } catch (Exception e) {
                Log.e("RssReader", e.getMessage());
                exceptionToBeThrown = e;
            }

            return null;
        }

        @Override
        protected void onPostExecute(List&lt;RssItem&gt; result) {
            if (exceptionToBeThrown != null) {
                TextView error = (TextView) findViewById(R.id.errorMessage);
                error.setText("No internet connection");  //Null pointer expection
            } else {

                // Get a ListView from main view
                ListView listItems= (ListView) findViewById(R.id.listMainView); //Null pointer exception

                // Create a list adapter
                ArrayAdapter&lt;RssItem&gt; adapter = new ArrayAdapter&lt;RssItem&gt;(local, android.R.layout.simple_list_item_1, result);
                // Set list adapter for the ListView
                listItems.setAdapter(adapter);

                // Set list view item click listener
                listItems.setOnItemClickListener(new ListListener(result, local));
            }


    }
}
</code></pre>

<p>MainActivity.java onCreate:</p>

<pre><code>protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Set reference to this activity
        local = this;

        // Debug the thread name
        Log.d("RssReader", Thread.currentThread().getName());

        // Initilization
        viewPager = (ViewPager) findViewById(R.id.pager);
        actionBar = getActionBar();
        mAdapter = new TabsPagerAdapter(getSupportFragmentManager());

        viewPager.setAdapter(mAdapter);
        //actionBar.setHomeButtonEnabled(false);
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);        

        // Adding Tabs
        for (String tab_name : tabs) {
            actionBar.addTab(actionBar.newTab().setText(tab_name).setTabListener(this));
        }

        /**
         * on swiping the viewpager make respective tab selected
         * */
        viewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {

            @Override
            public void onPageSelected(int position) {
                // on changing the page
                // make respected tab selected
                actionBar.setSelectedNavigationItem(position);
            }

            @Override
            public void onPageScrolled(int arg0, float arg1, int arg2) {
            }

            @Override
            public void onPageScrollStateChanged(int arg0) {
            }
        });

    }
</code></pre>
