<p>A plain byte array is not a gnerally recognized image format. You have to code the conversion yourself. Luckily its not very hard to do:</p>

<pre><code>int w = 640;
int h = 480;
BufferedImage i = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
for (int y=0; y&lt;h; ++y) {
    for (int x=0; x&lt;w; ++x) {
        // calculate index of pixel
        // depends on exact organization of image
        // sample assumes linear storage with r, g, b pixel order
        int index = (y * w * 3) + (x * 3);
        // combine to RGB format
        int rgb = ((data[index++] &amp; 0xFF) &lt;&lt; 16) |
                  ((data[index++] &amp; 0xFF) &lt;&lt;  8) |
                  ((data[index++] &amp; 0xFF)      ) |
                  0xFF000000;
        i.setRGB(x, y, rgb);
    }
}
</code></pre>

<p>The exact formula for pixel index depends on how you organized the data in the array - which you didn't really specify precisely. The prinicple is always the same though, combine the R, G, B value into an RGB (ARGB to be precise) value and put it in the BufferedImage using setRGB() method.</p>
