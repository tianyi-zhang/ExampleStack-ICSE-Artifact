<p>You can base an ArrayAdapter on a custom class instead of string. Here is an example:</p>

<pre><code>public class MyDataClass {
  public String street;
  public String name;
}
private class MyAdapter extends ArrayAdapter&lt;MyDataClass&gt; {
        @Override
  public View getView(int position, View convertView, ViewGroup parent) {

     LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
     View row = inflater.inflate(R.layout.list_item, parent,false);
     TextView tv1= (TextView) row.findViewById(R.id.textView1);
     TextView tv2= (TextView) row.findViewById(R.id.textView2);
     MyDataClass data = this.getItem(position);
     tv1.setText(data.street);
     tv2.setText(data.name);
     return row;
   }
}
</code></pre>

<p>To populate the Adapter with data you can use this snippet in the OnCreate method of the Activity:</p>

<pre><code>  ..
  MyAdapter adapter = new MyAdapter();
  MyDataClass lData = new MyDataClass();  // here was a mistake
  lData.name = "MyName";
  lData.street = "MyRoad";
  adapter.Add(lData);
  ..
  ListView.Adapter=adapter; // where Listview is the Listview
</code></pre>
