<p>Unfortunately I couldn't find a good solution for this problem. So I changed my approach. Instead of using Edittext I used Button and gave it an edittext like background. And in the onclick of the the button a Alertdialog comes and there the value is entered. And when selecting OK the typed text is set to the button. I think this is a way better option than using edittext in a list. </p>

<p>I used this code to give edittext background for button. </p>

<pre><code> &lt;?xml version="1.0" encoding="utf-8"?&gt;
    &lt;layer-list xmlns:android="http://schemas.android.com/apk/res/android" &gt;
      &lt;item&gt;
          &lt;shape &gt;
          &lt;solid android:color="#8C8F91" /&gt;
          &lt;/shape&gt;
      &lt;/item&gt;

  &lt;!-- main color --&gt;
  &lt;item android:bottom="1dp"
      android:left="1dp"
      android:right="1dp"&gt;
      &lt;shape &gt;
          &lt;solid android:color="#ffffff" /&gt;
      &lt;/shape&gt;
  &lt;/item&gt;

      &lt;!-- draw another block to cut-off the left and right bars --&gt;
      &lt;item android:bottom="6dp"&gt;
          &lt;shape &gt;
              &lt;solid android:color="#ffffff" /&gt;
          &lt;/shape&gt;
          &lt;/item&gt;
        &lt;/layer-list&gt;
</code></pre>

<p>Code for showing alertdialog on buttonclick:</p>

<pre><code>btnOther.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
            // get prompts.xml view
            LayoutInflater li = LayoutInflater.from(context);
            View promptsView = li.inflate(R.layout.layout_dialog, null);

            AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(
                    context);

            // set prompts.xml to alertdialog builder
            alertDialogBuilder.setView(promptsView);

            final EditText userInput = (EditText) promptsView
                    .findViewById(R.id.editTextDialogUserInput);
                if(child.getOtherText()!=null)
                {
                    userInput.setText(child.getOtherText().toString());
                }
            // set dialog message
            alertDialogBuilder
                .setCancelable(false)
                .setPositiveButton("OK",
                  new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog,int id) {

                child.setOtherText(userInput.getText().toString());
                notifyDataSetChanged();
                    }
                  })
                .setNegativeButton("Cancel",
                  new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog,int id) {
                    dialog.cancel();
                    }
                  });

            // create alert dialog
            AlertDialog alertDialog = alertDialogBuilder.create();

            // show it
            alertDialog.show();
        }
    });
</code></pre>
