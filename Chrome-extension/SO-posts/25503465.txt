<p>The only way I can think of to align the first column of each <code>Composite</code> is to set the <code>GridData#widthHint</code> to the same value. This value would have to be the maximal width of any of the elements in the first column.</p>

<p>I gave it a try and came up with this solution (it's not optimized and consequently might not be the most efficient way to do it):</p>

<pre><code>private static Random random = new Random(System.currentTimeMillis());

public static void main(String[] args)
{
    Display display = new Display();
    Shell shell = new Shell(display);
    shell.setText("StackOverflow");
    shell.setLayout(new GridLayout(1, false));

    Composite first = createComposite(shell);
    Composite second = createComposite(shell);

    synchronizeFirstColumn(2, first, second);

    shell.pack();
    shell.open();

    while (!shell.isDisposed())
    {
        if (!display.readAndDispatch())
        {
            display.sleep();
        }
    }
    display.dispose();
}

private static Composite createComposite(Shell shell)
{
    Composite comp = new Composite(shell, SWT.BORDER);

    comp.setLayout(new GridLayout(2, false));
    comp.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));

    for (int i = 0; i &lt; 3; i++)
    {
        String content = UUID.randomUUID().toString();
        content = content.substring(0, Math.round(random.nextFloat() * content.length()));

        Label label = new Label(comp, SWT.RIGHT);
        label.setText(content);
        label.setLayoutData(new GridData(SWT.END, SWT.TOP, false, false));

        Text text = new Text(comp, SWT.BORDER);
        text.setLayoutData(new GridData(SWT.FILL, SWT.TOP, true, false));
    }

    return comp;
}

private static void synchronizeFirstColumn(int nrOfColumns, Composite... comps)
{
    if (comps == null || comps.length == 0)
        return;

    int maxWidth = 0;

    for (Composite comp : comps)
    {
        Control[] controls = comp.getChildren();

        for (int i = 0; i &lt; controls.length; i += nrOfColumns)
        {
            int width = controls[i].computeSize(SWT.DEFAULT, SWT.DEFAULT).x;

            if (width &gt; maxWidth)
                maxWidth = width;
        }
    }


    for (Composite comp : comps)
    {
        Control[] controls = comp.getChildren();

        for (int i = 0; i &lt; controls.length; i += nrOfColumns)
        {
            Object data = controls[i].getLayoutData();

            if(data instanceof GridData)
            {
                GridData grid = (GridData) data;

                grid.widthHint = maxWidth;
            }
        }
    }
}
</code></pre>

<p>Looks like this:</p>

<p><img src="http://i.stack.imgur.com/XXkZg.png" alt="enter image description here"></p>
