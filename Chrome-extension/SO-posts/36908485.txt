<p>As Per My understanding creating dynamic spinner is not good idea. You can fill the data according to the item selected on different spinner and if you want to show other spinner once user select any data from first spinner then you can manage the visibility of other spinners. Still if you want to use spinner as dynamic then here is the code:-</p>

<p>MainActivity.java</p>

<pre><code>public class MainActivity extends AppCompatActivity {

private LinearLayout mContainerLL;
private Spinner mProductSPN;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    mContainerLL = (LinearLayout) findViewById(R.id.ll_spn_container);
    mProductSPN = (Spinner) findViewById(R.id.spn_product);
    ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.product));
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    mProductSPN.setAdapter(adapter);
    mProductSPN.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
        @Override
        public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position, long id) {
            prepareColorSpinner(position);
        }

        @Override
        public void onNothingSelected(AdapterView&lt;?&gt; parent) {

        }
    });
}

private void prepareSizeSpinner(int productPosition, int colorPosition) {
    if(mContainerLL.getChildCount()&gt;=3) {
        mContainerLL.removeViewAt(2);
    }
    Spinner sizeSPN = new Spinner(this);
    String[] sizeArray = null;
    switch (productPosition) {
        case 0:
            switch (colorPosition) {
                case 0:
                    sizeArray = getResources().getStringArray(R.array.size_1);
                    break;
                case 1:
                    sizeArray = getResources().getStringArray(R.array.size_2);
                    break;
                case 2:
                    sizeArray = getResources().getStringArray(R.array.size_3);
                    break;
            }
            break;
        case 1:
            switch (colorPosition) {
                case 0:
                    sizeArray = getResources().getStringArray(R.array.size_3);
                    break;
                case 1:
                    sizeArray = getResources().getStringArray(R.array.size_2);
                    break;
                case 2:
                    sizeArray = getResources().getStringArray(R.array.size_1);
                    break;
            }
            break;
        case 2:
            switch (colorPosition) {
                case 0:
                    sizeArray = getResources().getStringArray(R.array.size_2);
                    break;
                case 1:
                    sizeArray = getResources().getStringArray(R.array.size_1);
                    break;
                case 2:
                    sizeArray = getResources().getStringArray(R.array.size_3);
                    break;
            }
            break;
    }
    ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_spinner_item, sizeArray);
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    sizeSPN.setAdapter(adapter);
    mContainerLL.addView(sizeSPN,2);
}

private void prepareColorSpinner(final int productPosition) {
    if(mContainerLL.getChildCount()&gt;=2) {
        mContainerLL.removeViewAt(1);
    }
    Spinner colorSPN = new Spinner(this);
    String[] colorArray = null;
    switch (productPosition) {
        case 0:
            colorArray = getResources().getStringArray(R.array.color_1);
            break;
        case 1:
            colorArray = getResources().getStringArray(R.array.color_2);
            break;
        case 2:
            colorArray = getResources().getStringArray(R.array.color_3);
            break;
    }
    ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_spinner_item, colorArray);
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    colorSPN.setAdapter(adapter);
    mContainerLL.addView(colorSPN,1);
    colorSPN.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
        @Override
        public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position, long id) {
            prepareSizeSpinner(productPosition,position);
        }

        @Override
        public void onNothingSelected(AdapterView&lt;?&gt; parent) {

        }
    });
  }
}
</code></pre>

<p>strings.xml</p>

<pre><code>    &lt;string-array name="product"&gt;
    &lt;item&gt;Product 1&lt;/item&gt;
    &lt;item&gt;Product 2&lt;/item&gt;
    &lt;item&gt;Product 3&lt;/item&gt;
&lt;/string-array&gt;

&lt;string-array name="color_1"&gt;
    &lt;item&gt;Red&lt;/item&gt;
    &lt;item&gt;Black&lt;/item&gt;
    &lt;item&gt;White&lt;/item&gt;
&lt;/string-array&gt;
&lt;string-array name="color_2"&gt;
    &lt;item&gt;Green&lt;/item&gt;
    &lt;item&gt;Blue&lt;/item&gt;
&lt;/string-array&gt;
&lt;string-array name="color_3"&gt;
    &lt;item&gt;Voilet&lt;/item&gt;
    &lt;item&gt;Purple&lt;/item&gt;
&lt;/string-array&gt;

&lt;string-array name="size_1"&gt;
    &lt;item&gt;Small&lt;/item&gt;
    &lt;item&gt;Large&lt;/item&gt;
&lt;/string-array&gt;
&lt;string-array name="size_2"&gt;
    &lt;item&gt;Medium&lt;/item&gt;
    &lt;item&gt;XLarge&lt;/item&gt;
&lt;/string-array&gt;
&lt;string-array name="size_3"&gt;
    &lt;item&gt;Small&lt;/item&gt;
    &lt;item&gt;Medium&lt;/item&gt;
    &lt;item&gt;Large&lt;/item&gt;
&lt;/string-array&gt;
</code></pre>

<p>activity_main.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:paddingBottom="@dimen/activity_vertical_margin"
android:paddingLeft="@dimen/activity_horizontal_margin"
android:paddingRight="@dimen/activity_horizontal_margin"
android:paddingTop="@dimen/activity_vertical_margin"
tools:context="com.example.praween.customviews.MainActivity"&gt;

&lt;LinearLayout
    android:id="@+id/ll_spn_container"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"&gt;
&lt;Spinner
    android:id="@+id/spn_product"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"/&gt;
&lt;/LinearLayout&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<p>Change the logic according to your need as I have written the logic on behalf of one scenario you have shared.</p>
