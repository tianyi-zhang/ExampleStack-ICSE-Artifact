<p>Have you tried using <a href="http://tools.android.com/tech-docs/unit-testing-support" rel="nofollow">Android Unit Testing Support</a> + Multidex + Robolectric + Mockito ?.</p>

<p>I have it working with some small changes:</p>

<ul>
<li>I can't run the Unit tests through AS, only command line.</li>
<li>Need to use version 1.9.0 of Mockito as version 1.9.5 is not working propertly with Robolectric + Multidex. (if you make it work, please share :) ). I'm using version 1.9.5 in my instrumentation tests.</li>
<li>Implemented the attachBaseContext on my MainApplication as follows:</li>
</ul>

<pre class="lang-java prettyprint-override"><code>  @Override
  protected void attachBaseContext(Context base) {
    super.attachBaseContext(base);
    try{
        MultiDex.install(this);
    } catch (RuntimeException ignore){
        //Multidex error when running Robolectric tests =&gt; ignore.
    }
  } 
</code></pre>

<ul>
<li><p>Must exclude duplicate dependencies (<a href="http://stackoverflow.com/questions/28551989/tests-fail-after-espresso-2-upgrade-failed-instrumentation-run-failed-due-to/28747655#28747655">check this post</a>)</p></li>
<li><p>I'm using a custom Robolectric runner, where I've just implemented its constructor (to set the correct path of resource files):</p></li>
</ul>

<pre class="lang-java prettyprint-override"><code>public RobolectricCustomRunner(Class&lt;?&gt; testClass) throws InitializationError     {
    super(testClass);
    String buildVariant = (BuildConfig.FLAVOR.isEmpty() ? "" : BuildConfig.FLAVOR+ "/") + BuildConfig.BUILD_TYPE;
    String intermediatesPath = "build/intermediates";

    System.setProperty("android.package", BuildConfig.APPLICATION_ID);
    System.setProperty("android.manifest", intermediatesPath + "/manifests/full/" + buildVariant + "/AndroidManifest.xml");
    System.setProperty("android.resources", intermediatesPath + "/res/" + buildVariant);
    System.setProperty("android.assets", intermediatesPath + "/assets/" + buildVariant);
}
</code></pre>

<p>Hope it helps.</p>
