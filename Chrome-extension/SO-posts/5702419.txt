<p>I would recommend that you use a Map instead of a list and then you can do something like this:</p>

<pre><code> public static void main(String[] args) throws Exception{
         HashMap&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();
         map.put("name10", 2);
         map.put("name20", 1);
         Map&lt;String, Integer&gt; sortedMap = sortByValue(map);

         for (String key : sortedMap.keySet()) {
                System.out.println("key/value: " + key + "/"+sortedMap.get(key));
            }
        }

    static Map sortByValue(Map map) {
         LinkedList list = new LinkedList(map.entrySet());
         Collections.sort(list, new Comparator() {
              public int compare(Object o1, Object o2) {
                   return ((Comparable) ((Map.Entry) (o1)).getValue())
                  .compareTo(((Map.Entry) (o2)).getValue());
              }
         });

        Map result = new LinkedHashMap();
        for (Iterator it = list.iterator(); it.hasNext();) {
            Map.Entry entry = (Map.Entry)it.next();
            result.put(entry.getKey(), entry.getValue());
        }
        return result;
    } 
</code></pre>

<p><a href="http://stackoverflow.com/q/109383/329637">How to sort a Map&lt;Key, Value&gt; on the values in Java?</a></p>
