<p>In my Game I have implemented this thing <a href="http://www.anddev.org/example_detecting_-und-quotshake-und-quot_with_the_accelerometer-t4451.html" rel="nofollow">from here</a></p>

<p>The example code is really very simple and easy to understand.</p>

<p>MyActivity.java</p>

<pre><code>public class MyActivity extends Activity
{
    private MyView m_myView;
    private SensorManager m_sensorManager;

    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState)
    {           
        super.onCreate(savedInstanceState);

        m_myView = (MyView)findViewById(R.id.my_view);

        m_sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
        m_sensorManager.registerListener(m_myView,
                SensorManager.SENSOR_ACCELEROMETER,
                SensorManager.SENSOR_DELAY_GAME);
    }

        @Override
        protected void onPause()
        {
                super.onPause();

                m_sensorManager.unregisterListener(m_myView);
        }

        @Override
        protected void onResume()
        {               
                super.onResume();

                m_sensorManager.registerListener(m_myView,
                        SensorManager.SENSOR_ACCELEROMETER,
                        SensorManager.SENSOR_DELAY_GAME;
        }
}
</code></pre>

<p>MyView.java</p>

<pre><code>public class MyView extends View implements SensorListener
{
    private float m_totalForcePrev; // stores the previous total force value

    // do your constructor and all other important stuff here
    // make sure you set totalForcePrev to 0
    // ...

        public void onAccuracyChanged(int arg0, int arg1)
        {
                // I have no desire to deal with the accuracy events
        }

        public void onSensorChanged(int sensor, float[] values)
        {       
                if(sensor == SensorManager.SENSOR_ACCELEROMETER)
                {
                        double forceThreshHold = 1.5f;

                        double totalForce = 0.0f;
                        totalForce += Math.pow(values[SensorManager.DATA_X]/SensorManager.GRAVITY_EARTH, 2.0);
                        totalForce += Math.pow(values[SensorManager.DATA_Y]/SensorManager.GRAVITY_EARTH, 2.0);
                        totalForce += Math.pow(values[SensorManager.DATA_Z]/SensorManager.GRAVITY_EARTH, 2.0);
                        totalForce = Math.sqrt(totalForce);

                        if((m_gameState == STATE_RUNNING) &amp;&amp; (totalForce &lt; forceThreshHold) &amp;&amp; (m_totalForcePrev &gt; forceThreshHold))
                        {
                                doWrenchWord();
                        }

                        m_totalForcePrev = totalForce;
                }
        }

}
</code></pre>

<p>The problem in your side can be,</p>

<p>The code for <code>getAccelerometer(se);</code> function Or you have done some mistake in connecting the <a href="http://code.google.com/p/openintents/wiki/SensorSimulator" rel="nofollow">SensorSimulator</a> to your emulator, i think you will need to disconnect it and reconnect it check the ip and port also the setting tab and check the sensor is selected/available or not. and also some additional settings for the time delay for update and refresh..just follow them what they have written in the documentation.</p>
