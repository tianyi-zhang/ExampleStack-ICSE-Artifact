<p>You did not override <code>hashCode()</code> and <code>equals()</code> in your <code>Console</code> class.</p>

<p>Therefore, you end up with java's default implementation, which considers two instances of <code>Console</code> (and you are creating new instances in your methods) to be different even if you pass the same strings to the constructor.</p>

<p>To solve your issue, you need to "help" java identify equal objects by implementing a custom <code>equals()</code> method in your <code>Console</code> class. To comply with <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-" rel="nofollow">the general contract</a> (and due to the way a <code>HashSet</code> tries to find elements) you will then also need to implement a custom <code>hashCode()</code> method as well.</p>

<p>A basic implementation could e.g. be</p>

<pre><code>@Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result
            + ((companyName == null) ? 0 : companyName.hashCode());
    result = prime * result
            + ((consoleName == null) ? 0 : consoleName.hashCode());
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    Console other = (Console) obj;
    if (companyName == null) {
        if (other.companyName != null)
            return false;
    } else if (!companyName.equals(other.companyName))
        return false;
    if (consoleName == null) {
        if (other.consoleName != null)
            return false;
    } else if (!consoleName.equals(other.consoleName))
        return false;
    return true;
}
</code></pre>

<p>(as generated by eclipse)</p>

<p>Bonus: If it's not a typo in the question, you'll also want to change the assignment in your constructor from</p>

<pre><code>companyName = companyName;
</code></pre>

<p>to</p>

<pre><code>companyName = anyCompany;
</code></pre>
