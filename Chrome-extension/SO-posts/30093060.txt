<p>I took a simple approach as those are usually the best and fastest:</p>

<p>1- Get bitmap from the <code>ImageView</code>
   2- Get bitmap’s dimensions
   3- Calculate scaling multiplier
   4- Scale
   5- Get scaled bitmap dimensions
   6- Apply the scaled image
   7- Resize <code>ImageView</code> to exact dimensions of the scaled bitmap
   8- Voilá</p>

<p>here is the code and use it To fit The Image Clicked from the camera the the <code>ImageView</code></p>

<pre><code>private void scaleImage(ImageView view, int boundBoxInDp)
</code></pre>

<p>{</p>

<pre><code>Drawable drawing = view.getDrawable();

Bitmap bitmap = ((BitmapDrawable)drawing).getBitmap();

// Get current dimensions
int width = bitmap.getWidth();
int height = bitmap.getHeight();

// Determine how much to scale: the dimension requiring less scaling is
// closer to the its side. This way the image always stays inside your
// bounding box AND either x/y axis touches it.
float xScale = ((float) boundBoxInDp) / width;
float yScale = ((float) boundBoxInDp) / height;
float scale = (xScale &lt;= yScale) ? xScale : yScale;

// Create a matrix for the scaling and add the scaling data
Matrix matrix = new Matrix();
matrix.postScale(scale, scale);

// Create a new bitmap and convert it to a format understood by the ImageView
Bitmap scaledBitmap = Bitmap.createBitmap(bitmap, 0, 0, width, height, matrix, true);
BitmapDrawable result = new BitmapDrawable(scaledBitmap);
width = scaledBitmap.getWidth();
height = scaledBitmap.getHeight();

// Apply the scaled bitmap
view.setImageDrawable(result);

// Now change ImageView's dimensions to match the scaled image
LinearLayout.LayoutParams params = (LinearLayout.LayoutParams) view.getLayoutParams();
params.width = width;
params.height = height;
view.setLayoutParams(params);
</code></pre>

<p>}</p>

<pre><code>private int dpToPx(int dp)
{
    float density = getApplicationContext().getResources().getDisplayMetrics().density;
    return Math.round((float)dp * density);
}
</code></pre>

<p>And To use Use this </p>

<pre><code>public class TestActivity extends Activity
</code></pre>

<p>{</p>

<pre><code>    @Override public void onCreate(Bundle savedInstanceState)
    {


 super.onCreate(savedInstanceState);
    setContentView(R.layout.test);

    // ImageViews must be under LinearLayout in the xml or the code crashes into scaleImage(). Tune scaleImage() into your needs.
    ImageView view1 = (ImageView) findViewById(R.id.test1);
    ImageView view2 = (ImageView) findViewById(R.id.test2);

    scaleImage(view1, 250); // in dp
    scaleImage(view2, 100); // in dp
}       
</code></pre>

<p>}</p>
