<p>the point is, you didn't understand how asynctask works!</p>

<p>You MUST read the guide Processes and Threads: <a href="http://developer.android.com/guide/components/processes-and-threads.html" rel="nofollow">http://developer.android.com/guide/components/processes-and-threads.html</a></p>

<p>But ok, let me try help you.</p>

<p>On doInBackground you are correctly calling the method retrieveStream, but you are doing nothing with the stream. So, you have to process the stream and then, return it. As you said you are expecting an JSON, I'm assuming you will receive a String, so the code of your retrieveStream should like this:</p>

<pre><code>public String retrieveStream(String url) {

    DefaultHttpClient client = new DefaultHttpClient();
    HttpGet getRequest = new HttpGet(url);

    try {
        HttpResponse getResponse = client.execute(getRequest);
        final int statusCode = getResponse.getStatusLine().getStatusCode();

        if (statusCode != HttpStatus.SC_OK) {
            Log.w(getClass().getSimpleName(),
                    "Error " + statusCode + " for URL " + url);
            return null;
        }

        HttpEntity getResponseEntity = getResponse.getEntity();
        String jsonString = EntityUtils.toString(getResponseEntity);
        return jsonString;
    } catch (IOException e) {
        getRequest.abort();
        Log.w(getClass().getSimpleName(), "Error for URL " + url, e);
    }

    return null;
}
</code></pre>

<p>Look that I changed the return type to String. And maybe, you should change the name to retrieveMoviesJSON or something like this.</p>

<p>And you should change your AsyncTask to something like this:</p>

<pre><code>class PerformMovieSearch AsyncTask&lt;String, Void, ArrayList&lt;Movie&gt;&gt;() {

            @Override
            protected void onPreExecute() {
                progressDialog= ProgressDialog.show(context, "Please Wait","Searching movies", true);
            }

            @Override
            protected ArrayList&lt;Movie&gt; doInBackground(String... params) {
                String moviesJson = retrieveStream[params[0]];
                JSONObject moviesJson = new JSONObject(moviesJson);
                ArrayList&lt;Movie&gt; movies = new ArrayList&lt;Movie&gt;();
                /*
                 * Do your code to process the JSON and create an ArrayList of films.
                 * It's just a suggestion how to store the data.
                 */
                return movies;
            }

            protected void onPostExecute(ArrayList&lt;Movie&gt; result) {
                progressDialog.dismiss();
                //create a method to set an ArrayList in your adapter and set it here.
                MyActivity.mListAdapter.setMovies(result);
                MyActivity.mListAdapter.notifyDataSetChanged();
            }
        }
</code></pre>

<p>And you can call as the same way you were doing.</p>

<p>Is it clear? Need more explanation?</p>

<p>[]s
Neto</p>
