<p>If you don't like how Android handles it when you remove your finger to stop scrolling, you could overload that logic like so:</p>

<pre><code>ScrollView myScrollView = (ScrollView) findViewById(R.id.my_scrollview_id);
myScrollView.setOnTouchListener(new OnTouchListener() {

        @Override
        public boolean onTouch(View v, MotionEvent event) {
            switch (event.getAction()) {
            case MotionEvent.ACTION_DOWN:
                if (mVelocityTracker == null) {
                    mVelocityTracker = VelocityTracker.obtain();
                } else {
                    mVelocityTracker.clear();
                }
                mVelocityTracker.addMovement(event);
                break;
            case MotionEvent.ACTION_MOVE:
                mVelocityTracker.addMovement(event);
                mVelocityTracker.computeCurrentVelocity(1000);
                break;
            case MotionEvent.ACTION_UP:
            case MotionEvent.ACTION_CANCEL:
                ((ScrollView)v).smoothScrollBy(0, (int) (mVelocityTracker.getYVelocity()*myScalarMultiple));
                return true;
            }
            return false;
        }

    });
</code></pre>

<p>We return "false" for ACTION_DOWN and ACTION_MOVE because we just want to impact the velocity tracker, not consume the touch events to the ScrollView. You'd have to experiment also with the value of <code>myScalarMultiple</code> to get the results you like.</p>
