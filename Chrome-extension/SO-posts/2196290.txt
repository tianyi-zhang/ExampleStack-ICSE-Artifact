<p>Thank you all very much for your help, the problem was that my java md5 did not behave like a php MD5. </p>

<p>I found a solution to the problem which basically (in Java) take the byte array and convert it into a hex string and THEN get the bytes for this string which is then MD5'd rather than using the un hex'd byte array. See solutions below</p>

<p>See the following for the result: <a href="http://forums.sun.com/thread.jspa?forumID=9&amp;threadID=718781" rel="nofollow">http://forums.sun.com/thread.jspa?forumID=9&amp;threadID=718781</a></p>

<pre><code>static String byteArrayToHexString(byte byteValues[]) {
        byte singleChar = 0;
        if (byteValues == null || byteValues.length &lt;= 0)
            return null;

        String entries[] = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
                "a", "b", "c", "d", "e", "f" };

        StringBuffer out = new StringBuffer(byteValues.length * 2);

        for (int i = 0; i &lt; byteValues.length; i++) {
            singleChar = (byte) (byteValues[i] &amp; 0xF0);
            singleChar = (byte) (singleChar &gt;&gt;&gt; 4);
            // shift the bits down
            singleChar = (byte) (singleChar &amp; 0x0F);
            out.append(entries[(int) singleChar]); 
            singleChar = (byte) (byteValues[i] &amp; 0x0F); 
            out.append(entries[(int) singleChar]);
        }
        String rslt = new String(out);
        return rslt;
    }
</code></pre>

<p>Thanks a lot for all those who posted, cant thank you enough!</p>
