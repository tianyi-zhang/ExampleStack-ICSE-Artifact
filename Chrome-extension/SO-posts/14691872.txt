<p>I know this has been inactive for a year, but it's still a problem in 2013. Create a new class that extends HorizontalScrollView and copy / paste the code below.</p>

<pre><code>@Override
public boolean onTouchEvent(MotionEvent ev) {
    autoScrolling = false;
    return super.onTouchEvent(ev);
}

private int getScrollRange() {
    int scrollRange = 0;
    if(getChildCount() &gt; 0) {
        View child = getChildAt(0);
        scrollRange = Math.max(0, child.getWidth() - (getWidth() - getPaddingLeft() - getPaddingRight()));
    }
    return scrollRange;
}

private boolean gravityRight = false;
private boolean autoScrolling = false;

@Override
protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
    // HorizontalScrollView is broken for Gravity.RIGHT. So we're fixing it.
    if(getChildCount() == 0) return super.onLayout(changed, left, top, right, bottom);
    int childWidth = getChildAt(0).getWidth();
    super.onLayout(changed, left, top, right, bottom);
    int delta = getChildAt(0).getWidth() - childWidth;
    AdvancedDisplay view = getView();
    ScrollableDisplay.LayoutParams p = (LayoutParams) view.getLayoutParams();
    int horizontalGravity = p.gravity &amp; Gravity.HORIZONTAL_GRAVITY_MASK;
    int verticalGravity = p.gravity &amp; Gravity.VERTICAL_GRAVITY_MASK;
    if(horizontalGravity == Gravity.RIGHT) {
        if(getScrollRange() &gt; 0) {
            gravityRight = true;
            p.gravity = Gravity.LEFT | verticalGravity;
            view.setLayoutParams(p);
            super.onLayout(changed, left, top, right, bottom);
        }
    }
    else if(gravityRight) {
        if(getScrollRange() == 0) {
            gravityRight = false;
            p.gravity = Gravity.RIGHT | verticalGravity;
            view.setLayoutParams(p);
            super.onLayout(changed, left, top, right, bottom);
        }
    }
    if(gravityRight &amp;&amp; delta &gt; 0) {
        autoScrolling = false;
        scrollBy(delta, 0);
        autoScrolling = true;
    }
}

@Override
public void computeScroll() {
    if(autoScrolling) return;
    super.computeScroll();
}

@Override
public void scrollTo(int x, int y) {
    if(autoScrolling) return;
    super.scrollTo(x, y);
}
</code></pre>
