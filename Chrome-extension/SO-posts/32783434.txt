<p><strong>Solution:</strong></p>

<p>You need to apply <a href="http://developer.android.com/reference/android/text/InputFilter.html" rel="nofollow">InputFilter</a> on your <code>EditText</code>.</p>

<p><strong>Example:</strong></p>

<p>Set filter on your <code>EditText</code></p>

<pre><code>etNonCyrillic = (EditText) findViewById(R.id.etNonCyrillic );
etNonCyrillic .setFilters(new InputFilter[]{cyrillicFilter});
</code></pre>

<p>Implementation <code>cyrillicFilter</code>:</p>

<pre><code>    public static InputFilter cyrillicFilter = new InputFilter() {
    @Override
    public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        boolean keepOriginal = true;
        StringBuilder sb = new StringBuilder(end - start);
        for (int i = start; i &lt; end; i++) {
            char c = source.charAt(i);
            if (!isCyrillicCharacter(c))
            {
                sb.append(c);
            }
            else
            {
                keepOriginal = false;
            }
        }
        if (keepOriginal)
            return null;
        else {
            if (source instanceof Spanned) {
                SpannableString sp = new SpannableString(sb);
                TextUtils.copySpansFrom((Spanned) source, start, sb.length(), null, sp, 0);
                return sp;
            } else {
                return sb;
            }           
        }
    }

    @SuppressLint("NewApi")
    private boolean isCyrillicCharacter(char c)
    {
        boolean isPriorToKitkat = android.os.Build.VERSION.SDK_INT&lt;19;
        UnicodeBlock block = UnicodeBlock.of(c);
        boolean isCyrillicCharacter = (block.equals(UnicodeBlock.CYRILLIC) || block.equals(UnicodeBlock.CYRILLIC_SUPPLEMENTARY) || (isPriorToKitkat?false:(block.equals(UnicodeBlock.CYRILLIC_EXTENDED_A) || block.equals(UnicodeBlock.CYRILLIC_EXTENDED_B))));
        return isCyrillicCharacter;
    }
};
</code></pre>
