<p>Unfortunately none of these worked for me but after fiddling around with all of your solutions I found something that worked. </p>

<p>It will error casting the textView.getText() to Spannable unless you specify it as SPANNABLE</p>

<p>Also Notice from @CommonsWare's page:</p>

<p>Note that you do not want to call setText() on the TextView, thinking that you would be replacing the text with the modified version. You are modifying the TextViewâ€™s text in place in this fixTextView() method, and therefore setText() is not necessary. Worse, if you are using android:autoLink, setText() would cause Android go back through and add URLSpans again.</p>

<pre><code>accountAddressTextView.setText(accountAddress, TextView.BufferType.SPANNABLE);

stripUnderlines(accountAddressTextView);

private void stripUnderlines(TextView textView) {
    Spannable entrySpan = (Spannable)textView.getText();
    URLSpan[] spans = entrySpan.getSpans(0, entrySpan.length(), URLSpan.class);

    for (URLSpan span: spans) {
            int start = entrySpan.getSpanStart(span);
            int end = entrySpan.getSpanEnd(span);
            entrySpan.removeSpan(span);
            span = new URLSpanNoUnderline(entrySpan.subSequence(start, end).toString());
            entrySpan.setSpan(span, start, end, 0);
    }
}
</code></pre>
