<p>your getView Method is implemented wrong, more precisely the view holder pattern.
im guessing you see the right amount of entries but all with same content</p>

<p>try this:</p>

<pre><code>@Override
public View getView(final int position, View convertView, ViewGroup viewGroup) {
    ViewHolder holder = null;
    if (convertView == null) {
        convertView = inflater.inflate(R.layout.list_item_posibility, viewGroup, false);
        holder = new Holder();
        holder.possibilityTitle = (TextView) convertView.findViewById(R.id.text_possibility);
            convertView.setTag(holder);
    } else {
        holder = (ViewHolder)convertView.getTag();
    }

    holder.possibilityTitle.setText(possibilitiesList.get(position));

    return convertView;
}
</code></pre>

<p>and somehow i think your setPossibilitesMethod seems odd. id probably use something like this</p>

<pre><code>public void setPossibilitiesList(List&lt;String&gt; possibilitiesList) {
    this.possibilitiesList = possibilitiesList;
    notifyDataSetChanged();
}

public void addItem (final String item) {
    possibilitiesList.add(item);
    notifyDataSetChanged();
}

public void addItems (List&lt;String&gt; possibilitiesList) {
    this.possibilitiesList.addAll(possibilitiesList);
    notifyDataSetChanged();
}
</code></pre>

<p>and you can shorten the code for the retrieval of the inflaterService like this:</p>

<pre><code>public PossibilitiesAdapter(Context context) {
    inflater = LayoutInflater.fromContext(context);
}
</code></pre>

<p>In addition you dont have to cast it</p>

<p><strong>updated</strong></p>

<pre><code>@Override
public int getCount(){
    for (String possibility : this.possibilities){
        System.out.println(possibility);
    }
    int size = this.possibilities();
    System.out.println("getCount: " + size);
    return size;
}
</code></pre>
