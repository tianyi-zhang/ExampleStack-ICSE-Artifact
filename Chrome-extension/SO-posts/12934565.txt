<p>Set the divider to height to 0 and implement a View in your item layout with the height of 1 and change its color based on the list item every time the view is built.</p>

<p>Here's an XML layout sample:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical" &gt;

    &lt;TextView 
        android:id="@+id/text"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content" /&gt;

    &lt;View 
        android:id="@+id/divider"
    android:layout_width="fill_parent"
    android:layout_height="1dp"
    android:background="#FFFFFFFF" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>And this is how you change the color in the adapter:</p>

<pre><code>public class MyAdapter extends BaseAdapter {
    /** List of items to show */
    private ArrayList&lt;String&gt; items = new ArrayList&lt;String&gt;();
    private Context context;
    private int color[];

    public OffersAdapter(Context c, ArrayList&lt;String&gt; items, int color[])
    {
        super();
        this.context = c;
        this.items = items;
        this.color = color;
    }

    public int getCount() {
        return items.size();
    }

    public Object getItem(int position) {
        return null;
    }

    public long getItemId(int position) {
        return 0;
    }

public View getView(final int position, View convertView, ViewGroup parent) {
    final ViewHolder viewHolder;

    if(null == convertView)
    {
        LayoutInflater inflater = LayoutInflater.from(context);
        convertView = inflater.inflate(R.layout.list_item, parent, false);

        viewHolder.text = (TextView) convertView.findViewById(R.id.text);
        viewHolder.divider = (View) convertView.findViewById(R.id.divider);

        convertView.setTag(viewHolder);
    } else {
        //Retrieve the current view
        viewHolder = (ViewHolder) convertView.getTag(); 
    }

    //This is where you chance the divider color based on the item  
    viewHolder.divider.setBackgroundColor(color[position]);

  viewHolder.text.setText(items.get(position));

    return convertView;
}

//Holds the current view
 private static class ViewHolder {
         public TextView text;
         public View divider;
     }   
}
</code></pre>

<p>Where <code>int color[]</code> is a list of the colors you want to use.</p>

<p>More about <a href="http://www.vogella.com/articles/AndroidListView/article.html#adapterperformance_hoder">ViewHolder read here</a>.</p>
