<p>I agree with Daniele- your service should know when to stop itself and stopping it on a timer is strange. That said, to stop a service at a specific time each day you could simply send in an extra to your Service. When the Service sees the extra, it knows to stop.</p>

<p>Using what is essentially your code,</p>

<pre><code>Calendar calendar = Calendar.getInstance();
calendar.set(Calendar.HOUR_OF_DAY, 9);
calendar.set(Calendar.MINUTE, 0);
calendar.set(Calendar.SECOND, 0); // set the time when youre supposed to stop
Intent serviceIntent = new Intent(getApplicationContext(), Service.class);
serviceIntent.setAction("stop");
PendingIntent pi = PendingIntent.getService(getApplicationContext(), 0,
        serviceIntent, PendingIntent.FLAG_NO_CREATE);
AlarmManager am = (AlarmManager) getApplicationContext().getSystemService(Context.ALARM_SERVICE);
am.setRepeating(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(),
        AlarmManager.INTERVAL_DAY, pi);
</code></pre>

<p>and in your service's onStartCommand you simply do something like</p>

<pre><code>public void onStartCommand()
 {
 if("stop".equals(intent.getAction))
 {
    stopSelf();
    return;
 }
 else {
    // do whatever you were doing 
 }
 }
</code></pre>

<p>Try to use constants instead of a literal like "stop", though since that's good practice. </p>
