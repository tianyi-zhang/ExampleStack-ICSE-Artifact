<p>This is how i use a custom toast.</p>

<pre><code>public class CustomToast {

    public static Toast makeToast(Activity activity, String text, int duraion ){
        LayoutInflater inflater = activity.getLayoutInflater();
        View layout = inflater.inflate(R.layout.toast_achievement, (ViewGroup) activity.findViewById(R.id.toast_layout_root));

        TextView textView = (TextView) layout.findViewById(R.id.text);
        textView.setText(text);

        Toast toast = new Toast(activity.getApplicationContext());
        toast.setDuration(duraion);
        toast.setView(layout);
        toast.setGravity(Gravity.CENTER, 0, 0);
        return toast;
    }
}
</code></pre>

<p>and the xml</p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/toast_layout_root"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical"
    android:layout_margin="10dp"
    android:padding="8dp" &gt;

 &lt;!-- content goes here--&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>not that the id has to be toast_layout_root or it wont work.</p>

<p>Basically, you don't need to pass a view along anyway.</p>
