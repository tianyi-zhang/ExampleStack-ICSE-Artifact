<p>First of all, I think Url encoded value pasted above is corrupted. In url encoding, hexedecimal representation must lead after <code>%</code> character. But there is part like this: <code>%1E% %06</code></p>

<p>You can use this TextUtil class to encode/decode from/to byte array!</p>

<pre><code>String xmlValue = &lt;your xml captcha value&gt;
byte[] decoded = TextUtil.urlDecode(xmlValue.getBytes("UTF-8"));

public final class TextUtil {
static final String HEX_DIGITS = "0123456789ABCDEF";

protected static String urlEncode(byte[] rs) {
    StringBuffer result = new StringBuffer(rs.length * 2);

    for (int i = 0; i &lt; rs.length; i++) {
        char c = (char) rs[i];

        switch (c) {
        case '_':
        case '.':
        case '*':
        case '-':
        case '/':
            result.append(c);
            break;

        case ' ':
            result.append('+');
            break;

        default:
            if ((c &gt;= 'a' &amp;&amp; c &lt;= 'z') || (c &gt;= 'A' &amp;&amp; c &lt;= 'Z') || (c &gt;= '0' &amp;&amp; c &lt;= '9')) {
                result.append(c);
            } else {
                result.append('%');
                result.append(HEX_DIGITS.charAt((c &amp; 0xF0) &gt;&gt; 4));
                result.append(HEX_DIGITS.charAt(c &amp; 0x0F));
            }
        }

    } 

    return result.toString();
}

protected static byte[] urlDecode(byte[] bytes) throws UnsupportedEncodingException,
        IllegalArgumentException {
    if (bytes == null) {
        return null;
    }

    byte[] decodeBytes = new byte[bytes.length];
    int decodedByteCount = 0;

    try {
        for (int count = 0; count &lt; bytes.length; count++) {
            switch (bytes[count]) {
            case '+':
                decodeBytes[decodedByteCount++] = (byte) ' ';
                break;

            case '%':
                decodeBytes[decodedByteCount++] = (byte) ((HEX_DIGITS.indexOf(bytes[++count]) &lt;&lt; 4) + (HEX_DIGITS
                        .indexOf(bytes[++count])));

                break;

            default:
                decodeBytes[decodedByteCount++] = bytes[count];
            }
        }

    } catch (IndexOutOfBoundsException ae) {
        throw new IllegalArgumentException("Malformed encoding");
    }

    return decodeBytes;
}
}
</code></pre>
