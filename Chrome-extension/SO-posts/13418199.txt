<p>You might consider using Android <a href="http://developer.android.com/reference/android/app/DialogFragment.html" rel="nofollow">AlertDialog Fragment</a>.  It's slightly less flexible in some respects, but seems to do exactly what you need to here.  Although, this is not where your problem lies.  </p>

<p>Either way, you will create your dialog by doing something like this(either in a seperate file or in the same activity, doesnt matter)</p>

<pre><code>public static class MyAlertDialogFragment extends DialogFragment {

public static MyAlertDialogFragment newInstance(int title) {
    MyAlertDialogFragment frag = new MyAlertDialogFragment();
    Bundle args = new Bundle();
    args.putInt("title", title);
    frag.setArguments(args);
    return frag;
}

@Override
public Dialog onCreateDialog(Bundle savedInstanceState) {
    int title = getArguments().getInt("title");

    return new AlertDialog.Builder(getActivity())
            .setIcon(R.drawable.alert_dialog_icon)
            .setTitle(title)
            .setPositiveButton(R.string.alert_dialog_ok,
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int whichButton) {
                        ((FragmentAlertDialog)getActivity()).doPositiveClick();
                    }
                }
            )
            .setNegativeButton(R.string.alert_dialog_cancel,
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int whichButton) {
                        ((FragmentAlertDialog)getActivity()).doNegativeClick();
                    }
                }
            )
            .create();
    }
}
</code></pre>

<p>Then, from the calling activity, you can use these callback methods:</p>

<pre><code>void showDialog() 
{
        DialogFragment newFragment = MyAlertDialogFragment.newInstance(
        "Title");
        newFragment.show(getFragmentManager(), "dialog");
}

public void doPositiveClick() {

    Log.i("FragmentAlertDialog", "Positive click!");
    editText.setText("positive");
}

public void doNegativeClick() {
    // Do stuff here.
    Log.i("FragmentAlertDialog", "Negative click!");
    editText.setText("negative");
}
</code></pre>

<p>So in your buttons onClick(), you will simply call showDialog(), and the rest should work as expected</p>
