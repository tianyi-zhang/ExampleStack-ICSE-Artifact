<p>The first problem I see is you're casting Math.random() to <code>int</code> and storing it as a <code>double</code>.</p>

<pre><code>double r = (int) (6 * Math.random()) +1;
</code></pre>

<p>This should look like this:</p>

<pre><code>int r = (int) (6 * Math.random()) +1;
</code></pre>

<p>This results in 2 instead of 2.0. Doesn't really make a difference, but if you cast a <code>double</code> value to <code>int</code> you should store it as such. Otherwise, why cast it at all? You may also like to know about the <code>Random</code> class. I think it looks a little cleaner:</p>

<pre><code>int number = new Random().nextInt(6)+1;
</code></pre>

<p>Some would argue that <code>Random</code> is more efficient than <code>Math.random()</code>. See <a href="http://stackoverflow.com/questions/738629/math-random-versus-random-nextintint">here</a>.</p>

<p>Additionally, instead of if/else statements for this program I would recommend a switch statement like this:</p>

<pre><code>switch (number){
        case 1:
            System.out.println("Case 1");
            break;
        case 2:
            System.out.println("Case 2");
            break;
        // so on, so forth
    }
</code></pre>

<p>To sum it all up, try something like this:</p>

<pre><code>import java.util.Random;

public class NewClass {
public static void main(String[] args) {
    int number = 0;
    while (number != 6) {
        number = new Random().nextInt(6) + 1;
        switch (number) {
            case 1:
                System.out.println("Case 1");
                break;
            case 2:
                System.out.println("Case 2");
                break;
            case 3:
                System.out.println("Case 3");
                break;
            case 4:
                System.out.println("Case 4");
                break;
            case 5:
                System.out.println("Case 5");
                break;
            case 6:
                System.out.println("yay!");
                break;
            default:
                System.out.println("default");
                break;
        }
    }
}
}
</code></pre>
