<p>You need to consume the whole data yourself. <a href="http://developer.android.com/reference/org/apache/http/entity/BufferedHttpEntity.html" rel="nofollow"><code>BufferedHttpEntry</code></a> just bufferes a proportion of the data of the stream. If you do not want the data you can use the <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#consumeContent%28%29" rel="nofollow"><code>consumeContent()</code></a> method to ignore the rest of the input.</p>

<p>If you do not consume the whole data the server connection will be opened in the background. The server <em>wants</em> to give you the data but you ignore it leaving a stream open on the server end.. Eventually the server will time out. </p>

<p>Maybe you do not consume <em>all</em> the content when getting your XML. Maybe a character is left on the server end. By calling <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#consumeContent%28%29" rel="nofollow"><code>consumeContent()</code></a> you free up this last byte.</p>

<p>This example consumes all the content (reading the stream till it ends):</p>

<pre><code>public class HttpTest {
    public static void main(String... args) throws Exception {

        System.out.println(readTextPage(new URL("http://stackoverflow.com")));
    }

    private static String readTextPage(URL url) throws Exception {

        HttpClient client = new DefaultHttpClient();
        HttpGet request = new HttpGet(url.toURI());
        HttpResponse response = client.execute(request);


        Reader reader = null;
        try {
            reader = new InputStreamReader(response.getEntity().getContent());

            StringBuffer sb = new StringBuffer();
            {
                int read;
                char[] cbuf = new char[1024];
                while ((read = reader.read(cbuf)) != -1)
                    sb.append(cbuf, 0, read);
            }

            return sb.toString();

        } finally {
            if (reader != null) {
                try {
                    reader.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
</code></pre>
