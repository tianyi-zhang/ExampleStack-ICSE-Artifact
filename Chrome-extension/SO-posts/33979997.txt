<p>Create the following interface for Adapter Class.</p>

<pre><code>public static interface AdapterOnClickHandler {
    void onClick();
}
</code></pre>

<p>And then, put the interface in your Adapter Class.</p>

<pre><code>private AdapterOnClickHandler handler;
public void setOnClickHandler(AdapterOnClickHandler handler) {
    this.handler = handler;
}
</code></pre>

<p>Modify your getChildView method make onClick.</p>

<pre><code>@Override
public View getChildView(int groupPosition, final int childPosition,
                     boolean isLastChild, View convertView, ViewGroup parent) {

   final String childText = (String) getChild(groupPosition, childPosition);
   if (convertView == null) {
       LayoutInflater infalInflater = (LayoutInflater) this._context
               .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
       convertView =    infalInflater.inflate(R.layout.student_academic_menu_expandable_list, null);

   }

   TextView txtListChild = (TextView) convertView
           .findViewById(R.id.lblListItem);
   txtListChild.setText(childText);

   //Add this code in your method.....
   convertView.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               handler.onClick();
            }
       });
   return convertView;
}
</code></pre>

<p>In MainActivity.java you can subscribe the AdapterClick as following</p>

<pre><code>listAdapter.setOnClickHandler(new Adapter.AdapterOnClickHandler() {
      @Override
      public void onClick(BranchModel branchModel) {
         //Do something on click.....                          
      }
});
</code></pre>
