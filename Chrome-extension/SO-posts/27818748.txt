<p>I found a very simple solution for this. Just get the adapter of the listview and calculate its size when all items are shown.
The advantage is that this solution also works inside a ScrollView.</p>

<p>Example:</p>

<pre><code>public void justifyListViewHeightBasedOnChildren (ListView listView) {

    ListAdapter adapter = listView.getAdapter();

    if (adapter == null) {
        return;
    }
    ViewGroup vg = listView;
    int totalHeight = 0;
    for (int i = 0; i &lt; adapter.getCount(); i++) {
        View listItem = adapter.getView(i, null, vg);
        listItem.measure(0, 0);
        totalHeight += listItem.getMeasuredHeight();
    }

    ViewGroup.LayoutParams par = listView.getLayoutParams();
    par.height = totalHeight + (listView.getDividerHeight() * (adapter.getCount() - 1));
    listView.setLayoutParams(par);
    listView.requestLayout();
}
</code></pre>

<p>Call this function passing over your ListView object:</p>

<pre><code>justifyListViewHeightBasedOnChildren(myListview);
</code></pre>

<p>The function shown above is a modification of a post in:
<a href="http://stackoverflow.com/questions/7611085/disable-scrolling-in-listview">Disable scrolling in listview</a></p>

<p>Please note to call this function after you have set the adapter to the listview. If the size of entries in the adapter has changed, you need to call this function as well.</p>
