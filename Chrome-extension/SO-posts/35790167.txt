<p>Actually the issue is that <code>Cursor</code> is return data from 0 position, So that means you got record 0,1,2.. manner. Check mu code below</p>

<pre><code> /**
 * Getting user data from database
 */
public HashMap&lt;String, Object&gt; getUserDetails() {
    HashMap&lt;String, Object&gt; user = new HashMap&lt;String, Object&gt;();
    String selectQuery = "SELECT  * FROM " + TABLE_USER;

    SQLiteDatabase db = this.getReadableDatabase();
    Cursor cursor = db.rawQuery(selectQuery, null);
    // Move to first row
    cursor.moveToFirst();
    if (cursor.getCount() &gt; 0) {
        user.put("name", cursor.getString(0));
        user.put("email", cursor.getString(1));
        user.put("user_id", cursor.getInt(2));
        user.put("api_key", cursor.getString(3));

    }
    cursor.close();
    db.close();
    // return user
    Log.d(TAG, "Fetching user from Sqlite: " + user.toString());

    return user;
}

public HashMap&lt;String, Integer&gt; getUserAuthorizations() throws Exception{
    HashMap&lt;String, Integer&gt; auth = new HashMap&lt;String, Integer&gt;();
    String selectQuery = "SELECT  * FROM " + TABLE_AUTH;

    SQLiteDatabase db = this.getReadableDatabase();
    Cursor cursor = db.rawQuery(selectQuery, null);
    // Move to first row
    cursor.moveToFirst();
    if (cursor.getCount() &gt; 0) {
        auth.put("pro_app", cursor.getInt(0));
    }
    cursor.close();
    db.close();
    // return user
    try {
        int authINT = auth.get("pro_app");
    } catch (Exception e){
        Crashlytics.log("this is what is throwing the error");
        Crashlytics.logException(e);
    }
    int authINTNEXT = auth.get("pro_app");


    return auth;
}
</code></pre>

<p>Or i have another way to get Record based on <strong>Column Name</strong> as per below code</p>

<pre><code>public static String getString(Cursor cursor, String fieldName, String nullValue) {
    int column = cursor.getColumnIndex(fieldName);

    if (cursor.isNull(column))
        return nullValue;
    else
        return cursor.getString(column);
}

public static int getInt(Cursor cursor, String fieldName, int nullValue) {
    int column = cursor.getColumnIndex(fieldName);

    if (cursor.isNull(column))
        return nullValue;
    else
        return cursor.getInt(column);
}
</code></pre>

<p>and implement like</p>

<pre><code>public HashMap&lt;String, Object&gt; getUserDetails() {
    HashMap&lt;String, Object&gt; user = new HashMap&lt;String, Object&gt;();
    String selectQuery = "SELECT  * FROM " + TABLE_USER;

    SQLiteDatabase db = this.getReadableDatabase();
    Cursor cursor = db.rawQuery(selectQuery, null);
    // Move to first row
    cursor.moveToFirst();
    if (cursor.getCount() &gt; 0) {
        user.put("name", getString(cursor , NAME_COLUMN, ""));
        user.put("email", getString(cursor , EMAIL_COLUMN, ""));
        user.put("user_id", getInt(cursor ,USER_ID_COLUMN,0));
        user.put("api_key",getString(cursor , API_KEY_COLUMN, ""));

    }
    cursor.close();
    db.close();
    // return user
    Log.d(TAG, "Fetching user from Sqlite: " + user.toString());

    return user;
}
</code></pre>

<p>and do for other method</p>
