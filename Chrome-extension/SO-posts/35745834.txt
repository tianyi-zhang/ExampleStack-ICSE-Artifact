<p><strong>Simple socket server app example</strong></p>

<p>I've already posted a client example at: <a href="http://stackoverflow.com/a/35971718/895245">http://stackoverflow.com/a/35971718/895245</a> , so here goes a server example.</p>

<p>This example app runs a server that returns a ROT-1 cypher of the input.</p>

<p>You would then need to add an <code>Exit</code> button + some sleep delays, but this should get you started.</p>

<p>To play with it:</p>

<ul>
<li>install the app</li>
<li>get your phone and PC on a LAN</li>
<li>find your phone's IP with <a href="http://android.stackexchange.com/a/130468/126934">http://android.stackexchange.com/a/130468/126934</a> </li>
<li>run <code>netcat $PHONE_IP 12345</code></li>
<li>type some lines</li>
</ul>

<p>Android sockets are the same as Java's, except we have to deal with some permission issues.</p>

<p><strong>src/com/cirosantilli/android_cheat/socket</strong></p>

<p>We need a <code>Service</code> or other background method or else: <a href="http://stackoverflow.com/questions/6343166/android-os-networkonmainthreadexception">How to fix android.os.NetworkOnMainThreadException?</a></p>

<pre><code>package com.cirosantilli.android_cheat.socket;

import android.app.Activity;
import android.app.IntentService;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;

public class Main extends Activity {
    static final String TAG = "AndroidCheatSocket";
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.d(Main.TAG, "onCreate");
        Main.this.startService(new Intent(Main.this, MyService.class));
    }

    public static class MyService extends IntentService {
        public MyService() {
            super("MyService");
        }
        @Override
        protected void onHandleIntent(Intent intent) {
            Log.d(Main.TAG, "onHandleIntent");
            final int port = 12345;
            ServerSocket listener = null;
            try {
                listener = new ServerSocket(port);
                Log.d(Main.TAG, String.format("listening on port = %d", port));
                while (true) {
                    Log.d(Main.TAG, "waiting for client");
                    Socket socket = listener.accept();
                    Log.d(Main.TAG, String.format("client connected from: %s", socket.getRemoteSocketAddress().toString()));
                    BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                    PrintStream out = new PrintStream(socket.getOutputStream());
                    for (String inputLine; (inputLine = in.readLine()) != null;) {
                        Log.d(Main.TAG, "received");
                        Log.d(Main.TAG, inputLine);
                        StringBuilder outputStringBuilder = new StringBuilder("");
                        char inputLineChars[] = inputLine.toCharArray();
                        for (char c : inputLineChars)
                            outputStringBuilder.append(Character.toChars(c + 1));
                        out.println(outputStringBuilder);
                    }
                }
            } catch(IOException e) {
                Log.d(Main.TAG, e.toString());
            }
        }
    }
}
</code></pre>

<p><strong>AndroidManifest.xml</strong></p>

<p>Must add: <code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt;</code> or else: <a href="http://stackoverflow.com/questions/4074808/java-socket-ioexception-permission-denied">Java socket IOException - permission denied</a></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
      package="com.cirosantilli.android_cheat.socket"
      android:versionCode="1"
      android:versionName="1.0"&gt;
    &lt;uses-sdk android:minSdkVersion="22" /&gt;
    &lt;uses-permission android:name="android.permission.INTERNET" /&gt;
    &lt;application android:label="AndroidCheatsocket"&gt;
        &lt;activity android:name="Main"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        &lt;service android:name=".Main$MyService" /&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>

<p>On GitHub with a <code>build.xml</code>: <a href="https://github.com/cirosantilli/android-cheat/tree/92de020d0b708549a444ebd9f881de7b240b3fbc/socket" rel="nofollow">https://github.com/cirosantilli/android-cheat/tree/92de020d0b708549a444ebd9f881de7b240b3fbc/socket</a></p>
