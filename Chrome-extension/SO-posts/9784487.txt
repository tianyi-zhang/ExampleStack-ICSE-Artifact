<p>After getting id of selected image, implement this..</p>

<p><strong>// this Class For Grid view images</strong></p>

<pre><code>package com.thumbnailview;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.Toast;

public class Activity_ThumbView extends Activity
{

    GridView gridview;


    public void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        gridview = (GridView) findViewById(R.id.gridview);
        gridview.setAdapter(new ImageAdapter(this));

        gridview.setOnItemClickListener(new OnItemClickListener()
        {
            public void onItemClick(AdapterView&lt;?&gt; parent, View v, int position, long id)
            {

                Toast.makeText(Activity_ThumbView.this, "" + position, 2).show();
                id=parent.getPositionForView(v);

                Intent i=new Intent(Activity_ThumbView.this,Activity_ImageView.class);
                i.putExtra("position", position);
                startActivity(i);
                finish();
            }
        });
    }

    public class ImageAdapter extends BaseAdapter
    {

        Context context;



        public ImageAdapter(Context c ) 
        {
            context = c ;
        }
        public int getCount() {


            return mThumbIds.length;
        }


        public Object getItem(int position) {

            return null;
        }


        public long getItemId(int position) {

            return mThumbIds[position];
        }


        public View getView(int position, View convertView, ViewGroup parent) {
            ImageView imageView;
            if (convertView == null) 
            {  
                imageView = new ImageView(context);
                imageView.setLayoutParams(new GridView.LayoutParams(75, 75));
                imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
                imageView.setPadding(8, 8, 8, 8);
            }
            else 
            {
                imageView = (ImageView) convertView;
            }

            imageView.setImageResource(mThumbIds[position]);
            return imageView;
        }

    }

            public static Integer[] mThumbIds = {
                    R.drawable.a,R.drawable.icon,
                    R.drawable.b, R.drawable.s,
                    R.drawable.c, R.drawable.r,
                    R.drawable.d, R.drawable.q,
                    R.drawable.e, R.drawable.p,
                    R.drawable.f, R.drawable.o,
                    R.drawable.g, R.drawable.n,
                    R.drawable.h, R.drawable.m,
                    R.drawable.i, R.drawable.l,
                    R.drawable.j, R.drawable.k,
                    R.drawable.t,R.drawable.y,
                    R.drawable.u,R.drawable.x,
                    R.drawable.v,R.drawable.s,
                    R.drawable.cd,R.drawable.z,
                    R.drawable.bc,R.drawable.ab
            };

}
</code></pre>

<p>// This Flip image Class</p>

<pre><code>package com.thumbnailview;

import java.io.IOException;



import android.app.Activity;
import android.app.WallpaperManager;
import android.content.Intent;
import android.os.Bundle;
import android.view.GestureDetector;
import android.view.GestureDetector.OnGestureListener;
import android.view.GestureDetector.SimpleOnGestureListener;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.ViewFlipper;

public class Activity_ImageView extends Activity
{
     ImageView thumb_imgview;
     ViewFlipper viewFlipper;
     Button b_wall;
     Button b_home;

    // Animation a,b;
     private static final int SWIPE_MIN_DISTANCE = 120;
     private static final int SWIPE_MAX_OFF_PATH = 250;
     private static final int SWIPE_THRESHOLD_VELOCITY = 200;
     private GestureDetector gestureDetector;
     View.OnTouchListener gestureListener;
     int j;

     WallpaperManager myWall;
    public void onCreate(Bundle savedInstanceState)
     {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.image);

         j=getIntent().getExtras().getInt("position");
         myWall = WallpaperManager.getInstance(getApplicationContext());

        b_wall=(Button) findViewById(R.id.button3);
        b_home=(Button) findViewById(R.id.button1);

         thumb_imgview=(ImageView) findViewById(R.id.thumb_txt_image);
        thumb_imgview.setImageResource(Activity_ThumbView.mThumbIds[j]);

         gestureDetector = new GestureDetector(new MyGestureDetector());

         b_wall.setOnClickListener(new View.OnClickListener() {

            public void onClick(View v) {



                try {

                    myWall.setResource(Activity_ThumbView.mThumbIds[j]);

                } catch (IOException e) {

                e.printStackTrace();
            }


            }
        });
         b_home.setOnClickListener(new View.OnClickListener() {


            public void onClick(View v) {
                Intent i=new Intent(Activity_ImageView.this,Activity_ThumbView.class);
                startActivity(i);
                finish();

            }
        });


     }

    public class MyGestureDetector extends SimpleOnGestureListener implements OnGestureListener 
    {
          public boolean onFling(MotionEvent m1, MotionEvent m2, float velocityX, float velocityY)
          {
            try
            {
                if (Math.abs(m1.getY() - m2.getY()) &gt; SWIPE_MAX_OFF_PATH)
                    return false;

                if(m1.getX() - m2.getX() &gt; SWIPE_MIN_DISTANCE &amp;&amp; Math.abs(velocityX) &gt; SWIPE_THRESHOLD_VELOCITY) 
                {

                    if(Activity_ThumbView.mThumbIds.length&gt;j)
                    {
                        j++;



                        thumb_imgview.setImageResource(Activity_ThumbView.mThumbIds[j]);

                    }


                } 

                else if (m2.getX() - m1.getX() &gt; SWIPE_MIN_DISTANCE &amp;&amp; Math.abs(velocityX) &gt; SWIPE_THRESHOLD_VELOCITY)
                {

                    if(j&gt;0)
                    {
                        j--;

                        thumb_imgview.setImageResource(Activity_ThumbView.mThumbIds[j]);

                    }


                }
            } 
            catch (Exception e)
            {

            }
            return false;
        }
    }

             public boolean onTouchEvent(MotionEvent event)
             {
                 if (gestureDetector.onTouchEvent(event))
                     return true;
                 else
                     return false;
             }
         }
</code></pre>
