<p>When implementing <code>equals</code>, before checking if the objects are equal you should consider the next scenarios:</p>

<ul>
<li>The two are actually references to the same object</li>
<li>The <code>other</code> object is <code>null</code></li>
<li>The <code>other</code> object is an instance of a different type</li>
</ul>

<p>and when checking equality between the two objects you should consider the <em><code>nullness</code></em> of every field involved in the comparison too. In most IDEs <code>equals</code> can be generated automatically, in eclipse:</p>

<blockquote>
  <p>Alt + Shift + s --> Generate hashCode() and equals()</p>
</blockquote>

<p>the next is generated by eclipse:</p>

<pre><code>    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        A other = (A) obj;
        if (denominator == null) {
            if (other.denominator != null)
                return false;
        } else if (!denominator.equals(other.denominator))
            return false;
        if (numerator == null) {
            if (other.numerator != null)
                return false;
        } else if (!numerator.equals(other.numerator))
            return false;
        return true;
    }
</code></pre>
