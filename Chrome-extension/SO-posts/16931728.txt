<h2>Get URL from .pls file</h2>

<p>This will return URL like <a href="http://stream2.streamq.net:8020" rel="nofollow">http://stream2.streamq.net:8020</a></p>



<pre class="lang-java prettyprint-override"><code>package com.direct.radio.global;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.LinkedList;
import android.content.Context;
import android.util.Log;

public class GetStreamingUrl {

private static String LOGTAG = "GetStreamingUrl";
private Context mContext;

public GetStreamingUrl(Context context) {
    Log.i(LOGTAG, "call to constructor");
    this.mContext = context;

}

public LinkedList&lt;String&gt; getStreamingUrl(String url) {

    Log.i(LOGTAG, "get streaming url");
    final BufferedReader br;
    String murl = null;
    LinkedList&lt;String&gt; murls = null;
    try {
        URLConnection mUrl = new URL(url).openConnection();
        br = new BufferedReader(
                new InputStreamReader(mUrl.getInputStream()));
        murls = new LinkedList&lt;String&gt;();
        while (true) {
            try {
                String line = br.readLine();

                if (line == null) {
                    break;
                }
                murl = parseLine(line);
                if (murl != null &amp;&amp; !murl.equals("")) {
                    murls.add(murl);

                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    } catch (MalformedURLException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    Log.i(LOGTAG, "url to stream :" + murl);
    return murls;
}

private String parseLine(String line) {
    if (line == null) {
        return null;
    }
    String trimmed = line.trim();
    if (trimmed.indexOf("http") &gt;= 0) {
        return trimmed.substring(trimmed.indexOf("http"));
    }
    return "";
        }
  } 
</code></pre>

<h2>Activity_Player.java or Service_Player.java</h2>

<p>you can write this code as per your need , Define this method</p>

<pre class="lang-java prettyprint-override"><code>LinkedList&lt;String&gt; urls;

private LinkedList&lt;String&gt; fGetPlayableUrl(String mPls) {
    GetStreamingUrl oGetStreamingUrl = new GetStreamingUrl(Activity_Splash.this);
    urls = oGetStreamingUrl.getStreamingUrl(mPls);
    return urls;
}
</code></pre>

<p>Here, <code>fGetPlayableUrl(String mPls)</code> pass <code>.pls</code> URL. Now you have streaming URL.</p>

<pre class="lang-java prettyprint-override"><code>MediaPlayer  mMediaPlayer = new MediaPlayer();
</code></pre>

<p>Now, pass URL to </p>

<pre class="lang-java prettyprint-override"><code>mMediaPlayer.setDataSource(urls.toString());
mMediaPlayer.prepareAsync();
mMediaPlayer.start();
</code></pre>
