<p>I found that the issue is that SlidingUpPanelLayout intercepts touch events (<code>onInterceptTouchEvent</code>). My solutions was rewriting (or overriding) method <code>isDragViewHit</code> which is checked in <code>case MotionEvent.ACTION_DOWN</code> and can potentially cancel intercepting for a given touch event.</p>

<p>Here is my solution which cancels intercepting if panel is expanded allowing click/scroll for expanded child panel.  This also means you can't slide down the expanded panel.  I implemented collapsing of panel on a button click.  Check the implementation and it will give you ideas what is possible.</p>

<pre><code>private boolean isDragViewHit(int x, int y) {
    if(isExpanded()){
        //don't intercept touch if panel expanded
        return false;
    }
    else{
        //original implementation - only allow dragging on mDragView
        View v = mDragView != null ? mDragView : mSlideableView;
        if (v == null) return false;
        int[] viewLocation = new int[2];
        v.getLocationOnScreen(viewLocation);
        int[] parentLocation = new int[2];
        this.getLocationOnScreen(parentLocation);
        int screenX = parentLocation[0] + x;
        int screenY = parentLocation[1] + y;
        return screenX &gt;= viewLocation[0] &amp;&amp; screenX &lt; viewLocation[0] + v.getWidth() &amp;&amp;
                screenY &gt;= viewLocation[1] &amp;&amp; screenY &lt; viewLocation[1] + v.getHeight();
    }
}
</code></pre>
