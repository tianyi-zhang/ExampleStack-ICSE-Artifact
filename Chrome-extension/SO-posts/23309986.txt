<p>Don't get a new reference of the <code>EditText</code> inside your <code>onClick()</code>, because it will be a different object as the one where the user has done the input.</p>

<p>In addition, as ElDuderino suggested, if you have a layout for a Fragment get the instance of the Views with <code>findViewById(..)</code> in your Fragment. This way if the View isn't needed anymore it can be gargabe collected along with the Fragment. Otherwise it will be alive as long the Activity is.</p>

<p>Edit:</p>

<p>Try this in your Fragment:</p>

<pre><code>public class DownLeftFragment extends Fragment {

    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();

    @Override
    public View onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
    {
        View root = inflater.inflate(R.layout.down_left_fragment,  container, false);
        EditText edit = (EditText) findViewById (R.id.Username);
        Button login = (Button) findViewById(R.id.SignInBtn);
        login.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View v) {
                StrictMode.setThreadPolicy(policy); 
                String n = edit.getText().toString();
                login(n);
             }
        });

        return root;
    }
    public void login(String a) {
         ...
    }
}
</code></pre>

<p>Your MainActivity looks like this now:</p>

<pre><code>public class MainActivity extends Activity {

    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

    }
}
</code></pre>

<p>This way all VIews belong to the Fragment which inflates the specific layout.</p>
