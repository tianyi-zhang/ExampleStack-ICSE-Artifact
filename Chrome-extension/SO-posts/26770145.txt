<p>You may also modifies the current code of <a href="http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/awt/Rectangle.java#Rectangle.intersects%28java.awt.Rectangle%29" rel="nofollow">intersects</a> function to suit your needs. In your case you want to state it true when there is a pair of points from two rectangles (even the side line's) are sharing the same coordinate - (read: attached). Thus, you may try something like this:</p>

<pre><code>public boolean intersectsOrAttached(Rectangle r, Rectangle r2) {
    int tw = r.width;
    int th = r.height;
    int rw = r2.width;
    int rh = r2.height;
    if (rw &lt;= 0 || rh &lt;= 0 || tw &lt;= 0 || th &lt;= 0) {
        return false;
    }

    int tx = r.x;
    int ty = r.y;
    int rx = r2.x;
    int ry = r2.y;
    rw += rx;
    rh += ry;
    tw += tx;
    th += ty;

    //overflow || intersect or attached
    return ((rw &lt; rx || rw &gt;= tx) &amp;&amp;
        (rh &lt; ry || rh &gt;= ty) &amp;&amp;
        (tw &lt; tx || tw &gt;= rx) &amp;&amp;
        (th &lt; ty || th &gt;= ry));
}
</code></pre>

<p><strong>UPDATE</strong>:</p>

<p>Actually online judging system is a little bit tricky.
I managed to get it accepted partially, I'm not sure whether it's time or memory constraints, as well as some overlooked bound-cases that we couldn't figure out easily.
But here it is, it's better if you can make it optimized by yourself:</p>

<pre><code>import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class OverlappingRectangles {

    public static void main(String[] args) {
        String f = args[0];
        try {
            BufferedReader br = new BufferedReader(new FileReader(f));
            while (br.ready()) {
                String cs[] = br.readLine().split(",");
                int[] ci = new int[cs.length];
                int i = 0;
                for (String s : cs) {
                    ci[i] = Integer.parseInt(s);
                    i += 1;
                }

                if (ck(ci[0], ci[1], ci[2], ci[3], ci[4], ci[5], ci[6], ci[7])) {
                    System.out.println("True");
                } else {
                    System.out.println("False");
                }
            }
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
    }

    public static boolean ck(int rx, int ry, int rw, int rh, int tx, int ty, int tw, int th) {
        //ATTENTION!
        //rx,ry -&gt; upper-left corner of rect A
        //rw,rh -&gt; bottom-right corner of rect A
        //tx,ty -&gt; upper-left corner of rect B
        //tw,th -&gt; bottom-right corner of rect B
        return ((rw &lt; rx || rw &gt;= tx)
                &amp;&amp; (rh &lt; ry || rh &gt;= ty)
                &amp;&amp; (tw &lt; tx || tw &gt;= rx)
                &amp;&amp; (th &lt; ty || th &gt;= ry));
    }
}
</code></pre>
