<h2>Update:</h2>

<p>I recommend you retain the original code for <code>onTabChanged</code> and use <code>addToBackStack</code> method for maintaining the traversal state of fragments. Call <code>addToBackStack</code> when going from one fragment to next, like when <code>add</code>ing or <code>replace</code>ing fragments.</p>

<p>Also change the <code>TabInfo.fragment</code> reference to reflect the transitions between fragments inside a tab.</p>

<hr>

<p>Do not attach and detach every time tab is changed. </p>

<pre><code>   @Override
    public void onTabChanged(String tabId) {
        TabInfo newTab = mTabs.get(tabId);
        if (mLastTab != newTab) {
            FragmentTransaction ft = mActivity.getSupportFragmentManager().beginTransaction();

            if (newTab != null) {
                if (newTab.fragment == null) {
                    newTab.fragment = Fragment.instantiate(mActivity,
                            newTab.clss.getName(), newTab.args);
                    ft.add(mContainerId, newTab.fragment, newTab.tag);
                } else {
                    ft.replace(mContainerId, newTab.fragment, newTab.tag);
                } 
            }
            mLastTab = newTab;
            ft.commit();
            mActivity.getSupportFragmentManager().executePendingTransactions();
        }
    }
</code></pre>
