<p>Spring doc is the ultimate resource for questions like this. Additionally you could download code of the right version from github, and debug for an answer. As for the question, check here <a href="http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/mvc.html#mvc-redirecting-redirect-prefix" rel="nofollow">http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/mvc.html#mvc-redirecting-redirect-prefix</a>, or check the source code of class RedirectView below(applicable to spring 4.1.0):</p>

<pre><code>    protected void appendQueryProperties(StringBuilder targetUrl, Map&lt;String, Object&gt; model, String encodingScheme)
        throws UnsupportedEncodingException {

    // Extract anchor fragment, if any.
    String fragment = null;
    int anchorIndex = targetUrl.indexOf("#");
    if (anchorIndex &gt; -1) {
        fragment = targetUrl.substring(anchorIndex);
        targetUrl.delete(anchorIndex, targetUrl.length());
    }

    // If there aren't already some parameters, we need a "?".
    boolean first = (targetUrl.toString().indexOf('?') &lt; 0);
    for (Map.Entry&lt;String, Object&gt; entry : queryProperties(model).entrySet()) {
        Object rawValue = entry.getValue();
        Iterator&lt;Object&gt; valueIter;
        if (rawValue != null &amp;&amp; rawValue.getClass().isArray()) {
            valueIter = Arrays.asList(ObjectUtils.toObjectArray(rawValue)).iterator();
        }
        else if (rawValue instanceof Collection) {
            valueIter = ((Collection&lt;Object&gt;) rawValue).iterator();
        }
        else {
            valueIter = Collections.singleton(rawValue).iterator();
        }
        while (valueIter.hasNext()) {
            Object value = valueIter.next();
            if (first) {
                targetUrl.append('?');
                first = false;
            }
            else {
                targetUrl.append('&amp;');
            }
            String encodedKey = urlEncode(entry.getKey(), encodingScheme);
            String encodedValue = (value != null ? urlEncode(value.toString(), encodingScheme) : "");
            targetUrl.append(encodedKey).append('=').append(encodedValue);
        }
    }

    // Append anchor fragment, if any, to end of URL.
    if (fragment != null) {
        targetUrl.append(fragment);
    }
}
</code></pre>

<p>In short, Spring does it for you if you know where to put the values.</p>
