<p>I don't have enough reputation to comment but I have tried all the answers and found the following:</p>

<p>ChuongPham: Instead of using <strong>83</strong>, I used reflection to get the value of the variable <code>TRANSACTION_setDataEnabled</code> from the <code>com.android.internal.telephony.ITelephony</code> so it works across all Android 5+ devices, regardless of brands.</p>

<p>Muzikant: Work if the app is moved to <code>/system/priv-app/</code> directory (thanks to <em>rgruet</em>.) Else, it works via root, too! You just need to inform your users that the app will need a reboot before the changes to the mobile network will take place.</p>

<p>AJ: Work- sort of. Does not turn off subscription service so the devices I tested drained their batteries a fair bit. AJ's solution is <strong>NOT</strong> equivalent to Muzikant's solution despite the claim. I can confirm this by debugging different Samsung, Sony, and LG stock ROMs (I'm thorough) and can disprove AJ's claim that his solution is the same as Muzikant's. (Note: I can't get my hands on some Nexus and Motorola ROMs so haven't tested these ROMs with the proposed solutions.)</p>

<p>Anyway, hope it clears up any doubt over the solutions.</p>

<p>Happy coding!
PL, Germany</p>

<p><strong>UPDATE</strong>: For those wondering how to get the value of the  <code>TRANSACTION_setDataEnabled</code> field via reflection, you can do the following:</p>

<pre><code>private static String getTransactionCodeFromApi20(Context context) throws Exception {
    try {
        final TelephonyManager mTelephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE); 
        final Class&lt;?&gt; mTelephonyClass = Class.forName(mTelephonyManager.getClass().getName());
        final Method mTelephonyMethod = mTelephonyClass.getDeclaredMethod("getITelephony");
        mTelephonyMethod.setAccessible(true);
        final Object mTelephonyStub = mTelephonyMethod.invoke(mTelephonyManager);
        final Class&lt;?&gt; mTelephonyStubClass = Class.forName(mTelephonyStub.getClass().getName());
        final Class&lt;?&gt; mClass = mTelephonyStubClass.getDeclaringClass();
        final Field field = mClass.getDeclaredField("TRANSACTION_setDataEnabled");
        field.setAccessible(true);
        return String.valueOf(field.getInt(null));
    } catch (Exception e) {
        // The "TRANSACTION_setDataEnabled" field is not available,
        // or named differently in the current API level, so we throw
        // an exception and inform users that the method is not available.
        throw e;
    }
}
</code></pre>
