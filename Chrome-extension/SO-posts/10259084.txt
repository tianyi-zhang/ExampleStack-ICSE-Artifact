<p>If you are looking to convert your response to string for manipulation, and hence extract the URL's as oppose to using JSON library, then below should do.</p>

<pre><code>  public List&lt;String&gt; extractUrls(String input)
  {
    List&lt;String&gt; result = new ArrayList&lt;String&gt;();
    Pattern pattern =
        Pattern.compile("\\b(((ht|f)tp(s?)\\:\\/\\/|~\\/|\\/)|www.)" + "(\\w+:\\w+@)?(([-\\w]+\\.)+(com|org|net|gov"
            + "|mil|biz|info|mobi|name|aero|jobs|museum" + "|travel|[a-z]{2}))(:[\\d]{1,5})?"
            + "(((\\/([-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|\\/)+|\\?|#)?" + "((\\?([-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?"
            + "([-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)" + "(&amp;(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?" + "([-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*"
            + "(#([-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)?\\b");

    Matcher matcher = pattern.matcher(input);
    while (matcher.find())
    {
      result.add(matcher.group());
    }

    return result;
  }
</code></pre>

<p><strong>Usage:</strong></p>

<pre><code>    List&lt;String&gt; links = extractUrls(jsonResponseString);
    for (String link : links)
    {
      System.out.println(link);
    }
</code></pre>
