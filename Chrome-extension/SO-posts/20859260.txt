<p>Actually, the problem seems to be this part</p>

<pre><code>itemValue="#{demandeurItem.nom}"
</code></pre>

<p>if the itemValue is the name of your item, then the converter will try to convert from a String and not from the object. So your converter method below will receive "value" = string, not a Demandeur as you may expect.</p>

<pre><code>public String getAsString(FacesContext facesContext, UIComponent uiComponent, Object value) throws ConverterException
</code></pre>

<p>I've tried this code below and I think it's what you need. I am using primefaces 4.0 on tomee 1.6.0.</p>

<p>the converter</p>

<pre><code>import java.io.Serializable;

import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.ConverterException;

@ManagedBean
@RequestScoped
public class DemandeurConverter implements Converter, Serializable {

    private static final long   serialVersionUID    = 1L;

    @EJB
    Demandeurs                  ejb;

    @Override
    public Object getAsObject(FacesContext facesContext, UIComponent uiComponent, String value) throws ConverterException {
        if (value == null || value.length() == 0) {
            return null;
        } else {
            return ejb.getData().get(Long.parseLong(value));
        }
    }

    @Override
    public String getAsString(FacesContext facesContext, UIComponent uiComponent, Object value) throws ConverterException {
        System.out.println(value.getClass());
        if (value == null) {
            return null;
        } else {
            return ((Demandeur) value).getId().toString();
        }
    }
}
</code></pre>

<p>the managed bean</p>

<pre><code>import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map.Entry;

import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;

@ManagedBean
@ViewScoped
public class UtilisateurDemandeurCtrl implements Serializable {

    private static final long   serialVersionUID    = -3027573774106311465L;

    @EJB 
    private Demandeurs                  ejb;

    private Demandeur critereRechercheDemandeur;

    public List&lt;Demandeur&gt; completeDemandeur(String query) {
        List&lt;Demandeur&gt; l = new ArrayList&lt;Demandeur&gt;();

        for(Entry&lt;Long, Demandeur&gt; entryset:ejb.getData().entrySet()){
            if (entryset.getValue().getNom().contains(query)){
                l.add(entryset.getValue());
            }
        }

        return l;
    }

    public Demandeur getCritereRechercheDemandeur() {
        return critereRechercheDemandeur;
    }

    public void setCritereRechercheDemandeur(Demandeur critereRechercheDemandeur) {
        this.critereRechercheDemandeur = critereRechercheDemandeur;
    }
}
</code></pre>

<p>the EJB</p>

<pre><code>import java.util.HashMap;
import java.util.Map;

import javax.ejb.Singleton;


@Singleton
public class Demandeurs {

    private static final Map&lt;Long,Demandeur&gt; data = new HashMap&lt;Long,Demandeur&gt;(){
        private static final long   serialVersionUID    = -4394378761837292672L;

        {
             put(1L,new Demandeur(1L,"ooooooooooone",111));
             put(2L,new Demandeur(2L,"ttttttttttttwo",222));
        }
    };

    public static Map&lt;Long, Demandeur&gt; getData() {
        return data;
    }


}
</code></pre>

<p>the entity bean</p>

<pre><code>import java.io.Serializable;


public class Demandeur implements Serializable{

    private static final long   serialVersionUID    = 4023658749746098762L;
    private Long id;
    private String nom;
    private Integer numeroOW;
    public Demandeur() {}

    public Demandeur(Long id, String nom, Integer numeroOW) {
        super();
        this.id = id;
        this.nom = nom;
        this.numeroOW = numeroOW;
    }

    public Long getId() {
        return id;
    }
    public void setId(Long id) {
        this.id = id;
    }
    public String getNom() {
        return nom;
    }
    public void setNom(String nom) {
        this.nom = nom;
    }
    public Integer getNumeroOW() {
        return numeroOW;
    }
    public void setNumeroOW(Integer numeroOW) {
        this.numeroOW = numeroOW;
    }
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((nom == null) ? 0 : nom.hashCode());
        result = prime * result + ((numeroOW == null) ? 0 : numeroOW.hashCode());
        return result;
    }
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Demandeur other = (Demandeur) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        } else if (!id.equals(other.id))
            return false;
        if (nom == null) {
            if (other.nom != null)
                return false;
        } else if (!nom.equals(other.nom))
            return false;
        if (numeroOW == null) {
            if (other.numeroOW != null)
                return false;
        } else if (!numeroOW.equals(other.numeroOW))
            return false;
        return true;
    }

}
</code></pre>

<p>and the xhtml</p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"&gt;
&lt;h:head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;
    &lt;title&gt;Test&lt;/title&gt;
    &lt;h:outputScript library="js" name="common.js" /&gt;
&lt;/h:head&gt;
&lt;h:body&gt;

    &lt;h:form id="somePrefix"&gt;

        &lt;p:autoComplete 
            id="it_demandeur"
            value="#{utilisateurDemandeurCtrl.critereRechercheDemandeur}"
            var="demandeurItem"
            converter="#{demandeurConverter}"
            itemLabel="#{demandeurItem ne null ? demandeurItem.numeroOW.toString().concat(' - ').concat(demandeurItem.nom) : ''}"
            itemValue="#{demandeurItem}"
            forceSelection="true"
            completeMethod="#{utilisateurDemandeurCtrl.completeDemandeur}"&gt;

            &lt;p:column&gt;
              #{demandeurItem.numeroOW} - #{demandeurItem.nom}
            &lt;/p:column&gt;
        &lt;/p:autoComplete&gt;

    &lt;/h:form&gt;
&lt;/h:body&gt;
&lt;/html&gt;
</code></pre>
