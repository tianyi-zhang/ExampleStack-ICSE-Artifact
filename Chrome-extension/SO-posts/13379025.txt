<p>Okay it appears that the following is the best solution. Comments are welcome about whether or not this is considered best practice. Please note I have included the v4 support library for backwards compatibility.</p>

<p>My Activity</p>

<pre><code>package ie.cathalcoffey.android.orientation;

import android.content.Context;
import android.content.res.Configuration;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.FragmentActivity;

public class OrientationActivity extends FragmentActivity implements FireMissilesDialogFragment.NoticeDialogListener{
    MyApplication application;
    boolean rotated;
    public class LongOperation extends AsyncTask&lt;String, Void, String&gt; {
          private FireMissilesDialogFragment dialog;

          public LongOperation(Context context) {
              dialog = new FireMissilesDialogFragment();
              dialog.show(getSupportFragmentManager(), "");
          }

          @Override
          protected void onCancelled() {
              if(dialog != null &amp;&amp; dialog.isVisible())
                  dialog.dismiss();
          }

          @Override
          protected void onPreExecute() {
          }

          @Override
          protected String doInBackground(String... params) {
              while(true){

                  if(this.isCancelled())
                      break;

              }

              return null;
          }      

          @Override
          protected void onPostExecute(String result) {                           

          }
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        application = (MyApplication) getApplication();

        if(application.longOperation == null) {
            application.longOperation = new LongOperation(this);
            application.longOperation.execute();
        }
    }

    @Override
    public void onDestroy() {
        super.onDestroy();

        if(application.longOperation != null)
        {
            application.longOperation.cancel(true);
            application.longOperation = null;
        }
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
    }

    @Override
    public void onDialogPositiveClick(DialogFragment dialog) {
        if(application.longOperation != null)
        {
            application.longOperation.cancel(true);
            application.longOperation = null;
        }
    }

    @Override
    public void onDialogNegativeClick(DialogFragment dialog) {
        if(application.longOperation != null)
        {
            application.longOperation.cancel(true);
            application.longOperation = null;
        }
    }
}
</code></pre>

<p>My DialogFragment</p>

<pre><code>package ie.cathalcoffey.android.orientation;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;

public class FireMissilesDialogFragment extends DialogFragment {
    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        // Use the Builder class for convenient dialog construction
        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
        builder.setMessage("Whatever")
               .setPositiveButton("fire", new DialogInterface.OnClickListener() {
                   public void onClick(DialogInterface dialog, int id) {
                       mListener.onDialogPositiveClick(FireMissilesDialogFragment.this);
                   }
               })
               .setNegativeButton("cancel", new DialogInterface.OnClickListener() {
                   public void onClick(DialogInterface dialog, int id) {
                       mListener.onDialogNegativeClick(FireMissilesDialogFragment.this);
                   }
               });
        // Create the AlertDialog object and return it
        return builder.create();
    }

    /* The activity that creates an instance of this dialog fragment must
     * implement this interface in order to receive event callbacks.
     * Each method passes the DialogFragment in case the host needs to query it. */
    public interface NoticeDialogListener {
        public void onDialogPositiveClick(DialogFragment dialog);
        public void onDialogNegativeClick(DialogFragment dialog);
    }

    // Use this instance of the interface to deliver action events
    NoticeDialogListener mListener;

    // Override the Fragment.onAttach() method to instantiate the NoticeDialogListener
    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        // Verify that the host activity implements the callback interface
        try {
            // Instantiate the NoticeDialogListener so we can send events to the host
            mListener = (NoticeDialogListener) activity;
        } catch (ClassCastException e) {
            // The activity doesn't implement the interface, throw exception
            throw new ClassCastException(activity.toString()
                    + " must implement NoticeDialogListener");
        }
    }
}
</code></pre>

<p>My Application</p>

<pre><code>package ie.cathalcoffey.android.orientation;
import ie.cathalcoffey.android.orientation.OrientationActivity.LongOperation;
import android.app.Application;


public class MyApplication extends Application 
{
    LongOperation longOperation = null;
}
</code></pre>

<p>Finally my Manifest</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="ie.cathalcoffey.android.orientation"
    android:versionCode="1"
    android:versionName="1.0" &gt;

    &lt;uses-sdk android:minSdkVersion="15" /&gt;

    &lt;application
        android:name=".MyApplication"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name" &gt;
        &lt;activity
            android:name=".OrientationActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:label="@string/app_name" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;

                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>
