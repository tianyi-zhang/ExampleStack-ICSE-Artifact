<p>You should implement your own Adapter which will extend ArrayAdapter.</p>

<p>Then in it, your getView() method should look like this</p>

<pre><code>@Override
public View getView(int position, View convertView, ViewGroup parent)
{
    View row = convertView;

    if (row == null)
    {
        // ROW INFLATION
        LayoutInflater inflater = (LayoutInflater) this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        row = inflater.inflate(R.layout.buddy_list_item, parent, false);
    }

    // Get item
    Buddy buddy = getItem(position);
    buddy.refresh();

    buddyName = (TextView) row.findViewById(R.id.buddy_name);
    buddyName.setText(buddy.toString()); //set the first line somehow

    buddyStatus = (TextView) row.findViewById(R.id.buddy_mood);
    buddyStatus.setText(buddy.getMood());  //set the second line

    return row;
}
</code></pre>

<p>Then you need an buddy_list_item.XML file which will containt the two TextViews - buddy_name and buddy_mood. You can use simple_list_2 i think, but I do it this way.</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal" &gt;

    &lt;CheckedTextView
        android:id="@+id/buddy_name"
        android:layout_width="fill_parent"
        android:layout_height="?android:attr/listPreferredItemHeight"
        android:checkMark="?android:attr/textCheckMark"
        android:gravity="center_vertical"
        android:paddingLeft="6dip"
        android:paddingRight="6dip"
        android:text="@string/buddy_name"
        android:textAppearance="?android:attr/textAppearanceLarge" /&gt;

    &lt;TextView
        android:id="@+id/buddy_mood"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="@string/empty_string"
        android:layout_marginLeft="-350dp"
        android:layout_marginTop="16dp"
        android:gravity="center_vertical|bottom"
        android:textAppearance="?android:attr/textAppearanceSmall" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Just figure out how to put this to good use now :)</p>

<p>EDIT:</p>

<p>P.S. You know you can give the adapter anything it needs right? so you can even do ths</p>

<pre><code>public YourArrayAdapter(Context context, int textViewResourceId, HashMap yourMap)
{
    super(context, textViewResourceId, objects);
    this.context = context;
    this.buddies = objects;
    //do something with the map or delegate demapping to the adapter
}
</code></pre>

<p>and then later in getView() you actually do what you need to get the data out of the map instead of getting the data out of the map and making an ArrayAdapter out of that.</p>
