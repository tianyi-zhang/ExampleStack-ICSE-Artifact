<p>Rounded corners can be done using Lollipop's outlines and pre-Lollipop paths. See:</p>

<ol>
<li><p>Prepare masks</p>

<pre><code>if (cornerRadius &gt; 0) {
    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) {
        setClipToOutline(true);
        setOutlineProvider(ShadowShape.viewOutlineProvider);
    } else {
        cornersMask = new Path();
        cornersMask.addRoundRect(new RectF(0, 0, getWidth(), getHeight()), cornerRadius, cornerRadius, Path.Direction.CW);
        cornersMask.setFillType(Path.FillType.INVERSE_WINDING);
    }
} else if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) {
    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP)
        setOutlineProvider(ViewOutlineProvider.BOUNDS);
}
</code></pre></li>
<li><p>draw(Canvas) method</p>

<pre><code>if (cornerRadius &gt; 0 &amp;&amp; getWidth() &gt; 0 &amp;&amp; getHeight() &gt; 0 &amp;&amp; Build.VERSION.SDK_INT &lt;= Build.VERSION_CODES.KITKAT_WATCH) {
    int saveFlags = Canvas.MATRIX_SAVE_FLAG | Canvas.CLIP_SAVE_FLAG | Canvas.HAS_ALPHA_LAYER_SAVE_FLAG | Canvas.FULL_COLOR_LAYER_SAVE_FLAG | Canvas.CLIP_TO_LAYER_SAVE_FLAG;
    int saveCount = canvas.saveLayer(0, 0, getWidth(), getHeight(), null, saveFlags);

    super.draw(canvas);

    paint.setXfermode(pdMode);
    canvas.drawPath(cornersMask, paint);

    canvas.restoreToCount(saveCount);
    paint.setXfermode(null);
} else {
    super.draw(canvas);
}
</code></pre></li>
<li><p>and the missing viewOutlineProvider</p>

<pre><code>    viewOutlineProvider = new ViewOutlineProvider() {
        @Override
        public void getOutline(View view, Outline outline) {
            ShadowShape shadowShape = ((ShadowView) view).getShadowShape();
            if (shadowShape == RECT) {
                outline.setRect(0, 0, view.getWidth(), view.getHeight());
            } else if (shadowShape == ROUND_RECT) {
                outline.setRoundRect(0, 0, view.getWidth(), view.getHeight(), ((CornerView) view).getCornerRadius());
            } else if (shadowShape == CIRCLE) {
                outline.setOval(0, 0, view.getWidth(), view.getHeight());
            }
        }
    };
</code></pre></li>
</ol>

<p>And the image:</p>

<p><img src="http://i.stack.imgur.com/5jIHS.png" alt="enter image description here"></p>

<p>You can mess with this code in any way you want. You can cut the image and the background to any shape, separately or together. For more details check out the code on <a href="https://github.com/ZieIony/Carbon" rel="nofollow">github</a>.</p>
