<p>Create two wrapping value classes and put the <code>equals</code> and <code>hashCode</code> implementations there. </p>

<pre><code>    public class Test {


    Set&lt;NameBeanWrapper&gt; names = new HashSet&lt;Test.NameBeanWrapper&gt;();
    Set&lt;TimestampBeanWrapper&gt; timestamps = new HashSet&lt;Test.TimestampBeanWrapper&gt;();

    public void store(Set&lt;Bean&gt; initial) {
      for (Bean bean : initial) {
        names.add(new NameBeanWrapper(bean));
        timestamps.add(new TimestampBeanWrapper(bean));
      }
    }

    public static class Bean {
      String name;
      Long timestamp;
      public String getName() {
        return name;
      }
      public void setName(String name) {
        this.name = name;
      }
      public Long getTimestamp() {
        return timestamp;
      }
      public void setTimestamp(Long timestamp) {
        this.timestamp = timestamp;
      }
    }

    public static class NameBeanWrapper {
      final Bean bean;
      public NameBeanWrapper(Bean bean) {
        this.bean = bean;
      }
      @Override
      public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((bean == null || bean.name == null) ? 0 : bean.name.hashCode());
        return result;
      }
      @Override
      public boolean equals(Object obj) {
        if (this == obj) {
          return true;
        }
        if (obj == null) {
          return false;
        }
        if (getClass() != obj.getClass()) {
          return false;
        }
        NameBeanWrapper other = (NameBeanWrapper) obj;
        if (bean == null) {
          if (other.bean != null) {
            return false;
          }
        }else if (bean.name == null) {
            if (other.bean.name != null) {
              return false;
            }
        } else if (!bean.name.equals(other.bean.name)) {
          return false;
        }
        return true;
      }
    }

    public static class TimestampBeanWrapper {
      final Bean bean;
      public TimestampBeanWrapper(Bean bean) {
        this.bean = bean;
      }
      @Override
      public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((bean == null || bean.timestamp == null) ? 0 : bean.timestamp.hashCode());
        return result;
      }
      @Override
      public boolean equals(Object obj) {
        if (this == obj) {
          return true;
        }
        if (obj == null) {
          return false;
        }
        if (getClass() != obj.getClass()) {
          return false;
        }
        NameBeanWrapper other = (NameBeanWrapper) obj;
        if (bean == null) {
          if (other.bean != null) {
            return false;
          }
        }else if (bean.timestamp == null) {
            if (other.bean.timestamp != null) {
              return false;
            }
        } else if (!bean.timestamp.equals(other.bean.timestamp)) {
          return false;
        }
        return true;
      }
    }

  }
</code></pre>
