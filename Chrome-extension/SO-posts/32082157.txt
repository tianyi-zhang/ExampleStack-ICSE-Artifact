<p>While messing around with the layout behavior, I figured out the problem. So I created a custom layout behavior class to handle the height inconstancy:</p>

<pre><code>import android.content.Context;
import android.support.design.widget.AppBarLayout;
import android.support.design.widget.CoordinatorLayout;
import android.support.v4.view.ViewCompat;
import android.util.AttributeSet;
import android.view.View;
import java.util.List;


public class CustomBehavior extends AppBarLayout.ScrollingViewBehavior
{
    public CustomBehavior()
    {
        super();
    }

    public CustomBehavior(Context context, AttributeSet attrs)
    {
        super(context, attrs);
    }


    @Override
    public boolean onMeasureChild(CoordinatorLayout parent, View child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed)
    {
        if (child.getLayoutParams().height == -1)
        {
            List dependencies = parent.getDependencies(child);

            if (dependencies.isEmpty())
            {
                return false;
            }

            AppBarLayout appBar = getOriginalLayout(dependencies);

            if (appBar != null &amp;&amp; ViewCompat.isLaidOut(appBar))
            {
                if (ViewCompat.getFitsSystemWindows(appBar))
                {
                    ViewCompat.setFitsSystemWindows(child, true);
                }

                int scrollRange = appBar.getTotalScrollRange();
                int parentHeight = View.MeasureSpec.getSize(parentHeightMeasureSpec);
                int height = parentHeight - appBar.getMeasuredHeight() + scrollRange;
                int heightMeasureSpec = View.MeasureSpec.makeMeasureSpec(height, View.MeasureSpec.AT_MOST);

                parent.onMeasureChild(child, parentWidthMeasureSpec, widthUsed, heightMeasureSpec, heightUsed);

                return true;
            }
        }

        return false;
    }


    private static AppBarLayout getOriginalLayout(List&lt;View&gt; views)
    {
        int i = 0;

        for (int z = views.size(); i &lt; z; ++i)
        {
            View view = (View)views.get(i);

            if (view instanceof AppBarLayout)
            {
                return (AppBarLayout)view;
            }
        }

        return null;
    }
}
</code></pre>
