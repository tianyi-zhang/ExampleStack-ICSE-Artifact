<p>Ok, I got it running with mv architecture...</p>

<pre><code>    public AlertDialog openLocInput() {

    AlertDialog.Builder alert = new AlertDialog.Builder(getActivity());
    alert.setTitle("Login");
    alert.setMessage("Enter Pin :");

    // Set an EditText view to get user input
    final EditText input = new EditText(getActivity());
    alert.setView(input);

    alert.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
        public void onClick(DialogInterface dialog, int whichButton) {
            jsonHandler.obtainMessage(1, input.getText().toString())
                    .sendToTarget();
            dialog.dismiss();
            return;
        }
    });

    alert.setNegativeButton("Cancel",
            new DialogInterface.OnClickListener() {

                public void onClick(DialogInterface dialog, int which) {
                    dialog.dismiss();
                    return;
                }
            });
    return alert.create();
}
</code></pre>

<p>implemented in Fragment... starting this alertdialog from fragment:</p>

<pre><code>        fragment_userlocation_btn_addLocation.setOnClickListener(new OnClickListener() {

        public void onClick(View v) {
            openLocInput().setOwnerActivity(getActivity());
            openLocInput().show();
        }
    });
</code></pre>

<p>also implemented in Fragments.</p>

<p>But I still believe in the overkill theory...</p>

<p>I think &lt;5% of my UI will be reused, so is it recommended to mix up activities loading fragments and activities including the ui logic without fragments?</p>

<p>I think the real advantage of Fragments are tablet optimization, but the usage of tablets compared of usage of mobile devices are very small at this time. In addition to that Tablets are not so "mobile" then mobile devices and are not in focus for context aware development...</p>
