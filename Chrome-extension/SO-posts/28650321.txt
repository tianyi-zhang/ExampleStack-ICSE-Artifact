<p>You are setting the adapter before you are retrieving the values from database, hence there would be no data in the adapter. Moved setting the adapter after retrieving values from DB and after setting them in <code>Films</code> object.</p>

<pre><code>public List&lt;Films&gt; getAllFilms() {
        List&lt;Films&gt; filmList = new ArrayList&lt;Films&gt;();
        // Select All Query
        String selectQuery = "SELECT  * FROM film_table";

        SQLiteDatabase db = new MyDBHandler(this).getWritableDatabase();
        Cursor cursor = db.rawQuery(selectQuery, null);


        // looping through all rows and adding to list
        if (cursor.moveToFirst()) {
            do {
                Films film = new Films();
                film.setID(Integer.parseInt(cursor.getString(0)));
                film.setfilmName(cursor.getString(1));
                film.setFilmActors(cursor.getString(2));
                film.setFilmDirectors(cursor.getString(3));
                film.setfilmDescription(cursor.getString(4));
                film.setfilmFave(cursor.getString(5));
                filmList.add(film);

            } while (cursor.moveToNext());
        }
ArrayAdapter&lt;Films&gt; adapter = new ArrayAdapter&lt;Films&gt;(MainActivity.this, android.R.layout.simple_list_item_1,filmList);
ListView listView = (ListView) findViewById(android.R.id.list);
listView.setAdapter(adapter);
return filmList;
</code></pre>

<p>}</p>

<p>Also add a custom adapter to display the value from the class Film:</p>

<pre><code>public class MyClassAdapter extends ArrayAdapter&lt;Films&gt; {

    private static class ViewHolder {
        private TextView filmname;
        private TextView actors;
        ................
    }

    public MyClassAdapter(Context context, int textViewResourceId, ArrayList&lt;Films&gt; items) {
        super(context, textViewResourceId, items);
    }

    public View getView(int position, View convertView, ViewGroup parent) {

        if (convertView == null) {
            convertView = LayoutInflater.from(this.getContext())
                    .inflate(R.layout.film_layout, parent, false);

            viewHolder = new ViewHolder();
            viewHolder.itemView = (TextView) convertView.findViewById(R.id.ItemView);

        } else {
            viewHolder = (ViewHolder) convertView.getTag();
        }

        Films item = getItem(position);
        if (item!= null) {
            // My layout has only one TextView
            // do whatever you want with your string and long
            viewHolder.itemView.setText(String.format("%s", item.getfilname));
        }

        return view;
    }
}
</code></pre>

<p>Layout for the listrow(film_layout.xml)</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="match_parent" &gt;

        &lt;TextView
            android:id="@+id/filname"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content" 
            android:layout_weight="1"/&gt;
         .................... //Form how each row should be displayed    

 &lt;/RelativeLayout&gt; 
</code></pre>

<p>Tutorial how to create a custom listview <a href="http://androidexample.com/How_To_Create_A_Custom_Listview_-_Android_Example/index.php?view=article_discription&amp;aid=67&amp;aaid=9" rel="nofollow">here</a></p>
