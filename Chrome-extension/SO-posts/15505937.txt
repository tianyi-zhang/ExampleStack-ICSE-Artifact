<p>The line it gets the error on is basically saying it didn't find your <code>ListView</code>. This is because you may be confusing an ID for the <code>ListView</code>. In this error, <em>cart</em> is <em>null</em>.</p>

<p>Set your <code>Activity</code> to use the correct XML file.</p>

<pre><code>setContentView(R.layout.shoppingcart);
</code></pre>

<p>Change this line</p>

<pre><code>ListView cart = (ListView) findViewById(R.id.listViewcart);
</code></pre>

<p>to</p>

<pre><code>ListView cart = (ListView) findViewById(android.R.id.list);
</code></pre>

<p>Now change your XML for the layout with the <code>ListView</code> to this and delete the other <code>ListView</code>.</p>

<pre><code>&lt;ListView
    android:id="@android:id/list"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"&gt;

&lt;/ListView&gt;
</code></pre>

<p>Now alter your custom adapter <code>ListAdapter</code> to use a <code>String</code> and not an <code>Item</code>. You'll get an invalid cast error when you instantiate the adapter.</p>

<p>Here is your adapter using an <code>ArrayList&lt;String&gt;</code> instead of <code>List&lt;Item&gt;</code>.</p>

<pre><code>public class ListAdapter extends ArrayAdapter&lt;String&gt; {
    public ListAdapter(Context context, int textViewResourceId) {
        super(context, textViewResourceId);
        // TODO Auto-generated constructor stub
    }

    private ArrayList&lt;String&gt; items;

    public ListAdapter(Context context, int resource, List&lt;String&gt; items) {
        super(context, resource, items);
        this.items = items;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View v = convertView;

        if (v == null) {
            LayoutInflater vi;
            vi = LayoutInflater.from(getContext());
            v = vi.inflate(R.layout.shoppingcart_row, null);
        }

        String p = items.get(position);

        if (p != null) {
            TextView tt = (TextView) v.findViewById(R.id.item);

            if (tt != null) {
                tt.setText(p.getText());
            }
        }

        return v;
    }
}
</code></pre>
