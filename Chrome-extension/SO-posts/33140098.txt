<p>You made a silly mistake, and you built your reference maps for parentheses, braces, and brackets <em>backwards</em>.  Here is how you were originally building the map:</p>

<pre><code>map.put('{', '}');
map.put('(', ')');
map.put('[', ']');
</code></pre>

<p>But you were looking up <em>closing</em> parentheses, braces, and brackets in the map, when the keys were actually the opening characters instead.  This was returning <code>null</code> and causing your method to return <code>false</code>.</p>

<p>Here is the complete code for your method:</p>

<pre><code>public static boolean isWellFormed(String input) {
    if (input == null) return true;

    Stack&lt;Character&gt; stack = new Stack&lt;Character&gt;();
    Map&lt;Character,Character&gt; map = new HashMap&lt;Character,Character&gt;();

    map.put('}', '{');
    map.put(')', '(');
    map.put(']', '[');

    for (int i=0; i &lt; input.length(); i++) {
        char s = input.charAt(i);

        if (s == '[' || s == '{' || s == '(') {
            stack.push(s);
        }
        if (s == ']' || s == '}' || s == ')') {
            if (map.get(s) != stack.pop()) {
                return false;
            }
        }
    }

    if (!stack.isEmpty()) {
        return false;
    }
    else {
        return true;
    }
}
</code></pre>

<p>I tested your code with this change in IntelliJ and it seems to run without any problems.</p>
