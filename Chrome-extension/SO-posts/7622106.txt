<p>Ok I have found a workaround for the problem. You need to copy the file to an external directory then load a typeface from file with <code>Typeface.createFromFile</code> and then delete the temporary file. I know is not a clean mode of work but is working grate.</p>

<p>1 - You need to put your font on "/res/raw/font.ttf"</p>

<p>2 - Inser in your code the following method</p>

<p>3 - put in your code <code>Typeface mFont = FileStreamTypeface(R.raw.font);</code></p>

<p>4 - All is done</p>

<pre><code> Typeface FileStreamTypeface(int resource)
{
    Typeface tf = null;

    InputStream is = getResources().openRawResource(resource);
    String path = Environment.getExternalStorageDirectory().getAbsolutePath() + "/gmg_underground_tmp";
    File f = new File(path);
    if (!f.exists())
    {
        if (!f.mkdirs())
            return null;
    }

    String outPath = path + "/tmp.raw";

    try
    {
        byte[] buffer = new byte[is.available()];
        BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(outPath));

        int l = 0;
        while((l = is.read(buffer)) &gt; 0)
        {
            bos.write(buffer, 0, l);
        }
        bos.close();

        tf = Typeface.createFromFile(outPath);

        File f2 = new File(outPath);
        f2.delete();
    }
    catch (IOException e)
    {
        return null;
    }

    return tf;      
}
</code></pre>

<p>if someone have an alternative I'm pleased to read it.
Do you have to remember that this workaround is only for Android Libraries</p>

<p>Best regards </p>
