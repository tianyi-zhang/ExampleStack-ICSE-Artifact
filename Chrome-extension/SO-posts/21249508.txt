<p>Hi please try the below reference link for Progressbar tutorials.Hope it should helpful for you. You can download the sample source code and try it in your application.</p>

<p><a href="http://www.mkyong.com/android/android-progress-bar-example/" rel="nofollow">Progress Bar</a></p>

<p><a href="http://examples.javacodegeeks.com/android/core/ui/progressdialog/android-progressdialog-example/" rel="nofollow">Progress bar for downloading a file</a></p>

<p><a href="http://www.compiletimeerror.com/2013/09/android-progress-bar-example.html#.Ut3-kXO6Y8p" rel="nofollow">Android Progress Bar Example</a></p>

<p>Hi here i added the sample download file from server code. Please check and let me know.</p>

<pre><code>    import java.io.InputStream;
    import java.net.URL;
    import android.app.Activity;
    import android.app.ProgressDialog;
    import android.os.Bundle;
    import android.util.Log;
    import android.view.View;
    import android.widget.Button;
    import java.io.BufferedInputStream;
    import java.io.FileOutputStream;
    import java.io.OutputStream;
    import java.net.URLConnection; 
    import android.app.Dialog;
    import android.graphics.drawable.Drawable;
    import android.os.AsyncTask;
    import android.os.Environment;
    import android.widget.ImageView;

    public class download extends Activity {

        // button to show progress dialog
        Button btnShowProgress;

        // Progress Dialog
        private ProgressDialog pDialog;
        ImageView my_image;
        // Progress dialog type (0 - for Horizontal progress bar)
        public static final int progress_bar_type = 0; 

        // File url to download
        private static String file_url = "http://alshbab90.softsmedia.com/helmi_1.mp3";

        @Override
        public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        // show progress bar button
        btnShowProgress = (Button) findViewById(R.id.btnProgressBar);
        // Image view to show image after downloading
        my_image = (ImageView) findViewById(R.id.my_image);
        /**
         * Show Progress bar click event
         * */
          btnShowProgress.setOnClickListener(new View.OnClickListener()   { 

            @Override
            public void onClick(View v) {
            // starting new Async Task
            new DownloadFileFromURL().execute(file_url);
            }
        });
        }

        /**
         * Showing Dialog
         * */
        @Override
        protected Dialog onCreateDialog(int id) {
        switch (id) {
        case progress_bar_type: // we set this to 0
            pDialog = new ProgressDialog(this);
            pDialog.setMessage("Downloading file. Please wait...");
            pDialog.setIndeterminate(false);
            pDialog.setMax(100);
            pDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
            pDialog.setCancelable(true);
            pDialog.show();
            return pDialog;
        default:
            return null;
        }
        }

        /**
         * Background Async Task to download file
         * */
        class DownloadFileFromURL extends AsyncTask&lt;String, String, String&gt; {

        /**
         * Before starting background thread
         * Show Progress Bar Dialog
         * */
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            showDialog(progress_bar_type);
        }

        /**
         * Downloading file in background thread
         * */
        @Override
        protected String doInBackground(String... f_url) {
            int count;
            try {
            URL url = new URL(f_url[0]);
            URLConnection conection = url.openConnection();
            conection.connect();
            // this will be useful so that you can show a tipical 0-100% progress bar
            int lenghtOfFile = conection.getContentLength();

            // download the file
            InputStream input = new BufferedInputStream(url.openStream(), 8192);

            // Output stream
            OutputStream output = new FileOutputStream("/sdcard/helmi_1.mp3");

            byte data[] = new byte[1024];

            long total = 0;

            while ((count = input.read(data)) != -1) {
                total += count;
                // publishing the progress....
                // After this onProgressUpdate will be called
                publishProgress(""+(int)((total*100)/lenghtOfFile));

                // writing data to file
                output.write(data, 0, count);
            }

            // flushing output
            output.flush();

            // closing streams
            output.close();
            input.close();

            } catch (Exception e) {
            Log.e("Error: ", e.getMessage());
            }

            return null;
        }

        /**
         * Updating progress bar
         * */
        protected void onProgressUpdate(String... progress) {
            // setting progress percentage
            pDialog.setProgress(Integer.parseInt(progress[0]));
           }

        /**
         * After completing background task
         * Dismiss the progress dialog
         * **/
        @Override
        protected void onPostExecute(String file_url) {
            // dismiss the dialog after the file was downloaded
             dismissDialog(progress_bar_type);

             // Displaying downloaded image into image view
             // Reading image path from sdcard
               String imagePath =  Environment.getExternalStorageDirectory().toString() + "/helmi_1.mp3";
             // setting downloaded into image view
            my_image.setImageDrawable(Drawable.createFromPath(imagePath));
        }

        }
    }
</code></pre>

<p>Create <strong>main.xml:</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="fill_parent"
android:orientation="vertical" &gt;

&lt;!-- Download Button --&gt;
&lt;Button android:id="@+id/btnProgressBar"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:text="Download File with Progress Bar"
    android:layout_marginTop="50dip"/&gt;

&lt;!-- Image view to show image after downloading --&gt;
&lt;ImageView android:id="@+id/my_image"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"/&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Need to add AndroidManifest.xml permission as,</p>

<pre><code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
</code></pre>

<p>Hope it should helpful for you. Please try and let me know. Thanks</p>
