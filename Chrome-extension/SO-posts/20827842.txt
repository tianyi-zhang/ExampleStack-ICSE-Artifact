<p>Create your custom layout for your row. </p>

<p><strong>custom_row.xml:</strong></p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:id="@+id/listview_layout"&gt;   
    &lt;TextView
        android:id="@+id/listview_firsttextview"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        &gt;
    &lt;/TextView&gt;

    &lt;TextView
        android:id="@+id/listview_secondtextview"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        &gt;
    &lt;/TextView&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>Afterwards you will need a custom ArrayAdapter. To achieve this you will need to extend ArrayAdapter&lt;> class, <strong>example below:</strong></p>

<pre><code>public class CustomAdapter extends ArrayAdapter&lt;String&gt;
{
    private Context context;
    private List&lt;String&gt; strings;

    public ListViewAdapter(Context context, List&lt;String&gt; strings)
    {
        super(context, R.layout.listview_row, order);
        this.context = context;
        this.strings = new ArrayList&lt;String&gt;();
        this.strings = strings;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) 
    {
        LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);

        View rowView = inflater.inflate(R.layout.listview_row, parent, false);

        TextView your_first_text_view = (TextView) rowView.findViewById(R.id.listview_firsttextview);
        TextView your_second_text_view = (TextView) rowView.findViewById(R.id.list_secondtextview);

        your_first_text_view.setText(strings.get(position));
        your_second_text_view.setText(strings.get(position)); //Instead of the same value use position + 1, or something appropriate

        return rowView;
    }
}
</code></pre>

<p>And for the last steps set the adapter to the appopriate ListView like this:</p>

<pre><code>ListView my_list_view = (ListView) findViewById(R.id.mylistview);
CustomAdapter my_adapter = new CustomAdapter(this, my_strings);
my_list_view.setAdapter(my_adapter);
</code></pre>

<p>I hope this gives you an idea of setting custom adapters to your ListView.</p>
