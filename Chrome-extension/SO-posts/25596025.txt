<p>Based on your last comment  maybe you have to add the fragment using a tag, say "ListFragment", and in the Activity check if the fragment is visible:</p>

<pre><code>Fragment fragment = getFragmentManager().findFragmentByTag("ListFragment"); 
if (fragment != null &amp;&amp; fragment.isAdded() &amp;&amp; fragment.isVisible()) {
     getActionBar().setDisplayHomeAsUpEnabled(true); 
} else {
     getActionBar().setDisplayHomeAsUpEnabled(false); 
}
</code></pre>

<p>This could be done in onResume or onCreateOptionsMenu of the Activity.</p>

<p>Using setHasOptionsMenu(true) for fragments allow fragments to add more options menu items that belongs to the fragment. But since you are calling:</p>

<pre><code>getActivity().getActionBar().setDisplayHomeAsUpEnabled(true);
</code></pre>

<p>I believe that setHasOptionsMenu(true) has no effect in this scenario as you are talking directly to the Activity. This is also why removing the fragment does not change/remove the up caret. </p>

<p>Another possible solution could be to manually remove the up caret whenever the fragment is detatched.</p>

<pre><code>public void onDetach () {
    getActivity().getActionBar().setDisplayHomeAsUpEnabled(false);
    getActivity().invalidateOptionsMenu(); // &lt;- not sure if needed
}
</code></pre>

<p><strong>Ok, so now I have looked over your code. Here is my suggestion:</strong></p>

<p>Note that I have not tested this code and is written in notepad, so might contain some typos.</p>

<p><strong>MainActivity:</strong>
Move the up caret responsibility to the Activity (setOptionsMenu(true) for fragments is not meant to handle this anyway). </p>

<pre><code>public class MainActivity extends Activity {
    private static final String DB_NAME = "hisnul.sqlite3";

    //A good practice is to define database field names as constants
    private static final String TABLE_NAME = "en_dua";
    private static final String DUA_ID = "_id";
    private static final String DUA_TITLE = "title";

    private SQLiteDatabase database;
    private ArrayList duas;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if (savedInstanceState == null) {
            getFragmentManager().beginTransaction()
                    .add(R.id.container, new FragmentDuaList())
                    .commit();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_activity_dualist, menu);
        restoreActionBar();
        return true;
    }

    private void restoreActionBar() {
        Fragment detailFragment = getFragmentManager().findFragmentByTag("DetailListFragment");
        if (detailFragment != null) {
            // means a detail fragment has been added and we need the up caret
            getActionBar().setDisplayHomeAsUpEnabled(true);
        } else {
            getActionBar().setDisplayHomeAsUpEnabled(false);
        }
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        // why not use switch case here?
        if(id == android.R.id.home) {
                Toast.makeText(this, "Test Caret", Toast.LENGTH_SHORT).show();
                getFragmentManager().popBackStack();
                Log.d("Khalid", "Testing CARET");
                return true;
        } if (id == R.id.action_settings) {
            Toast.makeText(this,"Settings Clicked", Toast.LENGTH_SHORT).show();
            return true;
        }
        else if (id == R.id.action_bookmarks){
            Toast.makeText(this,"Favorites Clicked", Toast.LENGTH_SHORT).show();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {

        public PlaceholderFragment() {
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            return inflater.inflate(R.layout.fragment_dua_list, container, false);
        }
    }
}
</code></pre>

<p><strong>FragmentDuaList:</strong> 
No changes here</p>

<p><strong>FragmentDuaDetail:</strong>
Remove the ActionBar code:</p>

<pre><code>public class FragmentDuaDetail extends Fragment {

    private static final String DB_NAME = "hisnul.sqlite3";

    //A good practice is to define database field names as constants
    private static final String TABLE_NAME = "en_dua";
    private static final String DUA_ID = "_id";
    private static final String DUA_TITLE = "title";

    private static final String DUA_ARABIC = "arabic";
    private static final String DUA_TRANSLATION = "translation";
    private static final String DUA_REFERENCE = "reference";

    private String title;
    private String arabic;
    private String translation;
    private String reference;

    private String dua_from_list_fragment;

    private SQLiteDatabase database;
    private ArrayList duaDetails;

    private View rootView;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        // Inflate the layout for this fragment
        rootView = inflater.inflate(R.layout.fragment_dua_detail, container, false);

        dua_from_list_fragment = getArguments().getString("dua_id");

        //Our key helper
        ExternalDbOpenHelper dbOpenHelper = new ExternalDbOpenHelper(getActivity(), DB_NAME);
        database = dbOpenHelper.openDataBase();
        //Thatâ€™s it, the database is open!
        fillDua();
        setUpDuaList();

        getActivity().invalidateOptionsMenu();

        return rootView;
    }

    public void fillDua(){
        //Extracting Elements from Database
        duaDetails = new ArrayList&lt;DuaDetail&gt;();
        Cursor friendCursor = database.query(TABLE_NAME, new String[] {DUA_TITLE,
                DUA_ARABIC, DUA_TRANSLATION, DUA_REFERENCE}, DUA_ID + "=" + dua_from_list_fragment, null, null, null, null);
        friendCursor.moveToFirst();
        if(!friendCursor.isAfterLast()) {
            do {
                title = friendCursor.getString(0);
                arabic = friendCursor.getString(1);
                translation = friendCursor.getString(2);
                reference = friendCursor.getString(3);
                duaDetails.add(new DuaDetail(title, arabic, translation, reference));
            } while (friendCursor.moveToNext());
        }
        friendCursor.close();
    }

    public void setUpDuaList(){
        TextView tvDuaTitle = (TextView) rootView.findViewById(R.id.txtDuaTitle);
        TextView tvDuaArabic = (TextView) rootView.findViewById(R.id.txtDuaArabic);
        TextView tvDuaTranslation = (TextView) rootView.findViewById(R.id.txtDuaTranslation);
        TextView tvDuaReference = (TextView) rootView.findViewById(R.id.txtDuaReference);

        Typeface face;
        face = Typeface.createFromAsset(getActivity().getAssets(), "DroidNaskh-Regular.ttf");
        tvDuaArabic.setTypeface(face);

        tvDuaTitle.setText(title);
        tvDuaArabic.setText(arabic);
        tvDuaTranslation.setText(translation);
        tvDuaReference.setText(reference);
    }


}
</code></pre>
