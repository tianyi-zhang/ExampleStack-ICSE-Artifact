<pre><code>package com.shubh;

import android.os.Build;
import android.os.Bundle;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Paint;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.animation.AnimationUtils;
import android.view.animation.LayoutAnimationController;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class MainActivity extends Activity {

     @Override
      public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.act_main);




      }

      @TargetApi(Build.VERSION_CODES.HONEYCOMB)
    @SuppressLint("NewApi")
    public void startAnimation(View view) {
        float dest = 0;
        ImageView aniView = (ImageView) findViewById(R.id.imageView1);
        switch (view.getId()) {

        case R.id.Button01:
          dest = 360;
          if (aniView.getRotation() == 360) {
            System.out.println(aniView.getAlpha());
            dest = 0;
          }
          ObjectAnimator animation1 = ObjectAnimator.ofFloat(aniView,
              "rotation", dest);
          animation1.setDuration(2000);
          animation1.start();
          // Show how to load an animation from XML
          // Animation animation1 = AnimationUtils.loadAnimation(this,
          // R.anim.myanimation);
          // animation1.setAnimationListener(this);
          // animatedView1.startAnimation(animation1);
          break;

        case R.id.Button02:
          // Shows how to define a animation via code
          // Also use an Interpolator (BounceInterpolator)
          Paint paint = new Paint();
          TextView aniTextView = (TextView) findViewById(R.id.textView1);
          float measureTextCenter = paint.measureText(aniTextView.getText()
              .toString());
          dest = 0 - measureTextCenter;
          if (aniTextView.getX() &lt; 0) {
            dest = 0;
          }
          ObjectAnimator animation2 = ObjectAnimator.ofFloat(aniTextView,
              "x", dest);
          animation2.setDuration(2000);
          animation2.start();
          break;

        case R.id.Button03:
          // Demonstrate fading and adding an AnimationListener
            RelativeLayout mainContainer = (RelativeLayout) findViewById(R.id.layout);
            LayoutAnimationController controller = AnimationUtils.loadLayoutAnimation(this, R.anim.main_layout_animation);
            mainContainer.setLayoutAnimation(controller);

          dest = 1;
          Button button3=(Button)findViewById(R.id.Button03);
            button3.startAnimation(AnimationUtils.loadAnimation(MainActivity.this, R.anim.hyperspace_jump));
          if (aniView.getAlpha() &gt; 0) {
            dest = 0;
          }
          ObjectAnimator animation3 = ObjectAnimator.ofFloat(aniView,
              "alpha", dest);
          animation3.setDuration(2000);
          animation3.start();
          break;

        case R.id.Button04:

          ObjectAnimator fadeOut = ObjectAnimator.ofFloat(aniView, "alpha",
              0f);
          fadeOut.setDuration(2000);
          ObjectAnimator mover = ObjectAnimator.ofFloat(aniView,
              "translationX", -500f, 0f);
          mover.setDuration(2000);
          ObjectAnimator fadeIn = ObjectAnimator.ofFloat(aniView, "alpha",
              0f, 1f);
          fadeIn.setDuration(2000);
          AnimatorSet animatorSet = new AnimatorSet();

          animatorSet.play(mover).with(fadeIn).after(fadeOut);
          animatorSet.start();
          break;

        default:
          break;
        }

      }

      @Override
      public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        return super.onCreateOptionsMenu(menu);
      }

      @Override
      public boolean onOptionsItemSelected(MenuItem item) {
        Intent intent = new Intent(this, HitActivity.class);
        startActivity(intent);
        return true;
      }
    } 
</code></pre>

<p>and the xml is</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8" ?&gt; 
- &lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"            android:id="@+id/layout" 
    android:layout_width="match_parent" 
   android:layout_height="match_parent"
  android:orientation="vertical"&gt;
- &lt;LinearLayout android:id="@+id/test" 
  android:layout_width="wrap_content" 
  android:layout_height="wrap_content"&gt;

  &lt;Button android:id="@+id/Button01" 
  android:layout_width="wrap_content"
  android:layout_height="wrap_content"
  android:onClick="startAnimation"
  android:text="Rotate" /&gt; 

  &lt;Button android:id="@+id/Button04" 
  android:layout_width="wrap_content" 
  android:layout_height="wrap_content"
  android:onClick="startAnimation" 
  android:text="Group" /&gt; 

  &lt;Button android:id="@+id/Button03"
   android:layout_width="wrap_content"
   android:layout_height="wrap_content" 
   android:onClick="startAnimation" 
   android:text="Fade" /&gt; 

  &lt;Button android:id="@+id/Button02"
  android:layout_width="wrap_content"
  android:layout_height="wrap_content" 
  android:onClick="startAnimation"  
  android:text="Animate" /&gt; 
  &lt;/LinearLayout&gt;

  &lt;ImageView android:id="@+id/imageView1" 
   android:layout_width="wrap_content"
   android:layout_height="wrap_content" 
   android:layout_centerHorizontal="true"
   android:layout_centerVertical="true"
   android:src="@drawable/img" /&gt; 

   &lt;TextView android:id="@+id/textView1"
   android:layout_width="wrap_content"
   android:layout_height="wrap_content"
   android:layout_above="@+id/imageView1"
   android:layout_alignRight="@+id/imageView1"
   android:layout_marginBottom="30dp"
   android:text="Large Text" 
   android:textAppearance="?android:attr/textAppearanceLarge" /&gt; 
  &lt;/RelativeLayout&gt;
</code></pre>
