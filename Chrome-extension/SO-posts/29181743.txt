<p>This is my implementation and it's working for me:</p>

<p>Somewhere in your code add this (once per song):</p>

<pre><code>_seekBar.setProgress(0);
    _seekBar.setMax(_mediaPlayer.getDuration() / 1000);
</code></pre>

<p>And then update the seekbar using this code:</p>

<pre><code>private Runnable _updateRunnable = new Runnable() {
    public void run() {
        if (_hasStopped) {
            return;
        }

        updateSeekbarView();
    }
};

private synchronized void updateSeekbarView() {
    if (_hasStopped) {
        reset();
        return;
    }

    if (_mediaPlayer == null) {
        return;
    }

    if (!_mediaPlayer.isPlaying()) {
        stop();
        return;
    }

    long totalDuration = _mediaPlayer.getDuration();
    long currentDuration = _mediaPlayer.getCurrentPosition();

    _txtMax.setText("" + AudioUtils.milliSecondsToTimer(totalDuration));
    _txtCurrent.setText("" + AudioUtils.milliSecondsToTimer(currentDuration));
    _seekBar.setProgress((int) (currentDuration / 1000));
    _handler.postDelayed(_updateRunnable, 1000);
}
</code></pre>

<p>and the <code>AudioUtils.milliSecondsToTimer()</code> implementation in case you wanted to show the timer as text next to your seekbar:</p>

<pre><code>public static String milliSecondsToTimer(long milliseconds) {
    String finalTimerString = "";
    String secondsString = "";

    // Convert total duration into time
    int hours = (int) (milliseconds / (1000 * 60 * 60));
    int minutes = (int) (milliseconds % (1000 * 60 * 60)) / (1000 * 60);
    int seconds = (int) ((milliseconds % (1000 * 60 * 60)) % (1000 * 60) / 1000);
    // Add hours if there
    if (hours &gt; 0) {
        finalTimerString = hours + ":";
    }

    // Prepending 0 to seconds if it is one digit
    if (seconds &lt; 10) {
        secondsString = "0" + seconds;
    } else {
        secondsString = "" + seconds;
    }

    finalTimerString = finalTimerString + minutes + ":" + secondsString;

    // return timer string
    return finalTimerString;
}
</code></pre>
