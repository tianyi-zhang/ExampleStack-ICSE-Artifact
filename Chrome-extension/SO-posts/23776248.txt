<p>when you are click on button at that time you have to set data for the adapter. Then you have to write notifidatasetchange method.</p>

<p>In your case you will get rowItem value is null that means   <code>List&lt;DeviceInfo&gt; objects</code>;  is also get null object value. </p>

<p>now Your code is </p>

<pre><code> public View onCreateView(LayoutInflater inflater, ViewGroup container,
        Bundle savedInstanceState) {

    View rootView = inflater.inflate(R.layout.activity_thirdswipe, container, false);
    arraylistAdd = new ArrayList&lt;DeviceInfo&gt;();
    spinner = (Spinner) rootView.findViewById(R.id.spnDevice);

    spinnerArrayAdapter = new ArrayAdapter&lt;String&gt;(rootView.getContext(), R.layout.spinner_items, spinnerArray); //selected item will look like a spinner set from XML
    spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    spinner.setAdapter(spinnerArrayAdapter);
    spinner = (Spinner) rootView.findViewById(R.id.spnAction);
    spinnerArrayAdapter = new ArrayAdapter&lt;String&gt;(rootView.getContext(), R.layout.spinner_items, spinnerArray); //selected item will look like a spinner set from XML
    spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    spinner.setAdapter(spinnerArrayAdapter);
    btnAdd = (Button) rootView.findViewById(R.id.buttonAdd);

    listOnAdd = (ListView) rootView.findViewById(R.id.listDynamic);     
    deviceType = spinner.getSelectedItem().toString();
    actionType = spinner.getSelectedItem().toString();
    Log.i("item", deviceType +" "+ actionType);
    adp=new CustomListDynamic(getActivity(),R.layout.custom_add_list,arraylistAdd);
    btnAdd.setOnClickListener(new OnClickListener() {
        @Override
        public void onClick(View v) {
            info = new DeviceInfo();
            info.setAction(actionType);
            info.setDevice(deviceType);

            arraylistAdd.add(info);
            for(int i=0;i&lt;arraylistAdd.size();i++){
                Log.i("itemArray", arraylistAdd.get(i).getDevice());
            }
            **adp.setObjectValue(info);** //set value of your object from here
            adp.notifyDataSetChanged();
        }
    });
    listOnAdd.setAdapter(adp);

    return rootView;
}
</code></pre>

<p>And your Custome Adapter class will be like This</p>

<pre><code> public class CustomListDynamic  extends ArrayAdapter&lt;DeviceInfo&gt; {
Context context;
List&lt;DeviceInfo&gt; objects;   
int layoutResourceId;

    public CustomListDynamic(Context context, int layoutResourceId,
            List&lt;DeviceInfo&gt; rowItems) {
        super(context, layoutResourceId, rowItems);
        this.context = context;
        this.layoutResourceId = layoutResourceId;
        objects = rowItems;

    }
    @Override
    public int getCount() {
        return objects.size();
    }

    public void setObjectValue(List&lt;DeviceInfo&gt; info){
       objects=info;
    }
    @Override
    public long getItemId(int position) {
        return position;
    }
       private class ViewHolder {

            TextView txtDeviceType;
            TextView txtActionType;
        }
       public View getView(int position, View convertView, ViewGroup parent) {
            ViewHolder holder;
            final DeviceInfo rowItem = getItem(position);

            LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            if (convertView == null) {

                convertView = inflater.inflate(R.layout.custom_add_list, null);
                holder = new ViewHolder(); 
                holder.txtDeviceType = (TextView) convertView.findViewById(R.id.txtDeviceType);
                holder.txtDeviceType = (TextView) convertView.findViewById(R.id.txtMobileNumber);     
                convertView.setTag(holder);
            } else
                holder = (ViewHolder) convertView.getTag();
                holder.txtDeviceType.setText(rowItem.getDevice());
                holder.txtActionType.setText(rowItem.getAction());
                Log.i("device set", rowItem.getDevice());
            return convertView;
        }          
}
</code></pre>
