<p>You can use the <a href="http://developer.android.com/reference/android/os/Debug.html" rel="nofollow">Debug</a> class to monitor the processes</p>

<hr>

<p>or use this function to calculate CPU usage</p>

<p>Use <code>/proc/stat/</code> for the total CPU usage (for all CPU's) . For per process usage</p>

<pre><code>private float readCpuUsage(int pid) {
    try {
        RandomAccessFile reader = new RandomAccessFile("/proc/" + pid + "/stat", "r");
        String load = reader.readLine();

        String[] toks = load.split(" ");

        long idle1 = Long.parseLong(toks[5]);
        long cpu1 = Long.parseLong(toks[2]) + Long.parseLong(toks[3]) + Long.parseLong(toks[4])
              + Long.parseLong(toks[6]) + Long.parseLong(toks[7]) + Long.parseLong(toks[8]);

        try {
            Thread.sleep(360);
        } catch (Exception e) {}

        reader.seek(0);
        load = reader.readLine();
        reader.close();

        toks = load.split(" ");

        long idle2 = Long.parseLong(toks[5]);
        long cpu2 = Long.parseLong(toks[2]) + Long.parseLong(toks[3]) + Long.parseLong(toks[4])
            + Long.parseLong(toks[6]) + Long.parseLong(toks[7]) + Long.parseLong(toks[8]);

        return (float)(cpu2 - cpu1) / ((cpu2 + idle2) - (cpu1 + idle1));

    } catch (IOException ex) {
        ex.printStackTrace();
    }

    return 0;
} 
</code></pre>

<p><sub> <a href="http://stackoverflow.com/questions/3118234/how-to-get-memory-usage-and-cpu-usage-in-android/5560634#5560634">source</a> </sub></p>

<hr>

<p>To get the list of running processes</p>

<pre><code>ActivityManager mgr = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
List&lt;ActivityManager.RunningTaskInfo&gt; allTasks = mgr.getRunningTasks(showLimit);
/* Loop through all tasks returned. */
for (ActivityManager.RunningTaskInfo aTask : allTasks) 
{                  
    Log.i("MyApp", "Task: " + aTask.baseActivity.getClassName()); 
}
</code></pre>
