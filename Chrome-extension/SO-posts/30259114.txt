<p>This example may by useful if you want blend two colors (foreground and background). Based on Orlando Leite answare and wikipedia  <a href="http://en.wikipedia.org/wiki/Alpha_compositing" rel="nofollow">http://en.wikipedia.org/wiki/Alpha_compositing</a>, proper way to blend two colors with alpha is:</p>

<pre><code>public static int MergeColors(int backgroundColor, int foregroundColor) {
    final byte ALPHA_CHANNEL = 24;
    final byte RED_CHANNEL   = 16;
    final byte GREEN_CHANNEL =  8;
    final byte BLUE_CHANNEL  =  0;

    final double ap1 = (double)(backgroundColor &gt;&gt; ALPHA_CHANNEL &amp; 0xff) / 255d;
    final double ap2 = (double)(foregroundColor &gt;&gt; ALPHA_CHANNEL &amp; 0xff) / 255d;
    final double ap = ap2 + (ap1 * (1 - ap2));

    final double amount1 = (ap1 * (1 - ap2)) / ap;
    final double amount2 = amount1 / ap;

    int a = ((int)(ap * 255d)) &amp; 0xff;

    int r = ((int)(((float)(backgroundColor &gt;&gt; RED_CHANNEL &amp; 0xff )*amount1) +
            ((float)(foregroundColor &gt;&gt; RED_CHANNEL &amp; 0xff )*amount2))) &amp; 0xff;
    int g = ((int)(((float)(backgroundColor &gt;&gt; GREEN_CHANNEL &amp; 0xff )*amount1) +
            ((float)(foregroundColor &gt;&gt; GREEN_CHANNEL &amp; 0xff )*amount2))) &amp; 0xff;
    int b = ((int)(((float)(backgroundColor &amp; 0xff )*amount1) +
            ((float)(foregroundColor &amp; 0xff )*amount2))) &amp; 0xff;

    return a &lt;&lt; ALPHA_CHANNEL | r &lt;&lt; RED_CHANNEL | g &lt;&lt; GREEN_CHANNEL | b &lt;&lt; BLUE_CHANNEL;
}
</code></pre>

<p>In this case alpha channel is used to compute percentage RGB share in blending. Background color may be visible only i foreground alpha is smaller than 100%</p>
