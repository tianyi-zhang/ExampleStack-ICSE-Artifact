<p>To include an exe file to your project, copy this exe file via filesystem to the <code>src</code> folder of your Netbeans project.</p>

<p><img src="http://i.stack.imgur.com/jwTBn.png" alt="exe file into your project"></p>

<p>when you have built your project, then this exe file will be packaged into the project jar file.</p>

<p><img src="http://i.stack.imgur.com/yWXL4.png" alt="exe file packaged into jar file"></p>

<p>At runtime to run this exe, you will need <a href="http://stackoverflow.com/questions/1529611/how-to-write-a-java-program-which-can-extract-a-jar-file-and-store-its-data-in-s">to extract this exe file from your jar file</a>.</p>

<p>And as this exe file is extracted you can execute it. </p>

<p>To launch an external application from your java code I recommend to use Apache Commons Exec: <a href="http://commons.apache.org/proper/commons-exec/" rel="nofollow">http://commons.apache.org/proper/commons-exec/</a></p>

<hr>

<p><strong>UPDATE</strong></p>

<p>Below there's sample class to demonstrate how to extract all exe files from the current running jar file. I used these SO posts to make this class: <a href="http://stackoverflow.com/questions/320542/how-to-get-the-path-of-a-running-jar-file">the first</a> and <a href="http://stackoverflow.com/questions/1529611/how-to-write-a-java-program-which-can-extract-a-jar-file-and-store-its-data-in-s">the second</a> ones.</p>

<pre><code>import java.io.File;
import java.io.IOException;

/**
 *
 */
public class TestClass {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException {

        extractExeFiles("C://Temp");

    }


    /**
     * Gets running jar file path.
     * @return running jar file path.
     */
    private static File getCurrentJarFilePath() {
        return new File(TestClass.class.getProtectionDomain().getCodeSource().getLocation().getPath());
    }

    /**
     * Extracts all exe files to the destination directory.
     * @param destDir destination directory.
     * @throws IOException if there's an i/o problem.
     */
    private static void extractExeFiles(String destDir) throws IOException {
        java.util.jar.JarFile jar = new java.util.jar.JarFile(getCurrentJarFilePath());
        java.util.Enumeration enumEntries = jar.entries();
        String entryName;
        while (enumEntries.hasMoreElements()) {
            java.util.jar.JarEntry file = (java.util.jar.JarEntry) enumEntries.nextElement();
            entryName = file.getName();
            if ( (entryName != null) &amp;&amp; (entryName.endsWith(".exe"))) {
                java.io.File f = new java.io.File(destDir + java.io.File.separator + entryName);
                if (file.isDirectory()) { // if its a directory, create it
                    f.mkdir();
                    continue;
                }
                java.io.InputStream is = jar.getInputStream(file); // get the input stream
                java.io.FileOutputStream fos = new java.io.FileOutputStream(f);
                while (is.available() &gt; 0) {  // write contents of 'is' to 'fos'
                    fos.write(is.read());
                }

                fos.close();
                is.close();                
            }
        }
    }
}
</code></pre>
