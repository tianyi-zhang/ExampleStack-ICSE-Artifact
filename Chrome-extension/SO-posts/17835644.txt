<p>From the <a href="http://docs.oracle.com/javase/7/docs/api/javax/imageio/ImageIO.html#read%28java.io.InputStream%29" rel="nofollow">documentation</a>:</p>

<blockquote>
  <p>Returns a BufferedImage as the result of decoding a supplied InputStream
      with an   ImageReader chosen automatically from among those currently 
      registered. The InputStream is wrapped in an ImageInputStream. <strong>If no registered ImageReader claims to be able to read the resulting stream, null is returned.</strong></p>
</blockquote>

<p>Here's the code that gets executed:</p>

<pre><code>public static BufferedImage read(ImageInputStream stream)
    throws IOException {
    if (stream == null) {
        throw new IllegalArgumentException("stream == null!");
    }

    Iterator iter = getImageReaders(stream);
    if (!iter.hasNext()) {
        return null;                  // &lt;~~~~~ here's your null
    }

    ImageReader reader = (ImageReader)iter.next();
    ImageReadParam param = reader.getDefaultReadParam();
    reader.setInput(stream, true, true);
    BufferedImage bi;
    try {
        bi = reader.read(0, param);
    } finally {
        reader.dispose();
        stream.close();
    }
    return bi;
}
</code></pre>

<p>Perhaps you can try explicitly getting an <code>ImageReader</code> based on the appropriate mime-type, and do the read code (as seen above) with that reader.</p>
