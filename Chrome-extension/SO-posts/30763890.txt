<p>Look up: <a href="http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-security.html" rel="nofollow">http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-security.html</a></p>

<p>From <a href="https://github.com/spring-projects/spring-boot/blob/master/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java" rel="nofollow">AuthenticationManagerConfiguration.java</a> looking at code, I see below. Also the in-memory configuration is a fallback if no authentication manager is provided as per <a href="http://docs.spring.io/autorepo/docs/spring-boot/1.3.0.BUILD-SNAPSHOT/api/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.html" rel="nofollow">Javadoc</a>. Your earlier attempt of Injecting the Authentication Manager would work because you will no longer be using the In-memory authentication and this class will be out of picture.</p>

<pre><code>@Override
    public void configure(AuthenticationManagerBuilder auth) throws Exception {
        if (auth.isConfigured()) {
            return;
        }
        User user = this.securityProperties.getUser();
        if (user.isDefaultPassword()) {
            logger.info("\n\nUsing default security password: " + user.getPassword()
                    + "\n");
        }
        Set&lt;String&gt; roles = new LinkedHashSet&lt;String&gt;(user.getRole());
        withUser(user.getName()).password(user.getPassword()).roles(
                roles.toArray(new String[roles.size()]));
        setField(auth, "defaultUserDetailsService", getUserDetailsService());
        super.configure(auth);
    }
</code></pre>

<p>If you use inmemory authentication which is default, customize your logger configuration for org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration and remove this message.</p>
