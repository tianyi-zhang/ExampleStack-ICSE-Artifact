<p>i too faced this problem many times...</p>

<p>try using this code..</p>

<pre><code>    private Bitmap decodeFile(File f) throws IOException {
    Bitmap b = null;

    DisplayMetrics metrics = new DisplayMetrics();
    getActivity().getWindowManager().getDefaultDisplay()
            .getMetrics(metrics);

    // Decode image size
    BitmapFactory.Options o = new BitmapFactory.Options();
    o.inJustDecodeBounds = true;

    o.inDither = false; // Disable Dithering mode
    o.inPurgeable = true; // Tell to gc that whether it needs free memory,
                            // the Bitmap can be cleared
    o.inInputShareable = true;

    FileInputStream fis = new FileInputStream(f);
    BitmapFactory.decodeStream(fis, null, o);
    fis.close();

    int scale = 1;
    if (o.outHeight &gt; metrics.heightPixels
            || o.outWidth &gt; metrics.widthPixels) {
        scale = (int) Math.pow(
                2,
                (int) Math.ceil(Math.log(metrics.heightPixels
                        / (double) Math.max(o.outHeight, o.outWidth))
                        / Math.log(0.5)));
    }

    // Decode with inSampleSize
    BitmapFactory.Options o2 = new BitmapFactory.Options();
    o2.inSampleSize = scale;
    fis = new FileInputStream(f);
    b = BitmapFactory.decodeStream(fis, null, o2);
    fis.close();

    return b;
}
</code></pre>

<p>and take care of few things like make every bitmap null after its use etc.</p>
