<p>I managed to achieve the desired result by doing the following:</p>

<p>1 - Create a public interface with the methods:</p>

<pre><code>public interface OnSwipeListener 
{
    public void onUpwardsSwipe();
    public void onDownwardsSwipe();
    public void onLeftwardsSwipe();
    public void onRightwardsSwipe();
}
</code></pre>

<p>2 - Create a class that implements onTouchListener. The class' constructor takes an OnSwipeListener object. The onTouch() method calls the methods as needed:</p>

<pre><code>public class SwipeRecogniser implements OnTouchListener {

    private OnSwipeListener onSwipeListener;
    private float XWherePressed;
    private float XWhereReleased;
    private float YWherePressed;
    private float YWhereReleased;
    private static final int MINIMUM_DISTANCE_FOR_SWIPE = 100;


    public SwipeRecogniser(OnSwipeListener onSwipeListener)
    {
        this.onSwipeListener = onSwipeListener;
    }

    public boolean onTouch(View v, MotionEvent event)
    {
        switch(event.getAction())
        {

        case MotionEvent.ACTION_DOWN:
            this.XWherePressed = event.getX();
            this.YWherePressed = event.getY();

            break;

        case MotionEvent.ACTION_UP:
            this.XWhereReleased = event.getX();
            this.YWhereReleased = event.getY();

            float deltaX = XWhereReleased - XWherePressed;
            float deltaY = YWhereReleased - YWherePressed;

            if (Math.abs( deltaX ) &gt; this.MINIMUM_DISTANCE_FOR_SWIPE)
            {
                //HORIZONTAL SWIPE
                if(deltaX &gt; 0 )
                {
                    onSwipeListener.onRightwardsSwipe();
                    return true;
                }

                if(deltaX &lt; 0)
                {
                    onSwipeListener.onLeftwardsSwipe();
                    return true;
                }

            }
            else return true;

            if (Math.abs( deltaY) &gt; this.MINIMUM_DISTANCE_FOR_SWIPE)
            {
                //VERTICAL SWIPE
                if( deltaY &lt; 0 )
                {
                    onSwipeListener.onDownwardsSwipe();
                    return true;
                }

                if ( deltaY &gt; 0 )
                {
                    onSwipeListener.onUpwardsSwipe();
                    return true;
                }

            }
            else return true;

            break;  
        }   
        return true;
    }
}
</code></pre>

<p>3 - In the custom class</p>

<pre><code>public class MyClass extends Activity implements OnSwipeListener
{
 protected void onCreate(Bundle stuff)
 {
  //
  this.setOnTouchListener(new SwipeRecogniser(this));
 }

 public void onUpwardsSwipe(){/*methods*/}
 public void onDownwardsSwipe(){/*methods*/}
 public void onLeftwardsSwipe(){/*methods*/}
 public void onRightwardsSwipe(){/*methods*/}
}
</code></pre>
