<p>No, there's no way to get the API to do this for you, but to figure out how you need to rotate the data, take a look at the sample code at <a href="http://developer.android.com/reference/android/hardware/Camera.Parameters.html#setRotation%28int%29" rel="nofollow">Camera.Parameters.setRotation</a>.  While setRotation() only affects JPEGs, you want to apply the exact same amount of rotation to the data you get in onPreviewFrame() as you would to the JPEGs.</p>

<p>Reproducing the sample code here, with minor changes:</p>

<pre><code>public void onOrientationChanged(int orientation) {
   if (orientation == ORIENTATION_UNKNOWN) return;
   android.hardware.Camera.CameraInfo info =
        new android.hardware.Camera.CameraInfo();
   android.hardware.Camera.getCameraInfo(cameraId, info);
   orientation = (orientation + 45) / 90 * 90;
   int rotation = 0;
   if (info.facing == CameraInfo.CAMERA_FACING_FRONT) {
      rotation = (info.orientation - orientation + 360) % 360;
   } else {  // back-facing camera
      rotation = (info.orientation + orientation) % 360;
   }
   mCameraOrientation = rotation; // Store rotation for later use
}

...

void onPreviewFrame(byte[] data, Camera camera) {
   switch(mCameraOrientation) {
      case 0:
          // data is correctly rotated
          break;
      case 90:
          // rotate data by 90 degrees clockwise
      case 180:
          // rotate data upside down
      case 270:
          // rotate data by 90 degrees counterclockwise
   }
 }
</code></pre>

<p>So you need to inherit from OrientationEventListener and override onOrientationChanged as above, and then use the calculated orientation value from there to rotate the preview frames when they come in.</p>
