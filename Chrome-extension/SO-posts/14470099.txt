<p>You really shouldn't be updating you model in this way.  The model is responsible for determining the data that should be shown, the view is used to determine how that model is displayed.</p>

<p>You should allow the model to update itself and provide feedback to the view.</p>

<pre><code>public class BadTable01 extends javax.swing.JFrame {

    public BadTable01() {
        initComponents();
        jTable1.setModel(new MyTableModel());
    }

    @SuppressWarnings("unchecked")
    // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name");

        jLabel2.setText("Emp Code");

        jLabel3.setText("Financial year");

        jLabel4.setText("Department");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4)
                .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addComponent(jTextField3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 397, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2)
                .addComponent(jLabel3))
                .addGap(91, 91, 91)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3)))
                .addContainerGap()));

        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107)));

        pack();
    }// &lt;/editor-fold&gt;

//    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {
//        // The values get updated on pressing the enter button
//        int i;
//        int j;
//        String gf;
//        Object z;
//        float q;
//        for (i = 0; i &lt; 12; i++) {
//            q = 0;
//            for (j = 1; j &lt; 7; j++) {
//                String sw = (jTable1.getValueAt(i, j)).toString();
//
//                try {
//                    Float.parseFloat(sw);
//                } catch (NumberFormatException e) {
//
//                    JOptionPane.showMessageDialog(null, "Please enter a float number", null,
//                            JOptionPane.ERROR_MESSAGE);
//                    j = 1;
//                    continue;
//
//                }
//                //if(sw!=null) {
//                q = q + Float.parseFloat(sw);
//                //}
//            }
//            gf = Float.toString(q);
//            //z= gf;
//            System.out.println(jTable1.getValueAt(i, 7));
//            jTable1.setValueAt(gf, i, 7);
//            //z=gf;
//        }
//        for (i = 1; i &lt; 9; i++) {
//            q = 0;
//            for (j = 0; j &lt; 12; j++) {
//                String sw = (jTable1.getValueAt(j, i)).toString();
//
//                if (sw != null) {
//                    q = q + Float.parseFloat(sw);
//                }
//            }
//            gf = Float.toString(q);
//            z = gf;
//
//            jTable1.setValueAt(z, 12, i);
//
//        }
//
//    }
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BadTable01().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration

    public class MyTableModel extends DefaultTableModel {

        public MyTableModel() {
            super(new Object[][]{
                        {"March 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"April 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"May 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"June 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"July 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"August 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"September 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"October 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"November 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"December 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"January 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"February 2012", "0", "0", "0", "0", "0", "0", "0", "0"},
                        {"Total", "0", "0", "0", "0", "0", "0", "0", "0"}
                    },
                    new String[]{
                        "Months", "Basic+GP", "DA", "TA", "HRA", "Arrear &amp; Others", "Children Education Allowance", "Total Salary", "Employee contribution to NFS"
                    });

            for (int colIndex = 1; colIndex &lt; getColumnCount(); colIndex++) {
                updateColumnTally(colIndex);
            }
        }
        Class[] types = new Class[]{
            String.class,
            String.class,
            String.class,
            String.class,
            String.class,
            String.class,
            String.class,
            String.class,
            String.class,};
        boolean[] canEdit = new boolean[]{
            false, true, true, true, true, true, true, true, true
        };

        public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }

        @Override
        public void setValueAt(Object aValue, int row, int column) {
            super.setValueAt(aValue, row, column);
            if (row != getRowCount() - 1) {
                updateColumnTally(column);
                fireTableCellUpdated(getRowCount() - 1, column);
            }
        }

        private void updateColumnTally(int colIndex) {
            double tally = 0;
            for (int rowIndex = 0; rowIndex &lt; getRowCount(); rowIndex++) {
                String value = (String) getValueAt(rowIndex, colIndex);
                try {
                    double dValue = Double.parseDouble(value);
                    tally += dValue;
                } catch (NumberFormatException exp) {
                    exp.printStackTrace();
                }
            }
            setValueAt(NumberFormat.getNumberInstance().format(tally), getRowCount() - 1, colIndex);
        }
    }
}
</code></pre>

<p>On a side note, I would strongly encourage you to try and get these UI's working by hand over using the auto generated code from NetBeans (I like NetBeans form designer, but you really need to build an understanding of how all the various UI elements click together before it becomes really useful)</p>
