<p>From an analytical point of view the variables j and i in the initialize_matrix method are alway inside the array boundaries.
However, there is the variable k, which can be incremented p.length^2 times. As you also use this variable to access the array p it must be &lt; p.length.</p>

<p>I think you want to add the value at position k, but online every line. I suggest to set k to zero after the inner for loop is done.</p>

<p>EDIT: As predicted...</p>

<p>Output for n = 4:</p>

<p>Enter the number of criteria
n=
4
Enter the criteria:
Criterion 1:a
Criterion 2:b
Criterion 3:c
Criterion 4:d
Enter the comparison
Compare a with b:
0.3
Compare a with c:
0.1
Compare a with d:
0.6
Compare b with c:
0.5
Compare b with d:
0.8
Compare c with d:
0.2</p>

<p>The matrix a is:
1.0    0.3    0.1    0.6    0.5    0.8<br>
3.3333333333333335    1.0    0.3    0.1    0.6    0.5<br>
10.0    3.3333333333333335    1.0    0.3    0.1    0.6<br>
1.6666666666666667    10.0    3.3333333333333335    1.0    0.3    0.1<br>
2.0    1.6666666666666667    10.0    3.3333333333333335    1.0    0.3<br>
1.25    2.0    1.6666666666666667    10.0    3.3333333333333335    1.0    </p>

<p>The method</p>

<pre><code>public static double[][] initialize_matrix(double[] p)
{

    double a[][]=new double[p.length][p.length];    
    int k=0;        
    for(int i=0; i&lt;p.length; i++)
    {
        k = 0;

        for(int j=0; j&lt;p.length;j++)
        {
            if(i==j)
                a[i][j]=1;
            else if(i&lt;j)
            {

                a[i][j]=p[k];
                k++;
            }

            else if(i&gt;j)
                a[i][j]=1/a[j][i];
        }
    }
    return a;
}
</code></pre>

<p>I would appreciate it if you would mark the question as answered.</p>
