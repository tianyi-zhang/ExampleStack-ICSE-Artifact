<p>First, create a class as an object of database record <code>DatabaseObject.java</code>:</p>

<pre><code>public class DatabaseObject {

       int _id;
       double _lat;
       double _lng;
       String _name;
       String _info;

        // Empty constructor
        public DatabaseObject(){

        }
        // constructor
        public DatabaseObject(int id, double lat, double lng,String name ,String info){
            this._id = id;
            this._lat=lat;
            this._lng=lng;
            this._name=name;
            this._info=info;
        }
        public DatabaseObject(double lat, double lng,String name ,String info){
             this._lat=lat;
                this._lng=lng;
                this._name=name;
                this._info=info;
        }
        // constructor

        // getting ID
        public int getID(){
            return this._id;
        }

        // setting id
        public void setID(int id){
            this._id = id;
        }


        public double getlat(){
            return this._lat;
        }

        public void setlat(double lat){
            this._lat = lat;
        }

        public double getlng(){
            return this._lng;
        }

        public void setlng(double lng){
            this._lng = lng;
        }

        public String getname(){
            return this._name;
        }

        // setting id
        public void setname(String name){
            this._name = name;
        }

        public String getinfo(){
            return this._info;
        }

        // setting id
        public void setinfo(String info){
            this._infor= info;
        }   
}
</code></pre>

<p>Then add these two functions in your <code>DatabaseManager.java</code>:</p>

<pre><code>// Getting one database object by id
public DatabaseObject get_DatabaseObject(int id) {
       SQLiteDatabase db = this.getReadableDatabase();

        Cursor cursor = db.query(TABLE_NAME, new String[] { KEY_ID,
                KEY_LAT, KEY_LONGI,KEY_NAME,KEY_INFO }, KEY_ID + "=?",
                new String[] { String.valueOf(id) }, null, null,null,null);
        if (cursor != null)
            cursor.moveToFirst();

        DatabaseObject data = new DatabaseObject(Integer.parseInt(cursor.getString(0)),
                Double.parseDouble(cursor.getString(1)), Double.parseDouble(cursor.getString(2)),cursor.getString(3), cursor.getString(4));
        // return database object
       return data;
   }

    // Getting All database objects
    public List&lt;DatabaseObject&gt; getAllDatabaseObject() {
        List&lt;DatabaseObject&gt; contactList = new ArrayList&lt;DatabaseObject&gt;();
       //  Select All Query
        String selectQuery = "SELECT  * FROM " + TABLE_NAME;

        SQLiteDatabase db = this.getWritableDatabase();
        Cursor cursor = db.rawQuery(selectQuery, null);

        // looping through all rows and adding to list
        if (cursor.moveToFirst()) {
           do {
               DatabaseObject data = new DatabaseObject();
               data.setID(Integer.parseInt(cursor.getString(0)));
                data.setLAT( Double.parseDouble(cursor.getString(1)));
                data.setLONGI( Double.parseDouble(cursor.getString(2)));
                data.setNAME(cursor.getString(3));
               data.setINFO(cursor.getString(4));

              //   Adding contact to list
               contactList.add(data);
            } while (cursor.moveToNext());
        }

        // return database object list
       return dataList;
    }
</code></pre>

<p>And now use these in any activity like this:</p>

<p>1- Declare this as global variable:</p>

<pre><code>DatabaseManager db = new DatabaseManager(this);
</code></pre>

<p>2- Retrieve all objects:</p>

<pre><code>List&lt;DatabaseObject&gt; K = db.getAllDatabaseObject(); 
</code></pre>

<p>3- Use it in loop this way:</p>

<pre><code>for (DatabaseObject cn : K) {
        point = new GeoPoint((int)(cn.getlat()*E6), (int)(cn.getlng()*E6));
        overlayitem = new OverlayItem(point, cn.getname(), cn.getinfo());
        itemizedOverlay.addOverlay(overlayitem);
        mapOverlays.add(itemizedOverlay);
}
</code></pre>
