<p>As said above you are using <code>selectionSort(E[])</code> where E extends Comparable means , your selection sort can take the argument who implemented the Comparable interface. As int is primitive data so it's giving the compilation Error. So if you want generic feature then you can use Wrapper classes, All wrapper classes implemented the Comparable interface. The below code will work, Just edit version of your code</p>

<pre><code>public class SelelctionSort 
{
public static void main(String[] args) 
{
    Integer[] list = {34, 17, 23, 35, 45, 9, 1};
    System.out.println("Original Array: ");
    printArray(list);

    selectionSort(list);
    System.out.println("\nSelection sort:");
    printArray(list);
    Float[] flist = {34.4f, 17.6f, 23.0f};
    selectionSort(list);
}

//selection sort
public static &lt;E extends Comparable&lt;E&gt;&gt; void selectionSort(E[] list)
{
    for(int i=0; i&lt;list.length -1; i++)
    {
        int iSmallest = i;

        for(int j=i+1; j&lt;list.length; j++)
        {
            if(list[iSmallest].compareTo((list[j])) &gt; 0  )
            {
                iSmallest = j;
            }
        }
        E iSwap = list[iSmallest];
        list[iSmallest] = list[i];
        list[i] = iSwap;

    }
}

public static &lt;E&gt; void printArray(E[] list)
{

    for(int i=0; i&lt;list.length; i++)
    {
        System.out.print(list[i] + ", ");
    }
}
}
</code></pre>
