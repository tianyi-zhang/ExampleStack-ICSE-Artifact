<p>You need to extend the <code>ArrayAdapter</code> that implements <code>Filterable</code>.
Check this SO question and the answer: <a href="http://stackoverflow.com/questions/24313364/filtering-autocompletetextview-to-show-partial-match">Filtering AutoCompleteTextView to show partial match</a></p>

<p>So your solution would be (the combination of question and answer):</p>

<pre><code>public class CodesArrayAdapter extends ArrayAdapter implements Filterable{

    List&lt;String&gt; allCodes;
    List&lt;String&gt; originalCodes;
    StringFilter filter;

    public CodesArrayAdapter(Context context, int resource, List&lt;String&gt; keys) {
        super(context, resource, keys);
        allCodes=keys;
        originalCodes=keys;
    }

    public int getCount() {
        return allCodes.size();
    }

    public Object getItem(int position) {
        return allCodes.get(position);
    }

    public long getItemId(int position) {
        return position;
    }

    private class StringFilter extends Filter {
        @Override
        protected FilterResults performFiltering(CharSequence constraint) {

            String filterString = constraint.toString().toLowerCase();
            FilterResults results = new FilterResults();
            final List&lt;String&gt; list = originalCodes;

            int count = list.size();
            final ArrayList&lt;String&gt; nlist = new ArrayList&lt;String&gt;(count);
            String filterableString ;

            for (int i = 0; i &lt; count; i++) {
                filterableString = list.get(i);
                if (filterableString.toLowerCase().contains(filterString)) {
                    nlist.add(filterableString);
                }
            }

            results.values = nlist;
            results.count = nlist.size();
            return results;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected void publishResults(CharSequence constraint, FilterResults results) {
            allCodes = (ArrayList&lt;String&gt;) results.values;
            notifyDataSetChanged();
        }

    }


    @Override
    public Filter getFilter()
    {
        return new StringFilter();
    }
}
</code></pre>
