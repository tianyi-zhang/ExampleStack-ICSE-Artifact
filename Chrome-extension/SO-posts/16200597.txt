<p>I have this function to readJsonData from a a request to a JSON String. You can use this function to  retrieve the JSON, then use GSON to parse it to the object that you like. It works for my application. Hope it works for you too.</p>

<pre><code>    protected String readJson(HttpResponse resp)
        throws IOException {

        BufferedReader reader = null;  

        try {
            reader = new BufferedReader(new InputStreamReader(
                    resp.getEntity().getContent()));
            StringBuffer buffer = new StringBuffer();
            int read;
            char[] chars = new char[1024];
            while ((read = reader.read(chars)) != -1)
                buffer.append(chars, 0, read);
        } finally {
            if (reader != null)
                reader.close();
        }
        return buffer.toString();
    }
</code></pre>

<p>So based on your code. I guess this should work:</p>

<pre><code>String jsonData = readJson(httpResponse);
YourObject obj = new Gson().fromJson(jsonData, YourObject.class);
</code></pre>

<p>Before trying this, make sure your servlet prints out the JSON data that you want. I suggest using these Chrome Extensions: Postman - REST Client and JSON Formatter, to test your data from servlet. It's pretty helpful.</p>
