<p>To display data which is captured from the MIC here i tried to give answer for same with the help of <a href="http://goo.gl/rV9xEr" rel="nofollow">android developer link</a>.</p>

<p><em>As you mentioned in question,</em>
<strong>*Mic is displaying and clickable. Perfect..how to capture this MIC data and display text where ever i want. *</strong></p>

<p>You need to give intent filter for the Seachable &amp; xml resource for the same.</p>

<p>To get the data which is capture by mic (which will be open as a Dialog) than you need to handle it in <code>onNewIntent</code> of the activity after checking intent action <code>Intent.ACTION_SEARCH</code></p>

<p><strong>search_voice.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"&gt;
    &lt;android.support.v7.widget.Toolbar 
        android:id="@+id/ab_tool"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#00FFFFFF"
        android:minHeight="?attr/actionBarSize"&gt;

    &lt;/android.support.v7.widget.Toolbar&gt;
    &lt;TextView
        android:id="@+id/txtVoiceSeachQuery"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textColor="#FF0000"
        android:textSize="26sp" /&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p><strong>SearchVoiceTest</strong></p>

<pre><code>public class SearchVoiceTest extends AppCompatActivity {
    private TextView txtVoiceSeachQuery;
    private SearchView searchView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.search_voice);
        Toolbar toolbar = (Toolbar) findViewById(R.id.ab_tool);
        setSupportActionBar(toolbar);
        toolbar.setTitle("Voice Text Display");
        txtVoiceSeachQuery = (TextView) findViewById(R.id.txtVoiceSeachQuery);
    }


    @Override
    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {
            String query = intent.getStringExtra(SearchManager.QUERY);
            searchView.setQuery(String.valueOf(query), false);
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.menu_home_screen, menu);
        searchView =
                (SearchView) menu.findItem(R.id.search_view).getActionView();
        SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));
        searchView.setOnQueryTextListener(new android.support.v7.widget.SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String query) {
                //adapter.filterData(query);
                //display text where ever i want
                return false;
            }

            @Override
            public boolean onQueryTextChange(String query) {
                //display text where ever i want
                if (txtVoiceSeachQuery != null) {
                    txtVoiceSeachQuery.setText(query);
                }
                return false;
            }
        });

        return true;
    }
}
</code></pre>

<p><strong>AndroidManifest Declaratin of activity</strong></p>

<pre><code> &lt;activity
            android:name="com.example.search.voice.SearchVoiceTest"
            android:configChanges="orientation|screenSize"
            android:launchMode="singleTop" android:label="Search Voice Test"
            android:theme="@style/AppThemeSliderToolbar"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;action android:name="android.intent.action.SEARCH" /&gt;

                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
            &lt;meta-data
                android:name="android.app.searchable"
                android:resource="@xml/search_with_voice" /&gt;


        &lt;/activity&gt;
</code></pre>

<p><strong>res/xml/search_with_voice.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;searchable xmlns:android="http://schemas.android.com/apk/res/android"
    android:hint="Give Your Query Here"
    android:label="@string/app_name"
    android:voiceSearchMode="showVoiceSearchButton|launchRecognizer"&gt;
&lt;/searchable&gt;
</code></pre>

<p><strong>res/menu/menu_home_screen.xml</strong></p>

<pre><code>&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    &gt;
    &lt;item
        android:id="@+id/search_view"
        android:title="Search"
        app:actionViewClass="android.support.v7.widget.SearchView"
        app:showAsAction="ifRoom|collapseActionView"&gt;&lt;/item&gt;
&lt;/menu&gt;
</code></pre>

<p>After assigning query to seachview we can get callback <code>setOnQueryTextListener</code> in <code>onQueryTextChange</code> so from there for test purpose value assigned to TextView there you can make your changes.</p>

<p>Here i have given link of output of my answer.</p>

<ul>
<li><a href="http://goo.gl/pT5DuH" rel="nofollow">Search with voice</a></li>
<li><a href="http://goo.gl/au9mL4" rel="nofollow">Display Captured data from mic</a></li>
</ul>

<p>let me know if anything ?</p>
