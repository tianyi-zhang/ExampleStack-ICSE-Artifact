<p>First, <code>randColor</code> is not likely to be a gray-scale color with your code. To generate a random, gray-scale color:</p>

<pre><code>int c = random.nextInt(255);
int randColor = Color.rgb(c, c, c);
</code></pre>

<p>With that in mind, here is how I would re-write your code (note: adjust the <code>percentNoise</code> parameter to your liking):</p>

<pre><code>public static Bitmap applyFleaEffect(Bitmap source, int percentNoise) {
    // get source image size
    int width = source.getWidth();
    int height = source.getHeight();
    int[] pixels = new int[width * height];
    // get pixel array from source
    source.getPixels(pixels, 0, width, 0, 0, width, height);
    // create a random object
    Random random = new Random();

    int index = 0;
    // Note: Declare the c and randColor variables outside of the for loops
    int c = 0;
    int randColor = 0;
    // iterate through pixels
    for (int y = 0; y &lt; height; ++y) {
        for (int x = 0; x &lt; width; ++x) {
            if (random.nextInt(101) &lt; percentNoise) {
                // Skip this iteration a certain percentage of the time
                continue;
            }
            // get current index in 2D-matrix
            index = y * width + x;
            // get random color
            c = random.nextInt(255);
            randColor = Color.rgb(c, c, c);
            pixels[index] |= randColor;
        }
    }
    Bitmap bmOut = Bitmap.createBitmap(width, height, source.getConfig());
    bmOut.setPixels(pixels, 0, width, 0, 0, width, height);
    return bmOut;
}
</code></pre>
