<p>Just try to resize your image first by using below code and then set it into the <code>ImageView</code>:</p>

<blockquote>
<pre><code> public static Drawable GetDrawable(String newFileName)
{
    File f;
    BitmapFactory.Options o2;
    Bitmap drawImage = null;
    Drawable d = null;
    try
    {           
        f = new File(newFileName);          
        //decodes image and scales it to reduce memory consumption
        //Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inJustDecodeBounds = true;            
        o.inTempStorage = new byte[16 * 1024];          
        BitmapFactory.decodeStream(new FileInputStream(f), null, o);            
        //The new size we want to scale to
        final int REQUIRED_SIZE = 150;          
        //Find the correct scale value. It should be the power of 2.
        int scale = 1;
        while ((o.outWidth / scale / 2 &gt;= REQUIRED_SIZE) &amp;&amp; (o.outHeight / scale / 2 &gt;= REQUIRED_SIZE))
            scale *= 2;         
        //Decode with inSampleSize
        o2 = new BitmapFactory.Options();
        o2.inSampleSize = scale;            
        drawImage = BitmapFactory.decodeStream(new FileInputStream(f), null, o2);
        //Bitmap bmp = pictureDrawableToBitmap((PictureDrawable) drawable);         
        d = new BitmapDrawable(drawImage);
        //drawImage.recycle();
        //new BitmapWorkerTask          
    }
    catch (FileNotFoundException e)
    {
    }
    return d;
}
</code></pre>
</blockquote>

<p>Use the above method as below: </p>

<blockquote>
  <p>imageView.setImageBitmap(myBitmap);</p>
</blockquote>
