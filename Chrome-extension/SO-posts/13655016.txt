<p>I can't take too much credit for it as its from this <a href="http://www.jibble.org/wake-on-lan/">site</a></p>

<p>But this is a java version of wake on lan class:</p>

<pre><code>public static final int PORT = 9;    

public static void main(String[] args) {

    if (args.length != 2) {
        System.out.println("Usage: java WakeOnLan &lt;broadcast-ip&gt; &lt;mac-address&gt;");
        System.out.println("Example: java WakeOnLan 192.168.0.255 00:0D:61:08:22:4A");
        System.out.println("Example: java WakeOnLan 192.168.0.255 00-0D-61-08-22-4A");
        System.exit(1);
    }

    String ipStr = args[0];
    String macStr = args[1];

    try {
        byte[] macBytes = getMacBytes(macStr);
        byte[] bytes = new byte[6 + 16 * macBytes.length];
        for (int i = 0; i &lt; 6; i++) {
            bytes[i] = (byte) 0xff;
        }
        for (int i = 6; i &lt; bytes.length; i += macBytes.length) {
            System.arraycopy(macBytes, 0, bytes, i, macBytes.length);
        }

        InetAddress address = InetAddress.getByName(ipStr);
        DatagramPacket packet = new DatagramPacket(bytes, bytes.length, address, PORT);
        DatagramSocket socket = new DatagramSocket();
        socket.send(packet);
        socket.close();

        System.out.println("Wake-on-LAN packet sent.");
    }
    catch (Exception e) {
        System.out.println("Failed to send Wake-on-LAN packet: + e");
        System.exit(1);
    }

}

private static byte[] getMacBytes(String macStr) throws IllegalArgumentException {
    byte[] bytes = new byte[6];
    String[] hex = macStr.split("(\\:|\\-)");
    if (hex.length != 6) {
        throw new IllegalArgumentException("Invalid MAC address.");
    }
    try {
        for (int i = 0; i &lt; 6; i++) {
            bytes[i] = (byte) Integer.parseInt(hex[i], 16);
        }
    }
    catch (NumberFormatException e) {
        throw new IllegalArgumentException("Invalid hex digit in MAC address.");
    }
    return bytes;
}
</code></pre>

<p>Of course you will need to modify this to work with android (very little work needed) but I found it works better than @Bear's answer.</p>
