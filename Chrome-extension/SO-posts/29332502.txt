<p>Collision detection is probably the most difficult part of making a tiled game. Libgdx has a lot of useful methods to help you <strong>get the geometry</strong> but the actual collision handling after a collision is detected (called collision resolution) is a large topic. I suspect all you want is the player to stop. More advanced realistic solutions such as bouncing and friction are what Box2D specializes in. </p>

<p>First and foremost, getting the geometry that's going to collide. </p>

<p>a) The player can be represented by a rectangle. Have it extend the Sprite class and then you can use the getBoundingRectangle() function (A rectangle keeps things simple, but there are many other shapes that get used for collisions ). </p>

<p>b) Getting the geometry of the tiles, also a bunch of rectangles. 
A function that gets the surrounding tiles.</p>

<pre><code>    public void getsurroundingTiles(int startX, int startY, int endX, int endY, Array&lt;Rectangle&gt; surroundingTiles){



    TiledMapTileLayer layer = (TiledMapTileLayer) worldRef.getCurrentMap().getLayers().get("Terrain");
    surroundingTiles.clear();
    for (int y = startY; y &lt;= endY; y++) {
        for (int x = startX; x &lt;= endX; x++) {
               Cell cell = layer.getCell(x, y);
            if (cell != null &amp;&amp; cell.getTile().getProperties().containsKey("blocked")) {
                Rectangle rect = new Rectangle();
                rect.set(x, y, 1, 1);
                surroundingTiles.add(rect);
            }
        }
    }
}
</code></pre>

<p>}</p>

<p>This function gets the tiled map tile layer made in the Tiled program and fills up a Rectangle ArrayList with the rectangles only if the tile has the key "blocked".</p>

<p>So now you have rectangles representing your player, and representing all the 
colliding blocks. You can draw them with a ShapeRenderer object. 
This is what it looks like in a game I am working on. </p>

<p><img src="http://i.stack.imgur.com/oTOz7.png" alt="simple platformer"></p>

<p>Lastly, actually resolving the collisions is a larger topic. This is a great starting point. 
<a href="http://www.metanetsoftware.com/technique/tutorialA.html" rel="nofollow">http://www.metanetsoftware.com/technique/tutorialA.html</a></p>
