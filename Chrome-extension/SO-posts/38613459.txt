<p>It is not an exactly answer, but may help someone in a similar problem. I made a abstract class that is extended by all the entities. This way I don't need to implement these methods in all entities.</p>

<pre><code>    public abstract class GenericEntity implements Serializable{

    protected static final long serialVersionUID = 1L;

    abstract public Serializable getId();

    @Override
    public int hashCode()
    {
        return (getId() == null) ? System.identityHashCode(this) : getId().hashCode();
    }

    @Override
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (this.getClass() != obj.getClass())
            return false;
        if (org.hibernate.Hibernate.getClass(this) != org.hibernate.Hibernate.getClass(obj))
            return false;
        GenericEntity other = (GenericEntity) obj;
        if (getId() == null || other.getId() == null)
            return false;
        return getId().equals(other.getId());
    }

}
</code></pre>

<p>I think in your case you could put it in your BaseEntity.</p>
