<p>This is how I captured the screen and shared it. Take a look if you are interested.</p>

<p><strong>First</strong>, get root view from current activity:</p>

<pre><code>View rootView = getWindow().getDecorView().findViewById(android.R.id.content);
</code></pre>

<p><strong>Second</strong>, capture the root view:</p>

<pre><code> public static Bitmap getScreenShot(View view) {
       View screenView = view.getRootView();
       screenView.setDrawingCacheEnabled(true);
       Bitmap bitmap = Bitmap.createBitmap(screenView.getDrawingCache());
       screenView.setDrawingCacheEnabled(false);
       return bitmap;
 }
</code></pre>

<p><strong>Third</strong>, store the <code>Bitmap</code> into the SDCard:</p>

<pre><code>public static void store(Bitmap bm, String fileName){
    final static String dirPath = Environment.getExternalStorageDirectory().getAbsolutePath() + "/Screenshots";
    File dir = new File(dirPath);
    if(!dir.exists())
        dir.mkdirs();
    File file = new File(dirPath, fileName);
    try {
        FileOutputStream fOut = new FileOutputStream(file);
        bm.compress(Bitmap.CompressFormat.PNG, 85, fOut);
        fOut.flush();
        fOut.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
}
</code></pre>

<p><strong>At last</strong>, share the screenshot of current <code>Activity</code>:</p>

<pre><code>private void shareImage(String file){
    Uri uri = Uri.fromFile(file);
    Intent intent = new Intent();
    intent.setAction(Intent.ACTION_SEND);
    intent.setType("image/*");

    intent.putExtra(android.content.Intent.EXTRA_SUBJECT, "");
    intent.putExtra(android.content.Intent.EXTRA_TEXT, "");
    intent.putExtra(Intent.EXTRA_STREAM, uri);
    try {
        startActivity(Intent.createChooser(intent, "Share Screenshot"));
    } catch (ActivityNotFoundException e) {
        Toast.makeText(context, "No App Available", Toast.LENGTH_SHORT).show();
    }
}
</code></pre>

<p>I hope you will be inspired by my codes.</p>

<p><strong>UPDATE:</strong></p>

<p>Add below permissions into your <code>AndroidManifest.xml</code>:</p>

<pre><code>&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
&lt;uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" /&gt;
</code></pre>

<p>Because it creates and accesses files in external storage.</p>
