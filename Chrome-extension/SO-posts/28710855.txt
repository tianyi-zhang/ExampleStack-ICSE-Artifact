<p>I think the reason for the crash is because you are trying to get the camera instance twice: when your activity is created and when button <code>captureButton</code> is pressed. When you try to get it the second time, it returns <code>null</code> because it is already in use by your activity.</p>

<p>You should get the camera instance once before the <code>captureButton</code> button is pressed and process the picture taken after that.</p>

<pre><code>public class MainActivity extends ActionBarActivity {
  public final static String EXTRA_MESSAGE = "File_name";
  private Camera mCamera; 

  @Override
  protected void onCreate(Bundle savedInstanceState) {
      super.onCreate(savedInstanceState);
      setContentView(R.layout.activity_main);

      // Create an instance of Camera
      mCamera = getCameraInstance();

      // Create our Preview view and set it as the content of our activity.
      CameraPreview mPreview = new CameraPreview(this, mCamera);
      FrameLayout preview = (FrameLayout) findViewById(R.id.camera_preview);
      preview.addView(mPreview);

      // Add a listener to the Capture button
      Button captureButton = (Button) findViewById(R.id.button_capture);
      captureButton.setOnClickListener(new View.OnClickListener() {

         @Override
           public void onClick(View v) {
            // get an image from the camera
            mCamera.takePicture(null, null, mPicture);
           }
         }
      );
  }

  ...
</code></pre>

<p><strong>Edit</strong></p>

<p>To move to the next activity when a picture is taken, you could call <code>startActivity</code> after the <code>Camera.PictureCallback</code>
has saved the <code>byte</code> array to a file.</p>

<pre><code>private Camera.PictureCallback mPicture = new Camera.PictureCallback() {

    @Override
    public void onPictureTaken(byte[] data, Camera camera) {

        File pictureFile = getOutputMediaFile(MEDIA_TYPE_IMAGE);
        if (pictureFile == null){
            Log.d("Logtag:", "Error creating media file, check storage permissions: "
                   );
            return;
        }

        try {
            FileOutputStream fos = new FileOutputStream(pictureFile);
            fos.write(data);
            fos.close();

            Intent intent = new Intent(this,show_image.class);
            Uri fileUri = Uri.fromFile(pictureFile);
            intent.putExtra(EXTRA_MESSAGE, fileUri.toString());
            startActivity(intent);

        } catch (FileNotFoundException e) {
            Log.d("Logtag:", "File not found: " + e.getMessage());
        } catch (IOException e) {
            Log.d("Logtag:", "Error accessing file: " + e.getMessage());
        }
    }
};

...
</code></pre>

<p><strong>Edit 2</strong></p>

<p>You need to add this permission to your manifest to store the photo on the device:</p>

<pre><code>&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
</code></pre>

<p>I hope this helps.</p>
