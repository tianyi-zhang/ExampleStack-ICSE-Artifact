<p>As @mbarrben said you do not need <code>ShareActionProvider</code>. You only need a Spinner and implemet a CustomAdapter. Below you can see a simple example(<a href="http://github.com/androidzin/android-examples" rel="nofollow">Full example here</a></p>

<p>On your activity you should have that:</p>

<pre><code>public class SpinnerIconActivity extends SherlockActivity implements OnNavigationListener{

private SpinnerAdapter mSpinnerAdapter;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_spinner_icon);

    ActionBar actionBar = getSupportActionBar();
    actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);


    List&lt;SpinnerRow&gt; options = new ArrayList&lt;SpinnerRow&gt;();
    options.add(new SpinnerRow("Droid 1", R.drawable.android01));
    options.add(new SpinnerRow("Droid 2", R.drawable.android02));
    options.add(new SpinnerRow("Droid 3", R.drawable.android03));
    mSpinnerAdapter  = new MySpinnerAdapter(getApplicationContext(),
            R.layout.spinner_row, R.id.text, options);

        actionBar.setListNavigationCallbacks(mSpinnerAdapter, this);
   }

   @Override
   public boolean onCreateOptionsMenu(Menu menu) {
        getSupportMenuInflater().inflate(R.menu.main, menu);
        return super.onCreateOptionsMenu(menu);
   }

   @Override
   public boolean onNavigationItemSelected(int itemPosition, long itemId) {
    return false;
   }

}
</code></pre>

<p><strong>The most important thing is write your custom adapter.</strong> I choosed use ArrayAdapter because using it <strong>i just need to override one method</strong>.</p>

<p>The approach to write a customAdapter is the same to create customizable ListView with one basic difference, <strong>instead to override the getView method, you must override getDropDownView</strong>.</p>

<p>So, below is my example:</p>

<pre><code>public class MySpinnerAdapter extends ArrayAdapter&lt;SpinnerRow&gt; {

private List&lt;SpinnerRow&gt; rows;
private int resource;

public MySpinnerAdapter(Context context, int resource,
        int textViewResourceId, List&lt;SpinnerRow&gt; objects) {
    super(context, resource, textViewResourceId, objects);
    rows = objects;
    this.resource = resource;
}

static class ViewHolder {

    TextView text;
    ImageView icon;
}

@Override
public View getDropDownView(int position, View convertView, ViewGroup parent) {
    ViewHolder  holder = new ViewHolder();
    if (convertView == null) {
        convertView = LayoutInflater.from(getContext()).inflate(resource,
                parent, false);

        holder.text = (TextView) convertView.findViewById(R.id.text);
        holder.icon = (ImageView) convertView.findViewById(R.id.icon);

        convertView.setTag(holder);

    } else {
        holder = (ViewHolder) convertView.getTag();
    }

    SpinnerRow currentRow = rows.get(position);
    holder.text.setText(currentRow.toString());
    holder.icon.setImageDrawable(
            getContext().getResources().getDrawable(currentRow.getIconResourceId()));


    return convertView;
}

}
</code></pre>
