<p>You can use <code>PathMeasure</code> to get coordinates of arbitrary point on the path.For example this simple snippet(that I saw <a href="http://stackoverflow.com/a/9103540/1043882">here</a>) returns coordinates of the point at the half of the path:</p>

<pre><code>PathMeasure pm = new PathMeasure(myPath, false);
//coordinates will be here
float aCoordinates[] = {0f, 0f};

//get point from the middle
pm.getPosTan(pm.getLength() * 0.5f, aCoordinates, null);
</code></pre>

<p>Or this snippet returns an array of <code>FlaotPoint</code>s.That array involves coordinates of 20 points on the path:</p>

<pre><code>private FlaotPoint[] getPoints() {
        FlaotPoint[] pointArray = new FlaotPoint[20];
        PathMeasure pm = new PathMeasure(path0, false);
        float length = pm.getLength();
        float distance = 0f;
        float speed = length / 20;
        int counter = 0;
        float[] aCoordinates = new float[2];

        while ((distance &lt; length) &amp;&amp; (counter &lt; 20)) {
            // get point from the path
            pm.getPosTan(distance, aCoordinates, null);
            pointArray[counter] = new FlaotPoint(aCoordinates[0],
                    aCoordinates[1]);
            counter++;
            distance = distance + speed;
        }

        return pointArray;
    }
</code></pre>

<p>In above snippet,<code>FlaotPoint</code> is a class that encapsulate coordinates of a point:</p>

<pre><code>class FlaotPoint {
        float x, y;

        public FlaotPoint(float x, float y) {
            this.x = x;
            this.y = y;
        }

        public float getX() {
            return x;
        }

        public float getY() {
            return y;
        }
    }
</code></pre>

<p><em><strong>References</em></strong>:<br>
<a href="http://stackoverflow.com/a/9103540/1043882">stackoverflow</a><br>
<a href="http://c05mic.wordpress.com/2012/03/23/animating-a-bitmap-using-path-and-pathmeasure-android/">Animating an image using Path and PathMeasure â€“ Android</a> </p>
