<p>You need an application to create your frame first. This is a simple example of such application.</p>

<pre><code>import javax.swing.UIManager;
import java.awt.*;

public class Application {
  boolean packFrame = false;

  //Construct the application
  public Application() {
    PleaseWait frame = new PleaseWait();
    //Validate frames that have preset sizes
    //Pack frames that have useful preferred size info, e.g. from their layout
    if (packFrame) {
      frame.pack();
    }
    else {
      frame.validate();
    }
    //Center the window
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    Dimension frameSize = frame.getSize();
    if (frameSize.height &gt; screenSize.height) {
      frameSize.height = screenSize.height;
    }
    if (frameSize.width &gt; screenSize.width) {
      frameSize.width = screenSize.width;
    }
    frame.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
    frame.setVisible(true);

    frame.convert();

  }

  //Main method
  public static void main(String[] args) {
    try {
      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
    }
    catch(Exception e) {
      e.printStackTrace();
    }
    new Application();
  }
}
</code></pre>

<p>You have to slightly modify your frame to add controls to the content pane. You can do some work after frame is created, then call alert.</p>

<pre><code>import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class PleaseWait extends JFrame {

  private static final int height = 125;
  private static final int width = 350;
  final static JLabel converting = new JLabel();
  private static JButton OK = new JButton("OK");
  BorderLayout borderLayout1 = new BorderLayout();
  JPanel contentPane;
  int count;

  public PleaseWait(){
    contentPane = (JPanel)this.getContentPane();
    contentPane.setLayout(borderLayout1);
    this.setSize(new Dimension(width, height));
    this.setTitle("Chill For A Sec");
    this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    // creates the layouts//
    JPanel mainLayout = new JPanel(new BorderLayout());
    JPanel textLayout = new JPanel(new FlowLayout());
    JPanel buttonLayout = new JPanel(new FlowLayout());

    // Sets Text //
    converting.setText("Please wait while I convert your files");

    // disables button //
    OK.setEnabled(false);
    OK.addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e) {
        System.exit(0);
      }
    });

    // adds to the layouts //
    textLayout.add(converting);
    buttonLayout.add(OK);
    mainLayout.add(textLayout, BorderLayout.CENTER);
    mainLayout.add(buttonLayout, BorderLayout.SOUTH);

    // adds to the frame //
    contentPane.add(mainLayout);
  }

  public void convert(){
    count = 0;
    for (int i = 0; i &lt;10; i++){
      System.out.println("Copy "+i);
      try {
        Thread.sleep(1000);
      } catch (InterruptedException e) {
      }
      count++;
    }
    alert();

  }
  public void alert(){
    OK.setEnabled(true);
//        String total = String.valueOf(Convert.result());
    converting.setText("Sucsess! " + count + " files Converted");
  }

}
</code></pre>
