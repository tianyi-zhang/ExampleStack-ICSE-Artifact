<p>try this code:</p>

<p>create a imageview in your xml</p>

<pre><code>ImageView photoFrame;
public static final int REQ_CODE_PICK_IMAGE         = 101;
</code></pre>

<p>in oncreate add this:</p>

<pre><code>  photoFrame.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View arg0) {
                try
                {
                    Intent galleryIntent = new Intent(Intent.ACTION_PICK,
                               android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
                    startActivityForResult(galleryIntent, REQ_CODE_PICK_IMAGE); 
                }catch(Exception e)
                {
                    e.printStackTrace();
                }
            }
        });
</code></pre>

<p>in OnActivityResult add this code:</p>

<pre><code>       protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    switch(requestCode) { 
    case REQ_CODE_PICK_IMAGE:
        if(resultCode == RESULT_OK)
        {  
            Uri selectedImage = data.getData();
            String[] filePathColumn = {MediaStore.Images.Media.DATA};

            Cursor cursor = getContentResolver().query(
                               selectedImage, filePathColumn, null, null, null);
            cursor.moveToFirst();

            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
            photoPath = cursor.getString(columnIndex);
            cursor.close();
            photoFrame.setImageBitmap(Utils.getScaledImage(photoPath, 120, 120));
        }
    }
}
</code></pre>

<p>create a class for Utils, add this code in it:</p>

<pre><code>    public static Bitmap getScaledImage(String path, int width, int height){
        try {
            //decode image size
            BitmapFactory.Options o = new BitmapFactory.Options();
            o.inJustDecodeBounds = true;
            BitmapFactory.decodeFile(path ,o);              
            //Find the correct scale value. It should be the power of 2.
            final int REQUIRED_SIZE=70;
            int width_tmp=o.outWidth, height_tmp=o.outHeight;
            int scale=1;
            while(true){
                if(width_tmp/2&lt;REQUIRED_SIZE || height_tmp/2&lt;REQUIRED_SIZE)
                    break;
                width_tmp/=2;
                height_tmp/=2;
                scale++;
            }

            //decode with inSampleSize
            BitmapFactory.Options o2 = new BitmapFactory.Options();
            o2.inSampleSize=scale;
            Bitmap scaledPhoto = BitmapFactory.decodeFile(path, o2);
            scaledPhoto = Bitmap.createScaledBitmap(scaledPhoto, width, height, true);
            return scaledPhoto;
        } 
        catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
</code></pre>

<p>with this code you can select a image from gallery and you can view image on Imageview</p>
