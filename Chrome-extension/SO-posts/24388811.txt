<p>If you have a <code>DisputeSummaryarraylistobject</code> with proper equals and hashcode method then you can use <a href="http://code.google.com/p/google-gson/" rel="nofollow">Gson</a> to parse the json data directly to the object and do a comparision. Eg.</p>

<pre><code>import java.lang.reflect.Type;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

public class JsonCompare {

    public static void main(String[] args) {
        String jsonData = "{ \"chargeback\": 5, \"activeDisputes\": 12, \"recentUpdates\": 10, \"recentlyClosed\": 12, \"responseRequired\": 8, \"inProgress\": 4, \"closedInFavor\": 4, \"closedChargebacks\": 8 }";

        Gson gson = new Gson();
        DisputeSummaryarraylistobject webserviceObject = gson.fromJson(jsonData, DisputeSummaryarraylistobject.class);

        //DDObject
        DisputeSummaryarraylistobject dbObject = new DisputeSummaryarraylistobject();
        dbObject.setChargeback(5);
        dbObject.setActiveDisputes(12);
        dbObject.setRecentUpdates(10);
        dbObject.setRecentlyClosed(12);
        dbObject.setResponseRequired(8);
        dbObject.setInProgress(4);
        dbObject.setClosedInFavor(4);
        dbObject.setClosedChargebacks(8);

        System.out.println(webserviceObject.equals(dbObject));

        // If you have an array of objects
        String jsonDataArray = "[ { \"chargeback\": 5, \"activeDisputes\": 12, \"recentUpdates\": 10, \"recentlyClosed\": 12, \"responseRequired\": 8, \"inProgress\": 4, \"closedInFavor\": 4, \"closedChargebacks\": 8 }, "
                + " { \"chargeback\": 6, \"activeDisputes\": 7, \"recentUpdates\": 8, \"recentlyClosed\": 2, \"responseRequired\": 5, \"inProgress\": 14, \"closedInFavor\": 14, \"closedChargebacks\": 5 } ]";
        Type listType = new TypeToken&lt;List&lt;DisputeSummaryarraylistobject&gt;&gt;() {}.getType();
        List&lt;DisputeSummaryarraylistobject&gt; disputeSummaryArraylistobjectList  = gson.fromJson(jsonDataArray, listType);
        System.out.println(disputeSummaryArraylistobjectList);

        //Now you can iterate through the array and compare the objects with equals.
    }

}
</code></pre>

<p><strong>A sample Dispute Summary Object</strong></p>

<pre><code>public class DisputeSummaryarraylistobject {
    private int chargeback;
    private int activeDisputes;
    private int recentUpdates;
    private int recentlyClosed;
    private int responseRequired;
    private int inProgress;
    private int closedInFavor;
    private int closedChargebacks;

    public int getChargeback() {
        return chargeback;
    }
    public void setChargeback(int chargeback) {
        this.chargeback = chargeback;
    }
    public int getActiveDisputes() {
        return activeDisputes;
    }
    public void setActiveDisputes(int activeDisputes) {
        this.activeDisputes = activeDisputes;
    }
    public int getRecentUpdates() {
        return recentUpdates;
    }
    public void setRecentUpdates(int recentUpdates) {
        this.recentUpdates = recentUpdates;
    }
    public int getRecentlyClosed() {
        return recentlyClosed;
    }
    public void setRecentlyClosed(int recentlyClosed) {
        this.recentlyClosed = recentlyClosed;
    }
    public int getResponseRequired() {
        return responseRequired;
    }
    public void setResponseRequired(int responseRequired) {
        this.responseRequired = responseRequired;
    }
    public int getInProgress() {
        return inProgress;
    }
    public void setInProgress(int inProgress) {
        this.inProgress = inProgress;
    }
    public int getClosedInFavor() {
        return closedInFavor;
    }
    public void setClosedInFavor(int closedInFavor) {
        this.closedInFavor = closedInFavor;
    }
    public int getClosedChargebacks() {
        return closedChargebacks;
    }
    public void setClosedChargebacks(int closedChargebacks) {
        this.closedChargebacks = closedChargebacks;
    }
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + activeDisputes;
        result = prime * result + chargeback;
        result = prime * result + closedChargebacks;
        result = prime * result + closedInFavor;
        result = prime * result + inProgress;
        result = prime * result + recentUpdates;
        result = prime * result + recentlyClosed;
        result = prime * result + responseRequired;
        return result;
    }
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        DisputeSummaryarraylistobject other = (DisputeSummaryarraylistobject) obj;
        if (activeDisputes != other.activeDisputes)
            return false;
        if (chargeback != other.chargeback)
            return false;
        if (closedChargebacks != other.closedChargebacks)
            return false;
        if (closedInFavor != other.closedInFavor)
            return false;
        if (inProgress != other.inProgress)
            return false;
        if (recentUpdates != other.recentUpdates)
            return false;
        if (recentlyClosed != other.recentlyClosed)
            return false;
        if (responseRequired != other.responseRequired)
            return false;
        return true;
    }
    @Override
    public String toString() {
        return "DisputeSummaryarraylistobject [chargeback=" + chargeback
                + ", activeDisputes=" + activeDisputes + ", recentUpdates="
                + recentUpdates + ", recentlyClosed=" + recentlyClosed
                + ", responseRequired=" + responseRequired + ", inProgress="
                + inProgress + ", closedInFavor=" + closedInFavor
                + ", closedChargebacks=" + closedChargebacks + "]";
    }
}
</code></pre>
