<p>Firstly you need load apps list and permission for every apps. I do it inside Activity.onCreate to simplify example. The better way to do it inside AsyncTask</p>

<pre><code>public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final PackageManager packageManager = getPackageManager();

        final List&lt;Pair&lt;String, List&lt;String&gt;&gt;&gt; appsWithPermission = new ArrayList&lt;&gt;();

        final Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
        mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
        final List&lt;ResolveInfo&gt; apps = packageManager.queryIntentActivities(mainIntent, 0);
        for (ResolveInfo info : apps) {
            final ApplicationInfo applicationInfo = info.activityInfo.applicationInfo;
            final String appName = (String) applicationInfo.loadLabel(packageManager);

            final List&lt;String&gt; permissions = new ArrayList&lt;&gt;();

            if (appName != null) {

                try {
                    final PackageInfo packageInfo = packageManager.getPackageInfo(applicationInfo.packageName, PackageManager.GET_PERMISSIONS);
                    final String[] requestedPermissions = packageInfo.requestedPermissions;

                    if (requestedPermissions != null) {
                        permissions.addAll(Arrays.asList(requestedPermissions));
                    }

                } catch (PackageManager.NameNotFoundException e) {
                    e.printStackTrace();
                }
            }

            appsWithPermission.add(new Pair&lt;&gt;(appName, permissions));
        }

        final ListView listView = (ListView) findViewById(R.id.list_view);
        final AppsAdapter appsAdapter = new AppsAdapter(this, appsWithPermission);
        listView.setAdapter(appsAdapter);
    }
}
</code></pre>

<p>Secondly you need xml layout <code>list_item.xml</code></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal"&gt;

    &lt;TextView
        android:id="@+id/list_item_appname"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_weight="2"
        android:textAppearance="@android:style/TextAppearance.Medium" /&gt;

    &lt;TextView
        android:id="@+id/list_item_apppermissions"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_weight="1" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>and finally <code>AppsAdapter.java</code></p>

<pre><code>public class AppsAdapter extends BaseAdapter {

    private final Context mContext;
    private List&lt;Pair&lt;String, List&lt;String&gt;&gt;&gt; mAppsWithPermission;

    public AppsAdapter(Context context, List&lt;Pair&lt;String, List&lt;String&gt;&gt;&gt; appsWithPermission) {
        mContext = context;
        mAppsWithPermission = appsWithPermission;
    }

    static class ViewHolder {
        public TextView appName;
        public TextView appPermissions;
    }

    @Override
    public int getCount() {
        return mAppsWithPermission.size();
    }

    @Override
    public Object getItem(int position) {
        return mAppsWithPermission.get(position);
    }

    @Override
    public long getItemId(int position) {
        return mAppsWithPermission.get(position).hashCode();
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;

        if (convertView == null) {

            convertView = LayoutInflater.from(mContext).inflate(R.layout.list_item, parent, false);
            holder = new ViewHolder();
            holder.appName = (TextView) convertView.findViewById(R.id.list_item_appname);
            holder.appPermissions = (TextView) convertView.findViewById(R.id.list_item_apppermissions);

            convertView.setTag(holder);

        } else {
            holder = (ViewHolder) convertView.getTag();
        }

        Pair&lt;String, List&lt;String&gt;&gt; item = mAppsWithPermission.get(position);

        holder.appName.setText(item.first);
        holder.appPermissions.setText(item.second.toString());

        return convertView;
    }
}
</code></pre>
