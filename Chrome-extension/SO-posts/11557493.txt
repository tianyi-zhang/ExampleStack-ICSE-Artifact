<p>Two problems:</p>

<ol>
<li>In the <code>mouseDragged</code> function you are changing the <code>Figure</code>'s bounds instead of changing the constraints of the figure in the parent container.</li>
<li>You are not revalidating the parent.</li>
</ol>

<p>I made the following changes and it works:</p>

<pre><code>public void mouseDragged(MouseEvent me) {
  if(lastDragLocation != null &amp;&amp; selection != null) {
    int offsetX = me.getLocation().x - lastDragLocation.x;
    int offsetY = me.getLocation().y - lastDragLocation.y;
    int newX = selection.getLocation().x + offsetX;
    int newY = selection.getLocation().y + offsetY;
    System.out.println(String.format("NewX: %d, NewY: %d", newX, newY));
    // selection.setBounds(selection.getBounds().getTranslated(offsetX, offsetY)); &lt;-- this does not work
    selection.getParent().getLayoutManager()
        .setConstraint(selection, selection.getBounds().getTranslated(offsetX, offsetY));
    selection.getParent().revalidate();

  }
  lastDragLocation = me.getLocation();
}
</code></pre>

<p>But I still think there is a problem with the implementation since if you move the mouse too fast somehow you can manage to get out of the figure and it stops moving. What I would do is listen to the mouse in the parent figure, capture when the mouse started moving on top of an inner figure (using the parents <code>Figure.findFigureAt()</code>) and then move the inner figure as the mouse moves.</p>
