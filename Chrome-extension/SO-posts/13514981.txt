<p><strong>For expandable list just implement following code:</strong></p>

<p><strong>ExpandableListDemo.java</strong></p>

<pre><code>  public class ExpandableListDemo extends Activity {

        private ExpandableListView expandableListView;
        private ArrayList&lt;Places&gt; places;
        private PlaceAdapter placeAdapter;
        DisplayMetrics metrics;
        int width;
        @Override
        public void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_expandable_list_demo);
            initUI();

            initData();



            placeAdapter=new PlaceAdapter(places, this);

            expandableListView.setAdapter(placeAdapter);

            expandableListView.setIndicatorBounds(width - GetDipsFromPixel(30), width - GetDipsFromPixel(5));
        }

        private void initData() {
            places=new ArrayList&lt;Places&gt;();
            Places place1=new Places();
            place1.setName("Maharashtra");
            String [] city1={"Pune","Mumbai","Nagpur","Aurangabad","Nasik"};
            place1.setCities(city1);

            Places place2=new Places();
            place2.setName("Gujrat");
            String [] city2={"Surat","Bhavnagar","Ahmedabad","Vadodara","Rajkot"};
            place2.setCities(city2);

            Places place3=new Places();
            place3.setName("AndhraPradesh");
            String [] city3={ "Hyderabad", "Visakhapatnam", "Vijayawada", "Guntur", "Rajahmundr" };
            place3.setCities(city3);

            Places place4=new Places();
            place4.setName("Karnataka");
            String [] city4={"Bagalkote","Bangalore","Belgaum","Bellary"};
            place4.setCities(city4);

            places.add(place1);
            places.add(place2);
            places.add(place3);
            places.add(place4);

            metrics = new DisplayMetrics();
            getWindowManager().getDefaultDisplay().getMetrics(metrics);
            width = metrics.widthPixels;
        }

        private void initUI() {
            expandableListView=(ExpandableListView) findViewById(R.id.places_listview);
        }

        public int GetDipsFromPixel(float pixels)
        {
         // Get the screen's density scale
         final float scale = getResources().getDisplayMetrics().density;
         // Convert the dps to pixels, based on density scale
         return (int) (pixels * scale + 0.5f);
        }
    }
</code></pre>

<p>Custom place adapter:</p>

<pre><code> public class PlaceAdapter extends BaseExpandableListAdapter{

        private ArrayList&lt;Places&gt; placesList;
        private LayoutInflater mInflater;

        public PlaceAdapter(ArrayList&lt;Places&gt; placesList,Context context) {
            this.placesList=placesList;
            mInflater=LayoutInflater.from(context);
        }
        //return child at specific position.
        @Override
        public Object getChild(int groupPosition, int childPosition) {
            return placesList.get(groupPosition).getCities();
        }

        //return child id for specific position.
        @Override
        public long getChildId(int groupPosition, int childPosition) {
            return childPosition;
        }

        //return child view at specific position.
        @Override
        public View getChildView(int groupPosition, int childPosition,
                boolean isLastChild, View convertView, ViewGroup parent) {
            ChildHolder childHolder;
            if(convertView==null) {
                childHolder=new ChildHolder();
                convertView=mInflater.inflate(R.layout.child_item,null);
                childHolder.childTv=(TextView) convertView.findViewById(R.id.txt_chid_item);
                convertView.setTag(childHolder);
            }else{
                childHolder=(ChildHolder) convertView.getTag();
            }

            childHolder.childTv.setText("--&gt;"+placesList.get(groupPosition).getCities()[childPosition]);
            return convertView;
        }

        //return number of child for specific parent.
        @Override
        public int getChildrenCount(int groupPosition) {
            return placesList.get(groupPosition).getCities().length;
        }

        //get parent at specific position.
        @Override
        public Object getGroup(int groupPosition) {
            return placesList.get(groupPosition);
        }

        //return number of parent items.
        @Override
        public int getGroupCount() {
            return placesList.size();
        }

        //return parent id for specific position
        @Override
        public long getGroupId(int groupPosition) {
            return groupPosition;
        }

        //return parent view for specific position
        @Override
        public View getGroupView(int groupPosition, boolean isExpanded,
                View convertView, ViewGroup parent) {

            ParentHolder parentHolder;

            if(convertView==null) {

                parentHolder=new ParentHolder();

                convertView=mInflater.inflate(R.layout.parent_item,null);

                parentHolder.parentTv=(TextView) convertView.findViewById(R.id.txt_parent_item);

                convertView.setTag(parentHolder);

            }else{
                parentHolder=(ParentHolder) convertView.getTag();
            }
                parentHolder.parentTv.setText(placesList.get(groupPosition).getName());
            return convertView;
        }

        @Override
        public boolean hasStableIds() {
            return false;
        }

        @Override
        public boolean isChildSelectable(int groupPosition, int childPosition) {
            return false;
        }

        private class ParentHolder {
            TextView parentTv;
        }

        private class ChildHolder {
            TextView childTv;
        }

    }
</code></pre>

<p>Places model:</p>

<pre><code>public class Places {
    private String name;
    private String [] cities;

    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public String[] getCities() {
        return cities;
    }
    public void setCities(String[] cities) {
        this.cities = cities;
    }


}
</code></pre>

<p><strong>activity_expandable_list_demo.xml</strong></p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;ExpandableListView
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:id="@+id/places_listview"
        android:groupIndicator="@drawable/arrow_selector"
        &gt;&lt;/ExpandableListView&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<p><strong>child_item.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;
    &lt;TextView android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/txt_chid_item"/&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p><strong>parent_item.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;
    &lt;TextView 
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/txt_parent_item"/&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>AndroidManifest.xml</p>

<p></p>

<pre><code>&lt;uses-sdk
    android:minSdkVersion="8"
    android:targetSdkVersion="15" /&gt;

&lt;application
    android:icon="@drawable/ic_launcher"
    android:label="@string/app_name"
    android:theme="@style/AppTheme" &gt;
    &lt;activity
        android:name=".ExpandableListDemo"
        android:label="@string/title_activity_expandable_list_demo" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name="android.intent.action.MAIN" /&gt;

            &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;
&lt;/application&gt;
</code></pre>

<p></p>

<p><img src="http://i.stack.imgur.com/3Qpx2.png" alt="Pluse Icon"></p>

<p><img src="http://i.stack.imgur.com/6PzRM.png" alt="Minus Icon"></p>

<p>(Use above icon in your drawable)
I hope this code will more helpful to implement expandable list view</p>
