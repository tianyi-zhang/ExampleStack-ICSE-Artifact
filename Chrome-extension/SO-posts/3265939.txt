<p>In the Javadoc specification, I don't see any line saying that two succesive calls is guaranteed to return two different ports...</p>

<p>Since the ServerSocket is closed, a second call could give the same port. Statistically, it is unprobable but not impossible I think.</p>

<p>If you open your two ServerSocket, get the ports, and then, close your two ServerSocket, you are guarranted to get two different ports (since the first is not free when you create the second ServerSocket).</p>

<p>Example method to get n different free ports :</p>

<pre><code>public int[] getFreePorts(int portNumber) throws IOException {
    int[] result = new int[portNumber];
    List&lt;ServerSocket&gt; servers = new ArrayList&lt;ServerSocket&gt;(portNumber);
    ServerSocket tempServer = null;

    for (int i=0; i&lt;portNumber; i++) {
        try {
            tempServer = new ServerSocket(0);
            servers.add(tempServer);
            result[i] = tempServer.getLocalPort();
        } finally {
            for (ServerSocket server : servers) {
                try {
                    server.close();
                } catch (IOException e) {
                    // Continue closing servers.
                }
            }
        }
    }
    return result;
}
</code></pre>
