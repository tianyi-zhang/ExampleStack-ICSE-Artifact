<p>Finally, i solved the problem as follows. </p>

<p>First, Customizing ActionMenuItemView which using </p>

<p><code>final Context context = getContext().getApplicationContext();</code> </p>

<p>instead of </p>

<p><code>final Context context = getContext();</code> </p>

<p>to show a Toast like below.</p>

<pre><code>public class ActionMenuItemView extends android.support.v7.internal.view.menu.ActionMenuItemView{
public ActionMenuItemView(Context context) {
    super(context);
}

public ActionMenuItemView(Context context, AttributeSet attrs) {
    super(context, attrs);
}

public ActionMenuItemView(Context context, AttributeSet attrs, int defStyle) {
    super(context, attrs, defStyle);
}

@Override
public boolean onLongClick(View v) {
    if (hasText()) {
        // Don't show the cheat sheet for items that already show text.
        return false;
    }

    final int[] screenPos = new int[2];
    final Rect displayFrame = new Rect();
    getLocationOnScreen(screenPos);
    getWindowVisibleDisplayFrame(displayFrame);

    final Context context = getContext().getApplicationContext();
    final int width = getWidth();
    final int height = getHeight();
    final int midy = screenPos[1] + height / 2;
    int referenceX = screenPos[0] + width / 2;
    if (ViewCompat.getLayoutDirection(v) == ViewCompat.LAYOUT_DIRECTION_LTR) {
        final int screenWidth = context.getResources().getDisplayMetrics().widthPixels;
        referenceX = screenWidth - referenceX; // mirror
    }
    Toast cheatSheet = Toast.makeText(context, getItemData().getTitle(), Toast.LENGTH_SHORT);
    if (midy &lt; displayFrame.height()) {
        // Show along the top; follow action buttons
        cheatSheet.setGravity(Gravity.TOP | GravityCompat.END, referenceX, height);
    } else {
        // Show along the bottom center
        cheatSheet.setGravity(Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 0, height);
    }
    cheatSheet.show();
    return false;
}}
</code></pre>

<p>Second, create abc_action_menu_item_layout.xml and place it in layout folder instead of abc_action_menu_item_layout.xml in support-v7 library.</p>

<pre><code>&lt;com.example.widget.ActionMenuItemView
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_gravity="center"
    android:gravity="center"
    android:focusable="true"
    android:paddingTop="4dip"
    android:paddingBottom="4dip"
    android:paddingLeft="8dip"
    android:paddingRight="8dip"
    android:textAppearance="?attr/actionMenuTextAppearance"
    android:textColor="?attr/actionMenuTextColor"
    style="?attr/actionButtonStyle"/&gt;
</code></pre>

<p>It works like a charm although i don't know the difference between <strong>getContext().getApplicationContext()</strong> and <strong>getContext()</strong> in the ActionMenuItemView.</p>
