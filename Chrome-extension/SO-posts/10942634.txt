<p>OAuth signatures, nonces, and timestamps are all security measures that are necessary if you're using plain HTTP.  But since the Dropbox API can be used over HTTPS, you can drop all that complexity and just use the <a href="http://oauth.net/core/1.0/#anchor22" rel="nofollow"><code>PLAINTEXT</code> signature mode</a> is much simpler.</p>

<p>Here's some example Java code that does the job.  (It puts the OAuth information in the "Authorization" HTTP header, but you can URL parameters instead if you want.)</p>

<pre><code> /**
  * @param token
  *    For all "real" API endpoints, pass in the access token here.
  *    For "/oauth/access_token", pass in the request token here.
  *    (For "/oauth/request_token", use {@link #buildInitialOAuthHeader}.)
  */
 public static HttpHeader buildOAuthHeader(AppInfo appInfo, Token token)
 {
     StringBuilder buf = new StringBuilder();
     buf.append("OAuth ");
     buf.append("oauth_token=\"").append(token.key).append("\"");
     buf.append(", oauth_consumer_key=\"").append(appInfo.key).append("\"");
     buf.append(", oauth_signature_method=\"PLAINTEXT\"");
     buf.append(", oauth_signature=\"").append(appInfo.secret).append("&amp;").append(token.secret).append("\"");
     return new HttpHeader("Authorization", buf.toString());
 }

 /**
  * For "/oauth/request_token".
  */
 public static HttpHeader buildInitialOAuthHeader(AppInfo appInfo)
 {
     StringBuilder buf = new StringBuilder();
     buf.append("OAuth ");
     buf.append(" oauth_consumer_key=\"").append(appInfo.key).append("\"");
     buf.append(", oauth_signature_method=\"PLAINTEXT\"");
     buf.append(", oauth_signature=\"").append(appInfo.secret).append("&amp;\"");
     return new HttpHeader("Authorization", buf.toString());
 }
</code></pre>
