<p>I recently got into this issue and found this solution.
You can use a filter to add these headers : </p>

<pre><code>import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.web.filter.OncePerRequestFilter;

public class CorsFilter extends OncePerRequestFilter {

    @Override
    protected void doFilterInternal(HttpServletRequest request,
                                    HttpServletResponse response, FilterChain filterChain)
            throws ServletException, IOException {
            response.addHeader("Access-Control-Allow-Origin", "*");
            if (request.getHeader("Access-Control-Request-Method") != null
                    &amp;&amp; "OPTIONS".equals(request.getMethod())) {
                // CORS "pre-flight" request
                response.addHeader("Access-Control-Allow-Methods",
                        "GET, POST, PUT, DELETE");
                response.addHeader("Access-Control-Allow-Headers",
                        "X-Requested-With,Origin,Content-Type, Accept");
            }
            filterChain.doFilter(request, response);
    }

}
</code></pre>

<p>Don't forget add the filter to your spring context:</p>

<pre><code>&lt;bean id="corsFilter" class="my.package.CorsFilter" /&gt;
</code></pre>

<p>and the mapping in the web.xml:</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;corsFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;corsFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>To go a little further you can specify a Spring profile to enable or disable this filter with something like that:</p>

<pre><code>&lt;beans profile="!cors"&gt;
    &lt;bean id="corsFilter" class="my.package.FilterChainDoFilter" /&gt;
&lt;/beans&gt;

&lt;beans profile="cors"&gt;
    &lt;bean id="corsFilter" class="my.package.CorsFilter" /&gt;
&lt;/beans&gt;
</code></pre>

<p>(providing the FilterChainDoFilter similar to the CorsFilter but which only does <code>filterChain.doFilter(request, response);</code> in the doFilterInternal(..))</p>
