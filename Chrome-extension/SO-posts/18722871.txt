<p>I did not find out, what my code was doing wrong, but I found a workaround that serves the same purpose:</p>

<ul>
<li>moved my zip file from /res/raw to /assets folder</li>
<li>used codesnippet in accepted answer of this question: <a href="http://stackoverflow.com/questions/4447477/android-how-to-copy-files-in-assets-to-sdcard/4530294#4530294">Android: How to copy files in &#39;assets&#39; to sdcard?</a></li>
<li>modified getting the right assets from my test project and not from the project under test according to: <a href="http://stackoverflow.com/questions/6547783/storing-test-files-in-the-test-project">Storing test files in the test project</a></li>
</ul>

<p>The result:</p>

<pre><code>private void copyPicSketch() {  
    AssetManager assetManager = getInstrumentation().getContext().getResources().getAssets();
    String[] files = null;
    try {
        files = assetManager.list("");
    } catch (IOException e) {
        Log.e("tag", "Failed to get asset file list.", e);
    }
    for(String filename : files) {
        if (filename.contains(sketchName)) {
            InputStream in = null;
            OutputStream out = null;
            try {
              in = assetManager.open(filename);
              File outFile = new File(activity.getExternalFilesDir(null), filename);
              out = new FileOutputStream(outFile);
              copyFile(in, out);
              in.close();
              in = null;
              out.flush();
              out.close();
              out = null;
            } catch(IOException e) {
                Log.e("tag", "Failed to copy asset file: " + filename, e);
            }               
        }
    }
}
private void copyFile(InputStream in, OutputStream out) throws IOException {
    byte[] buffer = new byte[1024];
    int read;
    while((read = in.read(buffer)) != -1){
      out.write(buffer, 0, read);
    }
}
</code></pre>
