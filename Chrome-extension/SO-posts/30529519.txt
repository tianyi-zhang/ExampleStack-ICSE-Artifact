<p>To center-align an image use code like in my <a href="https://github.com/afarber/android-newbie/blob/master/QREncoder/res/layout/activity_main.xml" rel="nofollow">activity_main.xml</a>:</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;ImageView
        android:id="@+id/myImage"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_centerHorizontal="true"
        android:layout_centerVertical="true" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p><img src="http://i.stack.imgur.com/hlGFe.png" alt="app screenshot"></p>

<p>To generate and display a QR-encoded image use code like in my <a href="https://github.com/afarber/android-newbie/blob/master/QREncoder/src/de/afarber/qrencoder/MainActivity.java" rel="nofollow">MainActivity.java</a>:</p>

<pre><code>public class MainActivity extends AppCompatActivity {

    public final static int WHITE = 0xFFFFFFFF;
    public final static int BLACK = 0xFF000000;
    public final static int WIDTH = 400;
    public final static int HEIGHT = 400;
    public final static String STR = "A string to be encoded as QR code";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ImageView imageView = (ImageView) findViewById(R.id.myImage);
        try {
            Bitmap bitmap = encodeAsBitmap(STR);
            imageView.setImageBitmap(bitmap);
        } catch (WriterException e) {
            e.printStackTrace();
        }
    }

    Bitmap encodeAsBitmap(String str) throws WriterException {
        BitMatrix result;
        try {
            result = new MultiFormatWriter().encode(str, 
                BarcodeFormat.QR_CODE, WIDTH, HEIGHT, null);
        } catch (IllegalArgumentException iae) {
            // Unsupported format
            return null;
        }

        int w = result.getWidth();
        int h = result.getHeight();
        int[] pixels = new int[w * h];
        for (int y = 0; y &lt; h; y++) {
            int offset = y * w;
            for (int x = 0; x &lt; w; x++) {
                pixels[offset + x] = result.get(x, y) ? BLACK : WHITE;
            }
        }

        Bitmap bitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
        bitmap.setPixels(pixels, 0, w, 0, 0, w, h);
        return bitmap;
    }
}
</code></pre>

<p>In <strong>Android Studio</strong> add the following line to <code>build.gradle</code> file:</p>

<pre><code>dependencies {
    ....
    compile 'com.google.zxing:core:3.2.1'
}
</code></pre>

<p>Or - if still using <strong>Eclipse with ADT plugin</strong> add <em>core.jar</em> by ZXing to the <em>libs</em> subdir (here <a href="http://i.stack.imgur.com/AtpR7.png" rel="nofollow">fullscreen</a>):</p>

<p><img src="http://i.stack.imgur.com/AtpR7.png" alt="Eclipse screenshot"></p>
