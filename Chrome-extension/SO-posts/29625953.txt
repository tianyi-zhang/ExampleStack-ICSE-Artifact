<p>The issue has been resolved based on suggestions found on the web but sorry can not remember the url.</p>

<pre><code>public int getTouchPosition(MotionEvent motionEvent){
    // Transient properties
    int mDismissAnimationRefCount = 0;
    float mDownX;
    int mDownPosition=-1;
    View mDownView=null;

    //   Find the child view that was touched (perform a hit test)
    Rect rect = new Rect();
    int childCount = mListView.getChildCount();
    int[] listViewCoords = new int[2];
    mListView.getLocationOnScreen(listViewCoords);
    int x = (int) motionEvent.getRawX() - listViewCoords[0];
    int y = (int) motionEvent.getRawY() - listViewCoords[1];
    View child;
    for (int i = 0; i &lt; childCount; i++) {
           child = mListView.getChildAt(i);
           child.getHitRect(rect);
           if (rect.contains(x, y)) {
                  mDownView = child;
                  break;
           }
    }

    if (mDownView != null) {
           mDownX = motionEvent.getRawX();
           mDownPosition = mListView.getPositionForView(mDownView);
    }

    return mDownPosition;

 }
</code></pre>

<p>Can use the position to get the cursor position used to populate the view</p>

<pre><code>Cursor cursor = (Cursor)mListView.getItemAtPosition(mDownPosition);
</code></pre>
