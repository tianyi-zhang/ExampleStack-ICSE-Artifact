<p>Still got the problem?</p>

<p>I am in the same situation and this NLService seems won't to be collaborative...</p>

<p>As a <strong>"fake" workaround</strong> I have notice that if you check and uncheck the <code>Settings &gt; Security &gt; Notification access</code> during a debug session and put a breakpoint in the onCreate() you can intercept when the service starts but is not so clear why sometimes stops...</p>

<p>Another possibility is to reboot the device...</p>

<p>try maybe you'll find a way to solve, I'm still trying...</p>

<p><br><strong>UPDATE</strong></p>

<p>Maybe something is changed in the service.
This is my test that is working on multiple devices (I've try it for days).</p>

<p>After install the app you can enabling the notification access in settings and than you can try the code.</p>

<p><strong>build.gradle</strong> file</p>

<pre><code>apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
       applicationId "your_application_id"
       minSdkVersion 18
       targetSdkVersion 23
       versionCode 1
      versionName "1.0"
}
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
}
</code></pre>

<p><strong>AndroidManifest.xml</strong> file <br>Here we declare and add the service with NotificationListener (name of the class that we create)</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="insert_your_package"&gt;

    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"&gt;
        &lt;activity
            android:name=".AMain"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;

                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;

        &lt;service
            android:name=".NotificationListener"
            android:label="@string/app_name"
            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.service.notification.NotificationListenerService" /&gt;
            &lt;/intent-filter&gt;
        &lt;/service&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p><strong>AMain.java</strong> file</p>

<pre><code>package insert_your_package;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.TextView;

public class AMain extends AppCompatActivity {

    protected TextView textView;
    protected NotificationReceiver notificationReceiver;

    @Override

    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.a_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

        textView = (TextView) findViewById(R.id.textview);

        notificationReceiver = new NotificationReceiver();

        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction("com.dev.name.test");

        registerReceiver(notificationReceiver, intentFilter);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    class NotificationReceiver extends BroadcastReceiver {

        @Override
        public void onReceive(Context context, Intent intent) {

            String temp = intent.getStringExtra("notification_event") + "\n" + textView.getText();

            textView.setText(temp);
        }
    }
}
</code></pre>

<p><strong>NotificationListener.java</strong> file</p>

<pre><code>package insert_your_package;

import android.content.Intent;
import android.service.notification.NotificationListenerService;
import android.service.notification.StatusBarNotification;
import android.util.Log;

public class NotificationListener extends NotificationListenerService {

    private String TAG = this.getClass().getSimpleName();

    @Override
    public void onNotificationPosted(StatusBarNotification sbn) {

        Log.i(TAG, "**********  onNotificationPosted");
        Log.i(TAG, "ID :" + sbn.getId() + "\t" + sbn.getNotification().tickerText + "\t" + sbn.getPackageName());

        Intent i = new Intent("com.dev.name.test");
        i.putExtra("notification_event", sbn.getPackageName() + " posted");

        sendBroadcast(i);
    }

    @Override
    public void onNotificationRemoved(StatusBarNotification sbn) {

        Log.i(TAG, "**********  onNotificationPosted");
        Log.i(TAG, "ID :" + sbn.getId() + "\t" + sbn.getNotification().tickerText + "\t" + sbn.getPackageName());

        Intent i = new Intent("com.dev.name.test");
        i.putExtra("notification_event", sbn.getPackageName() + " removed");

        sendBroadcast(i);
    }

    @Override
    public void onDestroy() {

        super.onDestroy();
    }
}
</code></pre>

<p>as you can see the text add every notification <strong>posted</strong> or <strong>removed</strong> that happens. Now that the service is working properly we can make what we want.</p>

<p><a href="http://i.stack.imgur.com/xwBws.png" rel="nofollow"><img src="http://i.stack.imgur.com/xwBws.png" alt=""></a></p>

<p>Try and tell if it works.</p>
