<p>I think I might have solved this one-- take a look at the source (version 2.3.4_r1, last time Bitmap was updated on Grepcode prior to 4.4) for <a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/2.3.4_r1/android/graphics/Bitmap.java#Bitmap.copyPixelsFromBuffer%28java.nio.Buffer%29" rel="nofollow">Bitmap::copyPixelsFromBuffer()</a></p>

<pre><code>public void copyPixelsFromBuffer(Buffer src) {

     checkRecycled("copyPixelsFromBuffer called on recycled bitmap");

     int elements = src.remaining();
     int shift;
     if (src instanceof ByteBuffer) {

         shift = 0;

     } else if (src instanceof ShortBuffer) {
         shift = 1;

     } else if (src instanceof IntBuffer) {
         shift = 2;

     } else {

         throw new RuntimeException("unsupported Buffer subclass");

     }

     long bufferBytes = (long)elements &lt;&lt; shift;
     long bitmapBytes = (long)getRowBytes() * getHeight();

     if (bufferBytes &lt; bitmapBytes) {

         throw new RuntimeException("Buffer not large enough for pixels");

     }

     nativeCopyPixelsFromBuffer(mNativeBitmap, src);

 }
</code></pre>

<p>The wording of the error is a bit unclear, but the code clarifies-- it means that your buffer is calculated as not having enough data to fill the pixels of your bitmap.
This is because they use the buffer's remaining() method to figure the capacity of the buffer, which takes into account the current value of its position attribute.  If you call rewind() on your buffer before you invoke copyPixelsFromBuffer(), you should see the runtime exception disappear.</p>
