<p>After some tests, it refresh the pages with a POST request</p>

<pre><code>fac_id:1012 --
cds_id:197  -- 
ad_id: -- Attività didattica
docente_id:  -- Id of the docent selected
data:06/03/2014 -- Date
</code></pre>

<p>Anyway you missed the value of <code>Attività ditattica</code>, <code>Docente</code> and <code>Data esame</code></p>

<p>Just run a HTTP request using <a href="http://docs.oracle.com/javase/7/docs/api/java/net/HttpURLConnection.html" rel="nofollow"><code>HttpURLConnection</code></a> (?) with this POST args, and with a XML parser read the output of tplmessage table.</p>

<p>Try this tutorial for HTTP request: <a href="http://www.xyzws.com/Javafaq/how-to-use-httpurlconnection-post-data-to-web-server/139" rel="nofollow">click</a>.</p>

<p>Try to read this to understand how to parse response: <a href="http://theoryapp.com/parse-xml-using-dom-in-java/" rel="nofollow">click</a></p>

<hr>

<p>An example using the code of the tutorial:</p>

<pre><code>HttpURLConnection connection = null;
try
{
    URL url = new URL("http://www.studenti.ict.uniba.it/esse3/ListaAppelliOfferta.do");
    connection = (HttpURLConnection) url.openConnection(); // open the connection with the url

    String params =
            "fac_id=1012&amp;cds_id=197"; // You need to add ad_id, docente_id and data

    connection.setRequestMethod("POST"); // i need to use POST request method
    connection.setRequestProperty("Content-Length", "" + Integer.toString(params.getBytes().length)); // It will add the length of params

    connection.setRequestProperty("Content-Language", "it-IT"); // language italian

    connection.setUseCaches (false);
    connection.setDoInput   (true);
    connection.setDoOutput  (true);

    DataOutputStream wr = new DataOutputStream(
            connection.getOutputStream ());
    wr.writeBytes (params); // pass params
    wr.flush (); // send request
    wr.close ();

    //Get Response
    InputStream is = connection.getInputStream();
    BufferedReader rd = new BufferedReader(new InputStreamReader(is));
    String line;
    StringBuilder response = new StringBuilder();
    while((line = rd.readLine()) != null) {
        response.append(line);
        response.append('\r');
    }
    rd.close();
}
catch (MalformedURLException e)
{
    e.printStackTrace();
} catch (IOException e)
{
    e.printStackTrace();
}
finally
{
    // close connection if created
    if (connection != null)
        connection.disconnect();
}
</code></pre>

<p>In <code>response</code> you will have the DOM of the page.</p>

<hr>

<p>Anyway, use Chrome developers tool to get request args:</p>

<p><img src="http://i.stack.imgur.com/82kOp.png" alt="aw"></p>
