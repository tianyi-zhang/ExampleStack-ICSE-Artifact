<p>Use ExifInterface to check the orientation of the image as stored in the device.</p>

<pre><code>int rotate = 0;
try {
    File imageFile = new File(uploadFile.getPath());
    ExifInterface exif = new ExifInterface(
            imageFile.getAbsolutePath());
    int orientation = exif.getAttributeInt(
            ExifInterface.TAG_ORIENTATION,
            ExifInterface.ORIENTATION_NORMAL);

    switch (orientation) {
        case ExifInterface.ORIENTATION_ROTATE_270:
            rotate = 270;
            break;
        case ExifInterface.ORIENTATION_ROTATE_180:
            rotate = 180;
            break;
        case ExifInterface.ORIENTATION_ROTATE_90:
            rotate = 90;
            break;
    }
} catch (IOException e) {
    e.printStackTrace();
}
</code></pre>

<p>Then using matrix rotate the bitmap to the actual portrait or landscape as stored in device.</p>

<pre><code>Matrix matrix = new Matrix();

matrix.postRotate(rotate);

BitmapFactory.Options options = new BitmapFactory.Options();
options.inJustDecodeBounds = false;
options.inPreferredConfig = Bitmap.Config.RGB_565;
options.inDither = true;

Bitmap bmp = BitmapFactory.decodeFile(uploadFile.getPath(), options);

Bitmap scaledBitmap = Bitmap.createScaledBitmap(bmp, bmp.getWidth(), bmp.getHeight(), true);

Bitmap rotatedBitmap = Bitmap.createBitmap(scaledBitmap, 0, 0, scaledBitmap.getWidth(), scaledBitmap.getHeight(), matrix, true);
</code></pre>

<p>rotatedBitmap is the bitmap with correct orientation.</p>

<p>Hope it helps.</p>
