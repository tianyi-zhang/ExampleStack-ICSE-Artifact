<p>Use a CustomAdapter.</p>

<p>You need to understand how listview works</p>

<p><a href="http://stackoverflow.com/questions/11945563/how-listviews-recycling-mechanism-works">How ListView&#39;s recycling mechanism works</a></p>

<p>Pass the activity context and the list NewItems to the constructor of the custom adapter.</p>

<pre><code>   @Override
   protected void onPostExecute(Void result) {
            super.onPostExecute(result);
            pDialog.dismiss();
            list=(ListView)findViewById(R.id.listupdate);
            CustomAdapter cus = new CustomAdapter(MainActivtiy.this,newItemlist); 
            list.setAdapter(cus);              

    }
</code></pre>

<p>Use a Custom Layout with textviews and buttons. Name it <code>list_item.xml</code></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_marginLeft="33dp"
        android:layout_marginTop="40dp"
        android:text="TextView" /&gt;

    &lt;TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignBottom="@+id/textView1"
        android:layout_centerHorizontal="true"
        android:text="TextView" /&gt;

    &lt;TextView
        android:id="@+id/textView3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignBottom="@+id/textView2"
        android:layout_marginLeft="34dp"
        android:layout_toRightOf="@+id/textView2"
        android:text="TextView" /&gt;

    &lt;Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentRight="true"
        android:layout_below="@+id/textView3"
        android:layout_marginTop="20dp"
        android:text="Button" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>Inflate the layout, initialize and update the views. Set Listener on the button do what is required.</p>

<pre><code>  public class CustomAdapter extends BaseAdapter
    {
        LayoutInflater mInlfater;
        ArrayList&lt;HashMap&lt;String,String&gt;&gt; list;
        public CustomAdapter(Context context,ArrayList&lt;HashMap&lt;String,String&gt;&gt; list) 
        {
             mInlfater = LayoutInflater.from(context);
             this.list =list;
        }
        @Override
        public int getCount() {
            // TODO Auto-generated method stub
            return list.size();
        }

        @Override
        public Object getItem(int position) {
            // TODO Auto-generated method stub
            return position;
        }

        @Override
        public long getItemId(int position) {
            // TODO Auto-generated method stub
            return position;
        }

        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            // TODO Auto-generated method stub
            ViewHolder holder;
            if(convertView ==null)
            {
                convertView = mInlfater.inflate(R.layout.list_item,false);
                holder = new ViewHolder();
                holder.b1 = (Button)convertView.findViewById(R.id.button1);
                holder.tv1 = (TextView)convertView.findViewById(R.id.textView1);
                holder.tv2 = (TextView)convertView.findViewById(R.id.textView2);
                holder.tv3 = (TextView)convertView.findViewById(R.id.textView3);
                convertView.setTag(holder);

            }
            else
            {
                holder =(ViewHolder) convertView.getTag();
            }
            HashMap&lt;String,String&gt; map = list.get(position);
            holder.tv1.setText(map.get("name"));
                holder.tv2.setText(map.get("description"));
                holder.tv3.setText(map.get("price"));
                holder.b1.setOnClickListener(new OnClickListener()
                {

                @Override
                public void onClick(View v) {
                // TODO Auto-generated method stub

                }


               });
            return convertView;
        }
        static class ViewHolder
        {
            Button b1;
            TextView tv1,tv2,tv3;
        }
    } 
</code></pre>
