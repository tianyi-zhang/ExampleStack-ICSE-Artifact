<p>Imitation is the sincerest form of flattery.  <a href="http://fisheye1.atlassian.com/browse/springframework/spring/src/org/springframework/core/NestedRuntimeException.java?r=MAIN" rel="nofollow">Based on a quick inspection of the source</a>, this is exactly what NestedRuntimeException does:</p>

<pre><code>/**
 * Check whether this exception contains an exception of the given type:
 * either it is of the given class itself or it contains a nested cause
 * of the given type.
 * @param exType the exception type to look for
 * @return whether there is a nested exception of the specified type
 */
public boolean contains(Class exType) {
    if (exType == null) {
        return false;
    }
    if (exType.isInstance(this)) {
        return true;
    }
    Throwable cause = getCause();
    if (cause == this) {
        return false;
    }
    if (cause instanceof NestedRuntimeException) {
        return ((NestedRuntimeException) cause).contains(exType);
    }
    else {
        while (cause != null) {
            if (exType.isInstance(cause)) {
                return true;
            }
            if (cause.getCause() == cause) {
                break;
            }
            cause = cause.getCause();
        }
        return false;
    }
}
</code></pre>

<p><strong>CAVEAT</strong>: The above is the code as of 4 March 2009 so, if you really want to know what Spring is doing right now, you should research the code as it exists today (whenever that is).</p>
