<p>These code i wrote in my graduation project so they're not optimized. </p>

<ol>
<li><p>MapService class: I parser data response from google map.</p>

<pre><code>public class MapService {
public static final String TAG = "[MapService]";
public static final String GET_DIRECTION_URL = "http://maps.google.com/maps/api/directions/json?" + "origin=%f,%f" + "&amp;destination=%f,%f" + "&amp;sensor=true&amp;language=en&amp;units=metric";

public static DirectionResult getDirectionResult(double latitude1, double longtitude1, double latitude2, double longtitude2) {
    String url = String.format(GET_DIRECTION_URL, latitude1, longtitude1, latitude2, longtitude2);
    Log.d("URL", url);
    // parse direction
    DirectionParser directionParser = new DirectionParser() {
        @Override
        public void onSuccess(JSONObject json) throws JSONException {
            // process response status
            String status = json.getString("status");
            if (!status.equals("OK")) {
                String error = null;

                if (status.equals("NOT_FOUND") || status.equals("ZERO_RESULTS")) {
                    error = Global.application.getString(R.string.errCantGetDirection);
                } else {
                    error = Global.application.getString(R.string.errGetDirection);
                }

                result.instructions = new String[] { error };
                result.hasError = true;
                return;
            }

            /*
             * routes[] legs[] steps[] html_instructions
             */
            JSONArray arrRoutes = json.getJSONArray("routes");

            // no routes found
            if (arrRoutes.length() == 0) {
                result.instructions = new String[] { Global.application.getString(R.string.errCantGetDirection) };
                result.hasError = true;
                return;
            }

            JSONArray arrLegs = arrRoutes.getJSONObject(0).getJSONArray("legs");
            JSONObject firstLeg = arrLegs.getJSONObject(0);
            JSONArray arrSteps = firstLeg.getJSONArray("steps");
            int len = arrSteps.length();
            result.instructions = new String[len];
            result.points = new LinkedList&lt;GeoPoint&gt;();
            JSONObject leg = null;

            // get instructions
            for (int i = 0; i &lt; len; ++i) {
                leg = arrSteps.getJSONObject(i);
                // location = leg.getJSONObject("start_location");
                String encoded = leg.getJSONObject("polyline").getString("points");
                result.points.addAll(decodePoly(encoded));

                result.instructions[i] = Html.fromHtml(leg.getString("html_instructions")).toString();
                Log.d("html_instructions", "" + Html.fromHtml(leg.getString("html_instructions")));
                // result.points[i] = new GeoPoint(
                // (int) (location.getDouble("lat") * 1E6),
                // (int) (location.getDouble("lng") * 1E6));
            }

            // location = leg.getJSONObject("end_location");
            // result.points[len] = new GeoPoint(
            // (int) (location.getDouble("lat") * 1E6),
            // (int) (location.getDouble("lng") * 1E6));

            // distance and duration info
            JSONObject distance = firstLeg.getJSONObject("distance");
            if (distance != null) {
                result.distance = distance.getString("text");
            }
            JSONObject duration = firstLeg.getJSONObject("duration");
            if (duration != null) {
                result.duration = duration.getString("text");
            }
        }

        @Override
        public void onFailure(String message) {
            String error = "Error";

            result.instructions = new String[] { error };
            result.hasError = true;
        }
    };

    // return direction result
    RestClient.getData(url, directionParser);
    return directionParser.result;
}

private static List&lt;GeoPoint&gt; decodePoly(String encoded) {
    List&lt;GeoPoint&gt; poly = new ArrayList&lt;GeoPoint&gt;();
    int index = 0, len = encoded.length();
    int lat = 0, lng = 0;

    while (index &lt; len) {
        int b, shift = 0, result = 0;
        do {
            b = encoded.charAt(index++) - 63;
            result |= (b &amp; 0x1f) &lt;&lt; shift;
            shift += 5;
        } while (b &gt;= 0x20);
        int dlat = ((result &amp; 1) != 0 ? ~(result &gt;&gt; 1) : (result &gt;&gt; 1));
        lat += dlat;

        shift = 0;
        result = 0;
        do {
            b = encoded.charAt(index++) - 63;
            result |= (b &amp; 0x1f) &lt;&lt; shift;
            shift += 5;
        } while (b &gt;= 0x20);
        int dlng = ((result &amp; 1) != 0 ? ~(result &gt;&gt; 1) : (result &gt;&gt; 1));
        lng += dlng;

        GeoPoint p = new GeoPoint((int) (((double) lat / 1E5) * 1E6), (int) (((double) lng / 1E5) * 1E6));
        poly.add(p);
    }

    return poly;
}

    }
</code></pre></li>
<li><p>Direction parser and direction result</p>

<pre><code>public class DirectionParser extends JSONParser {
public DirectionResult result = new DirectionResult();

protected int jsonType = JSONParser.GOOGLE_DIRECTION_JSON;

public DirectionParser() {
    jsonType = JSONParser.GOOGLE_DIRECTION_JSON;
}

@Override
public void onFailure(String message) {
}

@Override
public void onSuccess(JSONObject json) throws JSONException {
}
}

public class DirectionResult {
 public String[] instructions;
 public List&lt;GeoPoint&gt; points;
 public String duration;
 public String distance;
 public boolean hasError = false;
}
</code></pre></li>
<li><p>What you want is the instruction of DirectionResult. You can simple create an array adapter with string array</p>

<pre><code> instructions = directionResult.instructions;// DirectionResult you got from MapService.
    ArrayAdapter&lt;String&gt; adapter1 = new ArrayAdapter&lt;String&gt;(DirectionListActivity.this, android.R.layout.simple_list_item_1, instructions);
                 listDirection.setAdapter(adapter1);
</code></pre></li>
</ol>

<p>Update: Another parser i found <a href="https://github.com/iamamused/Google-Maps-Directions-API-Java-Parser" rel="nofollow">Google-Maps-Directions-API-Java-Parser</a></p>
