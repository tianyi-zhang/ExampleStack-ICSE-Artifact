<p>These are the possible way to doing it.</p>

<ul>
<li>If you want to take screenshot of emulator or connected device in eclipse, then </li>
</ul>

<blockquote>
  <p>Open the Android view "devices" (under Window --> Show View --> Other... --> Android --> Devices). Click on the device or emulator that you want to take a screen shot of, then click the "Screen Capture" button and save it wherever you want.</p>
</blockquote>

<ul>
<li><p>If you want to screenshot of your app programmatically then follow the answers here : <a href="http://stackoverflow.com/questions/2661536/how-to-programatically-take-a-screenshot-on-android">How to programatically take a screenshot on Android?</a>
Here some tricks that use shell commands needs your phone to be rooted.</p>

<p>Here is the sample code from above link.</p>

<pre><code>// image naming and path  to include sd card  appending name you choose for file
String mPath = Environment.getExternalStorageDirectory().toString() + "/" + "img_name.jpg";   

// create bitmap screen capture
Bitmap bitmap;
View v1 = getWindow().getDecorView().findViewById(android.R.id.content);
v1.setDrawingCacheEnabled(true);
bitmap = Bitmap.createBitmap(v1.getDrawingCache());
v1.setDrawingCacheEnabled(false);

OutputStream fout = null;
Uri uri = Uri.fromFile(new File(mPath)); //can used as uri

try {
    fout = new FileOutputStream(imageFile);
    bitmap.compress(Bitmap.CompressFormat.JPEG, 90, fout);
    fout.flush();
    fout.close();    
} catch (FileNotFoundException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (IOException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
</code></pre></li>
<li><p>And as @Shobhit says you can take screenshot by manufacturer shortcuts if available. here is the some reference if you need: <a href="http://www.makeuseof.com/tag/6-ways-to-take-screenshots-on-android/" rel="nofollow">http://www.makeuseof.com/tag/6-ways-to-take-screenshots-on-android/</a></p></li>
</ul>
