<p>In your one query you have written wrong spelling of <code>increment</code> check out</p>

<p>Instead of this:</p>

<pre><code>  String CREAR_EMPRESAS = "create table empresas ("+nFILA_ID+" integer "
                    +" primary key autoincrment, "
                    +nEMPRESA+" integer not null, "+cEMPRESA+" text not null, "
                    +nTIPOEMP+" integer not null);";
</code></pre>

<p>Do this :</p>

<pre><code>  String CREAR_EMPRESAS = "create table empresas ("+nFILA_ID+" integer "
                    +" primary key autoincrement, " //Correct spelling
                    +nEMPRESA+" integer not null, "+cEMPRESA+" text not null, "
                    +nTIPOEMP+" integer not null);";
</code></pre>

<p>Also in your query you have not properly written <code>create</code> :</p>

<pre><code> String CREAR_ARTICULOS = "crea table articulos ("+nFILA_ID+" integer " 
                    +"primary key autoincrement "
                    +cCLIENTE+" text not null, "+nFACTURA+" integer not null, "
                    +cARTICULO+" text not null, "+nCANTIDAD+" integer not null);";
</code></pre>

<p>Write as below:</p>

<pre><code> String CREAR_ARTICULOS = "create table articulos ("+nFILA_ID+" integer " 
                    +"primary key autoincrement "
                    +cCLIENTE+" text not null, "+nFACTURA+" integer not null, "
                    +cARTICULO+" text not null, "+nCANTIDAD+" integer not null);";
</code></pre>

<p>There are so many mistakes in your queries. I have changed relevant code in your class so try out with below code:</p>

<pre><code>import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteOpenHelper;

public class AdaptadorDB {
    // BASE DE DATOS Y TABLAS
    public static final String NOMBRE_BD = "muebleria.db";
    public static final String TABLA_DATOS = "datos";
    public static final String TABLA_EMPRESAS = "empresas";
    public static final String TABLA_COBRADORES = "cobradores";
    public static final String TABLA_PAGOS = "pagos";
    public static final String TABLA_ARTICULOS = "articulos";

    // CAMPOS DE TABLAS
    public static final String nFILA_ID = "_id";
    public static final String cCLIENTE = "cliente";
    public static final String cNOMBRE = "nombre";
    public static final String cDIRECCION = "direccion";
    public static final String cCOLONIA = "colonia";
    public static final String nFACTURA = "factura";
    public static final String nEMPRESA = "empresa";
    public static final String nTOTAL = "total";
    public static final String nSALDO = "saldo";
    public static final String nINTERESES = "intereses";
    public static final String nRUTA = "ruta";
    public static final String nCOBRADOR = "cobrador";
    public static final String cEMPRESA = "nomempresa";
    public static final String nTIPOEMP = "tipoempresa";
    public static final String cCOBRADOR = "nomcobrador";
    public static final String cFECHA = "fecha";
    public static final String nPAGO = "pago";
    public static final String cHORA = "hora";
    public static final String cARTICULO = "articulo";
    public static final String nCANTIDAD = "cantidad";
    public static final String nFACTURAS = "numfacturas";
    public static final String nABONO = "abono";

    // VERSION DE BASE DE DATOS
    public static final int VERSION_BD = 6;

    // MANEJADORES DE LA BASE DE DATOS Y CONTEXTO.
    private Context context;
    private DatabaseHelper DBHelper;
    private SQLiteDatabase db;

    private static final String CREAR_DATOS = "create table datos (" + nFILA_ID
            + " integer " + "primary key autoincrement, " + cCLIENTE
            + " text not null,  " + cNOMBRE + " text not null,  " + cDIRECCION
            + " text not null, " + cCOLONIA + " text not null, " + nFACTURA
            + " integer not null, " + nEMPRESA + " integer not null, " + nTOTAL
            + " real not null, " + nSALDO + " real not null, " + nINTERESES
            + " real not null, " + nRUTA + " integer not null, " + nCOBRADOR
            + " integer not null, " + nFACTURAS + " integer not null, "
            + nABONO + " real not null);";
    private static final String CREAR_INDICE_NOMBRE = "create index nombre on datos ("
            + cNOMBRE + " asc);";
    private static final String CREAR_INDICE_CLIENTE = "create index cliente on datos ("
            + cCLIENTE + " asc);";

    private static final String CREAR_EMPRESAS = "create table empresas ("
            + nFILA_ID + " integer " + " primary key autoincrement, "
            + nEMPRESA + " integer not null, " + cEMPRESA + " text not null, "
            + nTIPOEMP + " integer not null);";
    private static final String CREAR_INDICE_EMPRESA = "create index empresa on empresas ("
            + nEMPRESA + " asc);";

    private static final String CREAR_COBRADORES = "create table cobradores ("
            + nFILA_ID + " integer" + " primary key autoincrement, "
            + nCOBRADOR + " integer not null, " + cCOBRADOR
            + " text not null);";
    private static final String CREAR_INDICE_COBRADORES = "create index cobrador on cobradores ("
            + nCOBRADOR + " asc);";

    private static final String CREAR_PAGOS = "create table pagos (" + nFILA_ID
            + " integer " + "primary key autoincrement, " + cFECHA
            + " text not null, " + cCLIENTE + " text not null, " + nPAGO
            + " real not null, " + cHORA + " TEXT NOT NULL, " + nFACTURA
            + " integer not null);";
    private static final String CREAR_INDICE_FECHAPAGO = "create index fecha on pagos ("
            + cFECHA + " asc);";

    private static final String CREAR_ARTICULOS = "create table articulos ("
            + nFILA_ID + " integer " + "primary key autoincrement ," + cCLIENTE
            + " text not null, " + nFACTURA + " integer not null, " + cARTICULO
            + " text not null, " + nCANTIDAD + " integer not null);";
    private static final String CREAR_INDICE_ARTICULOS = "create index articulo on articulos ("
            + cARTICULO + ");";

    public AdaptadorDB(Context ctx) {
        this.context = ctx;

        if ((null == db) || (!db.isOpen())) {
            db = context.openOrCreateDatabase(NOMBRE_BD, 0, null);

            try {

                db.execSQL(CREAR_DATOS);
                db.execSQL(CREAR_INDICE_NOMBRE);
                db.execSQL(CREAR_INDICE_CLIENTE);

                db.execSQL(CREAR_EMPRESAS);
                db.execSQL(CREAR_INDICE_EMPRESA);

                db.execSQL(CREAR_COBRADORES);
                db.execSQL(CREAR_INDICE_COBRADORES);

                db.execSQL(CREAR_PAGOS);
                db.execSQL(CREAR_INDICE_FECHAPAGO);

                db.execSQL(CREAR_ARTICULOS);
                db.execSQL(CREAR_INDICE_ARTICULOS);

            } catch (SQLiteException e) {
                e.printStackTrace();
            }
        }
        DBHelper = new DatabaseHelper(context);
    }

    private static class DatabaseHelper extends SQLiteOpenHelper {

        DatabaseHelper(Context context) {
            super(context, NOMBRE_BD, null, VERSION_BD);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            // TODO Auto-generated method stub

            try {

                db.execSQL(CREAR_DATOS);
                db.execSQL(CREAR_INDICE_NOMBRE);
                db.execSQL(CREAR_INDICE_CLIENTE);

                db.execSQL(CREAR_EMPRESAS);
                db.execSQL(CREAR_INDICE_EMPRESA);

                db.execSQL(CREAR_COBRADORES);
                db.execSQL(CREAR_INDICE_COBRADORES);

                db.execSQL(CREAR_PAGOS);
                db.execSQL(CREAR_INDICE_FECHAPAGO);

                db.execSQL(CREAR_ARTICULOS);
                db.execSQL(CREAR_INDICE_ARTICULOS);

        } catch (SQLiteException e) {
            e.printStackTrace();
        }

    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // TODO Auto-generated method stub
        db.execSQL("DROP TABLE IF EXISTS datos");
        db.execSQL("DROP INDEX IF EXISTS nombre");
        db.execSQL("DROP INDEX IF EXISTS cliente");

        db.execSQL("DROP TABLE IF EXISTS empresas");
        db.execSQL("DROP INDEX IF EXISTS empresa");

        db.execSQL("DROP TABLE IF EXISTS cobradores");
        db.execSQL("DROP INDEX IF EXISTS cobrador");

        db.execSQL("DROP TABLE IF EXISTS pagos");
        db.execSQL("DROP INDEX IF EXISTS fecha");

        db.execSQL("DROP TABLE IF EXISTS articulos");
        db.execSQL("DROP INDEX IF EXISTS articulo");
        onCreate(db);

    }

}
}
</code></pre>
