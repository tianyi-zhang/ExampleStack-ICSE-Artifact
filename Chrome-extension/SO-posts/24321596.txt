<pre><code>Try this way,hope this will help you to solve your problem.

&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity" &gt;

    &lt;LinearLayout
        android:layout_width="0dp"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:gravity="center"
        android:orientation="vertical" &gt;

        &lt;!-- Capture picture button --&gt;
        &lt;Button
            android:id="@+id/btnCapturePicture"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Take a Picture"
            android:layout_marginBottom="10dp"/&gt;

        &lt;!-- Record video button --&gt;
        &lt;Button
            android:id="@+id/btnRecordVideo"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Record a Video"
            android:layout_marginBottom="10dp"/&gt;

        &lt;Button
            android:id="@+id/See"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="See Video" /&gt;

    &lt;/LinearLayout&gt;

    &lt;LinearLayout
        android:layout_width="0dp"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:orientation="vertical"
        android:padding="10dp"&gt;

        &lt;TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Preview"
            android:padding="10dp"
            android:textSize="15dp"/&gt;

        &lt;!-- To display picture taken --&gt;
        &lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="0dp"
            android:layout_weight="1"
            android:orientation="vertical"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="10dp"&gt;
            &lt;LinearLayout
                android:layout_width="match_parent"
                android:layout_height="0dp"
                android:layout_weight="1"
                android:layout_marginBottom="10dp"&gt;
                &lt;ImageView
                    android:id="@+id/imgPreview"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:adjustViewBounds="true"
                    android:visibility="gone" /&gt;
            &lt;/LinearLayout&gt;
            &lt;LinearLayout
                android:layout_width="match_parent"
                android:layout_height="0dp"
                android:layout_weight="1"&gt;
                &lt;ImageView
                    android:id="@+id/imgPreview2"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:adjustViewBounds="true"
                    android:visibility="gone"/&gt;
            &lt;/LinearLayout&gt;
        &lt;/LinearLayout&gt;
        &lt;!-- To preview video recorded --&gt;
        &lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="0dp"
            android:layout_weight="1"
            android:orientation="vertical"
            android:layout_marginTop="10dp"&gt;
            &lt;LinearLayout
                android:layout_width="match_parent"
                android:layout_height="0dp"
                android:layout_weight="1"
                android:layout_marginBottom="10dp"&gt;
                &lt;VideoView
                    android:id="@+id/videoPreview"
                    android:layout_width="wrap_content"
                    android:layout_height="match_parent"
                    android:visibility="gone"/&gt;
            &lt;/LinearLayout&gt;
            &lt;LinearLayout
                android:layout_width="match_parent"
                android:layout_height="0dp"
                android:layout_weight="1"&gt;
                &lt;VideoView
                    android:id="@+id/videoView2"
                    android:layout_width="wrap_content"
                    android:layout_height="match_parent"
                    android:visibility="gone"/&gt;
            &lt;/LinearLayout&gt;
        &lt;/LinearLayout&gt;
    &lt;/LinearLayout&gt;

&lt;/LinearLayout&gt;

public class MainActivity extends Activity {


    private static final int CAMERA_CAPTURE_VIDEO_REQUEST_CODE = 200;

    public static final int MEDIA_TYPE_VIDEO = 2;

    // directory name to store captured images and videos
    private static final String IMAGE_DIRECTORY_NAME = "Hello Camera";

    public static Uri fileUri=null;
    public static Uri fileUri1=null;// file url to store image/video

    private ImageView imgPreview,imgPreview2;
    private VideoView videoPreview,videoPreview2;
    private Button btnCapturePicture, btnRecordVideo,btnSee;
    private int countClick;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        imgPreview = (ImageView) findViewById(R.id.imgPreview);
        imgPreview2 = (ImageView) findViewById(R.id.imgPreview2);
        videoPreview = (VideoView) findViewById(R.id.videoPreview);
        videoPreview2 = (VideoView) findViewById(R.id.videoView2);

        btnRecordVideo = (Button) findViewById(R.id.btnRecordVideo);
        btnSee = (Button) findViewById(R.id.See);


        countClick=0;
        btnRecordVideo.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                // record video
                countClick++;
                recordVideo();
            }
        });
        btnSee.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                // capture picture

                Intent i= new Intent();

                //Uri uri = i.getParcelableExtra("fileUri");
                i.putExtra ("fileuri",fileUri);
                //i.putExtra ("fileuri1",fileUri1);
                i.setClass(getApplicationContext(), SecondActivity.class);
                startActivity(i);
            }
        });

        // Checking camera availability
        if (!isDeviceSupportCamera()) {
            Toast.makeText(getApplicationContext(),
                    "Sorry! Your device doesn't support camera",
                    Toast.LENGTH_LONG).show();
            // will close the app if the device does't have camera
            finish();
        }
    }

    /**
     * Checking device has camera hardware or not
     * */
    private boolean isDeviceSupportCamera() {
        if (getApplicationContext().getPackageManager().hasSystemFeature(
                PackageManager.FEATURE_CAMERA)) {
            // this device has a camera
            return true;
        } else {
            // no camera on this device
            return false;
        }
    }



    /*
     * Here we store the file url as it will be null after returning from camera
     * app
     */
    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);

        // save file url in bundle as it will be null on scren orientation
        // changes
        outState.putParcelable("file_uri", fileUri);
        //outState.putParcelable("file_uri", fileUri1);
    }

    @Override
    protected void onRestoreInstanceState(Bundle savedInstanceState) {
        super.onRestoreInstanceState(savedInstanceState);

        // get the file url
        fileUri = savedInstanceState.getParcelable("file_uri");
        //fileUri1 = savedInstanceState.getParcelable("file_uri1");
    }

    /*
     * Recording video
     */
    private void recordVideo() {
        Intent intent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);
        if(countClick%2==0){
            fileUri1 = getOutputMediaFileUri(MEDIA_TYPE_VIDEO);



            // set video quality
            intent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 1);

            intent.putExtra(MediaStore.EXTRA_OUTPUT, fileUri1); // set the image file
            // name
            intent.putExtra(MediaStore.EXTRA_DURATION_LIMIT, 20);
            // start the video capture Intent
            startActivityForResult(intent, CAMERA_CAPTURE_VIDEO_REQUEST_CODE);
        }else{
            fileUri = getOutputMediaFileUri(MEDIA_TYPE_VIDEO);

            // set video quality
            intent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 1);

            intent.putExtra(MediaStore.EXTRA_OUTPUT, fileUri); // set the image file
            // name
            intent.putExtra(MediaStore.EXTRA_DURATION_LIMIT, 20);
            // start the video capture Intent
            startActivityForResult(intent, CAMERA_CAPTURE_VIDEO_REQUEST_CODE);



        }

    }




    /**
     * Receiving activity result method will be called after closing the camera
     * */
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        // if the result is capturing Image
        if (requestCode == CAMERA_CAPTURE_VIDEO_REQUEST_CODE) {
            if (resultCode == RESULT_OK) {
                // video successfully recorded
                // preview the recorded video
                previewVideo();
            } else if (resultCode == RESULT_CANCELED) {
                // user cancelled recording
                Toast.makeText(getApplicationContext(),
                        "User cancelled video recording", Toast.LENGTH_SHORT)
                        .show();
            } else {
                // failed to record video
                Toast.makeText(getApplicationContext(),
                        "Sorry! Failed to record video", Toast.LENGTH_SHORT)
                        .show();
            }
        }
    }



    /*
     * Previewing recorded video
     */
    private void previewVideo() {
        try {
            // hide image preview
            //if(fileUri==null)
            //{
            /*imgPreview.setVisibility(View.GONE);

            videoPreview.setVisibility(View.VISIBLE);
            videoPreview.setVideoPath(fileUri.getPath());
            // start playing
            videoPreview.start();*/
            /*videoPreview.setVisibility(View.GONE);

            imgPreview.setVisibility(View.VISIBLE);
            Bitmap bmThumbnail;
            bmThumbnail = ThumbnailUtils.createVideoThumbnail(fileUri.getPath() , 
                       Thumbnails.MICRO_KIND);
            imgPreview.setImageBitmap(bmThumbnail);*/
            videoPreview.setVisibility(View.GONE);
            videoPreview2.setVisibility(View.GONE);  //both videoviews are made invisible and both imageviews are made visible

            if(countClick&gt;=2){
                imgPreview.setVisibility(View.VISIBLE);
                imgPreview2.setVisibility(View.VISIBLE);
                MediaMetadataRetriever retriever = new MediaMetadataRetriever();
                MediaMetadataRetriever retriever1 = new MediaMetadataRetriever();
                retriever.setDataSource(fileUri.getPath());
                retriever1.setDataSource(fileUri1.getPath());
                Bitmap myBitmap = retriever.getFrameAtTime(1000000);
                Bitmap myBitmap1 = retriever1.getFrameAtTime(1000000);
                imgPreview.setImageBitmap(myBitmap);
                imgPreview2.setImageBitmap(myBitmap1);
            }else{
                imgPreview.setVisibility(View.VISIBLE);
                MediaMetadataRetriever retriever = new MediaMetadataRetriever();
                retriever.setDataSource(fileUri.getPath());
                Bitmap myBitmap = retriever.getFrameAtTime(1000000);
                imgPreview.setImageBitmap(myBitmap);
            }



            imgPreview.setOnClickListener(new View.OnClickListener() { //clicking on first imageView

                @Override
                public void onClick(View v) {
                    imgPreview.setVisibility(View.GONE);
                    imgPreview2.setVisibility(View.GONE);
                    videoPreview.setVisibility(View.VISIBLE); //first videoview video starts playing
                    videoPreview2.setVisibility(View.GONE);

                    videoPreview.setVideoPath(fileUri.getPath());

                    videoPreview.start();

                }


            });
            imgPreview2.setOnClickListener(new View.OnClickListener() { //clicking on secong imageview

                @Override
                public void onClick(View v) {
                    imgPreview2.setVisibility(View.GONE);
                    imgPreview.setVisibility(View.GONE);
                    videoPreview2.setVisibility(View.VISIBLE); //second videoview video starts playing
                    videoPreview.setVisibility(View.GONE);
                    videoPreview2.setVideoPath(fileUri1.getPath());

                    videoPreview2.start();
                }


            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * ------------ Helper Methods ----------------------
     * */

    /*
     * Creating file uri to store image/video
     */
    public Uri getOutputMediaFileUri(int type) {
        return Uri.fromFile(getOutputMediaFile(type));
    }

    /*
     * returning image / video
     */
    private static File getOutputMediaFile(int type) {

        // External sdcard location
        File mediaStorageDir = new File(
                Environment
                        .getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES),
                IMAGE_DIRECTORY_NAME);

        // Create the storage directory if it does not exist
        if (!mediaStorageDir.exists()) {
            if (!mediaStorageDir.mkdirs()) {
                Log.d(IMAGE_DIRECTORY_NAME, "Oops! Failed create "
                        + IMAGE_DIRECTORY_NAME + " directory");
                return null;
            }
        }

        // Create a media file name
        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss",
                Locale.getDefault()).format(new Date());
        File mediaFile;
        /*if (type == MEDIA_TYPE_IMAGE) {
            mediaFile = new File(mediaStorageDir.getPath() + File.separator
                    + "IMG_" + timeStamp + ".jpg");
        } else*/ if (type == MEDIA_TYPE_VIDEO) {
            mediaFile = new File(mediaStorageDir.getPath() + File.separator
                    + "VID_" + timeStamp + ".mp4");
        } else {
            return null;
        }

        return mediaFile;
    }
}
</code></pre>
