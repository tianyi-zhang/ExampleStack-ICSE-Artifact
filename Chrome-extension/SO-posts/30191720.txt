<p>I have written a very simple solution. All we have to do is divide and find how many times a particular letter(or letter combination occurs) and append that to the StringBuilder object <code>sb</code>. We also should keep track of the remaining number (<code>num</code>).</p>

<pre><code>public static String intToRoman(int num) {
    StringBuilder sb = new StringBuilder();
    int times = 0;
    String[] romans = new String[] { "I", "IV", "V", "IX", "X", "XL", "L",
            "XC", "C", "CD", "D", "CM", "M" };
    int[] ints = new int[] { 1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500,
            900, 1000 };
    for (int i = ints.length - 1; i &gt;= 0; i--) {
        times = num / ints[i];
        num %= ints[i];
        while (times &gt; 0) {
            sb.append(romans[i]);
            times--;
        }
    }
    return sb.toString();
} 
</code></pre>
