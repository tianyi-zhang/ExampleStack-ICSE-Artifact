<p>Hope I understand correctly what you want. You can look at <a href="https://github.com/geometer/FBReaderJ" rel="nofollow">FBReaderJ</a> 's source code, it is an real world example to deal with your problem. They can do it very well: whenever app has error, they will show the error report dialog to user and they can filter the error by reading <code>Throwable</code> information. <br>
For example, take a look at <a href="https://github.com/geometer/FBReaderJ/blob/master/src/org/geometerplus/android/fbreader/library/BookInfoActivity.java" rel="nofollow">BookInfoActivity</a>, they registered the Exception Handler like this:</p>

<pre><code>Thread.setDefaultUncaughtExceptionHandler(
        new org.geometerplus.zlibrary.ui.android.library.UncaughtExceptionHandler(this)
    );
</code></pre>

<p>then the <a href="https://github.com/geometer/FBReaderJ/blob/master/src/org/geometerplus/zlibrary/ui/android/library/UncaughtExceptionHandler.java" rel="nofollow">UncaughtExceptionHandler</a> class will handle errors:</p>

<pre><code>  @Override
public void uncaughtException(Thread thread, Throwable exception) {
    final StringWriter stackTrace = new StringWriter();
    exception.printStackTrace(new PrintWriter(stackTrace));
    System.err.println(stackTrace);

    if(myContext != null &amp;&amp; myContext instanceof Activity){
        ((Activity)myContext).finish();
        return;
    }


    // filter the error by get throwable class name and put them into 
    // intent action which registered in manifest with particular handle activity.
    Intent intent = new Intent(
        "android.fbreader.action.CRASH",
        new Uri.Builder().scheme(exception.getClass().getSimpleName()).build()
    );
    try {
        myContext.startActivity(intent);
    } catch (ActivityNotFoundException e) {
    // or just go to the handle bug activity
        intent = new Intent(myContext, BugReportActivity.class);
        intent.putExtra(BugReportActivity.STACKTRACE, stackTrace.toString());
        myContext.startActivity(intent);
    }

    if (myContext instanceof Activity) {
        ((Activity)myContext).finish();
    }

        // kill the error thread
        Process.killProcess(Process.myPid());
    System.exit(10);
}
</code></pre>

<p>Hope this can help.</p>
