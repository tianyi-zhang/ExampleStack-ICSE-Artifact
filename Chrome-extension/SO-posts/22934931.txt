<p>This works for me....   </p>

<pre><code>static final int REQUEST_IMAGE_CAPTURE = 1;
String mCurrentPhotoPath;
Button captureImageButton;
static ImageView imageCapturedView;

@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_take_image);
captureImageButton = (Button) findViewById(R.id.button);

OnClickListener captureImageListener = new OnClickListener() {

    @Override
    public void onClick(View v) {
        // TODO Auto-generated method stub
        Intent captureImageIntent= new Intent(MediaStore.ACTION_IMAGE_CAPTURE);

        if(captureImageIntent.resolveActivity(getPackageManager())!=null)
        {
            File photoFile=null;

            try{
                photoFile = createImageFile();

            }catch(IOException e){};

            if(photoFile != null)
            {

                captureImageIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(photoFile));
                startActivityForResult(captureImageIntent, REQUEST_IMAGE_CAPTURE);
            }

        }

    }
};

captureImageButton.setOnClickListener(captureImageListener);

}

@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
// TODO Auto-generated method stub
super.onActivityResult(requestCode, resultCode, data);
imageCapturedView = (ImageView)findViewById(R.id.ImageView);

if(requestCode==REQUEST_IMAGE_CAPTURE &amp;&amp; resultCode==RESULT_OK)
{
    Bundle extras = data.getExtras();
    Bitmap imageBitmap= (Bitmap) extras.get("data");

    imageCapturedView.setImageBitmap(imageBitmap);
    galleryAddPic();
    setPic();
}
}

private File createImageFile() throws IOException
{

String TimeStamp = new SimpleDateFormat("yyyyMMDdd_HHmmss").format(new Date());
String ImageFile = "JPEG_" + TimeStamp + "_";
File StorageDir =   Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);

File image = File.createTempFile(ImageFile, ".jpg", StorageDir); 

mCurrentPhotoPath = image.getAbsolutePath();

return image;

}

private void galleryAddPic()
{
Intent mediaScan = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
File f= new File(mCurrentPhotoPath);
Uri contentUri = Uri.fromFile(f);
mediaScan.setData(contentUri);
this.sendBroadcast(mediaScan);

}


private void setPic() throws ArithmeticException{


int scaleFactor;
Bitmap bitmap;
// Get the dimensions of the View
int targetW = imageCapturedView.getWidth();
int targetH = imageCapturedView.getHeight();


// Get the dimensions of the bitmap
BitmapFactory.Options bmOptions = new BitmapFactory.Options();
bmOptions.inJustDecodeBounds = true;
//bmOptions.inSampleSize = 4;
BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);
int photoW = bmOptions.outWidth;
int photoH = bmOptions.outHeight;

// Determine how much to scale down the image
    scaleFactor= Math.min(photoW/targetW, photoH/targetH);

// Decode the image file into a Bitmap sized to fill the View
bmOptions.inJustDecodeBounds = false;
bmOptions.inSampleSize = scaleFactor;
bmOptions.inPurgeable = true;



bitmap = BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);

Toast.makeText(getApplicationContext(), mCurrentPhotoPath, Toast.LENGTH_LONG).show();
imageCapturedView.setImageBitmap(bitmap);
}

@Override
public boolean onCreateOptionsMenu(Menu menu) {
// Inflate the menu; this adds items to the action bar if it is present.
getMenuInflater().inflate(R.menu.take_image, menu);
return true;
}
</code></pre>
