<p>You should build your path, not define it as default, cause not in all devices the sdcard is called "sdcard", for example, i have a chinnese tablet, and this has 2 sdcard slots, so i have to use the path "sdcard2" you can do it:</p>

<pre><code>File sdcard = Environment.getExternalStorageDirectory();
String path = "file://"+sdcard.getAbsolutePath();
</code></pre>

<p>Then you can use the variable        </p>

<pre><code>window.resolveLocalFileSystemURI(path, step2,fail); //resolve destinaio
</code></pre>

<p>Or, you can use this method to copy a file:</p>

<pre><code>public void copy(File src, File dst) throws IOException {
    try {
        InputStream in = new FileInputStream(src);
        OutputStream out = new FileOutputStream(dst);

        // Transfer bytes from in to out
        byte[] buf = new byte[1024];
        int len;
        while ((len = in.read(buf)) &gt; 0) {
            out.write(buf, 0, len);
        }
        in.close();
        out.close();
    } catch (IOException io) {
        Toast.makeText(this, "Error: " + io, Toast.LENGTH_LONG).show();
    }
}
</code></pre>

<p>You can copy the file, next delete it, as a fast move.</p>

<p>Or as other alternative, you can use the property renameTo() of the file, 
For example:</p>

<pre><code>File sdcard = Environment.getExternalStorageDirectory();
File example= new File(sdcard.getAbsolutePath()+"/example.txt");
File newpath= new File(sdcard.getAbsolutePath()+"/examplefolder/example.txt");
example.renameTo(newpath);//this will move the file to the new path
</code></pre>
