<pre><code>public static Bitmap decodeBitmapFromInputStream(InputStream inputStream,
                                                 int reqWidth, int reqHeight) {
    Bitmap b = null;
       byte[] byteArr = new byte[0];
       byte[] buffer = new byte[1024];
       int len;
       int count = 0;

       try {
           while ((len = inputStream.read(buffer)) &gt; -1) {
               if (len != 0) {
                   if (count + len &gt; byteArr.length) {
                       byte[] newbuf = new byte[(count + len) * 2];
                       System.arraycopy(byteArr, 0, newbuf, 0, count);
                       byteArr = newbuf;
                   }

                   System.arraycopy(buffer, 0, byteArr, count, len);
                   count += len;
               }
           }

           final BitmapFactory.Options options = new BitmapFactory.Options();
           options.inJustDecodeBounds = true;
           BitmapFactory.decodeByteArray(byteArr, 0, count, options);

           options.inSampleSize = calculateInSampleSize(options, reqWidth,
                   reqHeight);
           options.inPurgeable = true;
           options.inInputShareable = true;
           options.inJustDecodeBounds = false;
           options.inPreferredConfig = Bitmap.Config.ARGB_8888;

           //int[] pids = { android.os.Process.myPid() };
           //ActivityManager.MemoryInfo myMemInfo = mAM.getProcessMemoryInfo(pids)[0];

           return BitmapFactory.decodeByteArray(byteArr, 0, count, options);

       } catch (Exception e) {
           e.printStackTrace();

           return null;
       }
    return b;
}
</code></pre>
