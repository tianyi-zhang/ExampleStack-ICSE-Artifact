<p>You have to use <code>getViewType()</code>. Try this code (I modified your code for you):</p>

<pre><code>@Override
public int getItemViewType(int position) {
    return (objects.get(position).getprop1().equalsIgnoreCase("Shift -3")) ? 1 : 0;
}

@Override
public int getViewTypeCount() {
    return 2;
}        

public View getView(int position, View convertView, ViewGroup parent) {

    ViewHolder holder = null;
    int type = getItemViewType(position);
    if(convertView == null) {
        holder = new ViewHolder();
        convertView = inflater.inflate(R.layout.simplerow, null);
        holder.textView1 = (TextView) convertView.findViewById(R.id.rowTextView1);
        holder.textView2 = (TextView) convertView.findViewById(R.id.rowTextView2);
        convertView.setTag(holder);
    } else {
        holder = (ViewHolder) convertView.getTag();
    }

    if(type == 0) {

            //Set here your regular color
    }else {
        ((RelativeLayout)convertView.findViewById(R.id.RelativeLayoutSingleRow)).setBackgroundResource(R.drawable.red_bg);
    }

    holder.textView1.setText(objects.get(position).getprop1());
    holder.textView2.setText(objects.get(position).getprop2());
    return convertView;
}
</code></pre>

<p>EDIT: I have to explain. If you don't use <code>getViewType()</code> method and just if statement like other answers here, then if you have many items in your list (enough for scrolling), your items will change the color dynamically while scrolling.</p>
