<p>I was curious too for the nio classes and it IS synchronized(for nio only).  Just look at the write method here in the sun JVM code</p>

<p><a href="http://www.docjar.com/html/api/sun/nio/ch/SocketChannelImpl.java.html" rel="nofollow">http://www.docjar.com/html/api/sun/nio/ch/SocketChannelImpl.java.html</a></p>

<p>Checking the old i/o socket code however shows no synchronization though there is an acquireFD and releaseFD...but no sycnhronization there...that appears to prevent a close until all writes on all threads are done(it is like they assume writes from multiple threads are okay in every OS...but I don't know if that is true OR they synchronize in the JVM native code so the developer knows they can do that)....we would need a JVM developer to tell us if there is a synch block in the windows JVM, linux JVM and mac JVM, etc. etc....</p>

<pre><code>private void socketWrite(byte b[], int off, int len) throws IOException {

    if (len &lt;= 0 || off &lt; 0 || off + len &gt; b.length) {
        if (len == 0) {
            return;
        }
        throw new ArrayIndexOutOfBoundsException();
    }

    FileDescriptor fd = impl.acquireFD();
    try {
        socketWrite0(fd, b, off, len);
    } catch (SocketException se) {
        if (se instanceof sun.net.ConnectionResetException) {
            impl.setConnectionResetPending();
            se = new SocketException("Connection reset");
        }
        if (impl.isClosedOrPending()) {
            throw new SocketException("Socket closed");
        } else {
            throw se;
        }
    } finally {
        impl.releaseFD();
    }
} 
</code></pre>
