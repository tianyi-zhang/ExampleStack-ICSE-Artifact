<p>First I created parser class JSONParser.java</p>

<pre><code>package com.example.myparse;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import android.util.Log;

public class JSONParser {

static InputStream is = null;
static JSONArray jarray = null;
static String json = "";

// constructor
public JSONParser() {

}

public JSONArray getJSONFromUrl(String url) {

       StringBuilder builder = new StringBuilder();
        HttpClient client = new DefaultHttpClient();
        HttpGet httpGet = new HttpGet(url);
        try {
          HttpResponse response = client.execute(httpGet);
          StatusLine statusLine = response.getStatusLine();
          int statusCode = statusLine.getStatusCode();
          if (statusCode == 200) {
            HttpEntity entity = response.getEntity();
            InputStream content = entity.getContent();
            BufferedReader reader = new BufferedReader(new InputStreamReader(content));
            String line;
            while ((line = reader.readLine()) != null) {
              builder.append(line);
            }
          } else {
            Log.e("==&gt;", "Failed to download file");
          }
        } catch (ClientProtocolException e) {
          e.printStackTrace();
        } catch (IOException e) {
          e.printStackTrace();
        }

    // try parse the string to a JSON object
    try {
        jarray = new JSONArray( builder.toString());
        //System.out.println(""+jarray);
    } catch (JSONException e) {
        Log.e("JSON Parser", "Error parsing data " + e.toString());
    }

    // return JSON String
    return jarray;

}
 }
</code></pre>

<p>Then create an object in main class like this....</p>

<pre><code> ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;(); // used to display in list view

 JSONParser jParser = new JSONParser();
 JSONArray json = jParser.getJSONFromUrl(url); // pass your ulr here

 for(int i = 0; i &lt;= json.length(); i++)  // using for loop for parsing
 {
   try 
    {
     JSONObject c = json.getJSONObject(i);
     String name =  c.getString(TAG_NAME);
     String imagename =  c.getString(TAG_IMAGENAME);
     String active =  c.getString(TAG_ACTIVE);
     String createdon = c.getString(TAG_CREATEDON);
     String lastmodifiedon =  c.getString(TAG_LASTMODIFIEDON);
     String description =  c.getString(TAG_DESCRIPTION);
     String id =  c.getString(TAG_ID);

          // If you want to show your parsed value in list view add the values into the array list              

    // creating new HashMap
    HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();

          // adding each child node to HashMap key =&gt; value 
          map.put(TAG_NAME, name);
          map.put(TAG_IMAGENAME, imagename);
    map.put(TAG_ACTIVE, active);
    map.put(TAG_CREATEDON, createdon);
    map.put(TAG_LASTMODIFIEDON, lastmodifiedon);
    map.put(TAG_DESCRIPTION, description);
    map.put(TAG_ID, id);
         // adding HashList to ArrayList
   contactList.add(map);
 System.out.println("contactlist----&gt;"+contactList);
}

 catch (JSONException e) 
       {
    e.printStackTrace();
 }
  }
</code></pre>

<p>I did by this way. I got the proper output. All the best.</p>
