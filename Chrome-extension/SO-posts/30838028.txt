<p>In binary search , when you find the element then you can keep doing binary search  to its left in order to find first occurrence and to right in order to find last element.
The idea should be clear with the code: </p>

<pre><code>/*
B: element to find first or last occurrence of
searchFirst: true to find first occurrence, false  to find last
 */
Integer bound(final List&lt;Integer&gt; A,int B,boolean searchFirst){
    int n = A.size();
    int low = 0;
    int high = n-1;
    int res = -1;   //if element not found
    int mid ;
    while(low&lt;=high){
        mid = low+(high-low)/2;
        if(A.get(mid)==B){
            res=mid;
            if(searchFirst){high=mid-1;}    //to find first , go left
            else{low=mid+1;}                // to find last, go right
        }
        else if(B&gt;A.get(mid)){low=mid+1;}
        else{high=mid-1;}
    }
    return res;
}
</code></pre>
