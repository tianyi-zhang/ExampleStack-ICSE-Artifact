<p>You can create your own identifier generator. Have a look at this <a href="http://blog.anorakgirl.co.uk/?p=43" rel="nofollow">blog post</a> which is basically showing how to do something similar to what you're looking for (unless I misundertsood the question):</p>

<blockquote>
  <h3>Custom Hibernate Sequence Generator for Id field</h3>
  
  <p>I have a table with a primary key in
  the format M001, M002 etc (lets not
  think about what happens after M999
  for now). Iâ€™m using Hibernate
  Annotations, and I found a great way
  of generating the Primary Key value
  for new Records:</p>
  
  <p>First I created a database sequence to
  use. Then I implemented
  <code>org.hibernate.id.IdentifierGenerator</code>;</p>

<pre><code>public class StockCodeGenerator implements IdentifierGenerator {

    private static Logger log = Logger.getLogger(StockCodeGenerator.class);

    public Serializable generate(SessionImplementor session, Object object)
            throws HibernateException {

        String prefix = "M";
        Connection connection = session.connection();
        try {

            PreparedStatement ps = connection
                    .prepareStatement("SELECT nextval ('seq_stock_code') as nextval");

            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                int id = rs.getInt("nextval");
                String code = prefix + StringUtils.leftPad("" + id,3, '0');
                log.debug("Generated Stock Code: " + code);
                return code;
            }

        } catch (SQLException e) {
            log.error(e);
            throw new HibernateException(
                    "Unable to generate Stock Code Sequence");
        }
        return null;
    }
}
</code></pre>
  
  <p>Then, in my entity class, I simply
  annotate the id field like this:</p>

<pre><code>@Id
@GenericGenerator(name="seq_id", strategy="my.package.StockCodeGenerator")
@GeneratedValue(generator="seq_id")
@Column(name = "stock_code", unique = true, nullable = false, length = 20)
public String getStockCode() {
    return this.stockCode;
}
</code></pre>
</blockquote>
