<p>As the documentation states, Cell.getCellStyle() will never return null. </p>

<p><a href="https://poi.apache.org/apidocs/org/apache/poi/ss/usermodel/Cell.html#getCellStyle()" rel="nofollow">https://poi.apache.org/apidocs/org/apache/poi/ss/usermodel/Cell.html#getCellStyle()</a></p>

<p>When no cell style has been explicitly set for a Cell then it will return the default cell style which is initially shared among all cells in the workbook. Changing this then will obviously affect all cells not having an explictly assigned style.</p>

<p>You need to create a new CellStyle and then assign this to the relevant cells.</p>

<p>From the POI developer guide:</p>

<p><a href="https://poi.apache.org/spreadsheet/quick-guide.html#CreateDateCells" rel="nofollow">https://poi.apache.org/spreadsheet/quick-guide.html#CreateDateCells</a></p>

<pre><code>Workbook wb = new HSSFWorkbook();
    //Workbook wb = new XSSFWorkbook();
    CreationHelper createHelper = wb.getCreationHelper();
    Sheet sheet = wb.createSheet("new sheet");

    // Create a row and put some cells in it. Rows are 0 based.
    Row row = sheet.createRow(0);

    // Create a cell and put a date value in it.  The first cell is not styled
    // as a date.
    Cell cell = row.createCell(0);
    cell.setCellValue(new Date());

    // we style the second cell as a date (and time).  It is important to
    // create a new cell style from the workbook otherwise you can end up
    // modifying the built in style and effecting not only this cell but other cells.
    CellStyle cellStyle = wb.createCellStyle();
    cellStyle.setDataFormat(
        createHelper.createDataFormat().getFormat("m/d/yy h:mm"));
    cell = row.createCell(1);
    cell.setCellValue(new Date());
    cell.setCellStyle(cellStyle);

    //you can also set date as java.util.Calendar
    cell = row.createCell(2);
    cell.setCellValue(Calendar.getInstance());
    cell.setCellStyle(cellStyle);

    // Write the output to a file
    FileOutputStream fileOut = new FileOutputStream("workbook.xls");
    wb.write(fileOut);
    fileOut.close();
</code></pre>
