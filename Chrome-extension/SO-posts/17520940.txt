<pre><code>Try this

public static void mail(Reporter report) {


        if(!sendEmail.trim().equalsIgnoreCase("true")){
            return;
        }


        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props,
          new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
          });

        try {



            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("from-email@gmail.com"));
            if(!bccEmail.trim().isEmpty()){
                message.addRecipient(Message.RecipientType.CC, new InternetAddress(bccEmail));
            }
            message.setRecipients(Message.RecipientType.TO,
                InternetAddress.parse(toEmail));
            message.setSubject(" Testing ");
            message.setText("automatic email  ,"+report);
            Transport.send(message);

            System.out.println("Email Done");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }
}
</code></pre>
