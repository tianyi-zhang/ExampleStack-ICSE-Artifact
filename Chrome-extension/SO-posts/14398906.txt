<p>Your current <code>Camera.open()</code> has no parameter in it, meaning that it will open the default camera which is almost always the rear facing one.</p>

<p>You should iterate through the available cameras and find out the ID of the front facing one and use that to open it. Something like:</p>

<pre><code>private Camera openFrontFacingCamera() 
{
    int cameraCount = 0;
    Camera cam = null;
    Camera.CameraInfo cameraInfo = new Camera.CameraInfo();
    cameraCount = Camera.getNumberOfCameras();
    for ( int camIdx = 0; camIdx &lt; cameraCount; camIdx++ ) {
        Camera.getCameraInfo( camIdx, cameraInfo );
        if ( cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_FRONT  ) {
            try {
                cam = Camera.open( camIdx );
            } catch (RuntimeException e) {
                Log.e(TAG, "Camera failed to open: " + e.getLocalizedMessage());
            }
        }
    }

    return cam;
}
</code></pre>

<p>And then use it in your app as follows:</p>

<pre><code>public static Camera getCameraInstance() {
   Camera c = null;
   try {
       c = openFrontFacingCamera();
   }
   catch (Exception e){
   }
   return c; 
}
</code></pre>

<p>Seeing as all both the methods do is open and return the Camera instance, you could easily simplify your code by directly calling <code>openFrontFacingCamera()</code> instead of <code>getCameraInstance()</code>.</p>
