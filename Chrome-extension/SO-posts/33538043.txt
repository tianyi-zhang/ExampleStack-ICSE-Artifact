<p>IMO, you should not try and save the file from the bitmap, because it may be scaled down, depending on the scaling algo you used to display the bitmap. The result may be a bad quality downloaded file. you should, instead, download the file from the HTTP server again:</p>

<pre><code>private boolean downloadFile(String uri, String fileName) throws URISyntaxException, IOException  {

    URL url = new URL(uri);

    InputStream input = null;
    OutputStream output = null;
    HttpURLConnection connection = null;
    try {
        connection = (HttpURLConnection) url.openConnection();
        connection.connect();

        //Check for HTTP_OK on the url
        if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
            Log.d(TAG, "Server returned HTTP " + connection.getResponseCode()
                    + " " + connection.getResponseMessage());
            return false;
        }

        long totalSize = connection.getContentLength();

        // download the file
        input = connection.getInputStream();
        output = new FileOutputStream(fileName);

        byte data[] = new byte[1024 * 50];
        long downloadedBytes = 0;
        int count;
        while ((count = input.read(data)) != -1) {
            // allow canceling with back button
            if (isCancelled()) {
                input.close();
                return false;

            }
            downloadedBytes += count;
            //There may be a problem that the size is reported negative by the server. This is to protect for that
            if(totalSize &gt; 0){
               publishProgress((int) (downloadedBytes * 100 / totalSize));
            }
            output.write(data, 0, count);
        }
    } catch (Exception e) {

        e.printStackTrace();
        return false;
    } finally {
        try {
            if (output != null)
                output.close();
            if (input != null)
                input.close();
        } catch (IOException ignored) {
        }

        if (connection != null)
            connection.disconnect();
    }
    return true;
}
</code></pre>

<p>Wrap this up in an async task, and call this async task on your itemClick(). OR, use this in a downloaded service, to make the file download operation independent from you activity</p>
