<p>Have you considered using Apache POI for spreadsheets? They have various <a href="https://poi.apache.org/spreadsheet/quick-guide.html#CellContents" rel="nofollow">examples</a> on how to read/write Excel files, for instance:</p>

<pre><code>// Get content of cells
// import org.apache.poi.ss.usermodel.*;

Sheet sheet1 = wb.getSheetAt(0);
for (Row row : sheet1) {
    for (Cell cell : row) {
        CellReference cellRef = new CellReference(row.getRowNum(), cell.getColumnIndex());
        System.out.print(cellRef.formatAsString());
        System.out.print(" - ");

        switch (cell.getCellType()) {
            case Cell.CELL_TYPE_STRING:
                System.out.println(cell.getRichStringCellValue().getString());
                break;
            case Cell.CELL_TYPE_NUMERIC:
                if (DateUtil.isCellDateFormatted(cell)) {
                    System.out.println(cell.getDateCellValue());
                } else {
                    System.out.println(cell.getNumericCellValue());
                }
                break;
            case Cell.CELL_TYPE_BOOLEAN:
                System.out.println(cell.getBooleanCellValue());
                break;
            case Cell.CELL_TYPE_FORMULA:
                System.out.println(cell.getCellFormula());
                break;
            default:
                System.out.println();
        }
    }
}
</code></pre>

<p>Then, for mapping the contents to MongoDB you would have to use the <a href="http://mongodb.github.io/mongo-java-driver/?_ga=1.103574658.384128272.1429625278" rel="nofollow">Java driver</a>. I couldn't give you much information on that as I've only ever used the Python driver, but the introductory manual seems quite easy to follow.</p>
