<p>In Java arrays are of fixed size. So the called function cannot change the size of the input array if it finds any duplicates. Your function is just making the start index of the sub-array which has duplicates to <code>0</code>. So when you print the array contents in the calling function the element which has been made <code>0</code> does not get printed but elements following it (if any) do get printed.</p>

<p>The answer by YoK makes all the elements of the sub-array that are duplicates to 0. So that when you print it in the calling function the duplicates don't get printed. But you need to remember that the size of the array is still unchanged.</p>

<p>Alternatively you can return the size of the sub-array which has unique characters. Which in your case is <code>tail</code>.</p>

<p>One more alternative is to pass the input as a <code>StringBuffer</code> and make the changes in-place as:</p>

<pre><code>public static void removeDuplicates(StringBuffer str) {                        

        int len = str.length();

        // if the string as less than 2 char then it can't have duplicates.
        if (len &lt; 2) {                         
                return;
        }

        // fist character will never be duplicate.
        // tail is the index of the next unique character.
        int tail = 1;

        // iterate from 2nd character.
        for (int i = 1; i &lt; len; ++i) {
                int j;

                // is char at index i already in my list of uniq char?
                for (j = 0; j &lt; tail; ++j) {
                        if (str.charAt(i) == str.charAt(j)) {
                                break;
                        }      
                }

                // if no then add it to my uniq char list.
                if (j == tail) {                       
                        str.setCharAt(tail, str.charAt(i));

                        // increment tail as we just added a new ele.
                        ++tail;
                }
        }
        // at this point the characters from index [0,tail) are unique
        // if there were any duplicates they are between [tail,input.length)
        // so truncate the length of input to tail.
        str.setLength(tail);
}
</code></pre>

<p><a href="http://www.ideone.com/KirqS" rel="nofollow"><strong>Ideone Link</strong></a></p>
