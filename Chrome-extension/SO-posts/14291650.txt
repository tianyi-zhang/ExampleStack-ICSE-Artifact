<p>Thank you!..I was able to browse the source of <a href="http://javasourcecode.org/html/open-source/jdk/jdk-6u23/java/util/TreeMap.java.html" rel="nofollow">TreeMap</a> to get the detailed implementation.</p>

<p>If you go in detail with the source code as to how they are actually getting the subMap its something like this...</p>

<p>If you see the size method of NavigableSubMap</p>

<pre><code>  public int size() {
        return (fromStart &amp;&amp; toEnd) ? m.size() : entrySet().size();
    }
</code></pre>

<p>The entrySet() implementation in multiple calls final calls up getCeilingEntry() function </p>

<pre><code>final Entry&lt;K,V&gt; getCeilingEntry(K key) {
    Entry&lt;K,V&gt; p = root;
    while (p != null) {
        int cmp = compare(key, p.key);
        if (cmp &lt; 0) {
            if (p.left != null)
                p = p.left;
            else
                return p;
        } else if (cmp &gt; 0) {
            if (p.right != null) {
                p = p.right;
            } else {
                Entry&lt;K,V&gt; parent = p.parent;
                Entry&lt;K,V&gt; ch = p;
                while (parent != null &amp;&amp; ch == parent.right) {
                    ch = parent;
                    parent = parent.parent;
                }
                return parent;
            }
        } else
            return p;
    }
    return null;
}
</code></pre>

<p>SO i guess to get the actual map from the created submap; the time complexity is more than O(1).</p>
