<p>These are just syntax errors, nothing to do with <code>AsyncTask</code>.</p>

<p>Formatting your code (Ctrl-Shift-F) would make fixing this problem much easier!</p>

<p><strong>You're missing a curly bracket</strong> just after the <code>doInBackground</code> method and need to move the <code>return null</code> from the beginning to the end.</p>

<pre><code>    @Override
    protected String doInBackground(String... params) {
        URL url = null;

        DefaultHttpClient httpclient = null;

        try {

            String registrationUrl = "http://10.0.2.2/SensorInfo/GetLightData?sensor=light";
            url = new URL(registrationUrl);

            HttpGet getRequest = new HttpGet(registrationUrl);
            ResponseHandler&lt;String&gt; handler = new BasicResponseHandler();
            httpclient = new DefaultHttpClient();
            // request data from server
            String result = httpclient.execute(getRequest, handler);
            Log.d("MyApp", "Data from server is " + result);
        } catch (Exception ex) {
            Log.e("error", ex.toString());
            ex.printStackTrace();

        }

       return null;
    } // THIS HERE

    @Override
    protected void onPostExecute(String result) {
        TextView text1 = (TextView) findViewById(R.id.text);

        //Sets the new text to TextView (runtime click event)//*******
        text1.setText("Light Data= " + result);

        Toast.makeText(this, "Light Data:" + result, Toast.LENGTH_SHORT).show(); //MESSAGE BOX
        //txtMessage.setText(String.valueOf(msg1) + "  " + String.valueOf(msg2));
    }
</code></pre>

<hr>

<p>I went over your code and I think the below might work (although I just did this on StackOverflow, but it might give you more of a clue where you're going wrong:</p>

<pre><code>        @Override
        protected String doInBackground(String... params) {
            String result = "Failed";
            try {
                String registrationUrl = "http://10.0.2.2/SensorInfo/GetLightData?sensor=light";
                // request data from server
                URL url = new URL(registrationUrl);
                HttpGet getRequest = new HttpGet(registrationUrl);
                DefaultHttpClient httpclient = new DefaultHttpClient();

                HttpResponse response = httpclient.execute(getRequest);
                result = convertStreamToString(response.getEntity().getContent());
                Log.d("MyApp", "Data from server is " + result);
            } catch (Exception ex) {
                Log.e("MyApp", "Failed to load light data", ex);
            }

           return result;
        } // THIS HERE

        @Override
        protected void onPostExecute(String result) {
            TextView text1 = (TextView) findViewById(R.id.text);
            text1.setText("Light Data= " + result);

            Toast.makeText(MainActivity.this, "Light Data:" + result, Toast.LENGTH_SHORT).show();
        }

     public String convertStreamToString(InputStream inputStream) throws IOException {
        if (inputStream != null) {
            Writer writer = new StringWriter();

            char[] buffer = new char[1024];
            try {
                Reader reader = new BufferedReader(new InputStreamReader(inputStream, "UTF-8"),1024);
                int n;
                while ((n = reader.read(buffer)) != -1) {
                    writer.write(buffer, 0, n);
                }
            } finally {
                inputStream.close();
            }
            return writer.toString();
        } else {
            return "";
        }
    }
</code></pre>
