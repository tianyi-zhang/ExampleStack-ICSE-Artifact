<p>No, there is no Arrays.max or a lookalike, at least in Java 6.</p>

<p>If you look at the signature and implementation of Collections.max, it makes quite heavy use of parameterized types. In Java, generic arrays are problematic to say the least, so maybe therefore it is not a good idea to provide a generic max implementation for arrays in Java, and keep the focus on (generic) collections.</p>

<p>Edit: as newacct correctly points out, the <em>usage</em> of generic arrays is not necessarily more problematic than the usage of generic collections, so I've edited the above text since the original was wrong. Still, the main argument of "generic arrays are problematic" is still valid in my opinion, and collections should be preferred over reference type arrays.</p>

<pre><code>public static &lt;T&gt; T max(Collection&lt;? extends T&gt; coll, Comparator&lt;? super T&gt; comp) {
    if (comp==null)
        return (T)max((Collection&lt;SelfComparable&gt;) (Collection) coll);

Iterator&lt;? extends T&gt; i = coll.iterator();
T candidate = i.next();

    while (i.hasNext()) {
    T next = i.next();
    if (comp.compare(next, candidate) &gt; 0)
 candidate = next;
}
return candidate;
}
</code></pre>
