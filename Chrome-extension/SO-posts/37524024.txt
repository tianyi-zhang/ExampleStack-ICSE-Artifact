<p>You may use <code>org.springframework.http.ResponseEntity</code>. <a href="https://jhipster.github.io/" rel="nofollow">jHipster</a> is a good example project to see how to implement it. They use request header to send some service results like success, fail, warning etc.</p>

<p>Here is a part of code from <a href="https://github.com/jhipster/jhipster-sample-app/blob/master/src/main/java/io/github/jhipster/sample/web/rest/OperationResource.java" rel="nofollow">jHipster sample project</a></p>

<pre><code>@RequestMapping(value = "/operations",
        method = RequestMethod.POST,
        produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity&lt;Operation&gt; createOperation(@Valid @RequestBody Operation operation) throws URISyntaxException {
        log.debug("REST request to save Operation : {}", operation);
        if (operation.getId() != null) {
            return ResponseEntity.badRequest().headers(HeaderUtil.createFailureAlert("operation", "idexists", "A new operation cannot already have an ID")).body(null);
        }
        Operation result = operationRepository.save(operation);
        return ResponseEntity.created(new URI("/api/operations/" + result.getId()))
            .headers(HeaderUtil.createEntityCreationAlert("operation", result.getId().toString()))
            .body(result);
    }
</code></pre>
