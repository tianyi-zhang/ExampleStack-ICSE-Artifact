<p>A bit late, but I think this could add value. Not necessarily you need to add <code>databasePlatform</code> property if you specify <code>database</code> property, the adapter itself will figure out the dialect.</p>

<pre><code>&lt;property name="database" value="MYSQL" /&gt;
</code></pre>

<p>Relevant code from <code>org.springframework.orm.jpa.vendor.HibernateJPAVendorAdapter</code></p>

<pre><code>protected Class determineDatabaseDialectClass(Database database) {
    switch (database) {
        case DB2: return DB2Dialect.class;
        case DERBY: return DerbyDialect.class;
        case H2: return H2Dialect.class;
        case HSQL: return HSQLDialect.class;
        case INFORMIX: return InformixDialect.class;
        case MYSQL: return MySQLDialect.class;
        case ORACLE: return Oracle9iDialect.class;
        case POSTGRESQL: return PostgreSQLDialect.class;
        case SQL_SERVER: return SQLServerDialect.class;
        case SYBASE: return SybaseDialect.class;
        default: return null;
    }
}
</code></pre>
