<p>Remove line </p>

<pre><code>setContentView(R.layout.activity_login);
</code></pre>

<p>from </p>

<pre><code>public void onClick(View v)
</code></pre>

<p>Also in the XML layout, specify the onClick method</p>

<pre><code>&lt;Button
    android:id="@+id/button1"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_alignParentBottom="true"
    android:layout_centerHorizontal="true"
    android:layout_marginBottom="52dp"
    android:text="@string/next" 
    android:onClick="onClick" /&gt;
</code></pre>

<p>Another possible alternative is the following:</p>

<pre><code>public class MainActivity extends ActionBarActivity implements View.OnClickListener {
   ...
   @Override
   public void onCreate(Bundle bundle)
   {
        super(bundle);
        ...
        button = (Button) this.findViewById(R.id.button);
        button.setOnClickListener(this);
        ...
   }

   @Override
   public void onClick(View v)
   {
        if(v == button)
        {
             Intent i = new Intent(this, OtherActivity.class);
             startActivity(i);
        }
   }
}
</code></pre>

<p>Or another alternative:</p>

<pre><code>public class MainActivity extends ActionBarActivity {
   ...
   @Override
   public void onCreate(Bundle bundle)
   {
        super(bundle);
        ...
        button = (Button) this.findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() 
        {
            @Override
            public void onClick(View view)
            {
                Intent i = new Intent(MainActivity.this, OtherActivity.class);
                MainActivity.this.startActivity(i);
            }
        });
   }
}
</code></pre>

<p>EDIT</p>

<p>WebView Code:</p>

<pre><code>@SuppressLint("SetJavaScriptEnabled")
public class WebViewActivity extends Activity
{
    private WebView myWebView;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        // requestWindowFeature(Window.FEATURE_NO_TITLE);
        getWindow().requestFeature(Window.FEATURE_PROGRESS);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                WindowManager.LayoutParams.FLAG_FULLSCREEN);
        setContentView(R.layout.activity_webview);
        myWebView = (WebView) findViewById(R.id.webview);
        WebSettings webSettings = myWebView.getSettings();
        webSettings.setJavaScriptEnabled(true);
        myWebView.setWebViewClient(new MyWebViewClient());
        myWebView.setWebChromeClient(new MyWebChromeClient());
        //myWebView.addJavascriptInterface(new WebAppInterface(this.getApplicationContext()), "Android");
        myWebView.loadUrl("http://put.url.here");
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event)
    {
        // Check if the key event was the Back button and if there's history
        if ((keyCode == KeyEvent.KEYCODE_BACK) &amp;&amp; myWebView.canGoBack())
        {
            myWebView.goBack();
            return true;
        }
        // If it wasn't the Back key or there's no web page history, bubble up to the default
        // system behavior (probably exit the activity)
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu)
    {
        MenuInflater menuInflater = getMenuInflater();
        menuInflater.inflate(R.menu.activity_webview, menu);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onMenuItemSelected(int featureId, MenuItem item)
    {
        if (item.getItemId() == R.id.clear_cache)
        {
            Toast.makeText(this.getApplicationContext(), "Cache cleared.", Toast.LENGTH_SHORT).show();
            myWebView.clearCache(true);
        }
        return super.onMenuItemSelected(featureId, item);
    }

    private class MyWebViewClient extends WebViewClient
    {
        @Override
        public boolean shouldOverrideUrlLoading(WebView view, String url)
        {
            if (Uri.parse(url).getHost().equals("the.original.site.url"))
            {
                // This is my web site, so do not override; let my WebView load the page
                return false;
            }
            // Otherwise, the link is not for a page on my site, so launch another Activity that handles URLs
            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
            startActivity(intent);
            return true;
        }

    }

    private class MyWebChromeClient extends WebChromeClient
    {
        @Override
        public boolean onJsAlert(WebView view, String url, String message,
                final android.webkit.JsResult result)
        {
            new AlertDialog.Builder(WebViewActivity.this).setTitle(R.string.title_dialog_alert)
                    .setMessage(message)
                    .setPositiveButton(android.R.string.ok, new AlertDialog.OnClickListener()
                    {
                        public void onClick(DialogInterface dialog, int which)
                        {
                            result.confirm();
                        }
                    }).setCancelable(false).create().show();

            return true;
        }

        @Override
        public boolean onJsConfirm(WebView view, String url, String message, final JsResult result)
        {
            new AlertDialog.Builder(WebViewActivity.this).setTitle(R.string.title_dialog_confirm)
                    .setMessage(message)
                    .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener()
                    {
                        public void onClick(DialogInterface dialog, int which)
                        {
                            Toast.makeText(WebViewActivity.this.getApplicationContext(), "Confirmed.",
                                    Toast.LENGTH_SHORT).show();
                            result.confirm();
                        }
                    }).setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener()
                    {
                        public void onClick(DialogInterface dialog, int which)
                        {
                            Toast.makeText(WebViewActivity.this.getApplicationContext(), "Cancelled.",
                                    Toast.LENGTH_SHORT).show();
                            result.cancel();
                        }
                    }).create().show();
            return true;
        }

        @Override
        public boolean onJsPrompt(WebView view, String url, String message, String defaultValue,
                final JsPromptResult result)
        {
            final LayoutInflater factory = LayoutInflater.from(WebViewActivity.this);
            final View v = factory.inflate(R.layout.javascript_prompt_dialog, null);

            ((TextView) v.findViewById(R.id.prompt_message_text)).setText(message);
            ((EditText) v.findViewById(R.id.prompt_input_field)).setText(defaultValue);

            new AlertDialog.Builder(WebViewActivity.this).setTitle(R.string.title_dialog_prompt)
                    .setView(v)
                    .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener()
                    {
                        public void onClick(DialogInterface dialog, int whichButton)
                        {
                            String value = ((EditText) v.findViewById(R.id.prompt_input_field))
                                    .getText().toString();
                            Toast.makeText(WebViewActivity.this.getApplicationContext(),
                                    "Confirmed: " + value, Toast.LENGTH_SHORT).show();
                            result.confirm(value);
                        }
                    }).setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener()
                    {
                        public void onClick(DialogInterface dialog, int whichButton)
                        {
                            Toast.makeText(WebViewActivity.this.getApplicationContext(), "Cancelled.",
                                    Toast.LENGTH_SHORT).show();
                            result.cancel();
                        }
                    }).setOnCancelListener(new DialogInterface.OnCancelListener()
                    {
                        public void onCancel(DialogInterface dialog)
                        {
                            Toast.makeText(WebViewActivity.this.getApplicationContext(), "Cancelled.",
                                    Toast.LENGTH_SHORT).show();
                            result.cancel();
                        }
                    }).show();
            return true;
        };

        @Override
        public void onProgressChanged(WebView view, int newProgress)
        {
            updateProgress(newProgress);
            super.onProgressChanged(view, newProgress);
        }

        @Override
        public void onReceivedTitle(WebView view, String title)
        {
            setTitle(title);
            super.onReceivedTitle(view, title);
        }
    }
}
</code></pre>

<p>Layout:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;WebView  xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/webview"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
/&gt;
</code></pre>
