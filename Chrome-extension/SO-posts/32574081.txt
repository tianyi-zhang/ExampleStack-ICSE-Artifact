<p>For that purpose, you need to create a custom adapter. You can find the implementation of custom adapter on the below link,<p>
<a href="http://www.androidhive.info/2012/02/android-custom-listview-with-image-and-text/" rel="nofollow">http://www.androidhive.info/2012/02/android-custom-listview-with-image-and-text/</a>
<p>Above contain a nice tutorial on custom adapter to add icons, change colors of text and background on each list row....!
<p>
Here is also a good tutorial on custom adapter,
<p> <a href="http://androidexample.com/How_To_Create_A_Custom_Listview_-_Android_Example/index.php?view=article_discription&amp;aid=67&amp;aaid=92" rel="nofollow">http://androidexample.com/How_To_Create_A_Custom_Listview_-_Android_Example/index.php?view=article_discription&amp;aid=67&amp;aaid=92</a>
<p>
Here is a example,<p>
Your activity's xml should be like this activity_main.xml,</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context="com.rupomkhondaker.sonalibanklimited.NavigationDrawerFragment" /&gt;
&lt;ListView 
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:choiceMode="singleChoice"
        android:divider="@android:color/transparent"
        android:dividerHeight="0dp"
        android:background="#cc0100cc"
        android:id="@+id/menuList" /&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<p>Your Activity class:
public class MainActivity extends Activity {</p>

<pre><code>private ListView listView1;

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    String[] textString = {"Item1", "Item2", "Item3", "Item4"};
    int[] drawableIds = {R.drawable.img_id_row1, R.drawable.img_id_row2, R.drawable.img_id_row3, R.drawable.img_id_row4};

    CustomAdapter adapter = new CustomAdapter(this,  textString, drawableIds);


    listView1 = (ListView)findViewById(R.id.menuList);
    listView1.setAdapter(adapter);
}
</code></pre>

<p>Create another layout for each row like below and name it row.xml,</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout 
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="horizontal" 
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:padding="10dp"&gt;

     &lt;ImageView android:id="@+id/imgIcon"
        android:layout_width="wrap_content"
        android:layout_height="fill_parent"
        android:gravity="center_vertical"
        android:layout_alignParentTop="true"
        android:layout_alignParentBottom="true"
        android:layout_marginRight="15dp"
        android:layout_marginTop="5dp"
        android:layout_marginBottom="5dp" /&gt;

     &lt;TextView android:id="@+id/txtTitle"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:gravity="center_vertical"
        android:layout_alignParentTop="true"
        android:layout_alignParentBottom="true"
        android:textStyle="bold"
        android:textSize="22dp"
        android:textColor="#000000"
        android:layout_marginTop="5dp"
        android:layout_marginBottom="5dp" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Now, create a JAVA class and name it CustomAdapter.java:</p>

<pre><code>public class CustomAdapter extends BaseAdapter {

        private Context mContext;
        private String[]  Title;
        private int[] imge;

        public CustomAdapter(Context context, String[] text1,int[] imageIds) {
            mContext = context;
            Title = text1;
            imge = imageIds;

        }

        public int getCount() {
            // TODO Auto-generated method stub
            return Title.length;
        }

        public Object getItem(int arg0) {
            // TODO Auto-generated method stub
            return null;
        }

        public long getItemId(int position) {
            // TODO Auto-generated method stub
            return position;
        }

        public View getView(int position, View convertView, ViewGroup parent) {

            LayoutInflater inflater = getLayoutInflater();
            View row;
            row = inflater.inflate(R.layout.row, parent, false);
            TextView title;
            ImageView i1;
            i1 = (ImageView) row.findViewById(R.id.imgIcon);
            title = (TextView) row.findViewById(R.id.txtTitle);
            title.setText(Title[position]);
            i1.setImageResource(imge[position]);

            return (row);
        }
    }
</code></pre>
