<p>If I'm not wrong, it seems that in your constructor you don't pass any data to the adapter.</p>

<pre><code>    public MyAdapter(Context context, int textViewResourceId) {
        super(context, textViewResourceId);
    }
</code></pre>

<p>In this code snippet, your are using <a href="http://developer.android.com/reference/android/widget/ArrayAdapter.html#ArrayAdapter%28android.content.Context,%20int%29" rel="nofollow">ArrayAdapter (Context context, int textViewResourceId)</a> which initialize an empty arraylist as the objects to represent in the GridView.</p>

<pre><code>public ArrayAdapter(Context context, int textViewResourceId) {
    init(context, textViewResourceId, 0, new ArrayList&lt;T&gt;());
}
</code></pre>

<p>Therefore your GridView should be empty. In addition to that, it seem you didn't properly implement the getView.(findViewById() parts should be handled as shown in the Opiatefuchs's answer) </p>

<p>If you want to extend ArrayAdapter, you should be calling a constructor which takes an array of objects as a parameter. (Of course there are many ways to make a custom adapter you can extend BaseAdapter or while extending ArrayAdapter you can override some other methods)</p>

<p>This way it should work:</p>

<pre><code>class MyAdapter extends ArrayAdapter&lt;String&gt; {

    public MyAdapter(Context context, int textViewResourceId, String[] objects) {
        super(context, textViewResourceId, objects);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View view;

        if (convertView == null) {
            LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);

            view = inflater.inflate(R.layout.layout_grid_scheme, null);
        } else {
            view = convertView;
        }

        TextView item = (TextView) view.findViewById(R.id.tv_grid);
        item.setText(getItem(position));

        ImageView img = (ImageView) view.findViewById(R.id.iv_grid);
        img.setImageResource(R.drawable.dummy);
    }

}
</code></pre>
