<p>You don't need to rotate the byte data. You can simply set the rotation of the camera using the code below (assuming variable <code>camera</code> is your <code>Camera</code> instance:</p>

<pre><code>Camera.Parameters params = camera.getParameters();
params.setRotation(90);

camera.setParameters(params);
</code></pre>

<p>And you can set the preview rotation specifically by calling <code>camera.setDisplayOrientation(90);</code></p>

<p>Here's a quick way of automatically checking the phone orientation and displaying the camera preview and saved image rotation accordingly:</p>

<pre><code>int rotation = activity.getWindowManager().getDefaultDisplay().getRotation();

int degrees = 0;
switch (rotation) {
    case Surface.ROTATION_0: degrees = 0; break;
    case Surface.ROTATION_90: degrees = 90; break;
    case Surface.ROTATION_180: degrees = 180; break;
    case Surface.ROTATION_270: degrees = 270; break;
}

int result;
if (info.facing == Camera.CameraInfo.CAMERA_FACING_FRONT) {
    result = (info.orientation + degrees) % 360;
    result = (360 - result) % 360;  // compensate the mirror
} else {  // back-facing
    result = (info.orientation - degrees + 360) % 360;
}

params.setRotation(result);
camera.setDisplayOrientation(result);

camera.setParameters(params);
</code></pre>

<p>Note that all of this is assuming you're still using the <code>Camera</code> class, which is deprecated for API 21+. However, the Camera2 api that replaced it is only available in 21+.</p>
