<p>Ok in order to do what you want i modified your class a bit and created some extra classes.</p>

<p>EDITED class:</p>

<pre><code>public class SnapflowActivity extends ListActivity {

private ProgressDialog pDialog;

// Creating JSON Parser object
JSONParser jParser = new JSONParser();

ArrayList&lt;ParseItem&gt; imagesList;
private static String url_all_images = "PHP FILE URL";
private static final String TAG_SUCCESS = "success";
private static final String TAG_ALBUM_PICS = "album_pics";
private static final String TAG_ID = "id";
private static final String TAG_NAME = "name";

// images JSONArray
JSONArray album_pics = null;

@Override
protected void onCreate(Bundle savedInstanceState) {
    if (android.os.Build.VERSION.SDK_INT &gt; 9) {
        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder()
                .permitAll().build();
        StrictMode.setThreadPolicy(policy);
    }
    super.onCreate(savedInstanceState);
    setContentView(R.layout.snapflow);

    // Hashmap for ListView
    imagesList = new ArrayList&lt;ParseItem&gt;();

    // Loading images in Background Thread
    new LoadAllImages().execute();

    ListView lv = getListView();

}

/**
 * Background Async Task to Load all Images by making HTTP Request
 * */
class LoadAllImages extends AsyncTask&lt;String, String, String&gt; {

    /**
     * Before starting background thread Show Progress Dialog
     * */
    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        pDialog = new ProgressDialog(SnapflowActivity.this);
        pDialog.setMessage("Loading Images. Please wait...");
        pDialog.setIndeterminate(false);
        pDialog.setCancelable(false);
        pDialog.show();
    }

    /**
     * getting All images from url
     * */

    @Override
    protected String doInBackground(String... arg0) {
        // TODO Auto-generated method stub

        // Building Parameters
        List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
        // getting JSON string from URL
        JSONObject json = jParser.makeHttpRequest(url_all_images, "GET",
                params);

        // Check your log cat for JSON reponse
        Log.d("All images: ", json.toString());
        try {
            // Checking for SUCCESS TAG
            int success = json.getInt(TAG_SUCCESS);

            if (success == 1) {
                // products found
                // Getting Array of images
                album_pics = json.getJSONArray(TAG_ALBUM_PICS);

                // looping through All images
                for (int i = 0; i &lt; album_pics.length(); i++) {
                    JSONObject c = album_pics.getJSONObject(i);

                    // Storing each json item in variable
                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);

                    //I CREATED A CLASS ParseItem to CREATE THE LIST YOU WANT
                    imagesList.add(new ParseItem(id, name));
                }
            } else {
                // no images found
                // Launchnew activity Activity
                Intent i = new Intent(getApplicationContext(),
                        SnapflowActivity.class);
                // Closing all previous activities
                i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                startActivity(i);
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }

        return null;
    }

    /**
     * After completing background task Dismiss the progress dialog
     * **/
    protected void onPostExecute(String file_url) {
        // dismiss the dialog after getting all images
        pDialog.dismiss();
        // updating UI from Background Thread
        runOnUiThread(new Runnable() {
            public void run() {
                /**
                 * Updating parsed JSON data into ListView
                 * */
                ListAdapter adapter = new MyCustomAdapter(SnapflowActivity.this, R.layout.list_item, imagesList);
                // updating listview
                setListAdapter(adapter);
            }
        });

    }

}
</code></pre>

<p>}</p>

<p>The Custom Adapter:</p>

<pre><code>public class MyCustomAdapter extends ArrayAdapter&lt;ParseItem&gt;{

    public MyCustomAdapter(Context context, int resource, List&lt;ParseItem&gt; objects) {
        super(context, resource, objects);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolderItems holder;
        View rootView = null;
        ParseItem current = null;

        if(rootView == null){
            LayoutInflater li = LayoutInflater.from(getContext());
            rootView = li.inflate(R.layout.list_item, parent, false);
            current = getItem(position);

            holder = new ViewHolderItems();
            holder.id = (TextView)rootView.findViewById(R.id.textViewForList);
            holder.name = (ImageView)rootView.findViewById(R.id.imageForList);
            rootView.setTag(holder);
        }else{
            holder = (ViewHolderItems)rootView.getTag();
        }

        if(current != null){
            holder.id.setText(current.getId());
            Ion.with(holder.name).placeholder(R.drawable.ic_launcher).error(R.drawable.ic_launcher).load(current.getName());
        }
        return rootView;
    }

    static class ViewHolderItems {
        TextView id;
        ImageView name;
    }

}
</code></pre>

<p>The ParseItem Class:</p>

<pre><code>public class ParseItem {
    private String id, name;

    public ParseItem(String id, String name) {
        this.id = id;
        this.name = name;
    }


    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
</code></pre>

<p>The list_item.xml layout for each listView row:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="horizontal" android:layout_width="match_parent"
    android:layout_height="match_parent"&gt;

    &lt;ImageView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/ic_launcher"
        android:padding="10dp"
        android:id="@+id/imageForList" /&gt;

    &lt;TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="New Text"
        android:padding="25dp"
        android:id="@+id/textViewForList" /&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>And in order to get the images with the easy way, compile the following dependency:</p>

<p><code>compile 'com.koushikdutta.ion:ion:2.+'</code></p>

<p>Hope it helps!!!!</p>
