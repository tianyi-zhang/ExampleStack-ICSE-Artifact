<p>Following code solve your problem and it may take less time on Yuv Format data because YuvImage class is provided with Android-SDK.</p>

<p>You can try this,</p>

<pre><code>ByteArrayOutputStream out = new ByteArrayOutputStream();
YuvImage yuvImage = new YuvImage(data, ImageFormat.NV21, width, height, null);
yuvImage.compressToJpeg(new Rect(0, 0, width, height), 50, out);
byte[] imageBytes = out.toByteArray();
Bitmap image = BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.length);
iv.setImageBitmap(image);
</code></pre>

<p>or</p>

<pre><code>void yourFunction(byte[] data, int mWidth, int mHeight)
{

int[] mIntArray = new int[mWidth*mHeight];

// Decode Yuv data to integer array
decodeYUV420SP(mIntArray, data, mWidth, mHeight);

//Initialize the bitmap, with the replaced color  
Bitmap bmp = Bitmap.createBitmap(mIntArray, mWidth, mHeight, Bitmap.Config.ARGB_8888);  

// Draw the bitmap with the replaced color  
iv.setImageBitmap(bmp);  

}

static public void decodeYUV420SP(int[] rgba, byte[] yuv420sp, int width,
    int height) {
final int frameSize = width * height;

for (int j = 0, yp = 0; j &lt; height; j++) {
    int uvp = frameSize + (j &gt;&gt; 1) * width, u = 0, v = 0;
    for (int i = 0; i &lt; width; i++, yp++) {
        int y = (0xff &amp; ((int) yuv420sp[yp])) - 16;
        if (y &lt; 0)
            y = 0;
        if ((i &amp; 1) == 0) {
            v = (0xff &amp; yuv420sp[uvp++]) - 128;
            u = (0xff &amp; yuv420sp[uvp++]) - 128;
        }

        int y1192 = 1192 * y;
        int r = (y1192 + 1634 * v);
        int g = (y1192 - 833 * v - 400 * u);
        int b = (y1192 + 2066 * u);

        if (r &lt; 0)
            r = 0;
        else if (r &gt; 262143)
            r = 262143;
        if (g &lt; 0)
            g = 0;
        else if (g &gt; 262143)
            g = 262143;
        if (b &lt; 0)
            b = 0;
        else if (b &gt; 262143)
            b = 262143;

        // rgb[yp] = 0xff000000 | ((r &lt;&lt; 6) &amp; 0xff0000) | ((g &gt;&gt; 2) &amp;
        // 0xff00) | ((b &gt;&gt; 10) &amp; 0xff);
        // rgba, divide 2^10 ( &gt;&gt; 10)
        rgba[yp] = ((r &lt;&lt; 14) &amp; 0xff000000) | ((g &lt;&lt; 6) &amp; 0xff0000)
                | ((b &gt;&gt; 2) | 0xff00);
    }
}
}
</code></pre>
