<p>Not sure about the sound, but I know images need to use the Sample size with <code>inJustDecodeBounds=true</code>.</p>

<pre><code>public int calculateInSampleSize(BitmapFactory.Options options) {

        DisplayMetrics displayMetrics = cxt.getResources().getDisplayMetrics();
        int reqWidth = displayMetrics.widthPixels;

        final int height = options.outHeight;
        final int width = options.outWidth;

        double devCal2 =  (height*1000)/width;
        int reqHeight = (int) ((devCal2/1000)*reqWidth);

        int inSampleSize = 1;

        if (height &gt; reqHeight || width &gt; reqWidth) {

            final int halfHeight = height / 2;
            final int halfWidth = width / 2;

            // Calculate the largest inSampleSize value that is a power of 2 and keeps both
            // height and width larger than the requested height and width.
            while ((halfHeight / inSampleSize) &gt; reqHeight
                    &amp;&amp; (halfWidth / inSampleSize) &gt; reqWidth) {
                inSampleSize *= 2;
            }
        }

        return inSampleSize;
    }

    public Bitmap createBitmap(){

        BitmapFactory.Options options2 = new BitmapFactory.Options();
        options2.inJustDecodeBounds = true;
        options2.inDither=true;
        BitmapFactory.decodeFile(cxt.getExternalFilesDir(filepath) +"/companylogo.png",options2);
        options2.inSampleSize = calculateInSampleSize(options2);//=32
        options2.inJustDecodeBounds = false;

        return BitmapFactory.decodeFile(cxt.getExternalFilesDir(filepath) +"/companylogo.png",options2);
    }
</code></pre>

<p>For reference please check <a href="http://developer.android.com/training/displaying-bitmaps/load-bitmap.html" rel="nofollow">http://developer.android.com/training/displaying-bitmaps/load-bitmap.html</a></p>
