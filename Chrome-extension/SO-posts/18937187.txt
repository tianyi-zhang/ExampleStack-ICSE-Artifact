<p>You could use a custom adapter (as for a listView):</p>

<pre><code>public class CustomAdapter extends ArrayAdapter&lt;Integer&gt; {
     Activity context;   
     ArrayList&lt;Integer&gt; objects;

     public CustomAdapter(Activity context,  ArrayList&lt;Integer&gt; objects) {
      super(context, R.layout.row, objects);
      this.context = context;
      this.objects = objects;
     }

     @Override
     public View getView(int position, View convertView, ViewGroup parent) {

      if (convertView == null) {
       LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
       convertView = inflater.inflate(R.layout.row, parent, false);


      } 

      ImageView i = (ImageView) convertView.findViewById(R.id.icon);
      i.setBackgroundResource(objects.get(position));

      TextView t = (TextView) convertView.findViewById(R.id.title);
      t.setText("title");

      return convertView;

     }

    }
</code></pre>

<p>And of course you will set this it as an adapter for the gridView.</p>

<p><strong>EDIT:</strong> Of course instead of <code>ArrayAdapter&lt;Integer&gt;</code> you could be extending <code>ArrayAdapter&lt;YourHolder&gt;</code>.</p>

<pre><code>class YourHolder {
  public int ID;
  public String title;
}
</code></pre>

<p><strong>EDIT 2: Adding a functional piece of code.</strong></p>

<p>activity_main.xml</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity" &gt;

    &lt;GridView 
        android:id="@+id/grid_view"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:numColumns="3"
        android:gravity="center_horizontal"
        android:horizontalSpacing="10dp"
        android:verticalSpacing="10dp"
        android:padding="10dp"
        android:background="#600000ff"     
        /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>grid_item_layout.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:background="#6000ff00"
    android:padding="4dp"&gt;

    &lt;TextView
        android:id="@+id/label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="label"
        android:layout_gravity="center_horizontal"/&gt;
    &lt;FrameLayout 
        android:id="@+id/holder"
        android:layout_width="100dp"
        android:layout_height="100dp"&gt;

        &lt;ImageView
            android:id="@+id/image"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:scaleType="centerCrop"/&gt;
    &lt;/FrameLayout&gt;    

&lt;/LinearLayout&gt;
</code></pre>

<p>CustomAdapter.class</p>

<pre><code>public class CustomAdapter extends ArrayAdapter&lt;Integer&gt; {

    private Activity context;
    private ArrayList&lt;Integer&gt; objects;

    public CustomAdapter(Activity context, ArrayList&lt;Integer&gt; objects) {
        super(context, R.layout.grid_item_layout, objects);
        this.context = context;
        this.objects = objects;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if(convertView == null){
            LayoutInflater i = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = (View) i.inflate(R.layout.grid_item_layout, parent, false);
        }

        TextView t = (TextView) convertView.findViewById(R.id.label);
        ImageView i = (ImageView) convertView.findViewById(R.id.image);

        t.setText("label " + position);
        i.setImageResource(objects.get(position));

        return convertView;
}
</code></pre>

<p>MainActivity</p>

<pre><code>public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        GridView g = (GridView) findViewById(R.id.grid_view);
        CustomAdapter adapter = new CustomAdapter(this, getData());
        g.setAdapter(adapter);
    }

    public ArrayList&lt;Integer&gt; getData(){
        ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
        list.add(R.drawable.pic1);
        // add 2 - 11
        list.add(R.drawable.pic12);

        return list;
    }

}
</code></pre>

<p>Final look:</p>

<p><img src="http://i.stack.imgur.com/0hOQD.jpg" alt="enter image description here"></p>

<p>Note: From my experience when there are a lot of pictures in the gridView scrolling becomes slow and laggy, however it's not the topic of your question, so in case it's also a problem, please see <a href="http://stackoverflow.com/questions/541966/how-do-i-do-a-lazy-load-of-images-in-listview">How do I do a lazy load of images in ListView</a></p>
