<p>Have you looked into setting the PorterDuff mode on a Paint object?
use <code>paint.setXfermode(new PorterDuffXfermode(Mode.CLEAR))</code> then draw over the pixels that you want to erase</p>

<p>edit: What exactly are you trying to clear? There are <a href="http://developer.android.com/reference/android/graphics/PorterDuff.Mode.html" rel="nofollow">multiple modes</a> and you may need to select a different one depending on what you are trying to do. Here is an example of a function I currently use to crop Bitmaps to a circle.</p>

<pre><code>public static Bitmap crop_circle_center(Bitmap bitmap) {
    final int diameter = Math.min(bitmap.getWidth(), bitmap.getHeight());
    Bitmap output = Bitmap.createBitmap(diameter,
            diameter, Config.ARGB_8888);
    Canvas canvas = new Canvas(output);

    final int color = 0xff424242;
    final Paint paint = new Paint();

    final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
    rect.offset(-(bitmap.getWidth()-diameter)/2, -(bitmap.getHeight()-diameter)/2);
    paint.setAntiAlias(true);
    canvas.drawARGB(0, 0, 0, 0);
    paint.setColor(color);
    canvas.drawCircle(diameter/ 2, diameter/ 2,
            diameter / 2, paint);

    paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
    canvas.drawBitmap(bitmap, null, rect, paint);
    return output;
}
</code></pre>
