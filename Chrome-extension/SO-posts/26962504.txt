<p>hello you can recover the uri of image in the onActivityResult and when you click to watch_your_picture you send the Uri of the picture to the next activity you can modify your code as above : </p>

<p>`</p>

<pre><code>    package com.example.random; 




    import android.app.Activity;
    import android.contect.ContectValues;
    import android.content.Intent;
    import android.graphics.Bitmap;
    import android.os.Bundle;
    import android.provider.MediaStore
    import android.util.Log;
    import android.net.Uri;
    import android.view.View;
    import android.view.Window;
    import android.view.View.OnClickListener;
    import android.widget.Button;
    import android.widget.ImageView;


    public class FotoMaker extends Activity 
        { 
        ImageView iv;
        Uri uriOfPicture;


        @Override 
        protected void onCreate(Bundle savedInstanceState) 
            { 
            super.onCreate(savedInstanceState);
            setContentView(R.layout.addpic);

            iv = (ImageView) findViewById(R.id.imageView);
            Button btn = (Button) findViewById(R.id.button1);
            btn.setOnClickListener(new OnClickListener()
            { 


                @Override 
                public void onClick (View v){
                    takeImageFromCamera();

                } 
            }); 
            } 
            @Override 
            protected void onActivityResult(int requestCode, int resultCode, Intent data)
            { 
                if(requestCode == 0)
                { 
                    Bitmap image=createBitmapFromURI(uriOfPicture);
                    iv.setImageBitmap(image);
                } 
            } 
    @Override
        protected void onSaveInstanceState(Bundle outState) {
            super.onSaveInstanceState(outState);
            if (currImageURI != null) {
                outState.putString("cameraImageUri", uriOfPicture.toString());
            }
        }

        @Override
        protected void onRestoreInstanceState(Bundle savedInstanceState) {
            super.onRestoreInstanceState(savedInstanceState);
            if (savedInstanceState.containsKey("cameraImageUri")) {
                uriOfPicture = Uri.parse(savedInstanceState.getString("cameraImageUri"));
            }
        }
    /*********************************** method to take URI of the picture *******************/
    public void takeImageFromCamera(){
            String fileName = "new-photo-name.jpg";
            ContentValues values = new ContentValues();
            values.put(MediaStore.Images.Media.TITLE, fileName);
            values.put(MediaStore.Images.Media.DESCRIPTION,
                    "Image captured by camera");

            uriOfPicture = getContentResolver()
                    .insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
                            values);  
            Log.i("uri",currImageURI.toString());
            Intent intent = new Intent(
                    MediaStore.ACTION_IMAGE_CAPTURE);
            intent.putExtra(MediaStore.EXTRA_OUTPUT, uriOfPicture);
            intent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 1);
            startActivityForResult(intent,
                    0);


        }

public Bitmap createBitmapFromURI(Uri uri) {

            Bitmap bitmap = null;
            try {
                bitmap = BitmapFactory.decodeStream(getApplicationContext()
                        .getContentResolver().openInputStream(uri));
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
            if (bitmap != null)
/*********dimention**********************/
                return Bitmap.createScaledBitmap(bitmap, 100, 100, true);
            else {
                return null;
            }
        }


        }
</code></pre>

<p>`</p>
