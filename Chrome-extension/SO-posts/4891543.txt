<p>I'd do it like this:</p>

<pre><code>public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
    RemoteViews updateViews = new RemoteViews(context.getPackageName(), R.layout.mywidgetprovider_layout);    
    Intent onClickedIntent = new Intent(context,MyActivity.class);
    PendingIntent pi = PendingIntent.getActivity(context, 0, onClickedIntent, 0);
    updateViews.setOnClickPendingIntent(R.id.myView, pi);

    for (int i=0; i&lt;appWidgetIds.length; i++) {
        appWidgetManager.updateAppWidget(appWidgetIds[i], updateViews);
     }
}
</code></pre>

<p>One thing I'm not sure on is the call to <code>super.onUpdate()</code>.  My own widget code doesn't have it and seems to work fine... not sure if it's needed or not.</p>

<p>I don't know if this refactor will fix your issue though!</p>
