<p>Ok so I would recommend you stick with using Picasso as this will make your life a lot easier in terms of memory management and the likes. One thing to remember is that the image contained in an imageview can ultimately retrieved as a Bitmap regardless of the image type (eg jpeg, png etc), so if you use Picasso to load the image via a URL you can still retrieve the image as a Bitmap after it is loaded and apply your transformation on it. Picasso also have a function called .transform() which you can use to transform your images by supplying a custom transformation. Here is an example for a rounded transformation, first the code that implements the transformation:</p>

<pre><code>//calcualte the raduis for the rounded images
final float scale = mContext.getResources().getDisplayMetrics().density; //get screen density for   scale
int pixels = (int) ((imageView.getWidth()-5) * scale); //get screen pixels based on density. Imageview is 60dp x 60dp in size, subtract some padding = 55
mRadiusCenter = pixels / 2;                                                 //get the raduis

//now load your image
 Picasso.with(mContext)
        .load(imageUrl)
        .fit().centerCrop()
        .transform(new RoundedTransformation(mRadiusCenter))
        .into(imageView);
</code></pre>

<p>The you need to create a class for the RoundedTransformation that implements Picasso Transformation:</p>

<pre><code>// enables hardware accelerated rounded corners
// original idea here : http://www.curious-creature.org/2012/12/11/android-recipe-1-image-with-rounded-corners/
public  class RoundedTransformation implements com.squareup.picasso.Transformation {
  private final int radius;

  // radius is corner radii in dp
  public RoundedTransformation(final int radius) {
      this.radius = radius;
  }

  @Override
  public Bitmap transform(final Bitmap source) {
      final Paint paint = new Paint();
      paint.setAntiAlias(true);
      paint.setShader(new BitmapShader(source, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP));

      Bitmap output = Bitmap.createBitmap(source.getWidth(), source.getHeight(), Bitmap.Config.ARGB_8888);

      Canvas canvas = new Canvas(output);
      canvas.drawCircle(radius, radius, radius, paint);

      if (source != output) {
          source.recycle();
      }

      return output;
  }

  @Override
  public String key() {
      return "rounded";
  }

}
</code></pre>

<p>Here are some more links that might prove useful:</p>

<p><a href="https://gist.github.com/julianshen/5829333" rel="nofollow">https://gist.github.com/julianshen/5829333</a> <br/>
<a href="http://stackoverflow.com/questions/23740307/load-large-images-with-picasso-and-custom-transform-object">Load large images with Picasso and custom Transform object</a></p>

<p>Hope that helps!</p>
