<p>A combination of these two approaches worked for me:</p>

<p>I have a boolean array on class level which I use to keep track of the value of checkboxes.</p>

<pre><code>boolean [] checkedItems = new boolean[listItems.size()];
</code></pre>

<p>In getView() :</p>

<pre><code>    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;

        if (convertView == null) {

            convertView = inflater.inflate(R.layout.menu_item_list_item,
                    parent, false);

            holder = new ViewHolder();

            holder.name = (TextView) convertView
                    .findViewById(R.id.menuItemLargeName);
            holder.mainItemCheckBox = (CheckBox) convertView
                    .findViewById(R.id.menuItemLargeCheckBox);

            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
            // remove the listener so that it does not get attached to other chechboxes. 
            holder.mainItemCheckBox.setOnCheckedChangeListener(null);
            //update the checkbox value from boolean array
            holder.mainItemCheckBox.setChecked(checkedItems[position]);
        }


        holder.name.setText(listItems.get(position).getName());

        holder.mainItemCheckBox
                .setOnCheckedChangeListener(onCheckedListener);
        holder.mainItemCheckBox
                .setTag(R.id.menuItemLargeCheckBox, position);

        return (convertView);
    }
</code></pre>

<p>In my OnCheckedChangeListener() : update the boolean array.</p>

<pre><code>    OnCheckedChangeListener onCheckedListener = new OnCheckedChangeListener() {

    @Override
    public void onCheckedChanged(CompoundButton buttonView,
            boolean isChecked) {

        int position = (Integer) buttonView
                .getTag(R.id.menuItemLargeCheckBox);

        MenuItemObject menuItem = listItems.get(position);

        if (isChecked) {

            cartItems.add(menuItem);
            checkedItems[position] = true;

        } else {

            cartItems.remove(menuItem);
            checkedItems[position] = false;
        }


    }
};
</code></pre>
