<p>Here's my best attempt at optimizing it.  I optimized for what I hope is the common case of plain text strings, but I wasn't able to make it much better for strings with HTML entities.</p>

<pre><code>    public static String escapeHtml(String value) {
        if (value == null) return null;

        int length = value.length();
        String encoded;

        for (int i = 0; i &lt; length; i++) {
            char c = value.charAt(i);

            if (c &lt;= 62 &amp;&amp; (encoded = getHtmlEntity(c)) != null) {
                // We found a character to encode, so we need to start from here and buffer the encoded string.
                StringBuilder sb = new StringBuilder((int) (length * 1.25));
                sb.append(value.substring(0, i));
                sb.append(encoded);

                i++;

                for (; i &lt; length; i++) {
                    c = value.charAt(i);

                    if (c &lt;= 62 &amp;&amp; (encoded = getHtmlEntity(c)) != null) {
                        sb.append(encoded);
                    } else {
                        sb.append(c);
                    }
                }

                value = sb.toString();
                break;
            }
        }

        return value;
    }

    private static String getHtmlEntity(char c) {
        switch (c) {
            case '&amp;': return "&amp;amp;";
            case '\'': return "&amp;#39;";
            case '"': return "&amp;quot;";
            case '&lt;': return "&amp;lt;";
            case '&gt;': return "&amp;gt;";
            default: return null;
        }
    }


Normal-10     0.021     0.023     0.011     0.012     0.011
Normal-100     0.074     0.074     0.073     0.074     0.074
Normal-1000     0.671     0.678     0.675     0.675     0.680
Html-10     0.222     0.152     0.153     0.153     0.154
Html-100     0.739     0.715     0.718     0.724     0.706
Html-1000     6.812     6.828     6.802     6.802     6.806
</code></pre>
