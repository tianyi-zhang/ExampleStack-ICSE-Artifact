<p><a href="http://developer.android.com/reference/android/widget/ArrayAdapter.html" rel="nofollow">http://developer.android.com/reference/android/widget/ArrayAdapter.html</a></p>

<p>You can do as below picked from patrick's answer @
<a href="http://stackoverflow.com/questions/16062569/how-to-construct-and-display-the-info-in-simple-list-item-2">How to construct and display the info in simple_list_item_2?</a></p>

<pre><code>new ArrayAdapter (context, android.R.layout.simple_list_item_2, android.R.id.text1, list)
  {
    public View getView(int position, View convertView, ViewGroup parent) {
      View view = super.getView(position, convertView, parent);
      TextView text1 = (TextView) view.findViewById(android.R.id.text1);
      TextView text2 = (TextView) view.findViewById(android.R.id.text2);
      text1.setText(elename[positon]);
      text2.setText(nos[position]);
      return view;
    }
  });
</code></pre>

<p>Or use a CustomAdapter extending ArrayAdapter</p>

<pre><code>  class CustomAdapter extends ArrayAdapter&lt;String&gt;
  {
       String A[],B[];
       LayoutInfalter mInfalter;    
       public CustomAdapter(Context context, String[] A,String B[])
       {
          super(context,R.layout.customlayout,A);
          this.A = A;
          this.B = B;
          mInfalter = LayoutInfalter.from(context);
       }   
        public View getView(int position, View convertView, ViewGroup parent) {
          ViewHolder holder;
          if(convertView==null)
          {
               convertView = mInflater.inflate(R.layout.customlayout,parent,false);
               holder = new ViewHolder();
               holder.tv1 = (TextView)convertView.findViewById(R.id.textView1); 
               holder.tv2 = (TextView)convertView.findViewById(R.id.textView2);  
               convertView.setTag(holder); 
          }else{
                holder = (ViewHolder)convertVire.getTag();
          } 

                holder.tv1.setText(A[positon]);
                holder.tv2.setText(B[position]);
          return convertVIew;
    }
    static class ViewHolder
    {
        TextView tv1,tv2;
    }    
  }
</code></pre>

<p>Have a layout <code>customlayout.xml</code> with 2 textviews with id textView1 and textView 2 repectively.</p>

<p>Then</p>

<pre><code> CustomAdapter cus = new CustomAdapter(ActivityName.this,elename,nos);
 navList.setAdapter(cus);
</code></pre>
