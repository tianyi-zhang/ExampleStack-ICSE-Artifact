<p>You can piece it together from this answer I gave you the other day:
<a href="http://stackoverflow.com/questions/29465996/how-to-get-json-object-using-httpurlconnection-instead-of-volley/29466338#29466338">How to get JSON object using HttpURLConnection instead of Volley?</a></p>

<p>... and the answer here:  <a href="http://stackoverflow.com/questions/4205980/java-sending-http-parameters-via-post-method-easily/4206094#4206094">Java - sending HTTP parameters via POST method easily</a></p>

<p>That being said, the easiest way to get started sending POST data and getting a JSON result is to just use the old APIs.</p>

<p>Here's a working example:</p>

<pre><code>class CreateNewProduct extends AsyncTask&lt;String, String, JSONObject&gt; {

        InputStream is = null;
        JSONObject jObj = null;
        String json = "";

        /**
         * Before starting background thread Show Progress Dialog
         * */
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            pDialog = new ProgressDialog(ShareNewMessage.this);
            pDialog.setMessage("Sharing Message...");
            pDialog.setIndeterminate(false);
            pDialog.setCancelable(true);
            pDialog.show();
        }

        /**
         * Creating product
         * */
        protected JSONObject doInBackground(String... args) {

            String message = inputMessage.getText().toString();

            // Building Parameters
            List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
            params.add(new BasicNameValuePair("name", username));
            params.add(new BasicNameValuePair("message", message));

            Log.d("Share", "Sharing message, username: " + username + " message: " + message);

            try {
                DefaultHttpClient httpClient = new DefaultHttpClient();
                HttpPost httpPost = new HttpPost(url_create_message);
                httpPost.setEntity(new UrlEncodedFormEntity(params));

                HttpResponse httpResponse = httpClient.execute(httpPost);
                HttpEntity httpEntity = httpResponse.getEntity();
                is = httpEntity.getContent();

            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            } catch (ClientProtocolException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }


            try {
                BufferedReader reader = new BufferedReader(new InputStreamReader(
                        is, "iso-8859-1"), 8);
                StringBuilder sb = new StringBuilder();
                String line = null;
                while ((line = reader.readLine()) != null) {
                    sb.append(line + "\n");
                }
                is.close();
                json = sb.toString();
            } catch (Exception e) {
                Log.e("Share", "Error converting InputStream result " + e.toString());
            }

            // try parse the string to a JSON object
            try {
                jObj = new JSONObject(json);
            } catch (JSONException e) {
                Log.e("Share", "Error parsing JSON data " + e.toString());
            }

            try{
                int success = jObj.getInt(TAG_SUCCESS);

                if (success == 1) {
                    // successfully created product

                } else {
                    // failed to create product
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }

            return jObj;
        }

        /**
         * After completing background task Dismiss the progress dialog
         * **/
        protected void onPostExecute(JSONObject jObj) {

            //do something with jObj

            // dismiss the dialog once done
            pDialog.dismiss();
        }

    }
</code></pre>
