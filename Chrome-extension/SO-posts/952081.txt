<p>It seems like you've change the configuration of Tomcat.</p>

<p>Either  you've changed to a l{0,1}[iu]n[iu]x box or installed on a virtual machine with different security control than the one where you test it. </p>

<p>Apparently the </p>

<pre><code> GraphicsEnvironment.getLocalGraphicsEnvironment()
</code></pre>

<p>Is trying to access the property: <em>java.awt.graphicsenv</em></p>

<p>Which may return null or some non existing class name which is then loaded and throws the ClassNotFoundException. <sup><a href="http://www.docjar.com/docs/api/java/awt/GraphicsEnvironment.html#getLocalGraphicsEnvironment" rel="nofollow">1</a></sup></p>

<p>The solution seems to be specifying the "java.awt.headless" property. </p>

<p>This is a similar question: <a href="http://stackoverflow.com/questions/427482/java-awt-color-error">java.awt.Color error</a></p>

<p>Try this <a href="http://www.google.com/search?hl=en&amp;q=%22-Djava.awt.headless%3Dtrue%22+GraphicsConfiguration&amp;btnG=Search&amp;aq=f&amp;oq=&amp;aqi=" rel="nofollow">search</a> , it shows similar situations as your. </p>

<p>I remember there was something in the sun bugs database too.</p>

<p>Post the solution when you find it!</p>

<p><sub>1.<a href="http://www.docjar.com/docs/api/java/awt/GraphicsEnvironment.html#getLocalGraphicsEnvironment" rel="nofollow">GraphicsEnvironment.java</a></p>

<p></sub></p>

<p><strong>EDIT</strong></p>

<p>It is not eclipse!!</p>

<p>In my original post there is a link to the source code of the class which is throwing the exception. </p>

<p>Since I looks like you miss it, I'll post it here for you:</p>

<pre><code>       public static synchronized GraphicsEnvironment getLocalGraphicsEnvironment() {
          if (localEnv == null) {
               // Y O U R   E R R O R  O R I G I N A T E S    H E R E !!! 
              String nm = (String) java.security.AccessController.doPrivileged
                  (new sun.security.action.GetPropertyAction
                   ("java.awt.graphicsenv", null));

              try {
  //                      long t0 = System.currentTimeMillis();
                  localEnv =
                      (GraphicsEnvironment) Class.forName(nm).newInstance();
  //              long t1 = System.currentTimeMillis();
  //              System.out.println("GE creation took " + (t1-t0)+ "ms.");
                  if (isHeadless()) {
                      localEnv = new HeadlessGraphicsEnvironment(localEnv);
                  }
              } catch (ClassNotFoundException e) {
                  throw new Error("Could not find class: "+nm);
              } catch (InstantiationException e) {
                  throw new Error("Could not instantiate Graphics Environment: "
                                  + nm);
              } catch (IllegalAccessException e) {
                  throw new Error ("Could not access Graphics Environment: "
                                   + nm);
              }
          }

          return localEnv;
      }
</code></pre>

<p>That's what gets executed.</p>

<p>And in the original  post which you don't seem to have read, I said the code is accessing the property <em>"java.awt.graphicsenv"</em></p>

<p>If that other project using axis doesn't have the same problem it may be because it may be running in a different tomcat configuration or the axis library allowed the access to that property. But we cannot be sure. That's pure speculation. So why don't you test the following and see what gets printed:</p>

<pre><code>        String nm = (String) java.security.AccessController.doPrivileged
            (new sun.security.action.GetPropertyAction
             ("java.awt.graphicsenv", null));

    System.out.println("java.awt.graphicsenv = " + nm );
</code></pre>

<p>It it prints null then you now what the problem is. You don't have that property in your system, or the security forbids you do use it. </p>

<p>It is very hard to tell you from here: <em>"Go and edit file xyz and add : fail = false</em>" So you have to do your work and try to figure out what's the real reason. </p>

<p>Start by researching what's the code being executed is ( which I have just posted ) and follow by understand what it does and how does all that "AccessController.doPrivileged" works. (You may use Google + StackOverflow for that).</p>
