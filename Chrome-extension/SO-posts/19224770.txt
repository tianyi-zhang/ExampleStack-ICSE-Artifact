<p><strong>list_screen_layout.xml</strong></p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent" &gt;

&lt;ListView
    android:id="@+id/listScreen"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_alignParentLeft="true" &gt;
&lt;/ListView&gt;
</code></pre>

<p></p>

<p><strong>ListScreen Acitivity</strong></p>

<pre><code>    public class ListSreen extends FragmentActivity {
    private ListView list;
    private String[] strData = new String[('Z' - 'A') + 1];;
    private TestAdapter adapterData;
    private int i = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            setContentView(R.layout.list_screen_layout);
            list = (ListView) findViewById(R.id.listScreen);
            for (char c = 'A'; c &lt;= 'Z'; c++) {
                strData[i++] = String.valueOf(c);
            }
            adapterData = new TestAdapter(strData, this);
            list.setAdapter(adapterData);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
</code></pre>

<p><strong>TestAdapter</strong></p>

<pre><code>    public class TestAdapter extends BaseAdapter {
    private int size = 0;

    public TestAdapter(String[] strData, Context cntx) {
        this.strData = strData;
        this.cntx = cntx;
        if (this.strData != null)
            size = this.strData.length;
    }

    String[] strData;
    private Context cntx;

    @Override
    public int getCount() {
        // TODO Auto-generated method stub
        return size;
    }

    @Override
    public String getItem(int position) {
        // TODO Auto-generated method stub
        return this.strData[position];
    }

    @Override
    public long getItemId(int position) {
        // TODO Auto-generated method stub
        return position;
    }

    class Holder {
        TextView lbl;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        Holder holder;
        if (convertView == null) {
            holder = new Holder();
            convertView = LayoutInflater.from(cntx).inflate(
                    R.layout.list_row_item, null);
            holder.lbl = (TextView) convertView.findViewById(R.id.lbl_text);
            convertView.setTag(holder);
        } else {
            holder = (Holder) convertView.getTag();
        }
        /*
         * textview style and all here can also b add here
         */
        holder.lbl.setText(this.strData[position]);

        return convertView;
    }

}
</code></pre>
