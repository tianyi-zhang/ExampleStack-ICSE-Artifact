<p>Try this..</p>

<p>Use <code>notice.setText(" "+success+" ");</code></p>

<pre><code>TextView  notice;
@SuppressLint("NewApi") @Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
    StrictMode.setThreadPolicy(policy); 
    setContentView(R.layout.activity_main);
    notice = (TextView) findViewById(R.id.notice);
    new jsop().execute("");
}

public void Enterdata(JSONObject jsonob) {
try {        
    success = jsonob.getInt("success");
    Log.d("hi", " "+success);
    System.out.print(success);
    notice.setText(" "+success+" ");
} catch (JSONException e) {
    e.printStackTrace();
}
}
</code></pre>

<p><strong>EDIT</strong></p>

<pre><code>protected void onPostExecute(JSONObject jsonob) {
    Enterdata(jsonob);
}
</code></pre>

<p><strong>EDIT</strong></p>

<pre><code>package com.example.test;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.StrictMode;
import android.util.Log;
import android.view.View;
import android.widget.TextView;

public class MainActivity extends Activity {

    int success = 56;
    TextView notice;
   // String requestUrl = "http://hitesh.comeze.com/minor/index.phphttp://hitesh.comeze.com/minor/index.php";
    @SuppressLint("NewApi") @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
        StrictMode.setThreadPolicy(policy); 
        setContentView(R.layout.activity_main);
        notice = (TextView) findViewById(R.id.notice);
        new jsop().execute("");
    }

public void Enterdata(JSONObject jsonob) {
    try {
        success = jsonob.getInt("success");
        notice.setText(" "+success+" ");
    } catch (JSONException e) {
        e.printStackTrace();
    }
}

class jsop extends AsyncTask&lt;String,String,JSONObject&gt;
{
    static InputStream is = null;
    static JSONObject jObj = null;
    static String json="";
    @Override
    protected JSONObject doInBackground(String... params) {
        return getJSONFromUrl("http://hitesh.comeze.com/minor/index.php");
    }
    protected void onPostExecute(JSONObject jsonob) {
    new MainActivity().Enterdata(jsonob);
    }
    public JSONObject getJSONFromUrl(String url) {

        // Making HTTP request
        try {
            // defaultHttpClient
            DefaultHttpClient httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost(url);

            HttpResponse httpResponse = httpClient.execute(httpPost);
            if(httpResponse!=null)
            {HttpEntity httpEntity = httpResponse.getEntity();
            is = httpEntity.getContent();
            }
            else
            {
                System.out.print("htttpresponse");
            }
        } 
        catch (Exception e) {
        e.printStackTrace();
        }

        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    is, "iso-8859-1"), 8);
            StringBuilder sb = new StringBuilder();
        String line = null;
        if(reader!=null)
        {
        while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
        }
            is.close();
            json = sb.toString();
        } catch (Exception e) {
            Log.e("Buffer Error", "Error converting result " + e.toString());
        }

   // try parse the string to a JSON object
    try {
        jObj = new JSONObject(json);
 } catch (JSONException e) {
        Log.e("JSON Parser", "Error parsing data " + e.toString());
    }

    // return JSON String
        return jObj;
}

}
}
</code></pre>
