<p>In my opinion, you can put your gridview and your http request in one fragment, such as PpFragment. And then you can init your gridview by using the data you get from the internet. </p>

<p>Here is the gridview adapter:</p>

<p>Part1:</p>

<pre><code>private class ImageAdapter extends BaseAdapter{
    public ImageAdapter() {
    }

    @Override
    public int getCount() {
        return tableList.size();
    }

    @Override
    public Object getItem(int position) {
        return tableList.get(position);  //tableList is your data source
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }

    class ViewHolder {
        TextView name;
        TextView id;
    }

    @Override
    public View getView(final int position, View convertView, ViewGroup parent) {
        final ViewHolder holder;

        if(convertView==null){  
            //layout.item  is your item layout of your gridview
            convertView = getLayoutInflater().inflate(R.layout.item, null);   
            holder = new ViewHolder();
            holder.name = (TextView)convertView.findViewById(R.id.name);
            holder.id = (ImageView)convertView.findViewById(R.id.id);
            //name and id is your view of your gridview item, for the ID and NAME

            convertView.setTag(holder);
        }else{
            holder = (ViewHolder) convertView.getTag();
        }

        holder.name.setText(tableList.get(position).get("aaaa"));
        holder.id.setText(tableList.get(position).get("xxxx"));
        //Here you can assign values to your TextView with the value you get from the data source.


        return convertView;
    }   
}
</code></pre>

<p>You can init your gridview below:</p>

<p>Part2:</p>

<pre><code>//view is your layout of one fragment,such as PpFragment.
  GridView gridView = (GridView)view.findViewById(R.id.gridviewss);
  ImageAdapter imageAdapter = new ImageAdapter();
  gridView.setAdapter(imageAdapter);
</code></pre>

<p>the gridview layout xml:</p>

<p>Part3:  R.id.gridviewss:</p>

<pre><code>&lt;GridView
  android:id="@+id/gridviewss"
  android:layout_width="fill_parent"
  android:layout_height="fill_parent"
  android:numColumns="3"
  android:horizontalSpacing="2dp"
  android:verticalSpacing="7.5dp"
  android:stretchMode="columnWidth"
  android:gravity="center"
  android:background="#F1F1F1"
  android:paddingLeft="11.5dp"
  android:paddingRight="11.5dp"
  android:paddingTop="11.5dp"
  &gt;
&lt;/GridView&gt;
</code></pre>

<p>You can start your http request(the getData() method you pasted above) in the fragment method, such as onCreateView of your fragment PpFragment, and then you can init your adapter with Part2 code when you get the data from the host(After you invoke the method showList()).</p>

<p>I hope this could be helpful.</p>

<p>Part4:
  R.layout.frag_uno_item:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:orientation="vertical" &gt;

 &lt;TextView
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
     android:id="@+id/id"
     /&gt;

 &lt;TextView
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
     android:id="@+id/name"
     /&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>And then Fragment_Uno.java:</p>

<pre><code>package com.example.stackproject;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ProgressDialog;
import android.content.Context;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.TextView;

public class Fragment_Uno extends Fragment {
String myJSON;
private ProgressDialog pDialog;


private static final String TAG_RESULTS = "result";
private static final String TAG_ID = "ID";
private static final String TAG_NAME = "Nome";
JSONArray serv_man = null;
ArrayList&lt;HashMap&lt;String, String&gt;&gt; tableList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();


@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container,
                         Bundle savedInstanceState) {

    View view = inflater.inflate(R.layout.frag_uno, container, false);
    getData();
    return view;

}
protected void showList(){
    try {
        JSONObject jsonObj = new JSONObject(myJSON);
        serv_man = jsonObj.getJSONArray(TAG_RESULTS);

        for(int i=0;i&lt;serv_man.length();i++){
            JSONObject c = serv_man.getJSONObject(i);
            String id = c.getString(TAG_ID);
            String name = c.getString(TAG_NAME);

            HashMap&lt;String,String&gt; persons = new HashMap&lt;String,String&gt;();

            persons.put(TAG_NAME,name);
            persons.put(TAG_ID, id);
            tableList.add(persons);
        }

        View view = getActivity().getLayoutInflater().inflate(R.layout.frag_uno, null);
        GridView gridView = (GridView) view.findViewById(R.id.gridView2);
        ImageAdapter imageAdapter = new ImageAdapter();
        gridView.setAdapter(imageAdapter);
    } catch (JSONException e) {
        e.printStackTrace();
    }

}


public void getData(){
    class GetDataJSON extends AsyncTask&lt;String, Void, String&gt; {

        @Override
        protected String doInBackground(String... params) {
            DefaultHttpClient httpclient = new DefaultHttpClient(new BasicHttpParams());
            HttpPost httppost = new HttpPost("http://etc.collab.php");

            // Depends on your web service
            httppost.setHeader("Content-type", "application/json");

            InputStream inputStream = null;
            String result = null;
            try {
                HttpResponse response = httpclient.execute(httppost);
                HttpEntity entity = response.getEntity();

                inputStream = entity.getContent();
                // json is UTF-8 by default
                BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, "UTF-8"), 8);
                StringBuilder sb = new StringBuilder();

                String line = null;
                while ((line = reader.readLine()) != null)
                {
                    sb.append(line + "\n");
                }
                result = sb.toString();
                Log.d("Log_Tag", "xxx" + result);
                //view is your layout of one fragment,such as PpFragment.


            } catch (Exception e) {
                // Oops
                Log.e("log_tag", "Error converting result " + e.toString());
            }
            finally {
                try{if(inputStream != null)inputStream.close();}catch(Exception squish){}
            }
            return result;
        }

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            // pDialog = new ProgressDialog(PpFragment.this);
            //  pDialog.setMessage("Obtaining list...");
            //  pDialog.setIndeterminate(false);
            //  pDialog.setCancelable(true);
            //  pDialog.show();
        }


        @Override
        protected void onPostExecute(String result){
            //       pDialog.dismiss();
            myJSON=result;
            showList();
        }
    }
    GetDataJSON g = new GetDataJSON();
    g.execute();
}


public class ImageAdapter extends BaseAdapter {
    private Context mContext;
    private View layoutInflater;

    public ImageAdapter(Context c) {
        mContext = c;
    }

    public ImageAdapter() {
    }

    @Override
    public int getCount() {
        return tableList.size();
    }

    @Override
    public Object getItem(int position) {
        return tableList.get(position);  //tableList is your data source
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }



    class ViewHolder {
        TextView name;
        TextView id;
    }

    @Override
    public View getView(final int position, View convertView, ViewGroup parent) {
        final ViewHolder holder;

        if (convertView == null) {
            //layout.item  is your item layout of your gridview
            convertView = getActivity().getLayoutInflater().inflate(R.layout.frag_uno_item, null);
               holder = new ViewHolder();
               holder.name = (TextView)convertView.findViewById(R.id.name);
               holder.id = (TextView)convertView.findViewById(R.id.id);
            //name and id is your view of your gridview item, for the ID and NAME

               convertView.setTag(holder);
        } else {
                          holder = (ViewHolder) convertView.getTag();
        }

         holder.name.setText(tableList.get(position).get(TAG_NAME));
         holder.id.setText(tableList.get(position).get(TAG_ID));
        //Here you can assign values to your TextView with the value you get from the data source.


        return convertView;
    }
}
</code></pre>

<p>}</p>
