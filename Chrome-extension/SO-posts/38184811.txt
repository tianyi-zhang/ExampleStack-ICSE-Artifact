<p>this is why because your actionbar getting null pointer exeption: </p>

<p>try like this</p>

<pre><code>assert actionbar != null;
if(actionbar != null){
   **write your code here**
}
</code></pre>

<p>now its never be null..</p>

<ol start="2">
<li><p>you are using appCompateActivity so use getSupportActionBar.  add this lines in your every subActivity in onCreate method.</p>

<pre><code>     assert getSupportActionBar() != null;
   // getSupportActionBar().setDisplayHomeAsUpEnabled(true);
    getSupportActionBar().setDisplayShowHomeEnabled(true);
    getSupportActionBar().setTitle("Your Title Here");
</code></pre></li>
</ol>

<p>that commented line is for back button at upper left corner.. if you want it then uncomment it. and write some line in manifest to do some back button action.</p>

<pre><code>&lt;activity android:name=".yourSubActivityName"&gt;
    &lt;meta-data
        android:name="android.support.PARENT_ACTIVITY"
        android:value=".whichActivityYouWantToGo" /&gt;
&lt;/activity&gt;
</code></pre>

<ol start="3">
<li><p>if you are in mainActivity and want to exit app using dialog.. here is the code.</p>

<pre><code>@Override
public void onBackPressed() {
    AlertDialog.Builder builder = new AlertDialog.Builder(context);
    builder.setMessage("Are you sure you want to exit?")
            .setPositiveButton("Yes",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int id) {
                            dialog.dismiss();
                            finish();
                        }
                    })
            .setNegativeButton("No", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int id) {
                    dialog.dismiss();
                }
            });
    // Create the AlertDialog object and return it
    builder.create();
    builder.show();
}
</code></pre></li>
</ol>
