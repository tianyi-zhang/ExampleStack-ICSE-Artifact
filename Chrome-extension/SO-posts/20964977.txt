<pre><code>This is working for my apps... Try this...

private void showNotification(Context context) {
        // TODO AK-generated method stub
        String appName = context.getString(R.string.app_name);
        NotificationCompat.Builder mBuilder =
                new NotificationCompat.Builder(context)
                        .setSmallIcon(R.drawable.notification_icon)
                        .setContentTitle(appName)
                        .setContentText(appName);

        Uri sound = Uri.parse("android.resource://" + context.getPackageName() + "/raw/" + audioToneName);
        mBuilder.setSound(sound);
        mBuilder.setAutoCancel(true);
        mBuilder.setVibrate(Utility.vibrationPattern);
        // Creates an explicit intent for an Activity in your app
        Intent resultIntent = new Intent(context, RootActivity.class);
        // The stack builder object will contain an artificial back stack for
        // the
        // started Activity.
        // This ensures that navigating backward from the Activity leads out of
        // your application to the Home screen.
        TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);
        // Adds the back stack for the Intent (but not the Intent itself)
        stackBuilder.addParentStack(RootActivity.class);
        // Adds the Intent that starts the Activity to the top of the stack
        stackBuilder.addNextIntent(resultIntent);
        PendingIntent resultPendingIntent =
                stackBuilder.getPendingIntent(
                        0,
                        PendingIntent.FLAG_UPDATE_CURRENT
                        );
        mBuilder.setContentIntent(resultPendingIntent);
        NotificationManager mNotificationManager =
                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
        // mId allows you to update the notification later on.
        mNotificationManager.notify(321, mBuilder.build());
    }
</code></pre>
