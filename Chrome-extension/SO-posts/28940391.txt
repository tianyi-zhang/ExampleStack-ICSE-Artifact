<p>I see things in your adapter that I don't see clear. Try to modify your adapter, to be more like this:</p>

<p>This part is about my project, so you will have to adapt to yours:</p>

<pre><code>private Activity context;
    private Map&lt;String, List&lt;RosterEntry&gt;&gt; groupsCollections;
    private List&lt;String&gt; groups;

    public ExpandableListContactsAdapter(Activity conxtext, List&lt;String&gt; groups,
            Map&lt;String, List&lt;RosterEntry&gt;&gt; groupsCollections) {
        this.context = conxtext;
        this.groupsCollections = groupsCollections;
        this.groups = groups;
    }
</code></pre>

<p>FROM THIS PART YOU HAVE TO CHECK  THE METHODS.</p>

<p>you have some methods returning null, or 0. Try to fix it</p>

<pre><code>@Override
    public int getGroupCount() {
        return groups.size();
    }

@Override
public int getChildrenCount(int groupPosition) {
    return groupsCollections.get(groups.get(groupPosition)).size();
}

@Override
public Object getGroup(int groupPosition) {
    return groups.get(groupPosition);
}

@Override
public Object getChild(int groupPosition, int childPosition) {

    return groupsCollections.get(groups.get(groupPosition)).get(childPosition);
}

@Override
public long getGroupId(int groupPosition) {
    return groupPosition;
}

@Override
public long getChildId(int groupPosition, int childPosition) {
    return childPosition;
}

@Override
public boolean hasStableIds() {
    return true;
}

@Override
public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {

    String groupName = (String) getGroup(groupPosition);

    if (convertView == null) {
        LayoutInflater infalInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        convertView = infalInflater.inflate(R.layout.user_contacts_group, null);
    }

    TextView item = (TextView) convertView.findViewById(R.id.user_Group);
    item.setTypeface(null, Typeface.BOLD);
    item.setText(groupName);

    return convertView;
}

@Override
public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView,
        ViewGroup parent) {

    final RosterEntry contact = (RosterEntry) getChild(groupPosition, childPosition);

    LayoutInflater inflater = context.getLayoutInflater();

    if (convertView == null) {
        convertView = inflater.inflate(R.layout.user_contacts_contact, null);
    }

    TextView item_name = (TextView) convertView.findViewById(R.id.expandable_user_name);
    TextView item_email = (TextView) convertView.findViewById(R.id.expandable_user_email);

    item_name.setText(contact.getName());
    item_email.setText(contact.getUser());
    return convertView;
}

@Override
public boolean isChildSelectable(int groupPosition, int childPosition) {
    return true;
}
</code></pre>
