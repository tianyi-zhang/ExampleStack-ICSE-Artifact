<p>Please find the GitHub Repo: <strong><a href="https://github.com/davcpas1234/MaterialSettings">Here</a></strong></p>

<hr>

<p>Very Similar to your own code but added xml to allow for set title:</p>

<p>Continuing to use <code>PreferenceActivity</code>:</p>

<p><code>settings_toolbar.xml :</code> </p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.v7.widget.Toolbar
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/toolbar"
    app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:minHeight="?attr/actionBarSize"
    app:navigationContentDescription="@string/abc_action_bar_up_description"
    android:background="?attr/colorPrimary"
    app:navigationIcon="?attr/homeAsUpIndicator"
    app:title="@string/action_settings"
    /&gt;
</code></pre>

<p><code>SettingsActivity.java :</code></p>

<pre><code>public class SettingsActivity extends PreferenceActivity {

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);

        LinearLayout root = (LinearLayout)findViewById(android.R.id.list).getParent().getParent().getParent();
        Toolbar bar = (Toolbar) LayoutInflater.from(this).inflate(R.layout.settings_toolbar, root, false);
        root.addView(bar, 0); // insert at top
        bar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

}
</code></pre>

<p><code>Result :</code></p>

<p><img src="http://i.stack.imgur.com/xYYco.png" alt="example"></p>

<hr>

<h1><strong>UPDATE (Gingerbread Compatibility) :</strong></h1>

<p>As pointed out <a href="http://stackoverflow.com/questions/26564400/creating-a-preference-screen-with-support-v21-toolbar/27455330?noredirect=1#comment43790647_27455330">here</a>, Gingerbread Devices are returning NullPointerException on this line:</p>

<pre><code>LinearLayout root = (LinearLayout)findViewById(android.R.id.list).getParent().getParent().getParent();
</code></pre>

<h2>FIX:</h2>

<p><code>SettingsActivity.java :</code></p>

<pre><code>public class SettingsActivity extends PreferenceActivity {

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        Toolbar bar;

        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN) {
            LinearLayout root = (LinearLayout) findViewById(android.R.id.list).getParent().getParent().getParent();
            bar = (Toolbar) LayoutInflater.from(this).inflate(R.layout.settings_toolbar, root, false);
            root.addView(bar, 0); // insert at top
        } else {
            ViewGroup root = (ViewGroup) findViewById(android.R.id.content);
            ListView content = (ListView) root.getChildAt(0);

            root.removeAllViews();

            bar = (Toolbar) LayoutInflater.from(this).inflate(R.layout.settings_toolbar, root, false);


            int height;
            TypedValue tv = new TypedValue();
            if (getTheme().resolveAttribute(R.attr.actionBarSize, tv, true)) {
                height = TypedValue.complexToDimensionPixelSize(tv.data, getResources().getDisplayMetrics());
            }else{
                height = bar.getHeight();
            }

            content.setPadding(0, height, 0, 0);

            root.addView(content);
            root.addView(bar);
        }

        bar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }
}
</code></pre>

<p>Any issues with the above let me know!</p>

<hr>

<p><strong>UPDATE 2: TINTING WORKAROUND</strong></p>

<p>As pointed out in many dev notes <code>PreferenceActivity</code> does not support tinting of elements, however by utilising a few internal classes you CAN achieve this. That is until these classes are removed. (Works using appCompat support-v7 v21.0.3).</p>

<p>Add the following imports:</p>

<pre><code>import android.support.v7.internal.widget.TintCheckBox;
import android.support.v7.internal.widget.TintCheckedTextView;
import android.support.v7.internal.widget.TintEditText;
import android.support.v7.internal.widget.TintRadioButton;
import android.support.v7.internal.widget.TintSpinner;
</code></pre>

<p>Then override the <code>onCreateView</code> method:</p>

<pre><code>@Override
public View onCreateView(String name, Context context, AttributeSet attrs) {
    // Allow super to try and create a view first
    final View result = super.onCreateView(name, context, attrs);
    if (result != null) {
        return result;
    }

    if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.LOLLIPOP) {
        // If we're running pre-L, we need to 'inject' our tint aware Views in place of the
        // standard framework versions
        switch (name) {
            case "EditText":
                return new TintEditText(this, attrs);
            case "Spinner":
                return new TintSpinner(this, attrs);
            case "CheckBox":
                return new TintCheckBox(this, attrs);
            case "RadioButton":
                return new TintRadioButton(this, attrs);
            case "CheckedTextView":
                return new TintCheckedTextView(this, attrs);
        }
    }

    return null;
}
</code></pre>

<p><code>Result:</code></p>

<p><img src="http://i.stack.imgur.com/PUzqh.png" alt="example 2"></p>

<hr>

<h2><em>AppCompat 22.1</em></h2>

<p>AppCompat 22.1 introduced new tinted elements, meaning that there is no longer a need to utilise the internal classes to achieve the same effect as the last update. Instead follow this (still overriding <code>onCreateView</code>):</p>

<pre><code>@Override
public View onCreateView(String name, Context context, AttributeSet attrs) {
    // Allow super to try and create a view first
    final View result = super.onCreateView(name, context, attrs);
    if (result != null) {
        return result;
    }

    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN) {
        // If we're running pre-L, we need to 'inject' our tint aware Views in place of the
        // standard framework versions
        switch (name) {
            case "EditText":
                return new AppCompatEditText(this, attrs);
            case "Spinner":
                return new AppCompatSpinner(this, attrs);
            case "CheckBox":
                return new AppCompatCheckBox(this, attrs);
            case "RadioButton":
                return new AppCompatRadioButton(this, attrs);
            case "CheckedTextView":
                return new AppCompatCheckedTextView(this, attrs);
        }
    }

    return null;
}
</code></pre>

<hr>

<p><strong>NESTED PREFERENCE SCREENS</strong></p>

<p>A lot of people are experiencing issues with including the Toolbar in nested <code>&lt;PreferenceScreen /&gt;</code>s however, I have found a solution!! - After a lot of trial and error!</p>

<p>Add the following to your <code>SettingsActivity</code>:</p>

<pre><code>@SuppressWarnings("deprecation")
@Override
public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {
    super.onPreferenceTreeClick(preferenceScreen, preference);

    // If the user has clicked on a preference screen, set up the screen
    if (preference instanceof PreferenceScreen) {
        setUpNestedScreen((PreferenceScreen) preference);
    }

    return false;
}

public void setUpNestedScreen(PreferenceScreen preferenceScreen) {
    final Dialog dialog = preferenceScreen.getDialog();

    Toolbar bar;

    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
        LinearLayout root = (LinearLayout) dialog.findViewById(android.R.id.list).getParent();
        bar = (Toolbar) LayoutInflater.from(this).inflate(R.layout.settings_toolbar, root, false);
        root.addView(bar, 0); // insert at top
    } else {
        ViewGroup root = (ViewGroup) dialog.findViewById(android.R.id.content);
        ListView content = (ListView) root.getChildAt(0);

        root.removeAllViews();

        bar = (Toolbar) LayoutInflater.from(this).inflate(R.layout.settings_toolbar, root, false);

        int height;
        TypedValue tv = new TypedValue();
        if (getTheme().resolveAttribute(R.attr.actionBarSize, tv, true)) {
            height = TypedValue.complexToDimensionPixelSize(tv.data, getResources().getDisplayMetrics());
        }else{
            height = bar.getHeight();
        }

        content.setPadding(0, height, 0, 0);

        root.addView(content);
        root.addView(bar);
    }

    bar.setTitle(preferenceScreen.getTitle());

    bar.setNavigationOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            dialog.dismiss();
        }
    });
}
</code></pre>

<p>The reason that <code>PreferenceScreen</code>'s are such a pain is because they are based as a wrapper dialog, so we need to capture the dialog layout to add the toolbar to it.</p>

<hr>

<h2>Toolbar Shadow</h2>

<p>By design importing the <code>Toolbar</code> does not allow for elevation and shadowing in pre-v21 devices, so if you would like to have elevation on your <code>Toolbar</code> you need to wrap it in a <code>AppBarLayout</code>:</p>

<p>`settings_toolbar.xml :</p>

<pre><code>&lt;android.support.design.widget.AppBarLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content"&gt;

   &lt;android.support.v7.widget.Toolbar
       .../&gt;

&lt;/android.support.design.widget.AppBarLayout&gt;
</code></pre>

<p>Not forgetting to add the add the Design Support library as a dependency in <code>build.gradle</code> file:</p>

<pre><code>compile 'com.android.support:support-v4:22.2.0'
compile 'com.android.support:appcompat-v7:22.2.0'
compile 'com.android.support:design:22.2.0'
</code></pre>

<hr>

<h2>Android 6.0</h2>

<p>I have investigated the reported overlapping issue and I cannot reproduce the issue.</p>

<p>The full code in use as above produces the following:</p>

<p><a href="http://i.stack.imgur.com/mggWc.jpg"><img src="http://i.stack.imgur.com/mggWc.jpg" alt="enter image description here"></a></p>

<p>If I am missing something please let me know via <a href="https://github.com/davcpas1234/MaterialSettings">this repo</a> and I will investigate.</p>
