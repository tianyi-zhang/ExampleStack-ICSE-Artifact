<p>I have three main perplexity about your program:</p>

<ol>
<li>Do you run the following code in an asynctask? (this must run asincronusly otherwise it will block)</li>
<li>Why it loop infinitly?</li>
<li>You couldn't open an url or a file named with a '*' inside of it</li>
</ol>

<p><strong>Edit:</strong></p>

<p>You must run the download method asincronusly otherwise it wouldn't work, <strong>interaction with filesystem and network couldn't be done in the main thread</strong></p>

<p><strong>Edit2:</strong></p>

<p>AsyncTask should be something like this</p>

<pre><code>private class DownloadTask extends AsyncTask&lt;String, Integer, String&gt; {

 private Context context;

    public DownloadTask(Context context) {
        this.context = context;
    }

    @Override
    protected String doInBackground(String... sUrl) {
        InputStream input = null;
        OutputStream output = null;
        HttpURLConnection connection = null;
        try {
            URL url = new URL(sUrl[0]);
            connection = (HttpURLConnection) url.openConnection();
            connection.connect();

            // expect HTTP 200 OK, so we don't mistakenly save error report
            // instead of the file
            if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
                return "Server returned HTTP " + connection.getResponseCode()
                        + " " + connection.getResponseMessage();
            }

            // download the file
            input = connection.getInputStream();
            output = new FileOutputStream("/sdcard/file_name.extension");//put here your path and your mkdirs

            byte data[] = new byte[4096];
            long total = 0;
            int count;
            while ((count = input.read(data)) != -1) {

                total += count;
                output.write(data, 0, count);
            }
        } catch (Exception e) {
            return e.toString();
        } finally {
            try {
                if (output != null)
                    output.close();
                if (input != null)
                    input.close();
            } catch (IOException ignored) {
            }

            if (connection != null)
                connection.disconnect();
        }
        return null;
    }
 @Override
    protected void onPostExecute(String result) {
        if (result != null)
            Toast.makeText(context,"Download error: "+result, Toast.LENGTH_LONG).show();
        else
            Toast.makeText(context,"File downloaded", Toast.LENGTH_SHORT).show();
    }
}
</code></pre>

<p>And you shoould call it like this</p>

<pre><code>DownloadTask downloadTask = new DownloadTask(YourActivity.this);
downloadTask.execute("the url to the file you want to download");
</code></pre>

<p>You could also have a look at this <a href="http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog">answer</a></p>
