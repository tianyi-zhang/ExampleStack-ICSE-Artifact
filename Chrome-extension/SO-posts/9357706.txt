<p>You have a 9x9 2D array of integers. Your aim is dividing it into 9 3x3 2D array of integers. Take a look at <code>check()</code> method which controls a 3x3 array for duplicate digits.
If it finds duplicate digits, it returns false;</p>

<p>Scrutinize and test my code:</p>

<pre><code>import java.util.ArrayList;

public class Main
{
    public static void main(String[] args)
    {
        int[][] input = {{1,1,1,1,1,1,1,1,1},
                         {2,2,2,2,2,2,2,2,2},
                         {3,3,3,3,3,3,3,3,3},
                         {4,4,4,4,4,4,4,4,4},
                         {1,2,3,4,5,6,7,8,9},
                         {6,6,6,6,6,6,6,6,6},
                         {7,7,7,7,7,7,7,7,7},
                         {8,8,8,8,8,8,8,8,8},
                         {9,9,9,9,9,9,9,9,9}};

        int[][][] output = get3DVersion(input);

        for(int i=1; i&lt;=output.length; i++)
            System.out.println("Validity of subArray #"+i+" : " +check(output[i-1]));
    }

    public static boolean check(int[][] array)
    {
        ArrayList&lt;Integer&gt; soFar = new ArrayList&lt;Integer&gt;();

         for(int j=0; j&lt;3; j++)
             for(int k=0; k&lt;3; k++)
             {
                 if(soFar.contains(array[j][k]))
                     return false;
                 else
                     soFar.add(array[j][k]);
             }
         return true;
    }

    public static int[][][] get3DVersion(int[][] input)
    {
        int[][][] output = new int[9][3][3];

        for(int i=0; i&lt;9; i++)
            for(int j=0; j&lt;3; j++)
                for(int k=0; k&lt;3; k++)
                    output[i][j][k] = input[i][j*3+k];

        output[8][2][2] = input[8][8];

        return output;
    }
}
</code></pre>
