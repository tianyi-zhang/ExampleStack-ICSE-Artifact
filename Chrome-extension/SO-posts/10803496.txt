<p>Ok I figured it out: do not use TimerTask. This does not work as expected. I'm pretty sure I was following an example somewhere that told me to do it this way, but on second thought, it looks flawed.</p>

<p>I changed everything so that it is done in the onUpdate(), and removed all the timer stuff. Android will call this function at a maximum rate of every 30 minutes.</p>

<p>So simple now too :)</p>

<p>SOLUTION:</p>

<pre><code>public class MistakeArchiveWidgetProvider extends AppWidgetProvider 
{
  @Override
  public void onUpdate(Context context, AppWidgetManager appWidgetManager,
      int[] appWidgetIds)
  {
    // When the widget is clicked, launch the app.
    for (int widgetIndex = 0; widgetIndex &lt; appWidgetIds.length; widgetIndex++) 
    {
      int appWidgetId = appWidgetIds[widgetIndex];

      RemoteViews views = new RemoteViews(context.getPackageName(),
          R.layout.mistake_archive_widget);

      // Get the layout for the App Widget and attach an on-click listener.
      {
        Intent intent = new Intent(context, QuizActivity.class);
        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);

        views.setOnClickPendingIntent(R.id.STATIC_CUE, pendingIntent);
        views.setOnClickPendingIntent(R.id.STATIC_ANSWER, pendingIntent);
      }

      views.setTextViewText(R.id.STATIC_CUE, cueString);
      views.setTextViewText(R.id.STATIC_ANSWER, cueAnswer);

      // Tell the AppWidgetManager to perform an update on the current app widget
      appWidgetManager.updateAppWidget(appWidgetId, views);
    }
  }
}
</code></pre>
