<pre><code>//Little changes in this piece of code
  float[] dst; //Global

public SampleView(Context context) {
        super(context);
        setFocusable(true);

        mBitmap = BitmapFactory.decodeResource(getResources(),
                R.drawable.image1);

        float w = mBitmap.getWidth();
        float h = mBitmap.getHeight();
        // construct our mesh
        int index = 0;
        for (int y = 0; y &lt;= HEIGHT; y++) {
            float fy = h * y / HEIGHT;
            for (int x = 0; x &lt;= WIDTH; x++) {
                float fx = w * x / WIDTH;
                setXY(mVerts, index, fx, fy);
                setXY(mOrig, index, fx, fy);
                index += 1;

                dst=mVerts;//Assign dst here just once

            }
        }

        mMatrix.setTranslate(10, 10);
        mMatrix.invert(mInverse);
    }

    @Override
    protected void onDraw(Canvas canvas) {
        canvas.drawColor(0xFFCCCCCC);

        canvas.concat(mMatrix);
        canvas.drawBitmapMesh(mBitmap, WIDTH, HEIGHT, mVerts, 0, null, 0,
                null);
    }

    private void warp(float cx, float cy) {
        final float K = 10000;
        float[] src = dst; //now you are applying wrap effect on the last effected pixels

        for (int i = 0; i &lt; COUNT * 2; i += 2) {
            float x = src[i + 0];
            float y = src[i + 1];
            float dx = cx - x;
            float dy = cy - y;
            float dd = dx * dx + dy * dy;
            float d = FloatMath.sqrt(dd);
            float pull = K / (dd + 0.000001f);

            pull /= (d + 0.000001f);
            // android.util.Log.d("skia", "index " + i + " dist=" + d +
            // " pull=" + pull);

            if (pull &gt;= 1) {
                dst[i + 0] = cx;
                dst[i + 1] = cy;
            } else {
                dst[i + 0] = x + dx * pull;
                dst[i + 1] = y + dy * pull;
            }
        }

    }
</code></pre>
