<p>Why is there a difference between local and Team city?
--> localy hibernate debug is disabled, whereas on Team City it is enabled.</p>

<p>The issue comes from the pretty print done by hibernate in debug mode.</p>

<p>To get the property enumField, it uses the field's getter, as we can see in class AbstractEntityTuplizer :</p>

<pre><code>public Object[] getPropertyValues(Object entity) throws HibernateException {
    boolean getAll = shouldGetAllProperties( entity );
    final int span = entityMetamodel.getPropertySpan();
    final Object[] result = new Object[span];

    for ( int j = 0; j &lt; span; j++ ) {
        StandardProperty property = entityMetamodel.getProperties()[j];
        if ( getAll || !property.isLazy() ) {
            result[j] = getters[j].get( entity );
        }
        else {
            result[j] = LazyPropertyInitializer.UNFETCHED_PROPERTY;
        }
    }
    return result;
}
</code></pre>

<p>In our case, the getter returns an object MyEnum.</p>

<p>In the pretty printer, we call toString on a StringType (defined from the type of the field).
The StringType toString methode is :</p>

<pre><code>public String toString(Object value) {
    return (String) value;
}
</code></pre>

<p>Since the value has been retrieved through the getter, a ClassCastException is thrown.</p>
