<p>I have the same problem.  I am trying to find all lines that start with some prefix in a sorted file.  </p>

<p>Here is a method I cooked up which is largely a port of Python code found here: <a href="http://www.logarithmic.net/pfh/blog/01186620415" rel="nofollow">http://www.logarithmic.net/pfh/blog/01186620415</a></p>

<p>I have tested it but not thoroughly just yet.  It does not use memory mapping, though.</p>

<pre><code>public static List&lt;String&gt; binarySearch(String filename, String string) {
    List&lt;String&gt; result = new ArrayList&lt;String&gt;();
    try {
        File file = new File(filename);
        RandomAccessFile raf = new RandomAccessFile(file, "r");

        long low = 0;
        long high = file.length();

        long p = -1;
        while (low &lt; high) {
            long mid = (low + high) / 2;
            p = mid;
            while (p &gt;= 0) {
                raf.seek(p);

                char c = (char) raf.readByte();
                //System.out.println(p + "\t" + c);
                if (c == '\n')
                    break;
                p--;
            }
            if (p &lt; 0)
                raf.seek(0);
            String line = raf.readLine();
            //System.out.println("-- " + mid + " " + line);
            if (line.compareTo(string) &lt; 0)
                low = mid + 1;
            else
                high = mid;
        }

        p = low;
        while (p &gt;= 0) {
            raf.seek(p);
            if (((char) raf.readByte()) == '\n')
                break;
            p--;
        }

        if (p &lt; 0)
            raf.seek(0);

        while (true) {
            String line = raf.readLine();
            if (line == null || !line.startsWith(string))
                break;
            result.add(line);
        }

        raf.close();
    } catch (IOException e) {
        System.out.println("IOException:");
        e.printStackTrace();
    }
    return result;
}
</code></pre>
