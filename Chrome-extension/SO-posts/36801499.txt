<p>For a few revision the <code>com.android.support:preference-v7</code> support library uses the <code>RecyclerView</code> in order to display the settings now. Out of the box the RecyclerView doesn't have a divider but adding an <code>ItemDecoration</code> to the RecyclerView will work:</p>

<pre><code>public class YourPreferenceFragment extends PreferenceFragmentCompat {

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        RecyclerView recyclerView = (RecyclerView) getView().findViewById(R.id.list);
        recyclerView.addItemDecoration(
                new DividerItemDecorationPreferences(
                        getActivity(),
                        getResources().getDimensionPixelSize(R.dimen.row_preferences_margin_horizontal),
                        getResources().getDimensionPixelSize(R.dimen.row_preferences_margin_horizontal)));
    }

}
</code></pre>

<p>Obviously you can use whatever Divider you like. As for myself use the following class:</p>

<pre><code>public class DividerItemDecorationPreferences extends RecyclerView.ItemDecoration {

    private Drawable mDivider;
    private int paddingLeft = 0;
    private int paddingRight = 0;

    public DividerItemDecorationPreferences(Context context, int paddingLeft, int paddingRight) {
                mDivider = ContextCompat.getDrawable(context, R.drawable.divider_recycler_view);
        this.paddingLeft = paddingLeft;
        this.paddingRight = paddingRight;
    }

    @Override
    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {
        int left = paddingLeft;
        int right = parent.getWidth() - paddingRight;
        int childCount = parent.getChildCount();
        boolean lastIteration = false;
        for (int i = 0; i &lt; childCount; i++) {
            if (i == childCount - 1)
                lastIteration = true;
            View child = parent.getChildAt(i);
            if (!lastIteration) {
                RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child.getLayoutParams();
                int top = child.getBottom() + params.bottomMargin;
                int bottom = top + mDivider.getIntrinsicHeight();
                mDivider.setBounds(left, top, right, bottom);
                mDivider.draw(c);
            }
        }
    }

}
</code></pre>

<p><strong><em>divider_recycler_view.xml</em></strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle"&gt;

    &lt;size android:height="1dp" /&gt;
    &lt;solid android:color="#1F000000" /&gt;

&lt;/shape&gt;
</code></pre>
