<ol>
<li><p><strong>How can I find out if a particular pixel in an image is "invisible" or not? Note: I know I can use bitmap.getPixel(x, y); to get a pixel, but I don't know what to do with it once I have it; is a test for 0 sufficient?</strong></p>

<p>Use <code>image.getPixel(x, y) != Color.TRANSPARENT</code> to check whether the pixel is visible or not.</p></li>
<li><p><strong>Is there a better way of finding the max width/height of the "visible" portion other than iterating through every pixel looking for the visible "end points"?</strong></p>

<p>There is no built in functions. You can use the below function to get the image in square shape leaving the transparent pixels out.</p>

<pre><code>public static Bitmap removeTransparentPixels(Bitmap image) {

    int x1 = image.getWidth();
    int y1 = image.getHeight();

    int width = 0, height = 0;

    for (int x = 0; x &lt; image.getWidth(); x++) {
        for (int y = 0; y &lt; image.getHeight(); y++) {
            if (image.getPixel(x, y) != Color.TRANSPARENT) {
                if (x &lt; x1) {
                    x1 = x;
                } else if (x &gt; width) {
                    width = x;
                }

                if (y &lt; y1) {
                    y1 = y;
                } else if (y &gt; height) {
                    height = y;
                }
            }
        }
    }

    width = width - x1;
    height = height - y1;

    return Bitmap.createBitmap(image, x1, y1, width, height);
}
</code></pre></li>
</ol>

<p>Make sure that your image doesn't contain only the transparent pixels. If the image has only transparent pixels then the statement <code>Bitmap.createBitmap(image, x1, y1, width, height);</code> will through exception.</p>
