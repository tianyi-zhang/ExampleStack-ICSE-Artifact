<p><code>TreeSet</code> iteration is of course O(n), as can be expect from any sensible tree-walking algorithm.</p>

<blockquote>
  <p>I am thinking that by providing links
  backward from child node to parent
  node I could improve the performance.</p>
</blockquote>

<p><code>TreeMap</code> (which <code>TreeSet</code> is based on) already has such parent references. This is the method it all boils down to:</p>

<pre><code>private Entry&lt;K,V&gt; successor(Entry&lt;K,V&gt; t) {
    if (t == null)
        return null;
    else if (t.right != null) {
        Entry&lt;K,V&gt; p = t.right;
        while (p.left != null)
            p = p.left;
        return p;
    } else {
        Entry&lt;K,V&gt; p = t.parent;
        Entry&lt;K,V&gt; ch = t;
        while (p != null &amp;&amp; ch == p.right) {
            ch = p;
            p = p.parent;
        }
        return p;
    }
}
</code></pre>
