<p>After a long time, I got free to solve this problem.</p>

<p>Here is what I did.</p>

<p><code>FlashlightWidgetProvider</code> class :</p>

<pre><code>public class FlashlightWidgetProvider extends AppWidgetProvider {

        @Override
        public void onUpdate(Context context, AppWidgetManager appWidgetManager,
                        int[] appWidgetIds) {

                Intent receiver = new Intent(context, FlashlightWidgetReceiver.class);
                receiver.setAction("COM_FLASHLIGHT");
                receiver.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, appWidgetIds);
                PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, receiver, 0);

                RemoteViews views = new RemoteViews(context.getPackageName(),
                                R.layout.widget_layout);
                views.setOnClickPendingIntent(R.id.button, pendingIntent);

                appWidgetManager.updateAppWidget(appWidgetIds, views);

        }
}
</code></pre>

<p>and BroadcastReceiver for FlashlightWidgetReceiver :</p>

<pre><code>public class FlashlightWidgetReceiver extends BroadcastReceiver {
            private static boolean isLightOn = false;
            private static Camera camera;

            @Override
            public void onReceive(Context context, Intent intent) {
                    RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.widget_layout);

                    if(isLightOn) {
                            views.setImageViewResource(R.id.button, R.drawable.off);
                    } else {
                            views.setImageViewResource(R.id.button, R.drawable.on);
                    }

                    AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
                    appWidgetManager.updateAppWidget(new ComponentName(context,     FlashlightWidgetProvider.class),
                                                                                     views);

                    if (isLightOn) {
                            if (camera != null) {
                                    camera.stopPreview();
                                    camera.release();
                                    camera = null;
                                    isLightOn = false;
                            }

                    } else {
                            // Open the default i.e. the first rear facing camera.
                            camera = Camera.open();

                            if(camera == null) {
                                    Toast.makeText(context, R.string.no_camera, Toast.LENGTH_SHORT).show();
                            } else {
                                    // Set the torch flash mode
                                    Parameters param = camera.getParameters();
                                    param.setFlashMode(Camera.Parameters.FLASH_MODE_TORCH);
                                    try {
                                            camera.setParameters(param);
                                            camera.startPreview();
                                            isLightOn = true;
                                    } catch (Exception e) {
                                            Toast.makeText(context, R.string.no_flash, Toast.LENGTH_SHORT).show();
                                    }
                            }
                    }
            }
    }
</code></pre>

<p>Permission required in <code>Manifest.xml</code> file :</p>

<pre><code>&lt;uses-permission android:name="android.permission.CAMERA"&gt;&lt;/uses-permission&gt;
</code></pre>

<p>Also register receivers in <code>Manifest.xml</code> file :</p>

<pre><code>&lt;receiver android:name=".FlashlightWidgetProvider" android:icon="@drawable/on" android:label="@string/app_name"&gt;
         &lt;intent-filter&gt;
            &lt;action android:name="android.appwidget.action.APPWIDGET_UPDATE" /&gt;
         &lt;/intent-filter&gt;

         &lt;meta-data android:name="android.appwidget.provider"
                        android:resource="@xml/flashlight_appwidget_info" /&gt;
&lt;/receiver&gt;

&lt;receiver android:name="FlashlightWidgetReceiver"&gt;
        &lt;intent-filter&gt;
               &lt;action android:name="COM_FLASHLIGHT"&gt;&lt;/action&gt;
        &lt;/intent-filter&gt;
 &lt;/receiver&gt;
</code></pre>

<p><strong>Important Note</strong> : This code works perfect if your phone has <code>FLASH_MODE_TORCH</code> supported. </p>

<p>I have tested in Samsung Galaxy Ace 2.2.1 &amp; 2.3.3. The code is not working because that device has no FLASH_MODE_TORCH.</p>

<p>Works fine in HTC Salsa, Wildfire..</p>

<p>If anyone can test and post results here, it would be best. </p>
