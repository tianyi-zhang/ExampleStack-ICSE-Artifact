<p>Display Names</p>

<pre><code>public class ContentProviderActivity extends Activity {

ListView lv;
Map&lt;String, List&lt;String&gt;&gt; mymap;


/** Called when the activity is first created. */
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    lv = (ListView)findViewById(R.id.listContact);
    mymap = new HashMap&lt;String, List&lt;String&gt;&gt;();

    Uri allContacts = Uri.parse("content://contacts/people/");
    Cursor mCursor = managedQuery(allContacts, null, null, null, ContactsContract.Contacts._ID + " ASC");


    final String[] contacts = new String[]{ContactsContract.Contacts.DISPLAY_NAME,
            ContactsContract.Contacts._ID};

    int [] view = new int[]{R.id.txtName,R.id.txtID};

    final SimpleCursorAdapter adapter = new SimpleCursorAdapter(this, R.layout.main, mCursor, contacts, view);
    lv.setAdapter(adapter);

    lv.setOnItemClickListener(new OnItemClickListener() {


    @Override
    public void onItemClick(AdapterView&lt;?&gt; arg0, View view, int position,
            long id) {
        // TODO Auto-generated method stub

        //displayContacts(position+1);
        int id1 = (int) adapter.getItemId(position);
        Intent i = new Intent(getApplicationContext(),ShowContactNo.class);
        i.putExtra("ID", id1);
        startActivity(i);
     }
});
}


}
</code></pre>

<p>ShowContactNo: TO display associated contact numbers </p>

<pre><code>public class ShowContactNo extends ListActivity{

Map&lt;String, List&lt;String&gt;&gt; mymap;
String name;
List&lt;String&gt; Phone_No;
String select_Number;

@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);

    mymap = new HashMap&lt;String, List&lt;String&gt;&gt;();

    ListView listView = getListView();
    listView.setChoiceMode(ListView.CHOICE_MODE_NONE);

    Intent i = getIntent();
    int position = i.getIntExtra("ID", 0);
    displayContacts(position);

    Phone_No = new ArrayList&lt;String&gt;();
    Phone_No = mymap.get(name);
    System.out.println(Phone_No);

    if(Phone_No!=null)
    {
        setListAdapter(new ArrayAdapter&lt;String&gt;(this,
                android.R.layout.simple_list_item_checked, Phone_No));
    }



     final String [] items          = new String [] {"Make Call", "Send Text SMS"};             

       ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt; (this, android.R.layout.select_dialog_item,items);

       AlertDialog.Builder builder      = new AlertDialog.Builder(this);

        builder.setTitle("Select Option");

        builder.setAdapter( adapter, new DialogInterface.OnClickListener() {
            public void onClick( DialogInterface dialog, int item ) {
                if (item == 0) {
                    Intent i = new
                    Intent(android.content.Intent.ACTION_CALL, 
                            Uri.parse("tel:"+select_Number));
                startActivity(i);

                    dialog.cancel();
                } else {

                    Intent i = new 
                    Intent(android.content.Intent.ACTION_SENDTO, 
                            Uri.parse("smsto:"+select_Number));
                    i.putExtra("sms_body", "Krishnakant Dalal");
                    startActivity(i);
                }
            }
        } );

        final AlertDialog dialog = builder.create();


    listView.setOnItemClickListener(new OnItemClickListener() {

                @Override
                public void onItemClick(AdapterView&lt;?&gt; arg0, View arg1,
                        int arg2, long arg3) {
                    // TODO Auto-generated method stub

                    select_Number = String.valueOf(Phone_No.get(arg2));
                    dialog.show();
                }
    });
}


private void displayContacts(int position) {
    if(position!=0)
    {
    ContentResolver cr = getContentResolver();
      Cursor cur = cr.query(ContactsContract.Contacts.CONTENT_URI,
              null, ContactsContract.Contacts._ID +" = ?",
              new String[]{String.valueOf(position)}, null);

      if (cur.getCount() &gt; 0) {
          while (cur.moveToNext()) {
                String id = cur.getString(cur.getColumnIndex(ContactsContract.Contacts._ID));
                name = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
                if (Integer.parseInt(cur.getString(
                      cur.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER))) &gt; 0) {
                   Cursor pCur = cr.query(
                             ContactsContract.CommonDataKinds.Phone.CONTENT_URI,
                             null,
                             ContactsContract.CommonDataKinds.Phone.CONTACT_ID +" = ?",
                             new String[]{id}, null);

                   List&lt;String&gt; numberlist = new ArrayList&lt;String&gt;();

                   while (pCur.moveToNext()) {
                       String phoneNo = pCur.getString(pCur.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
                      // Toast.makeText(this, "Name: " + name + ", Phone No: " + phoneNo, Toast.LENGTH_SHORT).show();
                       numberlist.add(phoneNo);
                   }
                  pCur.close();

                  mymap.put(name, numberlist);  
              }
          }
      }
    }
  }

}  
</code></pre>

<p>Dont forget to add Permissions:</p>

<pre><code>&lt;uses-permission android:name="android.permission.READ_CONTACTS" /&gt; 
&lt;uses-permission android:name="android.permission.WRITE_CONTACTS" /&gt; 
&lt;uses-permission android:name="android.permission.CALL_PHONE" /&gt; 
</code></pre>
