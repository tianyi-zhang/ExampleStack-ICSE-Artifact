<p>Here is the code in which i am storing the email address and contact person name in arraylist</p>

<pre><code>public ArrayList&lt;ContactVo&gt; getNameEmailDetails() {
        ArrayList&lt;ContactVo&gt; m_arrList = new ArrayList&lt;ContactVo&gt;();
        ArrayList&lt;String&gt; emlRecs = new ArrayList&lt;String&gt;();
        HashSet&lt;String&gt; emlRecsHS = new HashSet&lt;String&gt;();
        ContentResolver cr = m_context.getContentResolver();
        String[] PROJECTION = new String[] { ContactsContract.RawContacts._ID,
                ContactsContract.Contacts.DISPLAY_NAME,
                ContactsContract.Contacts.PHOTO_ID,
                ContactsContract.CommonDataKinds.Email.DATA,
                ContactsContract.CommonDataKinds.Photo.CONTACT_ID };
        String order = "CASE WHEN " + ContactsContract.Contacts.DISPLAY_NAME
                + " NOT LIKE '%@%' THEN 1 ELSE 2 END, "
                + ContactsContract.Contacts.DISPLAY_NAME + ", "
                + ContactsContract.CommonDataKinds.Email.DATA
                + " COLLATE NOCASE";
        String filter = ContactsContract.CommonDataKinds.Email.DATA
                + " NOT LIKE ''";
        Cursor cur = cr.query(
                ContactsContract.CommonDataKinds.Email.CONTENT_URI, PROJECTION,
                filter, null, order);
        ContactVo m_vo;
        if (cur.moveToFirst()) {
            do {
                m_vo = new ContactVo();
                // names comes in hand sometimes
                String name = cur.getString(1);
                String emlAddr = cur.getString(3);
                System.err.println("Value Is----------&gt;" + cur.getString(2)
                        + "Name--" + name + "Email---" + emlAddr);
                m_vo.setM_sName(name);
                m_vo.setM_sEmail(emlAddr);
                // keep unique only
                if (emlRecsHS.add(emlAddr.toLowerCase())) {
                    emlRecs.add(emlAddr);
                }
                m_arrList.add(m_vo);
            } while (cur.moveToNext());
        }

        cur.close();
        return m_arrList;
    }
</code></pre>

<p><strong>EDITED:</strong></p>

<p>Write the below code in your onItemClick event of your listview where you are showing all the contact list. </p>

<pre><code>m_lvList.setOnItemClickListener(new OnItemClickListener() {

        @Override
        public void onItemClick(AdapterView&lt;?&gt; arg0, View arg1, int arg2,
                long arg3) {
            Toast.makeText(m_context, m_arrContact.get(arg2).getM_sEmail(), Toast.LENGTH_LONG).show();
            Intent in = new Intent(m_context, Test.class);
            in.putExtra("pos", arg2);
            in.putParcelableArrayListExtra("parcel", m_arrContact);
            startActivity(in);
        }
    });
</code></pre>

<p>Make your vo parcelable to pass the details into another activity and access it. </p>

<p><strong>ContactVo</strong></p>

<pre><code>    public class ContactVo implements Parcelable {
    private String m_sName, m_sEmail;

    public ContactVo() {
    }

    public ContactVo(Parcel in) {
        readFromParcel(in);
    }

    public String getM_sName() {
        return m_sName;
    }

    public void setM_sName(String m_sName) {
        this.m_sName = m_sName;
    }

    public String getM_sEmail() {
        return m_sEmail;
    }

    public void setM_sEmail(String m_sEmail) {
        this.m_sEmail = m_sEmail;
    }

    @Override
    public int describeContents() {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(m_sName);
        dest.writeString(m_sEmail);

    }

    public void readFromParcel(Parcel p_in) {

        m_sName = p_in.readString();
        m_sEmail = p_in.readString();
    }

    public static final Parcelable.Creator&lt;ContactVo&gt; CREATOR = new Parcelable.Creator&lt;ContactVo&gt;() {
        public ContactVo createFromParcel(Parcel s) {
            return new ContactVo(s);
        }

        public ContactVo[] newArray(int size) {
            return new ContactVo[size];
        }
    };

}
</code></pre>

<p>In your another activity write as below:</p>

<pre><code>public class Test extends Activity {

    ArrayList&lt;ContactVo&gt; m_arr;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // TODO Auto-generated method stub
        super.onCreate(savedInstanceState);
        setContentView(R.layout.list_layout);

        m_arr = getIntent().getParcelableArrayListExtra("parcel");
        int pos = getIntent().getIntExtra("pos", 0);
        System.out.println("Detailsss------&gt;" + m_arr.get(pos).getM_sEmail()
                + m_arr.get(pos).getM_sName());

    }

}
</code></pre>

<p>You can add as many details as much you want into the <code>ArrayList&lt;ContactVo&gt;</code> and pass it into another activity.</p>

<p>To get other contact details Check out <a href="http://www.androidhub4you.com/2013/06/get-phone-contacts-details-in-android_6.html" rel="nofollow">HERE</a></p>
