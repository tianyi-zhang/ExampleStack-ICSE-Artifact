<p>I don't know if this can help. Here is the implementation of <a href="https://github.com/android/platform_frameworks_support/blob/master/v7/appcompat/src/android/support/v7/widget/Toolbar.java" rel="nofollow"><code>Toolbar</code></a> form the Android Support Library v7 source code,</p>

<pre><code>     /**
     * Set the title of this toolbar.
     *
     * &lt;p&gt;A title should be used as the anchor for a section of content. It should
     * describe or name the content being viewed.&lt;/p&gt;
     *
     * @param title Title to set
     */
    public void setTitle(CharSequence title) {
        if (!TextUtils.isEmpty(title)) {
            if (mTitleTextView == null) {
                final Context context = getContext();
                mTitleTextView = new TextView(context);
                mTitleTextView.setSingleLine();
                mTitleTextView.setEllipsize(TextUtils.TruncateAt.END);
                if (mTitleTextAppearance != 0) {
                    mTitleTextView.setTextAppearance(context, mTitleTextAppearance);
                }
                if (mTitleTextColor != 0) {
                    mTitleTextView.setTextColor(mTitleTextColor);
                }
            }
            if (mTitleTextView.getParent() == null) {
                addSystemView(mTitleTextView);
                updateChildVisibilityForExpandedActionView(mTitleTextView);
            }
        } else if (mTitleTextView != null &amp;&amp; mTitleTextView.getParent() != null) {
            removeView(mTitleTextView);
        }
        if (mTitleTextView != null) {
            mTitleTextView.setText(title);
        }
        mTitleText = title;
    }
</code></pre>

<p>You can use this to set the styles of your <code>TextView</code>.</p>
