<p>This is quite simple to do.</p>

<p><strong>Step 1</strong></p>

<p>Use the AlarmManager to fire up a BroadcastReceiver periodically..</p>

<pre><code>private void showNotification() {
    Intent alarmIntent = new Intent(this, NotificationReceiver.class);
    PendingIntent pendingIntent = PendingIntent.getBroadcast(this, 0, alarmIntent, PendingIntent.FLAG_UPDATE_CURRENT);
    AlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);
    alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis(), 50000, pendingIntent);
}
</code></pre>

<p><strong>Step 2</strong></p>

<p>In the <code>onReceive()</code> do the checking when the time is 00 hours of the day, create a notification and show it.</p>

<pre><code>public class NotificationReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
        Calendar now = GregorianCalendar.getInstance();

        // This is where you check when you want to show the notification
        if(now.get(Calendar.HOUR_OF_DAY) == 0){
            NotificationCompat.Builder mBuilder = 
                    new NotificationCompat.Builder(context)
                    .setSmallIcon(R.drawable.ic_launcher)
                    .setContentTitle(context.getResources().getString(R.string.message_box_title))
                    .setContentText(context.getResources().getString(R.string.message_timesheet_not_up_to_date));


            Intent resultIntent = new Intent(context, MainActivity.class);
            TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);
            stackBuilder.addParentStack(MainActivity.class);
            stackBuilder.addNextIntent(resultIntent);
            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);
            mBuilder.setContentIntent(resultPendingIntent);
            NotificationManager mNotificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
            mNotificationManager.notify(1, mBuilder.build());
        }
    }
}
</code></pre>

<p><strong>Step 3</strong></p>

<p>Do forgot to register the custom BroadcastReceiver is Manifest</p>

<pre><code>&lt;receiver
        android:name="com.example.NotificationReceiver"
        android:process=":remote" /&gt;
</code></pre>
