<p>I thought I would answer this. The key bit was actually in onMeasure() where you have to state that the parent is half width like so
widthSpecSize /=2;
when mInvert is true.</p>

<pre><code>@Override
protected void onMeasure( int widthMeasureSpec, int heightMeasureSpec )
{
    int widthSpecMode = MeasureSpec.getMode( widthMeasureSpec );
    int widthSpecSize = MeasureSpec.getSize( widthMeasureSpec );

    int heightSpecMode = MeasureSpec.getMode( heightMeasureSpec );
    int heightSpecSize = MeasureSpec.getSize( heightMeasureSpec );

    if ( widthSpecMode == MeasureSpec.UNSPECIFIED || heightSpecMode == MeasureSpec.UNSPECIFIED ) { throw new RuntimeException(
            "SlidingDrawer cannot have UNSPECIFIED dimensions" ); }

    final View handle = mHandle;
    measureChild( handle, widthMeasureSpec, heightMeasureSpec );

    if ( mVertical ) {
        int height = heightSpecSize - handle.getMeasuredHeight() - mTopOffset;
        mContent.measure( MeasureSpec.makeMeasureSpec( widthSpecSize, MeasureSpec.EXACTLY ), MeasureSpec.makeMeasureSpec( height, MeasureSpec.EXACTLY ) );
    } else {
        int width = widthSpecSize - handle.getMeasuredWidth() - mTopOffset;
        if( mInvert ) {
            widthSpecSize /=2;//to limit the sliding halfway parent is told to be halfscreen
            int widthI = widthSpecSize - handle.getMeasuredWidth() - mBottomOffset;
            mContent.measure( MeasureSpec.makeMeasureSpec( widthI, MeasureSpec.EXACTLY ), MeasureSpec.makeMeasureSpec( heightSpecSize, MeasureSpec.EXACTLY ) );
        }else{
            mContent.measure( MeasureSpec.makeMeasureSpec( width, MeasureSpec.EXACTLY ), MeasureSpec.makeMeasureSpec( heightSpecSize, MeasureSpec.EXACTLY ) );
        }
    }

    setMeasuredDimension( widthSpecSize, heightSpecSize );
}
</code></pre>
