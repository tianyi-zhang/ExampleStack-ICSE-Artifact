<p>I think this is what you need.</p>

<pre><code>import java.util.*;

public class SearchMaze{    
//Variables to set the values of the 2 arrays
private static int n = 8;
private static int m = 7;
private static int[][] maze = new int[n][m];

private static int i = 0;
private static int j = 0;

/*
* This function is used for searching a way from top to bottom exist or not.
*/
public static boolean searchMaze(int maze[][], int i, int j, int n, int m) {
    if(i == n-1 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; m &amp;&amp; maze[i][j] == 0) {
        // This is the condition when there is a way to the bottom.
        return true;
    } else if(i &lt; 0 || i &gt; m-1 || j &lt; 0 || j &gt; m-1 || maze[i][j] == 1) {
        // This is the condition when path is end in some where in middle.
        return false;
    } else {
        // There is three way to go bottom
        return searchMaze(maze, i+1, j-1, n, m) || searchMaze(maze, i+1, j, n, m) || searchMaze(maze, i+1, j+1, n, m);
    }
}

public static void main(String [] args){    

    //Randomly select 0s and 1s for the array
    Random rand = new Random();

    System.out.print(n + "\t" + m);
    System.out.println("");

    //creates the random array of 0s and 1s
    for(i = 0; i &lt; n; i++){
        for(j = 0; j &lt; m; j++){
            maze[i][j] = rand.nextInt(2);
            System.out.print(maze[i][j]);
        }
        System.out.println("");
    }
    //here I was trying to loop through the array again while changing the 0s to 1s
    //to show if a "path" from the top to the bottom exists
    //but in doing this I am really just creating a different array of random 0s and 1s..   
    for(i = 0; i &lt; n; i++){
        for(j = 0; j &lt; m; j++){
            // This is used to search a path from i,j to the bottom.
            if(searchMaze(maze, i, j, n, m)) {
                System.out.println("There is a way from "+i+" &amp; "+j);
            }
        }//end second for loop
    }//end first for loop
}//end main method
}//end searchmaze
</code></pre>
