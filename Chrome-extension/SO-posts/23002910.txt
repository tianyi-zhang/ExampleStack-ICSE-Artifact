<p>When you were calling viewA.setTag("FragmentA"), the viewgroup has not been initialized. This is the direct cause of this exception.</p>

<p>To avoid this issue, you need set tag after the viewGroup has been set up, i.e., you have inflated a view layout or created a fragment.</p>

<p>For example, the default code for instantiateItem of FragmentStatePagerAdapter is as follows.</p>

<pre><code>@Override
public Object instantiateItem(ViewGroup container, int position) {
    // If we already have this item instantiated, there is nothing
    // to do.  This can happen when we are restoring the entire pager
    // from its saved state, where the fragment manager has already
    // taken care of restoring the fragments we previously had instantiated.
    if (mFragments.size() &gt; position) {
        Fragment f = mFragments.get(position);
        if (f != null) {
            return f;
        }
    }

    if (mCurTransaction == null) {
        mCurTransaction = mFragmentManager.beginTransaction();
    }

    Fragment fragment = getItem(position);
    if (DEBUG) Log.v(TAG, "Adding item #" + position + ": f=" + fragment);
    if (mSavedState.size() &gt; position) {
        Fragment.SavedState fss = mSavedState.get(position);
        if (fss != null) {
            fragment.setInitialSavedState(fss);
        }
    }
    while (mFragments.size() &lt;= position) {
        mFragments.add(null);
    }
    fragment.setMenuVisibility(false);
    fragment.setUserVisibleHint(false);
    mFragments.set(position, fragment);
    mCurTransaction.add(container.getId(), fragment);

    return fragment;
}
</code></pre>

<p>You can set the tag in the getItem method when creating your fragment / view.</p>
