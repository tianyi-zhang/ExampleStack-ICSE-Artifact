<p>That using the <code>stringlenth</code> validator you can validate the length of the string. Check the <a href="http://struts.apache.org/release/2.0.x/docs/stringlength-validator.html" rel="nofollow">stringlength validator</a>.</p>

<p>And using the <code>date</code> validator you can validate the date format. Check the <a href="http://struts.apache.org/release/2.0.x/docs/date-validator.html" rel="nofollow">date validator</a>.</p>

<p>If you want to validate datetime picker  using <code>validate()</code> you should use the logic that is to parse the value returned by the picker using <code>SimpleDateFormat</code> if you are not using other date time libraries like <a href="http://joda-time.sourceforge.net/" rel="nofollow">JODA</a> and don't care about timezone then you should create <code>ThreadLocal</code> parser for datetimes.</p>

<p><strong>EDIT:</strong></p>

<p><strong>validators.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE validators PUBLIC
        "-//OpenSymphony Group//XWork Validator Config 1.0//EN"
        "http://www.opensymphony.com/xwork/xwork-validator-config-1.0.dtd"&gt;

&lt;validators&gt;
  &lt;validator name="longlength" class="jspbean.struts.vaidators.LongLengthFieldValidator"/&gt;
&lt;/validators&gt;
</code></pre>

<p><strong>LongLengthFieldValidator.java</strong></p>

<pre><code>public class LongLengthFieldValidator extends FieldValidatorSupport {

  private boolean doTrim = true;
  private int maxLength = -1;
  private int minLength = -1;


  public void setMaxLength(int maxLength) {
    this.maxLength = maxLength;
  }

  public int getMaxLength() {
    return maxLength;
  }

  public void setMinLength(int minLength) {
    this.minLength = minLength;
  }

  public int getMinLength() {
    return minLength;
  }

  public void setTrim(boolean trim) {
    doTrim = trim;
  }

  public boolean getTrim() {
    return doTrim;
  }

  public void validate(Object object) throws ValidationException {
    String fieldName = getFieldName();
    String val = getFieldValue(fieldName, object).toString();

    if (val == null || val.length() &lt;= 0) {
      // use a required validator for these
      return;
    }
    if (doTrim) {
      val = val.trim();
      if (val.length() &lt;= 0) {
        // use a required validator
        return;
      }
    }

    if ((minLength &gt; -1) &amp;&amp; (val.length() &lt; minLength)) {
      addFieldError(fieldName, object);
    } else if ((maxLength &gt; -1) &amp;&amp; (val.length() &gt; maxLength)) {
      addFieldError(fieldName, object);
    }
  }
}
</code></pre>

<p><strong>XXX-validation.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE validators PUBLIC "-//OpenSymphony Group//XWork Validator 1.0.2//EN" "http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd"&gt;
&lt;validators&gt;

  &lt;validator type="longlength"&gt;
                &lt;param name="fieldName"&gt;mobileno&lt;/param&gt;
                &lt;param name="minLength"&gt;10&lt;/param&gt;
               &lt;param name="maxLength"&gt;10&lt;/param&gt;
               &lt;param name="trim"&gt;true&lt;/param&gt;
               &lt;message&gt;Your mobileno number needs to be 10 characters long&lt;/message&gt;
  &lt;/validator&gt;
&lt;/validators&gt;
</code></pre>
