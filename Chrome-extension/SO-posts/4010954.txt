<blockquote>
  <p>Is this still the best / most straightforward way to implement it? How would I implement it otherwise?</p>
</blockquote>

<p>It's not how Josh Bloch did. Have a look at the source of <a href="http://download.oracle.com/javase/6/docs/api/java/util/AbstractCollection.html#toArray%28T%5B%5D%29"><code>AbstractCollection#toArray()</code></a>. Here's an extract of relevance from JDK 1.6.0_22.</p>

<pre><code>public &lt;T&gt; T[] toArray(T[] a) {
    // Estimate size of array; be prepared to see more or fewer elements
    int size = size();
    T[] r = a.length &gt;= size 
        ? a 
        : (T[]) Array.newInstance(a.getClass().getComponentType(), size);
    Iterator&lt;E&gt; it = iterator();

    for (int i = 0; i &lt; r.length; i++) {
        if (!it.hasNext()) { // fewer elements than expected
            if (a != r)
                return Arrays.copyOf(r, i);
            r[i] = null; // null-terminate
            return r;
        }
        r[i] = (T) it.next();
    }
    return it.hasNext() ? finishToArray(r, it) : r;
}
</code></pre>

<p>The source code is available in <code>src.zip</code> file of the JDK. You can integrate it in any decent IDE like Eclipse/IDEA/Netbeans so that you can see it when you open the <code>AbstractCollection</code> class.</p>

<blockquote>
  <p>Can I somehow code it in a way without that warning? </p>
</blockquote>

<p>No. Use <code>@SuppressWarnings("unchecked")</code> if it is bothering you.</p>

<p>That said, I'd suggest to extend <code>AbstractCollection</code> instead of implementing <code>Collection</code> if possible so that you have at least the basic features already implemented for you.</p>
