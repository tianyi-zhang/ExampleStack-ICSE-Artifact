<p>I solved the issue by using the edited method getDomElement (in XMLParser class) like this:</p>

<pre><code> public Document getDomElement(String xml){
 Document doc = null;
 DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
 try {

        DocumentBuilder db = dbf.newDocumentBuilder();

    //    InputSource is = new InputSource();
      //      is.setCharacterStream(new StringReader(xml));
            doc = db.parse("http://x.x.x.x/~kanz/video/XML/9.xml"); 

        } catch (ParserConfigurationException e) {
            Log.e("Error: ", e.getMessage());
            return null;
        } catch (SAXException e) {
            Log.e("Error: ", e.getMessage());
            return null;
        } catch (IOException e) {
            Log.e("Error: ", e.getMessage());
            return null;
        }

        return doc;
}
</code></pre>

<p>I don't know why, but after commenting out the </p>

<pre><code>InputSource is = new InputSource();
is.setCharacterStream(new StringReader(xml));
</code></pre>

<p>and passing the URL directly to <code>db.parse</code> solved my problem. Hope it helps others too!</p>
