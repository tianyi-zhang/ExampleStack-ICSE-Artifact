<p>Check the following answer </p>

<p>Suppose I have a button <strong>Select</strong> &amp; when the user clicks on the button , Camera screen will open.</p>

<pre><code>btn_select.setOnClickListener(new OnClickListener() {
                @Override
                public void onClick(View v) {

          String fileName = new StringBuilder(String.valueOf(System.currentTimeMillis())).append(
                                                        ".jpg").toString();
                  ContentValues values = new ContentValues();
                  values.put(MediaStore.Images.Media.TITLE, fileName);
                  mCapturedImageURI = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
                  values);
                  Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                  intent.putExtra(MediaStore.EXTRA_OUTPUT, mCapturedImageURI);
                  startActivityForResult(intent, IShipdocsMobileConstants.CAMERA_ACTION);
                }
    });
</code></pre>

<p>After the user takes a photo &amp; clicks on the Save/OK button (depends on the mobile device) , use the following code to fetch the data for the captured image.</p>

<pre><code>@Override
    protected void onActivityResult(int requestCode, int resultCode, Intent intent) {
        super.onActivityResult(requestCode, resultCode, intent);
        if (requestCode == IShipdocsMobileConstants.CAMERA_ACTION) {
            if (resultCode == RESULT_OK) {
                String[] projection = { MediaStore.Images.Media.DATA };
                Cursor cursor = managedQuery(mCapturedImageURI, projection, null, null, null);
                int column_index_data = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
                cursor.moveToFirst();
                String capturedImageFilePath = cursor.getString(column_index_data);
                SelectedFileInfo selectedFileObj = null;
                ArrayList&lt;SelectedFileInfo&gt; cameraArrList = new ArrayList&lt;SelectedFileInfo&gt;();
                File fileObj = new File(capturedImageFilePath);
                String fileSize = String.valueOf(fileObj.length()); //File Size
                String fileName = Utils.getFileName(capturedImageFilePath); //File Name
                }else if (resultCode == RESULT_CANCELED) {
         // handle the condition in which the user didn't save the image
                }
            } else {
                // handle the condition in which the request code was not CAMERA_ACTION , maybe send the user to the home/default screen
            }

        }
    }
</code></pre>
