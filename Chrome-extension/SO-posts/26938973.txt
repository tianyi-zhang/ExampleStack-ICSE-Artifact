<p>You need to make a class to extend the <a href="http://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html" rel="nofollow">BaseExpandableListAdapter</a>, and then override the abstract <a href="http://developer.android.com/reference/android/widget/ExpandableListAdapter.html#getChildView(int,%20int,%20boolean,%20android.view.View,%20android.view.ViewGroup)" rel="nofollow">getChildView()</a> method, this method is based on groupPosition and childPosition to determine which view to be displayed. You can also visit this <a href="http://www.androidhive.info/2013/07/android-expandable-list-view-tutorial/" rel="nofollow">Expandable List View tutorial</a>.</p>

<p>In the tutorial, it shows how to access the TextView object in each child view, if you want to access the CheckBox, you can do the similar thing. Below is a sample code:</p>

<pre><code>    @Override
    public View getChildView(int groupPosition, final int childPosition,
            boolean isLastChild, View convertView, ViewGroup parent) {

        final String childText = (String) getChild(groupPosition, childPosition);

        if (convertView == null) {
            LayoutInflater infalInflater = (LayoutInflater) this._context
                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = infalInflater.inflate(R.layout.list_item, null);
        }

        TextView txtListChild = (TextView) convertView
                .findViewById(R.id.lblListItem);
        CheckBox checkboxListChild = (CheckBox) convertView
                .findViewById(R.id.checkboxListItem); //assume thats the id of your checkbox object


        txtListChild.setText(childText);
        return convertView;
    }
</code></pre>

<p>You can also check out <a href="http://blog.csdn.net/lfdfhl/article/details/10532859" rel="nofollow">this tutorial</a> to learn about ExpandableListView with checkbox.</p>
