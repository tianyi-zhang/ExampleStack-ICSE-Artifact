<p>Instead of making it <code>invisible</code> or <code>gone</code> you filter the items and display it in listview.</p>

<p>Implement a custom filter.</p>

<p>Edit:</p>

<p>Use the code in the link below. It works</p>

<p><a href="http://www.sherif.mobi/2012/01/listview-with-ability-to-hide-rows.html" rel="nofollow">http://www.sherif.mobi/2012/01/listview-with-ability-to-hide-rows.html</a></p>

<p>Example: To hide row 3</p>

<p>MainActivity.java</p>

<pre><code>public class MainActivity extends Activity {

    ListView lv;
    String items[]={"A","B","C","D","E"};
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        lv = (ListView) findViewById(R.id.listView1);
        CustomAdapter cus = new CustomAdapter(this,items);
        cus.hide(2);// hide letter c
        lv.setAdapter(cus);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

}
</code></pre>

<p>activity_main.xml</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".MainActivity" &gt;

    &lt;ListView
        android:id="@+id/listView1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true" &gt;

    &lt;/ListView&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>CustomAdapter.java</p>

<pre><code>class CustomAdapter extends BaseAdapter
{
    LayoutInflater inflater;
    String items[];
    boolean[] hidden = null;
    public CustomAdapter(MainActivity mainActivity, String[] items) {
        // TODO Auto-generated constructor stub
        inflater = LayoutInflater.from(mainActivity);
        this.items=items;
        hidden = new boolean[items.length]; 
        for (int i = 0; i &lt; items.length; i++)
               hidden[i] = false;
    }
    private int getRealPosition(int position) {
         int hElements = getHiddenCountUpTo(position);
         int diff = 0;
         for(int i=0;i&lt;hElements;i++) {
          diff++;
          if(hidden[position+diff])
           i--;
         }
         return (position + diff);
        }
        private int getHiddenCountUpTo(int location) {
         int count = 0;
         for(int i=0;i&lt;=location;i++) {
          if(hidden[i])
           count++;
         }
         return count;
        }

    public void hide(int position) {
         hidden[getRealPosition(position)] = true;
         notifyDataSetChanged();
         notifyDataSetInvalidated();
        }
        public void unHide(int position) {
         hidden[getRealPosition(position)] = false;
         notifyDataSetChanged();
         notifyDataSetInvalidated();
        }
    @Override
    public int getCount() {
     return (items.length - getHiddenCount());
    }

    private int getHiddenCount() {
     int count = 0;
     for(int i=0;i&lt;items.length;i++)
      if(hidden[i])
       count++;
     return count;
    }

    @Override
    public Object getItem(int position) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public long getItemId(int position) {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        // TODO Auto-generated method stub
        ViewHolder holder; 

        int pos = getRealPosition(position);
        if (convertView == null) { 
            convertView = inflater.inflate(R.layout.row, parent, false);
            holder = new ViewHolder(); 
            holder.tv = (TextView) convertView.findViewById(R.id.textView1); 
            holder.tv2 = (TextView) convertView.findViewById(R.id.textView2); 
           convertView.setTag(holder); 
       } else { 
           holder = (ViewHolder) convertView.getTag(); 
       } 
        holder.tv.setText("Postion at"+pos); 
        holder.tv2.setText("Item is "+items[pos]);
        return convertView;
    }
static class ViewHolder
{
    TextView tv,tv2;
}
}
</code></pre>

<p>row.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_marginLeft="18dp"
        android:layout_marginTop="24dp"
        android:text="TextView" /&gt;

    &lt;TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignBaseline="@+id/textView1"
        android:layout_alignBottom="@+id/textView1"
        android:layout_centerHorizontal="true"
        android:text="TextView" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>Snap shot</p>

<p><img src="http://i.stack.imgur.com/wawVD.png" alt="enter image description here"></p>
