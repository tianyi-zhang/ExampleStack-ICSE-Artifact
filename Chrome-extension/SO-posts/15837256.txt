<p>The JList documentation has an example that loads icons into the JList.  You should be able to use this to insert your small pictures into the JList.</p>

<p><a href="http://docs.oracle.com/javase/6/docs/api/javax/swing/JList.html" rel="nofollow">http://docs.oracle.com/javase/6/docs/api/javax/swing/JList.html</a></p>

<p>Here is the relevant code from that link:</p>

<pre><code>  // Display an icon and a string for each object in the list.

 class MyCellRenderer extends JLabel implements ListCellRenderer {
     final static ImageIcon longIcon = new ImageIcon("long.gif");
     final static ImageIcon shortIcon = new ImageIcon("short.gif");

     // This is the only method defined by ListCellRenderer.
     // We just reconfigure the JLabel each time we're called.

     public Component getListCellRendererComponent(
       JList list,              // the list
       Object value,            // value to display
       int index,               // cell index
       boolean isSelected,      // is the cell selected
       boolean cellHasFocus)    // does the cell have focus
     {
         String s = value.toString();
         setText(s);
         setIcon((s.length() &gt; 10) ? longIcon : shortIcon);
         if (isSelected) {
             setBackground(list.getSelectionBackground());
             setForeground(list.getSelectionForeground());
         } else {
             setBackground(list.getBackground());
             setForeground(list.getForeground());
         }
         setEnabled(list.isEnabled());
         setFont(list.getFont());
         setOpaque(true);
         return this;
     }
 }

 myList.setCellRenderer(new MyCellRenderer());
</code></pre>

<p>Assuming your JList contains usernames, you could put your usernames in a HashMap

<pre><code>setIcon(userHashMap.get(s));
</code></pre>

<p>If your JLIst is actually store other parts than just the username (dynamic components such as status, group name, etc.) you may need to parse out the username from the String passed into the value object.</p>
