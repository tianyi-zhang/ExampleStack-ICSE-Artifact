<p>It works fine for me.  Add this into mainactivity:</p>

<pre><code>mPreview = new CamLayer(this);
Splash.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) 
        {
            if (mPreview == null) {
                mPreview = new CamLayer(MainActivity.this);
            }
            mPreview.setcameraparam(flash);
            Intent i = new Intent(MainActivity.this, ShowingImage.class);
            mPreview.getimage(MainActivity.this, i);

        }
    });
</code></pre>

<p>Then in your public classCamLayer extends SurfaceView implements SurfaceHolder.Callback class, add these methods:</p>

<pre><code>public void getimage(final Context context,final Intent i) {
    final File pictureFile = getOutputMediaFile();

    PictureCallback mPicture = new PictureCallback() {

        @Override
        public void onPictureTaken(byte[] data, Camera camera) {

            if (pictureFile == null) {
                return;
            }
            try {
                FileOutputStream fos = new FileOutputStream(pictureFile);
                fos.write(data);
                fos.close();
                i.putExtra("file_path", pictureFile.getPath());
                context.startActivity(i);
            } catch (FileNotFoundException e) {
                Toast.makeText(context, e.toString(), Toast.LENGTH_LONG).show();
            } catch (Exception e) {
                Toast.makeText(context, e.toString(), Toast.LENGTH_LONG).show();
            }
        }
    };
    mCamera.takePicture(null, null, mPicture);

}

private static File getOutputMediaFile() {
    File mediaStorageDir = new File(
            Environment
                    .getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES),
            "Sunil2");
    if (!mediaStorageDir.exists()) {
        if (!mediaStorageDir.mkdirs()) {
            Log.d("MyCameraApp", "failed to create directory");
            return null;
        }
    }

    String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss")
            .format(new Date());
    File mediaFile;
    mediaFile = new File(mediaStorageDir.getPath() + File.separator
            + "IMG_" + timeStamp + ".jpg");

    return mediaFile;
}

public void setcameraparam(String param) {
    Parameters parameter = mCamera.getParameters();
    parameter.setFlashMode(param);
    mCamera.setParameters(parameter);
}
</code></pre>

<p>and showing image class after intent:</p>

<pre><code>public class ShowingImage extends Activity {
@SuppressLint("NewApi")
Bitmap myBitmap;
int width;
int height;

private float curScale = 1F;
@TargetApi(Build.VERSION_CODES.HONEYCOMB)
@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);
    setContentView(R.layout.show_image);
    Intent intent = getIntent();
    String path = intent.getStringExtra("file_path");
    Log.e("file store in ", "" + path);
    File imgFile = new File(path);

    if (imgFile.exists()) {

        ImageView myImage = (ImageView) findViewById(R.id.imageView1);
        myBitmap = BitmapFactory.decodeFile(path);
        width = myBitmap.getWidth();
        height = myBitmap.getHeight();

        Matrix matrix = new Matrix();
         matrix.postScale(curScale, curScale);
        matrix.postRotate(90);

        Bitmap resizedBitmap = Bitmap.createBitmap(myBitmap, 0, 0, width,
                height, matrix, true);
        myImage.setImageBitmap(resizedBitmap);

    } else {
        Toast.makeText(getApplicationContext(), "file not exist", 1000)
                .show();
    }
}

}
</code></pre>

<p>xml:</p>

<pre><code>&lt;ImageView 
android:id="@+id/imageView1"
android:layout_width="match_parent"
android:layout_height="match_parent" /&gt;
</code></pre>
