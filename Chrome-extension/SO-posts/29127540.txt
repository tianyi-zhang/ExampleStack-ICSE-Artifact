<p>It turns out that this is a known issue. The resources of a project are looked for in the wrong directory when running tests from the command line, here's a <a href="https://code.google.com/p/android/issues/detail?id=158015" rel="nofollow">link</a> to the issue; for now the workaround is to write a custom test runner as demonstrated <a href="https://github.com/nenick/AndroidStudioAndRobolectric/blob/master/app/src/test/java/com/example/myapplication/CustomRobolectricRunner.java" rel="nofollow">here</a>:</p>

<pre><code>public class RobolectricGradleTestRunner extends RobolectricTestRunner {

    public RobolectricGradleTestRunner(Class&lt;?&gt; testClass) throws InitializationError {
        super(testClass);
        String buildVariant = (BuildConfig.FLAVOR.isEmpty() ? "" : BuildConfig.FLAVOR+ "/") + BuildConfig.BUILD_TYPE;
        String intermediatesPath = BuildConfig.class.getResource("").toString().replace("file:", "");
        intermediatesPath = intermediatesPath.substring(0, intermediatesPath.indexOf("/classes"));

        System.setProperty("android.package", BuildConfig.APPLICATION_ID);
        System.setProperty("android.manifest", intermediatesPath + "/manifests/full/" + buildVariant + "/AndroidManifest.xml");
        System.setProperty("android.resources", intermediatesPath + "/res/" + buildVariant);
        System.setProperty("android.assets", intermediatesPath + "/assets/" + buildVariant);
    }

}
</code></pre>

<p>The test cases must be updated accordingly to use the custom test runner <em>instead of</em> the <code>@Config</code> annotation:</p>

<pre><code>@RunWith(RobolectricGradleTestRunner.class)
public class SplashActivityTest {
    // tests same as before
}
</code></pre>

<p>Also, it's recommended to perform a <code>clean</code> when running the tests from the command line, given that the workaround depends on the contents of the build directory, we don't want to have stale data there:</p>

<pre><code>project-root$ ./gradlew clean test --continue
</code></pre>
