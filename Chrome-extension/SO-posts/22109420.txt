<p>There are two problems in your code. One, as @timrau indicated, is that you return the wrong value <code>-1</code> from the binary search method if the entry isn't found. You should return <code>-lo - 1</code>. (It's the point where you should insert the value - returning a negative value is used to indicate that the value wasn't found in the binary search. But in your case, you don't care about getting duplicates in the sorted list, so you could just as well return <code>lo</code> directly.)  </p>

<p>Second, you pass the wrong array length to your binary search method. It should be <code>cnt - 1</code> rather than <code>arr.length - 1</code>.</p>

<p>The code becomes:</p>

<pre><code>static void insertInOrder(int[] arr, int cnt, int newVal) {
    int index = bSearch(arr, 0, cnt - 1, newVal);
    if (index &lt; 0) {
        index = -1 - index;
    }
    for (int i = cnt; i &gt;= index + 1; --i) {
        arr[i] = arr[i - 1];
    }

    arr[index] = newVal;
}

public static int bSearch(int[] a, int lo, int hi, int key) {
    int mid = (lo + hi) / 2;
    if (lo &gt; hi)
        return -lo - 1;
    else if (a[mid] == key)
        return mid;
    else if (a[mid] &lt; key)
        return bSearch(a, mid + 1, hi, key);
    else
        return bSearch(a, lo, mid - 1, key);
}
</code></pre>
