<p>Rotating the image can be done using setImageMatrix() within getView if you keep track of which images you want rotated.  Something like this:</p>

<pre><code>HashMap&lt;Integer, Matrix&gt; mImageTransforms = new HashMap&lt;Integer,Matrix&gt;();
Matrix mIdentityMatrix = new Matrix();

// create a new ImageView for each item referenced by the Adapter
public View getView(int position, View convertView, ViewGroup parent) {
    ImageView imageView;
    if (convertView == null) {  // if it's not recycled, initialize some attributes
        imageView = new ImageView(mContext);
        imageView.setLayoutParams(new GridView.LayoutParams(85, 85));
        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
        imageView.setPadding(8, 8, 8, 8);
    } else {
        imageView = (ImageView) convertView;
    }

    Matrix m = mImageTransforms.get(position);
    if ( null == m ) {
        m = mIdentityMatrix;
    }
    imageView.setImageMatrix(m);
    imageView.setImageResource(mThumbIds[position]);
    return imageView;
}

void setImageRotation(int position, int degrees) {
    Matrix m = mImageTransforms.remove(position);        
    if ( degrees != 0 ) {
        if ( null == m ) m = new Matrix();
        m.setRotate(degrees);
        mImageTransforms.put(position, m);
    }
    notifyDataSetChanged();
}
</code></pre>

<p>One thing to note.  In touch mode lists and grids do not have a selection per-se, however they can be checked.  It's a bit tricky to get a grid view to show the checked state, that being said the <a href="http://android-codelabs.appspot.com/resources/tutorials/honeypad/index.html" rel="nofollow">Honeypad Tutorial</a> shows how to use checked views within a list view which may be helpful.</p>
