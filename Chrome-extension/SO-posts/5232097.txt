<pre><code>  ListView list=(ListView)findViewById(android.R.id.list);
  list.setAdapter(new EfficientAdapter(this));

  String[] alltext={..............};
  String[] alImages={..........};

private static class EfficientAdapter extends BaseAdapter 
{
   private LayoutInflater mInflater;

   public EfficientAdapter(Context context) 
   {
   mInflater = LayoutInflater.from(context);
   }

   public int getCount() 
   {
   return alltext.length;
   }

   public Object getItem(int position) 
   {
   return position;
   }

   public long getItemId(int position) 
   {
       return position;
   }

   public View getView(int position, View convertView, ViewGroup parent) 
   {
   ViewHolder holder;
   if (convertView == null) 
   {
   convertView = mInflater.inflate(R.layout.images, null);
   holder = new ViewHolder();

   holder.title = (TextView) convertView.findViewById(R.id.title);
   holder.image = (ImageView) convertView.findViewById(R.id.image);

   convertView.setTag(holder);
   } 
   else 
   {
   holder = (ViewHolder) convertView.getTag();
   }

   holder.title.setText(alltext[position]);    
   holder.image.setImageBitmap(loadImageFromUrl(allImges[position]));
   return convertView;
   }

   static class ViewHolder 
   {
   TextView title;
   ImageView image;


   }
   }
</code></pre>

<p>If you have image urls then use loadImageFromUrl() method or in drawble folder use this one</p>

<pre><code>   holder.image.setImageResource(allImges[position]);
</code></pre>

<p>The  loadImageFromUrl method is</p>

<pre><code>public static  Bitmap loadImageFromUrl(String url) {
    InputStream inputStream;Bitmap b,result;

    try {
          if(url.contains(" ")){
                url=url.replace(" ", "%20");
                  }


            inputStream = (InputStream) new URL(url).getContent();
            BitmapFactory.Options bpo=  new BitmapFactory.Options();
            bpo.inJustDecodeBounds = true;
            bpo.inJustDecodeBounds = false; 

            if(bpo.outWidth&gt;500){ 
            bpo.inSampleSize = 8; 
            b=BitmapFactory.decodeStream(inputStream, null,bpo );
    } 
    else
    {
        bpo.inSampleSize=2;
        b=BitmapFactory.decodeStream(inputStream, null,bpo );
    }
             return  b;
    } catch (IOException e) {
            throw new RuntimeException(e);
        }
</code></pre>

<p>}</p>

<p>The images.xml  is</p>

<pre><code>  &lt;?xml version="1.0" encoding="utf-8"?&gt;
  &lt;RelativeLayout
xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="fill_parent"
android:orientation="horizontal"
android:padding="2sp"&gt;


  &lt;TextView
android:id="@+id/title"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:text=""
android:layout_marginLeft="45px"
 /&gt;


  &lt;LinearLayout
 xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
&gt;

&lt;ImageView
android:id="@+id/image"
android:layout_width="35px"
android:layout_height="wrap_content"
android:layout_marginLeft="2px"/&gt;


  &lt;/LinearLayout&gt;
  &lt;/RelativeLayout&gt;
</code></pre>
