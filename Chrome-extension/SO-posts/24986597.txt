<p>You may want to check this library also: <a href="https://code.google.com/p/range-seek-bar/" rel="nofollow">https://code.google.com/p/range-seek-bar/</a></p>

<p>The "range-seek-bar" that I linked doesn't allow touches outside the thumbs. You can then modify the drawables and its onDraw() to visually customize it (make transparent for example). Modify it to allow it to be thumbless, to be used as the top progressbar. So you'll have two of those: one thumbless as the top progressbar, one with thumbs but with transparent lines as the bottom seekbar.</p>

<pre><code>boolean isNotLineless; // Set this in constructor or a setter
boolean isNotThumbless; // Set this in constructor or a setter

@Override
protected synchronized void onDraw(Canvas canvas) {
    super.onDraw(canvas);

    if (isNotLineless) {
        // draw seek bar background line
        final RectF rect = new RectF(padding, 0.5f * (getHeight() - lineHeight), getWidth() - padding, 0.5f * (getHeight() + lineHeight));
        paint.setStyle(Style.FILL);
        paint.setColor(Color.GRAY);
        paint.setAntiAlias(true);
        canvas.drawRect(rect, paint);

        // draw seek bar active range line
        rect.left = normalizedToScreen(normalizedMinValue);
        rect.right = normalizedToScreen(normalizedMaxValue);

        // orange color
        paint.setColor(DEFAULT_COLOR);
        canvas.drawRect(rect, paint);
    }

    if (isNotThumbless) {
        // draw minimum thumb
        drawThumb(normalizedToScreen(normalizedMinValue), Thumb.MIN.equals(pressedThumb), canvas);

        // draw maximum thumb 
        drawThumb(normalizedToScreen(normalizedMaxValue), Thumb.MAX.equals(pressedThumb), canvas);
    }
}
</code></pre>

<p><strong>For the thumbless version</strong>, also handle its touch events.</p>

<pre><code>public boolean onTouchEvent(MotionEvent event) {

    if (!isEnabled() || !isNotThumbless)
        return false;
</code></pre>
