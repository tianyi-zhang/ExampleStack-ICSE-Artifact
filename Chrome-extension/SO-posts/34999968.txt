<p>Use <a href="https://en.wikipedia.org/wiki/Radix_sort" rel="nofollow">Radix Sort</a>, which is O(n)</p>

<pre><code> public void radixsort(int[] input) {
  final int RADIX = 10;
  // declare and initialize bucket[]
  List&lt;Integer&gt;[] bucket = new ArrayList[RADIX];
  for (int i = 0; i &lt; bucket.length; i++) {
    bucket[i] = new ArrayList&lt;Integer&gt;();
  }

  // sort
  boolean maxLength = false;
  int tmp = -1, placement = 1;
  while (!maxLength) {
    maxLength = true;
    // split input between lists
    for (Integer i : input) {
      tmp = i / placement;
      bucket[tmp % RADIX].add(i);
      if (maxLength &amp;&amp; tmp &gt; 0) {
        maxLength = false;
      }
    }
    // empty lists into input array
    int a = 0;
    for (int b = 0; b &lt; RADIX; b++) {
      for (Integer i : bucket[b]) {
        input[a++] = i;
      }
      bucket[b].clear();
    }
    // move to next digit
    placement *= RADIX;
  }
}
</code></pre>

<p><code>code</code> <a href="http://www.geekviewpoint.com/java/sorting/radixsort" rel="nofollow">Ref</a></p>
