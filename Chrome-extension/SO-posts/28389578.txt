<p>In the last few days I finally found how to implement those functions you described and because there was no answer in this question, I decided to post what I found even though there has been a long time since you asked and you may found another answer by yourself.</p>

<p>So, I used the code of <a href="https://github.com/commonsguy/cw-omnibus/tree/master/MapsV2/Drag" rel="nofollow">this</a> git. I managed to do all that you want except the callback that I didn't try it in that way. I am getting the position of the pin after pressing a button.</p>

<hr>

<p>There is no need to post my <code>AndroidManifest</code> because I read that you had no problem with displaying your location, so the permissions needed were fine.</p>

<hr>

<p>The only thing that was required to do, was to create an activity named <code>MapsActivity</code>.
This is the whole content of it:</p>

<pre><code>import com.google.android.gms.maps.*;
import com.google.android.gms.maps.model.*;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageButton;
import android.widget.Toast;

import common.logger.Log;

public class MapsActivity extends Activity implements
        OnMapReadyCallback, GoogleMap.OnInfoWindowClickListener,
        GoogleMap.OnMarkerDragListener {

    LatLng position = new LatLng(34.6767, 33.04455);
    final Marker marker_final = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);

        MapFragment mapFragment = (MapFragment) getFragmentManager()
                .findFragmentById(R.id.
                        map);
        mapFragment.getMapAsync(this);

        ImageButton returnback = (ImageButton)findViewById(R.id.returnback);
        returnback.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                    Toast.makeText(MapsActivity.this.getApplicationContext(), position.latitude + ":"  + position.longitude, Toast.LENGTH_LONG).show();
            }
        });


    }

    @Override
    public void onMapReady(GoogleMap map) {


        map.setMyLocationEnabled(true);
        map.moveCamera(CameraUpdateFactory.newLatLngZoom(position, 13));
        CameraUpdate zoom = CameraUpdateFactory.zoomTo(15);
        map.animateCamera(zoom);

        map.addMarker(new MarkerOptions()
                .title("Shop")
                .snippet("Is this the right location?")
                .position(position))
                .setDraggable(true);

       // map.setInfoWindowAdapter(new PopupAdapter(getLayoutInflater()));
        map.setOnInfoWindowClickListener(this);
        map.setOnMarkerDragListener(this);
    }

    @Override
    public void onInfoWindowClick(Marker marker) {
        Toast.makeText(this, marker.getTitle(), Toast.LENGTH_LONG).show();
    }

    @Override
    public void onMarkerDragStart(Marker marker) {
        LatLng position0 = marker.getPosition();

        Log.d(getClass().getSimpleName(), String.format("Drag from %f:%f",
                position0.latitude,
                position0.longitude));
    }

    @Override
    public void onMarkerDrag(Marker marker) {
        LatLng position0 = marker.getPosition();

        Log.d(getClass().getSimpleName(),
                String.format("Dragging to %f:%f", position0.latitude,
                        position0.longitude));

    }

    @Override
    public void onMarkerDragEnd(Marker marker) {
        position = marker.getPosition();

        Log.d(getClass().getSimpleName(), String.format("Dragged to %f:%f",
                position.latitude,
                position.longitude));
    }
}
</code></pre>

<hr>

<p>This is my <code>activity_maps.xml</code> layout (I've also added an edit text, but there is no need to use it):</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:descendantFocusability="beforeDescendants"
    android:focusableInTouchMode="true"
    android:background="#ecf0f1"&gt;

    &lt;ScrollView
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:id="@+id/scrollView3" &gt;

        &lt;LinearLayout
            android:orientation="vertical"
            android:layout_width="fill_parent"
            android:layout_height="fill_parent"&gt;

            &lt;LinearLayout
                android:orientation="horizontal"
                android:layout_width="fill_parent"
                android:weightSum="1"
                android:layout_height="wrap_content"&gt;

                &lt;EditText
                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:layout_weight="0.9"
                    android:id="@+id/locationsearch" /&gt;

                &lt;ImageButton
                    android:layout_width="40dp"
                    android:layout_height="40dp"
                    android:id="@+id/search"
                    android:layout_weight="0.1"
                    android:background="@drawable/search" /&gt;

            &lt;/LinearLayout&gt;

            &lt;fragment xmlns:android="http://schemas.android.com/apk/res/android"
            android:id="@+id/map"
            android:layout_width="match_parent"
            android:layout_height="405dp"
            android:name="com.google.android.gms.maps.MapFragment"/&gt;

            &lt;ImageButton
                android:layout_width="60dp"
                android:layout_height="60dp"
                android:id="@+id/returnback"
                android:background="@drawable/less" /&gt;
        &lt;/LinearLayout&gt;
    &lt;/ScrollView&gt;

&lt;/LinearLayout&gt;
</code></pre>
