<p>I have found the answer for my problem and am posting here</p>

<pre><code>Polyline localPolyline;
public void calcPath( final double fromLat, final double fromLon,
        final double toLat, final double toLon )
{
    log("calculating path ...");
    new AsyncTask&lt;Void, Void, GHResponse&gt;()
    {
        float time;

        protected GHResponse doInBackground( Void... v )
        {
            StopWatch sw = new StopWatch().start();
            GHRequest req = new GHRequest(fromLat, fromLon, toLat, toLon).
                    setAlgorithm(AlgorithmOptions.DIJKSTRA_BI);

            req.getHints()
            .put("instructions", "false");
            GHResponse resp = hopper.route(req);
            time = sw.stop().getSeconds();
            return resp;
        }

        protected void onPostExecute( GHResponse resp )
        {
            if (!resp.hasErrors())
            {
                if(localPolyline!=null){
                    mapView.getLayerManager().getLayers().remove(localPolyline);
                }
                else{
                    log("here");
                }
                log("from:" + fromLat + "," + fromLon + " to:" + toLat + ","
                        + toLon + " found path with distance:" + resp.getDistance()
                        / 1000f + ", nodes:" + resp.getPoints().getSize() + ", time:"
                        + time + " " + resp.getDebugInfo());
                logUser("the route is " + (int) (resp.getDistance() / 100) / 10f
                        + "km long, time:" + resp.getMillis() / 60000f + "min, debug:" + time);
                localPolyline=createPolyline(resp);
                mapView.getLayerManager().getLayers().add(localPolyline);
            } else
            {
                logUser("Error:" + resp.getErrors());
            }
        }
    }.execute();
}
</code></pre>

<p>Thanks to everybody.</p>
