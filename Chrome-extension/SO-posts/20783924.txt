<p>You can use an aync-task for this follow the blow code</p>

<pre><code>class myAsyncTask extends AsyncTask&lt;Void,Void,String&gt;
{
protected void doInBackground(Void...params)
{
final String NAMESPACE = "http://sample.com/";
        final String METHOD_NAME = "SayHello";    
        final String SOAP_ACTION = "http://sample.com/SayHello";
        final String URL = "http://192.168.1.104/HelloAndroid/Service1.asmx";

        try {
            SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME);            
            SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
            envelope.dotNet = true;
            envelope.setOutputSoapObject(request);

            HttpTransportSE androidHttpTransport = new HttpTransportSE(URL);
            androidHttpTransport.call(SOAP_ACTION, envelope);
            SoapPrimitive response = (SoapPrimitive)envelope.getResponse();
            String resultValue = response.toString();


        }
        catch (Exception e) {
            result.setText(e.getMessage());
        }
return resultValue;
}
protected void onPostExcecute(String result)
{
super.onPostExecute(result);
result.setText(result);   
}
}
</code></pre>

<p>now call this Async task by creating an object in MainActivity like <code>myasyncTask object =new myAsyncTask();</code>
and now execute it like <code>object.execute();</code></p>
