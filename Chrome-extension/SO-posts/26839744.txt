<p>Your requirement doesn't seem to be related to <code>Hadoop</code> at all. All you need is a lookup for the <code>id</code> against the movieName specified by the 3rd parameter of the <code>hadoop jar</code> command. The following snippet will get the job done : </p>

<pre><code>private static Map&lt;String, Integer&gt; getMovieMappings(String filePath)
        throws IOException {
    Map&lt;String, Integer&gt; movieMap = new HashMap&lt;String, Integer&gt;();
    BufferedReader br = null;
    try {
        br = new BufferedReader(new FileReader(filePath));
        String line;
        while ((line = br.readLine()) != null) {
            String[] temp = line.split(",");
            movieMap.put(temp[2].trim(), Integer.parseInt(temp[0].trim()));
        }
    } finally {
        if (br != null)   br.close(); 
    }
    return movieMap;
}
</code></pre>

<p>Now in driver, just get the map and set the inputPath accordingly :</p>

<pre><code>Map&lt;String, Integer&gt; movieMap = getMovieMappings("/pathTo/movie_title.txt");
int movieId = movieMap.get(args[2]);
System.out.println(String.format("mv_%06d", movieId));
FileInputFormat.addInputPath( job, 
                              new Path( "training_set",
                                        String.format("mv_%06d", movieId)));
</code></pre>

<p>May it helps.</p>
