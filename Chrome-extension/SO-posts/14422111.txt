<p>I would suggest extending SimpleCursorAdapter rather than TextView for this.</p>

<pre><code>public class MacAddressCursorAdapter extends SimpleCursorAdapter {

private int mLayout;
private Cursor mCursor;
private LayoutInflater mLayoutInflater;

private final class ViewHolder {
    public TextView name;
    public TextView mac;
}

public MacAddressCursorAdapter(Context context, int layout, Cursor c,
        String[] from, int[] to, int flags) {
    super(context, layout, c, from, to, flags);

    mLayout = layout;
    mCursor = c;
    mLayoutInflater = LayoutInflater.from(context);
}

public View getView(int position, View convertView, ViewGroup parent) {

    ViewHolder viewHolder;

    if (convertView == null) {
        convertView = mLayoutInflater.inflate(mLayout, null);
        viewHolder = new ViewHolder();
        viewHolder.name = (TextView) convertView.findViewById(R.id.name);
        viewHolder.mac = (TextView) convertView
                .findViewById(R.id.mac_address);
        convertView.setTag(viewHolder);
    } else {
        viewHolder = (ViewHolder) convertView.getTag();
    }

    mCursor.moveToPosition(position);

    viewHolder.name.setText(mCursor.getString(mCursor
            .getColumnIndex("name")));

    String macaddress = mCursor.getString(mCursor
            .getColumnIndex("mac_address"));

    viewHolder.mac.setText(formatMAC(macaddress));

    return convertView;
}

private String formatMAC(String mac) {
    String result = Arrays.toString(mac.split("(?&lt;=\\G.{2})")).replace(
            ", ", ":");
    result = result.substring(1, result.length() - 1);

    return result;
}

}
</code></pre>
