<p>STEP 1: Create Activity</p>

<pre><code>public class MainActivity extends Activity {

ListView outputText;
List&lt;String&gt; userName;
Map&lt;String, String&gt; userNamePhno;
Map&lt;String, String&gt; userNameEmail;
StringBuffer output;
CustomAdapter adapter;
Dialog dialogDetails;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    outputText = (ListView) findViewById(R.id.listview);

    userNameEmail = new HashMap&lt;String, String&gt;();
    userNamePhno = new HashMap&lt;String, String&gt;();
    userName = new ArrayList&lt;String&gt;();

    new getContacts().execute();
    outputText.setOnItemClickListener(new OnItemClickListener() {

        @Override
        public void onItemClick(AdapterView&lt;?&gt; arg0, View arg1, int arg2,
                long arg3) {

            String[] details = new String[] { userName.get(arg2),
                    userNamePhno.get(userName.get(arg2)),
                    userNameEmail.get(userName.get(arg2)) };
            dialogDetails = new Dialog(MainActivity.this);
            dialogDetails.setContentView(R.layout.contact_details);
            dialogDetails.setTitle("Details");
            dialogDetails.show();

            TextView tvName = (TextView) dialogDetails.findViewById(R.id.name);
            TextView tvNumber = (TextView) dialogDetails.findViewById(R.id.phno);
            TextView tvEmail = (TextView) dialogDetails.findViewById(R.id.email);
            if (details[1]==null) 
            {
                tvName.setText(details[0]);
                tvNumber.setText("-");
                tvEmail.setText(details[2]);
            }
            else if (details[2]==null) 
            {
                tvName.setText(details[0]);
                tvNumber.setText(details[1]);
                tvEmail.setText("-");
            } 
            else if (details[2]==null &amp;&amp; details[1]==null) 
            {

                tvName.setText(details[0]);
                tvNumber.setText("-");
                tvEmail.setText("-");
            } 
            else 
            {
                tvName.setText(details[0]);
                tvNumber.setText(details[1]);
                tvEmail.setText(details[2]);
            }

        }
    });

}

public class getContacts extends AsyncTask&lt;Void, Void, Void&gt; {
    ProgressDialog dialog;

    @Override
    protected void onPreExecute() {
        dialog = new ProgressDialog(MainActivity.this);
        dialog.setCancelable(false);
        dialog.setMessage("Wait please");
        dialog.show();

    }

    @Override
    protected Void doInBackground(Void... params) {
        fetchContacts();

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        dialog.dismiss();
        dialog.setCancelable(true);
        adapter = new CustomAdapter(MainActivity.this, userName,
                userNamePhno);
        outputText.setAdapter(adapter);
    }
}

private void fetchContacts() {
    String phoneNumber = null;
    String email = null;

    Uri CONTENT_URI = ContactsContract.Contacts.CONTENT_URI;
    String _ID = ContactsContract.Contacts._ID;
    String DISPLAY_NAME = ContactsContract.Contacts.DISPLAY_NAME;
    String HAS_PHONE_NUMBER = ContactsContract.Contacts.HAS_PHONE_NUMBER;

    Uri PhoneCONTENT_URI = ContactsContract.CommonDataKinds.Phone.CONTENT_URI;
    String Phone_CONTACT_ID = ContactsContract.CommonDataKinds.Phone.CONTACT_ID;
    String NUMBER = ContactsContract.CommonDataKinds.Phone.NUMBER;

    Uri EmailCONTENT_URI = ContactsContract.CommonDataKinds.Email.CONTENT_URI;
    String EmailCONTACT_ID = ContactsContract.CommonDataKinds.Email.CONTACT_ID;
    String DATA = ContactsContract.CommonDataKinds.Email.DATA;

    output = new StringBuffer();

    ContentResolver contentResolver = getContentResolver();

    Cursor cursor = contentResolver.query(CONTENT_URI, null, null, null,
            null);

    if (cursor.getCount() &gt; 0) {

        while (cursor.moveToNext()) {

            String contact_id = cursor
                    .getString(cursor.getColumnIndex(_ID));
            String name = cursor.getString(cursor
                    .getColumnIndex(DISPLAY_NAME));

            int hasPhoneNumber = Integer.parseInt(cursor.getString(cursor
                    .getColumnIndex(HAS_PHONE_NUMBER)));

            if (hasPhoneNumber &gt; 0) {
                output.append("\n First Name:" + name);
                userName.add(name);

                // Query and loop for every phone number of the contact
                Cursor phoneCursor = contentResolver.query(
                        PhoneCONTENT_URI, null, Phone_CONTACT_ID + " = ?",
                        new String[] { contact_id }, null);

                while (phoneCursor.moveToNext()) {

                    phoneNumber = phoneCursor.getString(phoneCursor
                            .getColumnIndex(NUMBER));
                    output.append("\n Phone number:" + phoneNumber);
                    // userPhoneNumber.add(phoneNumber);
                    userNamePhno.put(name, phoneNumber);

                }
                phoneCursor.close();

                // Query and loop for every email of the contact
                Cursor emailCursor = contentResolver.query(
                        EmailCONTENT_URI, null, EmailCONTACT_ID + " = ?",
                        new String[] { contact_id }, null);
                while (emailCursor.moveToNext()) {

                    email = emailCursor.getString(emailCursor
                            .getColumnIndex(DATA));
                    output.append("\nEmail:" + email);
                    // userEmailAddress.add(email);
                    userNameEmail.put(name, email);

                }
                emailCursor.close();

            }
            output.append("\n");

        }
        // outputText.setText(output);

    }

}

@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.main, menu);
    return true;
}

}
</code></pre>

<p>STEP 2: Create Adapter</p>

<pre><code>public class CustomAdapter extends ArrayAdapter&lt;String&gt; {
private Activity context;
private List&lt;String&gt; userName;
private Map&lt;String, String&gt; userNamePhno;
/*private List&lt;String&gt; userPhoneNumber;
private List&lt;String&gt; userEmailAddress;*/

public CustomAdapter(MainActivity mainActivity, List&lt;String&gt; userName, Map&lt;String, String&gt; userNamePhno) {
    super(mainActivity, R.layout.list_row, userName);
    this.context=mainActivity;
    this.userName = userName;
    this.userNamePhno=userNamePhno;
    /*this.userPhoneNumber = userPhoneNumber;
    this.userEmailAddress = userEmailAddress;*/

}
static class ViewHolder {
    public TextView userName;
    public TextView userNumber;
}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    View vi = convertView;
    if(vi == null){

        LayoutInflater inflater = context.getLayoutInflater();
        vi = inflater.inflate(R.layout.list_row, null);
        ViewHolder holder = new ViewHolder();
        holder.userName=(TextView) vi.findViewById(R.id.contact_name);
        holder.userNumber=(TextView) vi.findViewById(R.id.contact_number);
        vi.setTag(holder);
    }
    ViewHolder holder = (ViewHolder) vi.getTag();
    holder.userName.setText("Name: "+userName.get(position).toUpperCase());
    holder.userNumber.setText("Ph No: "+userNamePhno.get(userName.get(position)));
    return vi;
}

}
</code></pre>

<p>Feel free to ask in case of any query.</p>
