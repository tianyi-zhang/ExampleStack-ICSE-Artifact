<p>To compare the result with the previous result you need to keep both of them in a variable.</p>

<p>This does a binary chop.</p>

<pre><code>public static double sqrt(double ans) {
    if (ans &lt; 1)
        return 1.0 / sqrt(1.0 / ans);
    double guess = 1;
    double add = ans / 2;
    while (add &gt;= Math.ulp(guess)) {
        double guess2 = guess + add;
        double result = guess2 * guess2;
        if (result &lt; ans)
            guess = guess2;
        else if (result == ans)
            return guess2;
        add /= 2;
    }
    return guess;
}

public static void main(String[] args) {
    for (int i = 0; i &lt;= 10; i++)
        System.out.println(sqrt(i) + " vs " + Math.sqrt(i));
}
</code></pre>

<p>prints</p>

<pre><code>0.0 vs 0.0
1.0 vs 1.0
1.414213562373095 vs 1.4142135623730951
1.7320508075688772 vs 1.7320508075688772
2.0 vs 2.0
2.236067977499789 vs 2.23606797749979
2.449489742783178 vs 2.449489742783178
2.64575131106459 vs 2.6457513110645907
2.82842712474619 vs 2.8284271247461903
3.0 vs 3.0
3.162277660168379 vs 3.1622776601683795
</code></pre>

<p>and</p>

<pre><code>    for (int i = 0; i &lt;= 10; i++)
        System.out.println(i / 10.0 + ": " + sqrt(i / 10.0) + " vs " + Math.sqrt(i / 10.0));
</code></pre>

<p>prints</p>

<pre><code>0.0: 0.0 vs 0.0
0.1: 0.31622776601683794 vs 0.31622776601683794
0.2: 0.4472135954999581 vs 0.4472135954999579
0.3: 0.5477225575051662 vs 0.5477225575051661
0.4: 0.6324555320336759 vs 0.6324555320336759
0.5: 0.7071067811865476 vs 0.7071067811865476
0.6: 0.7745966692414834 vs 0.7745966692414834
0.7: 0.8366600265340758 vs 0.8366600265340756
0.8: 0.894427190999916 vs 0.8944271909999159
0.9: 0.9486832980505138 vs 0.9486832980505138
1.0: 1.0 vs 1.0
</code></pre>
