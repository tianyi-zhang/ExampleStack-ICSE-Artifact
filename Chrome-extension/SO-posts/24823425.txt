<p>Just pass the <code>Date</code> to the same <code>Fragment</code> class. Normally a static factory method is used for this. I modified your <code>Fragment</code> accordingly:</p>

<pre><code>public static class ExampleFragment extends Fragment {

    private static final String EXTRA_DATE = "date";

    // With this method you can create a new Instance of this
    // ExampleFragment. The Date is passed to the Fragment
    // through a Bundle
    public static Fragment newInstance(Date date) {
        ExampleFragment fragment = new ExampleFragment();

        Bundle arguments = new Bundle();
        arguments.putSerializable(EXTRA_DATE, date);
        fragment.setArguments(arguments);

        return fragment;
    }

    private GridView gridView;
    private Date date;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment1, container, false);

        this.gridView = (GridView) rootView.findViewById(R.id.gridView1);

        return rootView;
    }

    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        // Here we retrieve the Date from the Bundle
        Bundle arguments = getArguments();
        if(arguments != null) {
            this.date = (Date) arguments.getSerializable(EXTRA_DATE);
            // Do whatever you want with the Date
        }
    }
}
</code></pre>

<p>So with this <code>ExampleFragment</code> your <code>Adapter</code> would look like this:</p>

<pre><code>@Override
public Fragment getItem(int position) {

    int yearsToAdd = position / 12;

    // Here we create a Date based on the position, 
    // We set the Date to be at the start of each month
    Calendar calendar = Calendar.getInstance();
    calendar.add(Calendar.YEAR, yearsToAdd);
    calendar.set(Calendar.MONTH, position);
    calendar.set(Calendar.DAY_OF_MONTH, 0);
    calendar.set(Calendar.HOUR_OF_DAY, 0);
    calendar.set(Calendar.MINUTE, 0);
    calendar.set(Calendar.SECOND, 0);
    Date date = calendar.getTime();

    // Here we return a new instance of the ExampleFragment
    // And pass along the Date from above
    return ExampleFragment.newInstance(date);
}
</code></pre>
