<p>You can call <a href="http://lucene.apache.org/solr/4_10_0/solr-solrj/org/apache/solr/common/SolrInputDocument.html#addField(java.lang.String,%20java.lang.Object)" rel="nofollow"><code>SolrInputDocument.addField(String name, Object value)</code></a> either multiple times passing an <code>Object</code> as the value or a single time passing a <code>Collection</code> as the value.  </p>

<p>Example #1:</p>

<pre><code>ArrayList&lt;String&gt; values = Arrays.asList({"value1", "value2", "value3"});
solrInputDocument.addField("field", values);
</code></pre>

<p>Example #2:</p>

<pre><code>solrInputDocument.addField("field", "value1");
solrInputDocument.addField("field", "value2");
solrInputDocument.addField("field", "value3");
</code></pre>

<p>Both of these examples will result in the same thing.  You could even mix and match the calls if you needed to.  To see why this works, trace the calls into the Solr source code and you'll find the multi-valued cases are handled in <a href="http://lucene.apache.org/solr/4_10_0/solr-solrj/org/apache/solr/common/SolrInputField.html#addValue(java.lang.Object,%20float)" rel="nofollow"><code>SolrInputField.addValue(Object v, float b)</code></a>.</p>

<pre><code>/**
 * Add values to a field.  If the added value is a collection, each value
 * will be added individually.
 */
@SuppressWarnings("unchecked")
public void addValue(Object v, float b) {
  if( value == null ) {
    if ( v instanceof Collection ) {
      Collection&lt;Object&gt; c = new ArrayList&lt;Object&gt;( 3 );
      for ( Object o : (Collection&lt;Object&gt;)v ) {
        c.add( o );
      }
      setValue(c, b);
    } else {
      setValue(v, b);
    }

    return;
  }

  boost *= b;

  Collection&lt;Object&gt; vals = null;
  if( value instanceof Collection ) {
    vals = (Collection&lt;Object&gt;)value;
  }
  else {
    vals = new ArrayList&lt;Object&gt;( 3 );
    vals.add( value );
    value = vals;
  }

  // Add the new values to a collection
  if( v instanceof Iterable ) {
    for( Object o : (Iterable&lt;Object&gt;)v ) {
      vals.add( o );
    }
  }
  else if( v instanceof Object[] ) {
    for( Object o : (Object[])v ) {
      vals.add( o );
    }
  }
  else {
    vals.add( v );
  }
}
</code></pre>
