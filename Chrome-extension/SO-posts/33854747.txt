<p>You should use <code>onSucess</code> callback, like this:</p>

<pre><code>private View preparePinView () {

    View marker = ((LayoutInflater) getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.places_pin_layout, null);
    final ImageView image = marker.findViewById(R.id.image1);
    Picasso.with(getActivity()).load(image1url).fit().centerCrop().into(image1, new com.squareup.picasso.Callback(){
        @Override
        public void onSuccess() {
            Bitmap placePinBM = createDrawableFromView(context, image);

            Marker pinMarker = map.addMarker(new MarkerOptions()
                    .position(markerLatLng)
                    .icon(BitmapDescriptorFactory.fromBitmap(placePinBM)));
        }

        @Override
        public void onError() {

        }
    });

    return marker;
}

// Convert a view to bitmap
public static Bitmap createDrawableFromView(Context context, View view) {
    DisplayMetrics displayMetrics = new DisplayMetrics();
    ((Activity) context).getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
    view.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));
    view.measure(displayMetrics.widthPixels, displayMetrics.heightPixels);
    view.layout(0, 0, displayMetrics.widthPixels, displayMetrics.heightPixels);
    view.buildDrawingCache();
    Bitmap bitmap = Bitmap.createBitmap(view.getMeasuredWidth(), view.getMeasuredHeight(), Bitmap.Config.ARGB_8888);

    Canvas canvas = new Canvas(bitmap);
    view.draw(canvas);

    return bitmap;
}
</code></pre>
