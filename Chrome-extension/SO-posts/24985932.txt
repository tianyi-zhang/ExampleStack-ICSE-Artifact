<p>I solved my problem, and made it much less confusing; all I did was add parameters to the <code>onDialogSigninClick</code> method.</p>

<p>My new Dialog code:</p>

<pre><code>public class LoginDialogFragment extends DialogFragment {

    public interface LoginDialogListener {
        public void onDialogSigninClick(DialogFragment dialog, String username, String password);
    }

    LoginDialogListener mListener;

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        // Verify that the host activity implements the callback interface
        try {
            // Instantiate the NoticeDialogListener so we can send events to the host
            mListener = (LoginDialogListener) activity;
        } catch (ClassCastException e) {
            // The activity doesn't implement the interface, throw exception
            throw new ClassCastException(activity.toString()
                    + " must implement LoginDialogListener");
        }
    }

    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());

        // Get the layout inflater
        LayoutInflater inflater = getActivity().getLayoutInflater();
        final View v = inflater.inflate(R.layout.dialog_signin, null);
        builder.setTitle("Log In");
        final EditText u = (EditText)v.findViewById(R.id.username22);
        final EditText p = (EditText)v.findViewById(R.id.password22);

        // Inflate and set the layout for the dialog
        // Pass null as the parent view because its going in the dialog layout
        builder.setView(v)
                // Add action buttons
                .setPositiveButton("Sign In", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int id) {
                        // sign in the user ...
                        mListener.onDialogSigninClick(LoginDialogFragment.this, u.getText().toString(), p.getText().toString());
                    }
                })
                .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        LoginDialogFragment.this.getDialog().cancel();
                    }
                });
        return builder.create();
    }
}
</code></pre>

<p>My code in the activity that the fragments attaches to:</p>

<pre><code>@Override
public void onDialogSigninClick(DialogFragment dialog, String username, String password) {
        // User touched the dialog's positive button
        //LayoutInflater inflater = getLayoutInflater();
        System.out.println("I am in the dialog.");
        //View myView = inflater.inflate(R.layout.dialog_signin, null);
        //EditText username2 = (EditText) myView.findViewById(R.id.username22);
        //EditText password2 = (EditText) myView.findViewById(R.id.password22);
        String usernameText = username;
        String passwordText = password;
        System.out.println("The username is:" + usernameText);
        Intent i = new Intent(this, GSSAct.class);
        i.putExtra("username", usernameText);
        i.putExtra("password", passwordText);
        startActivity(i);
    }
</code></pre>
