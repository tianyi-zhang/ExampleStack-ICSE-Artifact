<p>This is an example how to upload an XML file from <a href="http://w3mentor.com/learn/java/android-development/android-http-services/example-of-multipart-post-using-android/" rel="nofollow">http://w3mentor.com/learn/java/android-development/android-http-services/example-of-multipart-post-using-android/</a> 
Where data.xml file and two more fields ("one" and "two") are uploaded to the server. Note that this will require additional jar libraries which you need to download and place in the "lib" folder on the same level as "res" and and "src" folders in the project.
Here are the three jar files you need httpmime-4.0.jar, apache-mime4j-0.6.jar, commons-io-1.4.jar:</p>

<p><a href="http://james.apache.org/download.cgi#Apache_Mime4J" rel="nofollow">http://james.apache.org/download.cgi#Apache_Mime4J</a> </p>

<p><a href="https://repository.apache.org/content/repositories/releases/org/apache/httpcomponents/httpmime/4.0.1/httpmime-4.0.1.jar" rel="nofollow">https://repository.apache.org/content/repositories/releases/org/apache/httpcomponents/httpmime/4.0.1/httpmime-4.0.1.jar</a></p>

<p><a href="http://code.google.com/p/mapmap/downloads/detail?name=commons-io-1.4.jar&amp;can=2&amp;q=" rel="nofollow">http://code.google.com/p/mapmap/downloads/detail?name=commons-io-1.4.jar&amp;can=2&amp;q=</a></p>

<p>You add this to the project by selecting the project in Exclipse and click File>Properties>Java Build Path>Libraries and then [Add jars]</p>

<pre><code>    import java.io.ByteArrayInputStream;
import java.io.InputStream;
import org.apache.commons.io.IOUtils;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.mime.MultipartEntity;
import org.apache.http.entity.mime.content.InputStreamBody;
import org.apache.http.entity.mime.content.StringBody;
import org.apache.http.impl.client.DefaultHttpClient;
import android.app.Activity;
public class TestMultipartPost extends Activity
{
    public void executeMultipartPost()throws Exception
    {
        try {
            InputStream is = this.getAssets().open("data.xml");
            HttpClient httpClient = new DefaultHttpClient();
            HttpPost postRequest = new HttpPost("http://w3mentor.com/Upload.aspx");
            byte[] data = IOUtils.toByteArray(is);
            InputStreamBody isb = new InputStreamBody(new ByteArrayInputStream(data),"uploadedFile");
            StringBody sb1 = new StringBody("someTextGoesHere");
            StringBody sb2 = new StringBody("someTextGoesHere too");
            MultipartEntity multipartContent = new MultipartEntity();
            multipartContent.addPart("uploadedFile", isb);
            multipartContent.addPart("one", sb1);
            multipartContent.addPart("two", sb2);
            postRequest.setEntity(multipartContent);
            HttpResponse res = httpClient.execute(postRequest);
            res.getEntity().getContent().close();
        } catch (Throwable e)
        {
            // handle exception here
        }
    }
}
</code></pre>

<p>One more thing, you need to run this in the "background" as an asynchronous task like this:</p>

<pre><code>    private class XmlUploadTask extends AsyncTask&lt;Object, String, Boolean&gt; {
    private static final String DEBUG_TAG = "XmlUploadTask";
    ProgressDialog pleaseWaitDialog;

    @Override
    protected void onCancelled() {
        Log.i(DEBUG_TAG, "onCancelled");
        pleaseWaitDialog.dismiss();
    }

    @Override
    protected void onPostExecute(Boolean result) {
        Log.i(DEBUG_TAG, "onPostExecute");
        pleaseWaitDialog.dismiss();
    }

    @Override
    protected void onPreExecute() {
        pleaseWaitDialog = ProgressDialog.show(myActivity.this, "My Application", "Uploading data...", true, true);
        pleaseWaitDialog.setOnCancelListener(new OnCancelListener() {

            public void onCancel(DialogInterface dialog) {
                XmlUploadTask.this.cancel(true);
            }
        });
    }

    @Override
    protected Boolean doInBackground(Object... params) {
//here you enter the xml upload code above
         return null;
    }

}
</code></pre>
