<ol>
<li>You should not call alert.show() in onCreateDialog.</li>
<li>Your onCreateDIalog returns dialog variable that is actually null, you don't initialize it.</li>
</ol>

<p>Please take a look at samples\ApiDemos\src\com\example\android\apis\app\AlertDialogSamples.java, it is done correctly there.
You may also read this <a href="http://developer.android.com/guide/topics/ui/dialogs.html" rel="nofollow">http://developer.android.com/guide/topics/ui/dialogs.html</a> on correct onCreateDialog usage.
Here's the fixed version of your onCreateDialog:</p>

<pre><code>protected Dialog onCreateDialog(int id) {
        switch(id) {
        case DIALOG_DELETEDB:
            // do the work to define the pause Dialog
            AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setMessage("Are you sure you want to exit?")
            .setCancelable(false)
            .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int id) {
                     Favs.this.finish();
                }
            })
            .setNegativeButton("No", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int id) {
                     dialog.cancel();
                }
            });
            AlertDialog alert = builder.create();
            return alert;
        }

return null;
    }
</code></pre>

<p>Another approach is to display dialog directly:</p>

<pre><code>public boolean onMenuItemSelected(int featureId, MenuItem item) {
        switch(item.getItemId()) {
        case DELETE_DB_ID:
          AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setMessage("Are you sure you want to exit?")
            .setCancelable(false)
            .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int id) {
                     Favs.this.finish();
                }
            })
            .setNegativeButton("No", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int id) {
                     dialog.cancel();
                }
            });
            AlertDialog alert = builder.create();
            alert.show();
            return true;
        }      
        return super.onMenuItemSelected(featureId, item);
    }
</code></pre>
