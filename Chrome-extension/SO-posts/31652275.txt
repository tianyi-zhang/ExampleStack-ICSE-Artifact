<p>You can use this function to format any XML String. Try this. Create a raw xml using your logic and pass it to this function it will take care of indent and all.</p>

<pre><code>    public static String formatXMLString(String unformattedXml) throws Exception {
    try {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document document = builder.parse(new InputSource(new StringReader(unformattedXml)));
        OutputFormat format = new OutputFormat(document);
        format.setLineWidth(65);
        format.setIndenting(true);
        format.setOmitXMLDeclaration(true);
        format.setIndent(2);
        Writer out = new StringWriter();
        XMLSerializer serializer = new XMLSerializer(out, format);
        serializer.serialize(document);
        return out.toString();
    } catch (IOException e) {
        throw e;
    }
}
</code></pre>

<p><strong>UPDATE</strong></p>

<p>We can use JAXB to unmarshl the Object and get a formatted XML.</p>

<pre><code>public static void main(String[] args) throws Exception {
    StringWriter writer = new StringWriter();
    Project project = new Project("1", "POP");
    JAXBContext contect = JAXBContext.newInstance(project.getClass());
    Marshaller marshaller = contect.createMarshaller();
    marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
    marshaller.marshal(project, writer);
    System.out.println( writer.toString());

}
</code></pre>
