<p>Just make your image view a class field, initialize it at onCreate() of your activity, and then just call setVisibility for the image view from your onPostExecute</p>

<p>Here is a sample for you:</p>

<pre><code>public class MainActivity extends Activity {

//here is your image
private ImageView mImageView;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    //initialize it
    mImageView = (ImageView) findViewById(R.id.yourImageView);


}
}
</code></pre>

<p>and then at AsyncTask:</p>

<pre><code>    @Override
    protected void onPostExecute(String result) {

        //set visibility
        mImageView.setVisibility(View.INVISIBLE);
    }
</code></pre>

<p>For your code:</p>

<pre><code>package com.example.androidhive;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.http.NameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ImageView;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

public class quoPAPIERCORD extends ListActivity {

    // Progress Dialog
    private ProgressDialog pDialog;

    // Creating JSON Parser object
    JSONParser jParser = new JSONParser();

    ArrayList&lt;HashMap&lt;String, String&gt;&gt; productsList;

    // url to get all products list
    private static String url_all_products_quo = "http://192.168.1.81/php/android/get_all_quotidiens.php";

    // JSON Node names
    private static final String TAG_SUCCESS = "success";
    private static final String TAG_PRODUCTS = "products";
    private static final String TAG_PID = "pid";
    private static final String TAG_NAME = "name";
    private static final String TAG_PRICE = "price";
    private static String TAG_CU = "cu";

    // products JSONArray
    JSONArray products = null;

    private ImageView image_A_wrong;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.quotidiens);

        //initialize image view
        image_A_wrong = (ImageView) findViewById(R.id.imageView1);

        // Hashmap for ListView
        productsList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();

        // Loading products in Background Thread
        new LoadAllProducts().execute();

        // Get listview
        ListView lv = getListView();

        // on seleting single product
        // launching Edit Product Screen
        lv.setOnItemClickListener(new OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView&lt;?&gt; parent, View view,
                    int position, long id) {
                // getting values from selected ListItem
                String pid = ((TextView) view.findViewById(R.id.pid)).getText()
                        .toString();

                // Starting new intent
                Intent in = new Intent(getApplicationContext(),
                        EditProductActivity.class);
                // sending pid to next activity
                in.putExtra(TAG_PID, pid);

                // starting new activity and expecting some response back
                startActivityForResult(in, 100);
            }
        });

    }

    // Response from Edit Product Activity
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        // if result code 100
        if (resultCode == 100) {
            // if result code 100 is received 
            // means user edited/deleted product
            // reload this screen again
            Intent intent = getIntent();
            finish();
            startActivity(intent);
        }

    }

    /**
     * Background Async Task to Load all product by making HTTP Request
     * */
    class LoadAllProducts extends AsyncTask&lt;String, String, String&gt; {

        /**
         * Before starting background thread Show Progress Dialog
         * */
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            pDialog = new ProgressDialog(quoPAPIERCORD.this);
            pDialog.setMessage("Loading products. Please wait...");
            pDialog.setIndeterminate(false);
            pDialog.setCancelable(false);
            pDialog.show();
        }

        /**
         * getting All products from url
         * */
        protected String doInBackground(String... args) {
            // Building Parameters
            List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
            // getting JSON string from URL
            JSONObject json = jParser.makeHttpRequest(url_all_products_quo, "GET", params);

            // Check your log cat for JSON reponse
            Log.d("All Products: ", json.toString());

            try {
                // Checking for SUCCESS TAG
                int success = json.getInt(TAG_SUCCESS);

                if (success == 1) {
                    // products found
                    // Getting Array of Products
                    products = json.getJSONArray(TAG_PRODUCTS);

                    // looping through All Products
                    for (int i = 0; i &lt; products.length(); i++) {
                        JSONObject c = products.getJSONObject(i);

                        // Storing each json item in variable
                        String id = c.getString(TAG_PID);
                        String name = c.getString(TAG_NAME);
                        String price = c.getString(TAG_PRICE);
                        String cu = c.getString(TAG_CU);
                        /////////////
                        if (cu.equals("1")) {
                            cu = "oui";
                        } 

                        else
                            {
                               cu = "pas";
                            }


                        // creating new HashMap
                        HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();

                        // adding each child node to HashMap key =&gt; value
                        map.put(TAG_PID, id);
                        map.put(TAG_NAME, name);
                        map.put(TAG_PRICE, price);
                        map.put(TAG_CU, cu);

                        // adding HashList to ArrayList
                        productsList.add(map);
                    }
                } else {
                    // no products found
                    // Launch Add New product Activity
                    Intent i = new Intent(getApplicationContext(),
                            NewProductActivity.class);
                    // Closing all previous activities
                    i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                    startActivity(i);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }



            return null;
        }

        /**
         * After completing background task Dismiss the progress dialog
         * **/


        protected void onPostExecute(String file_url) {

            // dismiss the dialog after getting all products
            pDialog.dismiss();
            // updating UI from Background Thread
            runOnUiThread(new Runnable() {
                public void run() {
                    /**
                     * Updating parsed JSON data into ListView
                     * */
                    ListAdapter adapter = new SimpleAdapter(
                            quoPAPIERCORD.this, productsList,
                            R.layout.list_item, new String[] { TAG_PID,
                                    TAG_NAME, TAG_PRICE, TAG_CU},
                            new int[] { R.id.pid, R.id.name, R.id.price, R.id.cu });
                    // updating listview

                    if(TAG_CU.equals("pas"))
                    {
                        image_A_wrong.setVisibility(View.GONE);

                    }
                    else if (TAG_CU.equals("oui"))
                    {
                        image_A_wrong.clearAnimation();
                        image_A_wrong.setVisibility(View.VISIBLE);
                    }
                    setListAdapter(adapter);
                }

            });

        }

    }
}
</code></pre>
