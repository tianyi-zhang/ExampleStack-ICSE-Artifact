<p>You can find solution to your problem in comment above, but taking into consideration that only link had been published I'm giving code from that site. Worked great.</p>

<ol>
<li><p><strong>You need to create your own AlphanumericalComparator.</strong></p>

<pre><code> import java.io.File;
 import java.util.Comparator;

public class AlphanumFileComparator implements Comparator
{

   private final boolean isDigit(char ch)
   {
    return ch &gt;= 48 &amp;&amp; ch &lt;= 57;
   }


private final String getChunk(String s, int slength, int marker)
{
    StringBuilder chunk = new StringBuilder();
    char c = s.charAt(marker);
    chunk.append(c);
    marker++;
    if (isDigit(c))
    {
        while (marker &lt; slength)
        {
            c = s.charAt(marker);
            if (!isDigit(c))
                break;
            chunk.append(c);
            marker++;
        }
    } else
    {
        while (marker &lt; slength)
        {
            c = s.charAt(marker);
            if (isDigit(c))
                break;
            chunk.append(c);
            marker++;
        }
    }
    return chunk.toString();
}

public int compare(Object o1, Object o2)
{
    if (!(o1 instanceof File) || !(o2 instanceof File))
    {
        return 0;
    }
    File f1 = (File)o1;
    File f2 = (File)o2;
    String s1 = f1.getName();
    String s2 = f2.getName();

    int thisMarker = 0;
    int thatMarker = 0;
    int s1Length = s1.length();
    int s2Length = s2.length();

    while (thisMarker &lt; s1Length &amp;&amp; thatMarker &lt; s2Length)
    {
        String thisChunk = getChunk(s1, s1Length, thisMarker);
        thisMarker += thisChunk.length();

        String thatChunk = getChunk(s2, s2Length, thatMarker);
        thatMarker += thatChunk.length();

        /** If both chunks contain numeric characters, sort them numerically **/

        int result = 0;
        if (isDigit(thisChunk.charAt(0)) &amp;&amp; isDigit(thatChunk.charAt(0)))
        {
            // Simple chunk comparison by length.
            int thisChunkLength = thisChunk.length();
            result = thisChunkLength - thatChunk.length();
            // If equal, the first different number counts
            if (result == 0)
            {
                for (int i = 0; i &lt; thisChunkLength; i++)
                {
                    result = thisChunk.charAt(i) - thatChunk.charAt(i);
                    if (result != 0)
                    {
                        return result;
                    }
                }
            }
        } else
        {
            result = thisChunk.compareTo(thatChunk);
        }

        if (result != 0)
            return result;
    }

    return s1Length - s2Length;
}
}
</code></pre></li>
</ol>

<p><strong>2. Sort your files, depending on this class.</strong></p>

<pre><code>     File[] listOfFiles = rootFolder.listFiles();
     Arrays.sort(listOfFiles, new AlphanumFileComparator() );
     ...to sth with your files.
</code></pre>

<p>Hope it helps. It worked for me, like a charm.</p>
