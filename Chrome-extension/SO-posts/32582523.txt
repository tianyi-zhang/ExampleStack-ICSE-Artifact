<p>hi please use below function according to your need </p>

<pre><code>public static byte[] getByteOfImage(String p_fileName) throws Exception
    {
        Bitmap m_bitmap = null;
        byte[] m_bitmapdata1 = null;
        try
        {
            m_bitmap = decodeFile(new File(p_fileName), 100, 100);
        }
        catch (Throwable m_throwable)
        {

        }

        ByteArrayOutputStream m_bos = new ByteArrayOutputStream();
        m_bitmap.compress(Bitmap.CompressFormat.JPEG, 90, m_bos);
        m_bitmapdata1 = m_bos.toByteArray();
        m_bitmap.recycle();


        return m_bitmapdata1;
    }




 public static Bitmap decodeFile(File file, int width, int height)
    {
        try
        {
            //Decode image size
            BitmapFactory.Options o = new BitmapFactory.Options();
            o.inJustDecodeBounds = true;
            BitmapFactory.decodeStream(new FileInputStream(file), null, o);
            int scale = 1;

            //The new size we want to scale to
            final int REQUIRED_WIDTH = width;
            final int REQUIRED_HIGHT = height;



            //Find the correct scale value. It should be the power of 2.
            while (o.outWidth / scale / 2 &gt;= REQUIRED_WIDTH &amp;&amp; o.outHeight / scale / 2 &gt;= REQUIRED_HIGHT)
            {
                scale *= 2;
            }

            //Decode with inSampleSize
            BitmapFactory.Options o2 = new BitmapFactory.Options();
            o2.inSampleSize = scale;
            return BitmapFactory.decodeStream(new FileInputStream(file), null, o2);
        }
        catch (FileNotFoundException e)
        {

        }
        return null;
    }
</code></pre>
