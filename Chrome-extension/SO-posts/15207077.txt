<p>You're looking for reflection. There's a <a href="http://docs.oracle.com/javase/tutorial/reflect/index.html" rel="nofollow">Java tutorial</a> on the subject that will get you started, and then there are many, many libraries out there to make reflection easier, like <a href="http://commons.apache.org/proper/commons-beanutils//" rel="nofollow">Commons BeanUtils</a> and several of the classes in <a href="http://static.springsource.org/spring/docs/current/javadoc-api/org/springframework/util/package-summary.html" rel="nofollow">Spring's util package</a>. Pretty much any framework out there will have some kind of reflection helper class in it because it's so messy to work directly with reflection.</p>

<p>As a quick example for your case, using <a href="http://commons.apache.org/proper/commons-beanutils//api/org/apache/commons/beanutils/BeanUtils.html#getProperty%28java.lang.Object,%20java.lang.String%29" rel="nofollow">Commons BeanUtils.getProperty()</a>, you could say:</p>

<pre><code>fp.textField.settext((String) BeanUtils.getProperty(b, str));
</code></pre>

<p>Here's a complete example doing it the manual way so you can see how it fits in:</p>

<pre><code>import java.lang.reflect.Field;

public class BasicReflectionGettingFieldValues {
    public static void main(String[] args) {
        FieldPanel fp = new FieldPanel();
        Book b = new Book("Mostly Harmless", "Douglas Adams");
        for (String str : Arrays.asList("author", "title")) {
            fp.namelabel.settext(str);
            fp.textField.settext(getField(b, str));
        }
    }

    private static String getField(Book b, String str) {
        try {
            Field field = Book.class.getDeclaredField(str);
            field.setAccessible(true);
            return (String) field.get(b);
        } catch (NoSuchFieldException e) {
            throw new IllegalStateException("Bad field name: " + str, e);
        } catch (IllegalAccessException e) {
            throw new IllegalStateException("Failed to access field " + str + " after making it accessible", e);
        }
    }

    static class Book {
        private String title;
        private String author;

        Book(String title, String author) {
            this.title = title;
            this.author = author;
        }
    }
    static class TextField {
        void settext(String s) {
            System.out.println("Setting text field to '" + s + "'");
        }
    }
    static class NameLabel {
        void settext(String s) {
            System.out.println("Setting name label to '" + s + "'");
        }
    }
    static class FieldPanel {
        private NameLabel namelabel = new NameLabel();
        private TextField textField = new TextField();
    }
}
</code></pre>
