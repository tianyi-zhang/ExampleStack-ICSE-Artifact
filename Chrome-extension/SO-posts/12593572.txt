<p>I tried your code and reproduced the error which occurs at this line:</p>

<pre><code>                if(songTest[i].equals(x)){
</code></pre>

<p>rewriting your equals method (or getting eclipse to do it for me) and adding the hashCode() solved the problem:</p>

<pre><code>@Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((album == null) ? 0 : album.hashCode());
    result = prime * result + ((author == null) ? 0 : author.hashCode());
    long temp;
    temp = Double.doubleToLongBits(average);
    result = prime * result + (int) (temp ^ (temp &gt;&gt;&gt; 32));
    result = prime * result
            + ((fileName == null) ? 0 : fileName.hashCode());
    result = prime * result
            + ((interpreter == null) ? 0 : interpreter.hashCode());
    result = prime * result + reviewScore;
    result = prime * result + reviews;
    result = prime * result + ((title == null) ? 0 : title.hashCode());
    result = prime * result + yearReleased;
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    Song other = (Song) obj;
    if (album == null) {
        if (other.album != null)
            return false;
    } else if (!album.equals(other.album))
        return false;
    if (author == null) {
        if (other.author != null)
            return false;
    } else if (!author.equals(other.author))
        return false;
    if (Double.doubleToLongBits(average) != Double
            .doubleToLongBits(other.average))
        return false;
    if (fileName == null) {
        if (other.fileName != null)
            return false;
    } else if (!fileName.equals(other.fileName))
        return false;
    if (interpreter == null) {
        if (other.interpreter != null)
            return false;
    } else if (!interpreter.equals(other.interpreter))
        return false;
    if (reviewScore != other.reviewScore)
        return false;
    if (reviews != other.reviews)
        return false;
    if (title == null) {
        if (other.title != null)
            return false;
    } else if (!title.equals(other.title))
        return false;
    if (yearReleased != other.yearReleased)
        return false;
    return true;
}
</code></pre>

<p>you also seem to have a problem with the counter not incrementing properly, but I'm not going to do all of you homework for you! ;)</p>

<p>edit:
Woah!
You're also missing something like </p>

<pre><code>       songTest[i] = song;
</code></pre>

<p>to add the checked song to your array.</p>

<p>also, to make sure your first song gets put in I added:</p>

<pre><code>if(i==0){
        songTest[i] = x;
}
</code></pre>

<p>before your check.
The i is and int I added by changing your first for loop back to the old fashioned version, and I renamed your inner for loop to j.
Now it works.
try putting in something like:</p>

<pre><code>System.out.println("i: " + i + " j: " + j + " count: " + count);
</code></pre>

<p>to see what's going on with your counters</p>

<p>You also exit after finding a duplicate. Is this the behavior you want? Or would it be better to notify the user, and continue inputting song data.</p>
