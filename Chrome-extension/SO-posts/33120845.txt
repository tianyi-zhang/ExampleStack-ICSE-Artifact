<p>Here you have a method I used to get every page from a PDF file to images. This code uses PDFBox 1.8.8, and it calls a method to resize the resulting image, that it is not relevant, but if you want I could also give it to you.</p>

<pre><code>File pdfFile = new File ...
PDDocument document = PDDocument.load(pdfFile);

if(document != null){
    @SuppressWarnings("unchecked")
    List&lt;PDPage&gt; pdfPages = document.getDocumentCatalog().getAllPages();

    if(pdfPages != null &amp;&amp; !pdfPages.isEmpty()){
      for(PDPage page : pdfPages){
        BufferedImage image = page.convertToImage(BufferedImage.TYPE_INT_RGB, 96);
        BufferedImage resized = resizeImage(image);

        File tmpFile = createTmpFile();
        writeImage(resized, tmpFile);

        pages.add(new Page(tmpFile.getAbsolutePath(), numOfColumns));
      }
    }
}
</code></pre>

<p>NOTE: This code has some custom methods that I explain below in answer editions.</p>

<p>The relevant part for you is how many or what page is of interest for you. Instead of a <code>for</code> block, you could select your desired page and convert it.</p>

<p><code>pages</code> variable is part of my code, because every converted image was include into a object called <code>pages</code>.</p>

<h2>Edit</h2>

<p>I forgot the <code>writeImage</code> method, sorry:</p>

<pre><code>private void writeImage(BufferedImage buffImage, File file) throws FileNotFoundException, IOException{
    Iterator&lt;ImageWriter&gt; iter = ImageIO.getImageWritersByFormatName("jpeg");
    ImageWriter writer = (ImageWriter)iter.next();

    ImageWriteParam iwp = writer.getDefaultWriteParam();
    iwp.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
    iwp.setCompressionQuality(0.95f);

    FileImageOutputStream fios = new FileImageOutputStream(file);
    IIOImage image = new IIOImage(buffImage, null, null);

    writer.setOutput(fios);
    writer.write(null, image, iwp);
    writer.dispose();
    fios.close();
}
</code></pre>

<h2>Edit 2</h2>

<p>As @user2556079 comments, there are one more own method (<em>plus the one I indicated</em>) I didn't comment, sorry, I clarify this methods here:</p>

<ul>
<li><code>resizeImage</code> is not relevant for the purpose of this question, it only resize original <code>BufferedImage</code> and return a new <code>BufferredImage</code>. This is because I wanted to get thumbnails of every page. It is not necesary if you want to get original page as an Image.</li>
<li><code>createTempFile</code> this method creates a temp file using <code>java.io. File.createTempFile(String, String)</code> but using the <code>FileCleaningTracker</code> from Apache Commons. this way I have not to worry about temp file deletion.</li>
</ul>
