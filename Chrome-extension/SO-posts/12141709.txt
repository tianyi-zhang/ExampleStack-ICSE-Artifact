<p>Ok, finally got it working:</p>

<pre><code>private static void createViewer(Composite parent) {
    viewer = new TableViewer(parent, SWT.MULTI | SWT.H_SCROLL
            | SWT.V_SCROLL | SWT.FULL_SELECTION | SWT.BORDER);
    createColumns(parent, viewer);
    final Table table = viewer.getTable();
    table.setHeaderVisible(true);
    table.setLinesVisible(true);

    viewer.setContentProvider(new ArrayContentProvider());
    // Get the content for the viewer, setInput will call getElements in the
    // contentProvider
    viewer.setInput(ModelProvider.INSTANCE.getPersons());
    // Set the sorter for the table

    // Layout the viewer
    GridData gridData = new GridData();
    gridData.verticalAlignment = GridData.FILL;
    gridData.horizontalSpan = 2;
    gridData.grabExcessHorizontalSpace = true;
    gridData.grabExcessVerticalSpace = true;
    gridData.horizontalAlignment = GridData.FILL;
    viewer.getControl().setLayoutData(gridData);

    comparator = new PersonViewerComparator();
    viewer.setComparator(comparator);
}

// This will create the columns for the table
private static void createColumns(final Composite parent,
        final TableViewer viewer) {
    String[] titles = { "First name", "Last name", "Gender", "Married" };
    int[] bounds = { 100, 100, 100, 100 };

    // First column is for the first name
    TableViewerColumn col = createTableViewerColumn(titles[0], bounds[0], 0);
    col.setLabelProvider(new ColumnLabelProvider() {
        @Override
        public String getText(Object element) {
            Person p = (Person) element;
            return p.getFirstName();
        }
    });

    col.setEditingSupport(new CheckLengthEditingSupport(viewer)); 

    // Second column is for the last name
    col = createTableViewerColumn(titles[1], bounds[1], 1);
    col.setLabelProvider(new ColumnLabelProvider() {
        @Override
        public String getText(Object element) {
            Person p = (Person) element;
            return p.getLastName();
        }
    });

    // Now the gender
    col = createTableViewerColumn(titles[2], bounds[2], 2);
    col.setLabelProvider(new ColumnLabelProvider() {
        @Override
        public String getText(Object element) {
            Person p = (Person) element;
            return p.getGender();
        }
    });

    // // Now the status married
    col = createTableViewerColumn(titles[3], bounds[3], 3);
    col.setLabelProvider(new ColumnLabelProvider() {
        @Override
        public String getText(Object element) {
            return "";
        }

        @Override
        public Image getImage(Object element) {
            if (((Person) element).isMarried()) {
                return CHECKED;
            } else {
                return UNCHECKED;
            }
        }
    });
}

static class CheckLengthEditingSupport extends EditingSupport {

    private final TableViewer viewer;
    private TextCellEditor editor = null;

    public FirstNameEditingSupport(TableViewer viewer) {
        super(viewer);
        this.viewer = viewer;
        editor = new TextCellEditor(viewer.getTable());

        Text text = (Text) editor.getControl();

        //  set maximal length HERE
        text.setTextLimit(3);
    }

    @Override
    protected CellEditor getCellEditor(Object element) {
        return editor;
    }

    @Override
    protected boolean canEdit(Object element) {
        return true;
    }

    @Override
    protected Object getValue(Object element) {
        return ((YourObject) element).getName();
    }

    @Override
    protected void setValue(Object element, Object value) {
        ((YourObject) element).setName(String.valueOf(value));
        viewer.update(element, null);
    }
}
</code></pre>

<p>You have to set the <code>TextCellEditor</code> within the <code>EditingSupport</code> class and return it in the <code>protected CellEditor getCellEditor(Object element)</code> method.</p>

<p>BTW: If you want another restriction than "less than x characters", you can simply add a <code>VerifyListener</code> to the <code>text</code> in the <code>TextCellEditor</code>.</p>
