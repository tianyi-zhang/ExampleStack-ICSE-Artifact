<p>For this kind of interaction I use this code:</p>

<pre><code>public static String httpPost(String address, List&lt;NameValuePair&gt; parameters) {
    HttpClient httpClient = new DefaultHttpClient();
    HttpPost httpPost = new HttpPost(address);

    InputStream inputStream = null;
    BufferedReader reader = null;
    StringBuilder sb = new StringBuilder();

    try {
        httpPost.setEntity(new UrlEncodedFormEntity(parameters, "UTF-8"));
        HttpResponse response = httpClient.execute(httpPost);
        HttpEntity entity = response.getEntity();

        inputStream = entity.getContent();
        reader = new BufferedReader((new InputStreamReader(inputStream)));

        String line;
        while ((line = reader.readLine()) != null) {
            sb.append(line);
        }

    }catch (Exception e) {
        e.printStackTrace();
    }finally {
        try {
            if (reader != null)
                reader.close();
            if (inputStream != null)
                inputStream.close();
        }catch (Exception e) {
            e.printStackTrace();
        }
    }

    return sb.toString();
}
</code></pre>

<p>You have to pass this function a <code>String</code> which is the URL of the PHP script, and a list of <code>NameValuePair</code>s containing the data you want to pass to the script, and it returns the answer from the server.</p>

<p>If you want to use it for login, you can use something like that:</p>

<pre><code>public boolean login(String username, String passwd) {
    List&lt;NameValuePair&gt; parameters = new ArrayList&lt;NameValuePair&gt;();
    parameters.add(new BasicNameValuePair("username", username);
    parameters.add(new BasicNameValuePair("password", passwd);

    String result = httpPost("http://test.com/login.php", parameters);

    return result.equals("ok");
}
</code></pre>
