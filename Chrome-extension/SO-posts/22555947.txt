<p>I know I'm late but I have another solution which I must share and which works flawlessly. Here, the method calculates the GridView height based on the number of items it contains and sets the height to the GridView at run time. </p>

<pre><code>public void setGridViewHeightBasedOnChildren(GridView gridView, int columns) {
        ListAdapter listAdapter = gridView.getAdapter(); 
        if (listAdapter == null) {
            // pre-condition
            return;
        }

        int totalHeight = 0;
        int items = listAdapter.getCount();
        int rows = 0;

        View listItem = listAdapter.getView(0, null, gridView);
        listItem.measure(0, 0);
        totalHeight = listItem.getMeasuredHeight();

        float x = 1;
        if( items &gt; columns ){
            x = items/columns;
            rows = (int) (x + 1);
            totalHeight *= rows;
        }

        ViewGroup.LayoutParams params = gridView.getLayoutParams();
        params.height = totalHeight;
        gridView.setLayoutParams(params);

}
</code></pre>

<p>After you have called <code>setAdapter</code> on your gridview, just call </p>

<pre><code>`setGridViewHeightBasedOnChildren( &lt;yourGridView&gt; , &lt;no of grid view columns&gt; )`
</code></pre>

<p>and it'll work.</p>

<p>You can the define the gridview in your xml as you normally do and let the code take care of it. :)</p>
