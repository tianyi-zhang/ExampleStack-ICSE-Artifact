<p>For this I always use <code>Bitmaps</code> instead of drawables, and so far it has worked perfectly.</p>

<p>Give this a try:</p>

<pre><code> @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            LayoutInflater inflater = context.getLayoutInflater();
            View rowView = inflater.inflate(R.layout.rowlayout, null, true);
            TextView textView = (TextView) rowView.findViewById(R.id.label);
            ImageView imageView = (ImageView) rowView.findViewById(R.id.icon);
            String s = names[position];
            textView.setText(s);
            Bitmap image = LoadImageFromWebOperations(images[position]);
            imageView.setImageBitmap(image);

            return rowView;
        }

        private Bitmap LoadImageFromWebOperations(String url) {
            try {
                URL aURL = new URL(url);
                URLConnection conn = aURL.openConnection();
                conn.connect();
                InputStream is = conn.getInputStream();
                /* Buffered is always good for a performance plus. */

                BufferedInputStream bis = new BufferedInputStream(is);
                /* Decode url-data to a bitmap. */
                Bitmap bm = BitmapFactory.decodeStream(bis);
                bis.close();
                is.close();
                /* Apply the Bitmap to the ImageView that will be returned. */
                return bm;

            } catch (Exception e) {
                System.out.println("Exc="+e);
                return null;
            }
        }
</code></pre>
