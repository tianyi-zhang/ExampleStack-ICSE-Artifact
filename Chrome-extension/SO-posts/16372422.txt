<p>Worked for me.</p>

<p>The code was just referencing some local html, css and image resources which were not included with your question.  As they weren't there if you just copy and paste and run then you get NullPointerExceptions due to the missing resource files. </p>

<hr>

<p>For anybody wondering where most of the code in the question comes from, it is part of Oracle's
<a href="http://docs.oracle.com/javafx/2/webview/jfxpub-webview.htm" rel="nofollow">Adding HTML Content to JavaFX Applications</a>.  The additional resources (html, css, etc) to go with the code and allow it to be run without modification can be downloaded from the tutorial link as well as a NetBeans project you can just load up to run the program.</p>

<hr>

<p>I commented out the references to the external resources so that the program can run standalone.  It's not all nicely styled with images, etc. But it seems to work fine for me.</p>

<pre><code>import javafx.application.Application;
import javafx.application.Platform;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.ListChangeListener;
import javafx.concurrent.Worker.State;
import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.event.EventHandler;
import javafx.geometry.HPos;
import javafx.geometry.Pos;
import javafx.geometry.VPos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Hyperlink;
import javafx.scene.image.Image;

import javafx.scene.image.ImageView;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.Region;
import javafx.scene.paint.Color;
import javafx.scene.web.PopupFeatures;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebHistory;
import javafx.scene.web.WebHistory.Entry;
import javafx.scene.web.WebView;
import javafx.stage.Stage;
import javafx.util.Callback;
import netscape.javascript.JSObject;

public class WebViewBrowser extends Application {

  private Scene scene;

  @Override
  public void start(Stage stage) {
    // create scene
    stage.setTitle("Web View");
    scene = new Scene(new Browser(), 750, 500, Color.web("#666970"));
    stage.setScene(scene);
    // apply CSS style
//    scene.getStylesheets().add("webviewsample/BrowserToolbar.css");
    // show stage
    stage.show();
  }

  public static void main(String[] args) {
    launch(args);
  }
}

class Browser extends Region {

  private HBox toolBar;
  private static String[] imageFiles = new String[]{
      "product.png",
      "blog.png",
      "forum.png",
      "partners.png",
      "help.png"
  };
  private static String[] captions = new String[]{
      "Products",
      "Blogs",
      "Forums",
      "Partners"
//      "Help"
  };
  private static String[] urls = new String[]{
      "http://www.oracle.com/products/index.html",
      "http://blogs.oracle.com/",
      "http://forums.oracle.com/forums/",
      "http://www.oracle.com/partners/index.html"
//      Main.class.getResource("help.html").toExternalForm()
  };
  final ImageView selectedImage = new ImageView();
  final Hyperlink[] hpls = new Hyperlink[captions.length];
  final Image[] images = new Image[imageFiles.length];
  final WebView browser = new WebView();
  final WebEngine webEngine = browser.getEngine();
  final Button hideAll = new Button("Hide All");
  final Button showAll = new Button("ShowAll");
  final WebView smallView = new WebView();
  final ComboBox comboBox = new ComboBox();
  private boolean needForumButtons = false;

  public Browser() {
    //apply the styles
    getStyleClass().add("browser");

    for (int i = 0; i &lt; captions.length; i++) {
      // create hyperlinks
      Hyperlink hpl = hpls[i] = new Hyperlink(captions[i]);
//      Image image = images[i] =
//          new Image(getClass().getResourceAsStream(imageFiles[i]));
//      hpl.setGraphic(new ImageView(image));
      final String url = urls[i];
      final boolean addButtons = (hpl.getText().equals("Forums"));

      // process event
      hpl.setOnAction(new EventHandler&lt;ActionEvent&gt;() {
        @Override
        public void handle(ActionEvent e) {
          needForumButtons = addButtons;
          webEngine.load(url);
        }
      });
    }

    comboBox.setPrefWidth(60);

    // create the toolbar
    toolBar = new HBox();
    toolBar.setAlignment(Pos.CENTER);
    toolBar.getStyleClass().add("browser-toolbar");
    toolBar.getChildren().add(comboBox);
    toolBar.getChildren().addAll(hpls);
    toolBar.getChildren().add(createSpacer());

    //set actions for the buttons
    hideAll.setOnAction(new EventHandler() {
      @Override
      public void handle(Event t) {
        webEngine.executeScript("hideAll()");
      }
    });

    showAll.setOnAction(new EventHandler() {
      @Override
      public void handle(Event t) {
        webEngine.executeScript("showAll()");
      }
    });

    smallView.setPrefSize(120, 80);

    //handle popup windows
    webEngine.setCreatePopupHandler(
        new Callback&lt;PopupFeatures, WebEngine&gt;() {
          @Override public WebEngine call(PopupFeatures config) {
            smallView.setFontScale(0.8);
            if (!toolBar.getChildren().contains(smallView)) {
              toolBar.getChildren().add(smallView);
            }
            return smallView.getEngine();
          }
        }
    );

    //process history
    final WebHistory history = webEngine.getHistory();
    history.getEntries().addListener(new
                                         ListChangeListener&lt;WebHistory.Entry&gt;(){
                                           @Override
                                           public void onChanged(Change&lt;? extends Entry&gt; c) {
                                             c.next();
                                             for (Entry e : c.getRemoved()) {
                                               comboBox.getItems().remove(e.getUrl());
                                             }
                                             for (Entry e : c.getAddedSubList()) {
                                               comboBox.getItems().add(e.getUrl());
                                             }
                                           }
                                         });

    //set the behavior for the history combobox
    comboBox.setOnAction(new EventHandler&lt;ActionEvent&gt;() {
      @Override
      public void handle(ActionEvent ev) {
        int offset =
            comboBox.getSelectionModel().getSelectedIndex()
                - history.getCurrentIndex();
        history.go(offset);
      }
    });



    // process page loading
    webEngine.getLoadWorker().stateProperty().addListener(
        new ChangeListener&lt;State&gt;() {
          @Override
          public void changed(ObservableValue&lt;? extends State&gt; ov,
                              State oldState, State newState) {
            toolBar.getChildren().removeAll(showAll, hideAll);
            if (newState == State.SUCCEEDED) {
              JSObject win =
                  (JSObject) webEngine.executeScript("window");
              win.setMember("app", new JavaApp());
              if (needForumButtons) {
                toolBar.getChildren().addAll(showAll, hideAll);
              }
            }
          }
        }
    );

    // load the home page
    webEngine.load("http://www.oracle.com/products/index.html");

    //add components
    getChildren().add(toolBar);
    getChildren().add(browser);
  }

  // JavaScript interface object
  public class JavaApp {

    public void exit() {
      Platform.exit();
    }
  }

  private Node createSpacer() {
    Region spacer = new Region();
    HBox.setHgrow(spacer, Priority.ALWAYS);
    return spacer;
  }

  @Override
  protected void layoutChildren() {
    double w = getWidth();
    double h = getHeight();
    double tbHeight = toolBar.prefHeight(w);
    layoutInArea(browser,0,0,w,h-tbHeight,0,HPos.CENTER,VPos.CENTER);
    layoutInArea(toolBar,0,h-tbHeight,w,tbHeight,0,HPos.CENTER,VPos.CENTER);
  }

  @Override
  protected double computePrefWidth(double height) {
    return 750;
  }

  @Override
  protected double computePrefHeight(double width) {
    return 600;
  }
}
</code></pre>

<hr>

<p>A long while back I created a <a href="http://code.google.com/p/willow-browser/" rel="nofollow">WebView Web Browser</a>. You could take a look at that to get some inspiration for your web browser.  The code in my browser needs a bit of cleanup and changes to take advantage of some of the more modern built-in features of WebView, such as WebView's built in history list, but it's a pretty functional tabbed browser and perhaps you will still find it useful.</p>
