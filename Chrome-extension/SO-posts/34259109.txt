<p>I had the same issue. After much testing with Gmail, I discovered the issue is that Gmail requires an OAuth sign-in, and not just a password. The solution for this is to use the <a href="https://developers.google.com/gmail/api/quickstart/java" rel="nofollow">Gmail API</a>. However, this is a very complicated solution that I won't go into too much detail about. If you are interested in this, read the first answer <a href="http://stackoverflow.com/questions/3649014/send-email-using-java">here</a>. </p>

<p>If you want a simple solution, however, what I did is simply switch to a Yahoo account. Because Yahoo doesn't use the same encryption, it works perfectly. Note: Don't forget to change the SMTP server to 'smtp.mail.yahoo.com', and the port to '25'.</p>

<p>If you want to set it up from scratch, simply follow <a href="http://www.tutorialspoint.com/java/java_sending_email.htm" rel="nofollow">this</a> tutorial to download the <a href="http://java.net/projects/javamail/downloads/download/javax.mail.jar" rel="nofollow">JavaMail API</a> and <a href="http://www.oracle.com/technetwork/articles/java/index-135046.html" rel="nofollow">Java Activation Framework</a>.</p>

<p>Then you could just copy-and-paste my code, change the top variables, and everything should work! If I missed anything, please let me know! Thanks!</p>

<pre><code>import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;

public class Mailer {

    public static void main(String[] args) {
        final String username = "your-email@yahoo.com";
        final String password = "your-password";
        final String recipient = "email-recipient";
        final String subject = "message-subject";
        final String emailmessage = "message";

        Properties props = new Properties();
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.host", "smtp.mail.yahoo.com");
        props.put("mail.smtp.port", "25");

        Session session = Session.getInstance(props,
          new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
          });

        try {

            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(username));
            message.setRecipients(Message.RecipientType.TO,    InternetAddress.parse(recipient));
            message.setSubject(subject);
            message.setText(emailmessage);

            Transport.send(message);

            System.out.println("Done");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }

    }

}
</code></pre>
