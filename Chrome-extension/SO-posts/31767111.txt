<p>I change your code and I add two other class. One named Data  for (versionKey, nameKey), the second one Epic for (epickName,epickKey)
and to generate Json, I use Gson lib.
 This code :</p>

<p>Epic Class:</p>

<pre><code>public class Epic {

    private String epicName;
    private String epicKey;

    public Epic() {

    }

    public Epic(String epicName, String epicKey) {  
        this.epicName = epicName;
        this.epicKey = epicKey;
    }

    public String getEpicName() {
        return epicName;
    }
    public void setEpicName(String epicName) {
        this.epicName = epicName;
    }
    public String getEpicKey() {
        return epicKey;
    }
    public void setEpicKey(String epicKey) {
        this.epicKey = epicKey;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append("Epic [epicName=");
        builder.append(epicName);
        builder.append(", epicKey=");
        builder.append(epicKey);
        builder.append("]");
        return builder.toString();
    }

}
</code></pre>

<p>Data Class :</p>

<pre><code>import java.util.List;


public class Data {

    private String versionName;
    private String versionKey;
    private List&lt;Epic&gt; epics;

    public Data() {

    }

    public Data(String versionName, String versionKey, List&lt;Epic&gt; epics) {  
        this.versionName = versionName;
        this.versionKey = versionKey;
        this.epics = epics;
    }

    public String getVersionName() {
        return versionName;
    }
    public void setVersionName(String versionName) {
        this.versionName = versionName;
    }
    public String getVersionKey() {
        return versionKey;
    }
    public void setVersionKey(String versionKey) {
        this.versionKey = versionKey;
    }
    public List&lt;Epic&gt; getEpics() {
        return epics;
    }
    public void setEpics(List&lt;Epic&gt; epics) {
        this.epics = epics;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((versionKey == null) ? 0 : versionKey.hashCode());
        result = prime * result
                + ((versionName == null) ? 0 : versionName.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Data other = (Data) obj;
        if (versionKey == null) {
            if (other.versionKey != null)
                return false;
        } else if (!versionKey.equals(other.versionKey))
            return false;
        if (versionName == null) {
            if (other.versionName != null)
                return false;
        } else if (!versionName.equals(other.versionName))
            return false;
        return true;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append("Data [versionName=");
        builder.append(versionName);
        builder.append(", versionKey=");
        builder.append(versionKey);
        builder.append(", epics=");
        builder.append(epics);
        builder.append("]");
        return builder.toString();
    }
}
</code></pre>

<p>Main Class:</p>

<pre><code>import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

public class Main {


    public static  void main(String[] args) {
        Scanner input = new Scanner(System.in);
        List&lt;Data&gt; datas = new ArrayList&lt;Data&gt;();
        boolean add = false;
        for (int j = 0; j &lt; 2; j++) {
            add = false;
            Data data = new Data();
            System.out.println("Enter Version Name");
            data.setVersionName(input.next());
            System.out.println("Enter Version Key");
            data.setVersionKey(input.next());

            Epic epic = new Epic();
            System.out.println("Enter Epic Name");
            epic.setEpicName(input.next());
            System.out.println("Enter Epic Key");
            epic.setEpicKey(input.next());

            List&lt;Epic&gt; epics = new ArrayList&lt;Epic&gt;();
            if(datas.isEmpty()){

                epics.add(epic);
                data.setEpics(epics);
                datas.add(data);
            }else{
                for(Data d:datas){
                    if(d.equals(data)){
                        d.getEpics().add(epic);
                        add=true;
                    }
                }
                if(!add){
                    epics.add(epic);
                    data.setEpics(epics);
                    datas.add(data);
                }
            }

        }
        //Gson gson = new GsonBuilder().setPrettyPrinting().create();
        //System.out.println(gson.toJson(datas));
        JSONArray jsonArray = (JSONArray) JSONSerializer.toJSON(datas);  
        System.out.println(jsonArray.toString());



    }

}
</code></pre>

<p>PS: Url to download <a href="https://github.com/google/gson" rel="nofollow">Gson API</a></p>

<hr>

<p><strong>Edit</strong></p>

<p>I made a change in the Main Class to use json-lib-2.4-jdk15.jar
Take a look at this URL:
<a href="http://json-lib.sourceforge.net/snippets.html" rel="nofollow">json-lib</a></p>
