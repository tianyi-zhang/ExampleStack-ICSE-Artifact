<p>I found solution from here... <a href="http://stackoverflow.com/a/33185470/6334037">http://stackoverflow.com/a/33185470/6334037</a></p>

<p>I made some changes in it and it works perfectly.</p>

<pre><code>&lt;com.exapmle.util.NestedListView
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:dividerHeight="0dp"
        android:layout_weight="1"
        android:scrollbars="vertical"
        android:overScrollMode="always"/&gt;
</code></pre>

<p><strong>* NestedListView.java *</strong></p>

<pre><code>public class NestedListView extends ListView implements View.OnTouchListener, AbsListView.OnScrollListener {
    private int listViewTouchActionDown;
    private static final int MINIMUM_LIST_ITEMS_VIEWABLE = 1;

    public NestedListView(Context context, AttributeSet attrs) {
        super(context, attrs);
        listViewTouchActionDown = 0;
        setOnScrollListener(this);
        setOnTouchListener(this);
    }

    @Override
    public void onScrollStateChanged(AbsListView view, int scrollState) {

    }

    @Override
    public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
        if (getAdapter() != null &amp;&amp; getAdapter().getCount() &gt; MINIMUM_LIST_ITEMS_VIEWABLE) {
            if (listViewTouchActionDown == MotionEvent.ACTION_MOVE) {
                scrollBy(0, -1);
            }
        }
    }

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        if (getAdapter() != null &amp;&amp; getAdapter().getCount() &gt; MINIMUM_LIST_ITEMS_VIEWABLE) {
            if (event.getAction() == MotionEvent.ACTION_DOWN) {
                scrollBy(0, 1);
            } else if (event.getAction() == MotionEvent.ACTION_UP){
                scrollBy(0, -1);
            }
        }
        return false;
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);

        int newHeight = 0;
        final int heightMode = MeasureSpec.getMode(heightMeasureSpec);
        int heightSize = MeasureSpec.getSize(heightMeasureSpec);
        if (heightMode != MeasureSpec.EXACTLY) {
            ListAdapter listAdapter = getAdapter();
            if (listAdapter != null &amp;&amp; !listAdapter.isEmpty()) {
                int listPosition = 0;
                for (listPosition = 0; listPosition &lt; listAdapter.getCount()
                        &amp;&amp; listPosition &lt; MINIMUM_LIST_ITEMS_VIEWABLE; listPosition++) {
                    View listItem = listAdapter.getView(listPosition, null, this);
                    //now it will not throw a NPE if listItem is a ViewGroup instance
                    if (listItem instanceof ViewGroup) {
                        listItem.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
                    }
                    listItem.measure(widthMeasureSpec, heightMeasureSpec);
                    newHeight += listItem.getMeasuredHeight();
                }
                newHeight += getDividerHeight() * listPosition;
            }
            if ((heightMode == MeasureSpec.AT_MOST) &amp;&amp; (newHeight &gt; heightSize)) {
                if (newHeight &gt; heightSize) {
                    newHeight = heightSize;
                }
            }
        } else {
            newHeight = getMeasuredHeight();
        }
        setMeasuredDimension(getMeasuredWidth(), newHeight);
    }
}
</code></pre>
