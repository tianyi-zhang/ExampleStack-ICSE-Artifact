<p>You can check that your EditTexts are not empty like below:</p>

<pre><code>weightText.getText().length() != 0 &amp;&amp; heightText.getText().length() != 0
</code></pre>

<p>And you can use this condition inside the onClick(View) method, which is called when your button is clicked like below:</p>

<pre><code> yourButton.setOnClickListener( new OnClickListener(){
   public void onClick(){
       if(weightText.getText().length() != 0 &amp;&amp; heightText.getText().length() != 0){
          //do sth
       }
 });
</code></pre>

<p>The second way, you can create TextWatcher which set to both EditTexts and in onTextChanged() you can check that both EditTexts are not empty like below:</p>

<pre><code>private class YourTextWatcher implements TextWatcher{
    @Override
    public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {

    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
        yourButton.setEnabled(weightText.getText().length() != 0 &amp;&amp; heightText.getText().length() != 0)
    }

    @Override
    public void afterTextChanged(Editable editable) {

    }
}
</code></pre>

<p>you can set this TextWatcher for your EditText like below:</p>

<pre><code>     weightText.addTextChangedListener(new YourTextWatcher());
     heightText.addTextChangedListener(new YourTextWatcher());
</code></pre>

<p>Here is code that your Activity should look like:</p>

<pre><code>    public class BMI extends Activity {

        EditText weightText;
        EditText heightText;
        TextView resultText;

        @Override
        public void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.bmi);
            weightText = (EditText) findViewById(R.id.WeightText);
            heightText = (EditText) findViewById(R.id.Heighttext);
            resultText = (TextView) findViewById(R.id.resultLabel);


            Button button = (Button) findViewById(R.id.calulate);
            button.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    calculateHandler();
                }
            });
        }


        public void calculateHandler() {
            // make sure we handle the click of the calculator button
            if (weightText.getText().length() == 0 || heightText.getText().length() == 0) {
                return;
            }
            // get the users values from the widget references

            float weight = Float.parseFloat(weightText.getText().toString());
            float height = Float.parseFloat(heightText.getText().toString());

            // calculate the bmi value

            float bmiValue = calculateBMI(weight, height);

            // interpret the meaning of the bmi value
            String bmiInterpretation = interpretBMI(bmiValue);

            // now set the value in the result text
            resultText.setText(bmiValue + " = " + bmiInterpretation);
            // display toast additionally to example
            Toast.makeText(this, bmiValue + " = " + bmiInterpretation, Toast.LENGTH_LONG).show();
        }

        private float calculateBMI(float weight, float height) {
            return (float) Math.round((weight / (height * height)) * 100) / 100;
        }


        // interpret what BMI means
        private String interpretBMI(float bmiValue) {
            if (bmiValue &lt; 16) {
                return "Severely underweight";
            } else if (bmiValue &lt; 18.5) {

                return "Underweight";
            } else if (bmiValue &lt; 25) {

                return "Normal";
            } else if (bmiValue &lt; 30) {

                return "Overweight";
            } else {
                return "Obese";
            }
        }
    }
</code></pre>

<p>Calculate method </p>

<pre><code>public void calculateHandler() {
    // make sure we handle the click of the calculator button
    if (weightText.getText().toString().trim().length() == 0 || heightText.getText().toString().trim().length() == 0) {
        Toast.makeText(this, "Please fill all field by numbers", Toast.LENGTH_LONG).show();
        return;
    }
    // get the users values from the widget references

    float weight = Float.parseFloat(weightText.getText().toString());
    float height = Float.parseFloat(heightText.getText().toString());

    // calculate the bmi value

    float bmiValue = calculateBMI(weight, height);

    // interpret the meaning of the bmi value
    String bmiInterpretation = interpretBMI(bmiValue);

    // now set the value in the result text
    resultText.setText(bmiValue + " = " + bmiInterpretation);
    // display toast additionally to example

}
</code></pre>
