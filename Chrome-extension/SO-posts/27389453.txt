<p>Since the <a href="http://developer.android.com/samples/SlidingTabsColors/src/com.example.android.common/view/SlidingTabStrip.html#l29">SlidingTabStrip</a> class extends a LinearLayout, you can use weight to influence the space that each view takes inside the Layout.</p>

<p>In my case, I wanted the views to use the same amount of space if there was any space left in the tab. What I did was to modify the <a href="http://developer.android.com/samples/SlidingTabsColors/src/com.example.android.common/view/SlidingTabLayout.html#l197">SlidingTabLayout class where it populates the tab strip</a>. The <code>addView()</code> method is changed to provide a LayoutParams that specify an equal weight for each added view.</p>

<p>This will force the views to occupy the entire space if they are smaller than the total available size for the tab strip and have the same behavior as the original implementation if the total size of all views is greater than the available size for the strip.</p>

<p><strong>Original code:</strong>
</p>

<pre><code>private void populateTabStrip() {
    final PagerAdapter adapter = mViewPager.getAdapter();
    final View.OnClickListener tabClickListener = new TabClickListener();

    for (int i = 0; i &lt; adapter.getCount(); i++) {
        View tabView = null;
        TextView tabTitleView = null;

        if (mTabViewLayoutId != 0) {
            // If there is a custom tab view layout id set, try and inflate it
            tabView = LayoutInflater.from(getContext()).inflate(mTabViewLayoutId, mTabStrip,
                    false);
            tabTitleView = (TextView) tabView.findViewById(mTabViewTextViewId);
        }

        if (tabView == null) {
            tabView = createDefaultTabView(getContext());
        }

        if (tabTitleView == null &amp;&amp; TextView.class.isInstance(tabView)) {
            tabTitleView = (TextView) tabView;
        }

        tabTitleView.setText(adapter.getPageTitle(i));
        tabView.setOnClickListener(tabClickListener);

        mTabStrip.addView(tabView);
    }
}
</code></pre>

<p><strong>Modified code:</strong></p>

<pre><code>private void populateTabStrip() {
    final PagerAdapter adapter = mViewPager.getAdapter();
    final View.OnClickListener tabClickListener = new TabClickListener();

    for (int i = 0; i &lt; adapter.getCount(); i++) {
        View tabView = null;
        TextView tabTitleView = null;

        if (mTabViewLayoutId != 0) {
            // If there is a custom tab view layout id set, try and inflate it
            tabView = LayoutInflater.from(getContext()).inflate(mTabViewLayoutId, mTabStrip,
                    false);
            tabTitleView = (TextView) tabView.findViewById(mTabViewTextViewId);
        }

        if (tabView == null) {
            tabView = createDefaultTabView(getContext());
        }

        if (tabTitleView == null &amp;&amp; TextView.class.isInstance(tabView)) {
            tabTitleView = (TextView) tabView;
        }

        tabTitleView.setText(adapter.getPageTitle(i));
        tabView.setOnClickListener(tabClickListener);

        mTabStrip.addView(tabView, new LinearLayout.LayoutParams(0, LayoutParams.WRAP_CONTENT, 1.0f));
    }
}
</code></pre>
