<p>I was looking for a way to change the system language programmatically.
While I fully understand that a normal application should never do that and instead either:</p>

<ul>
<li>the user should be pointed(through an intent) to the system settings to change it manually</li>
<li>the application should handle its localization on its own just like described in the answer of Alex</li>
</ul>

<p>there was a need to really change the language of the system programmtically.</p>

<p>This is undocumented API and thus should not be used for market/end-user applications!</p>

<p>Anyway heres the solution i found:</p>

<pre><code>  Locale locale = new Locale(targetLocaleAsString);

  Class amnClass = Class.forName("android.app.ActivityManagerNative");
  Object amn = null;
  Configuration config = null;

  // amn = ActivityManagerNative.getDefault();
  Method methodGetDefault = amnClass.getMethod("getDefault");
  methodGetDefault.setAccessible(true);
  amn = methodGetDefault.invoke(amnClass);

  // config = amn.getConfiguration();
  Method methodGetConfiguration = amnClass.getMethod("getConfiguration");
  methodGetConfiguration.setAccessible(true);
  config = (Configuration) methodGetConfiguration.invoke(amn);

  // config.userSetLocale = true;
  Class configClass = config.getClass();
  Field f = configClass.getField("userSetLocale");
  f.setBoolean(config, true);

  // set the locale to the new value
  config.locale = locale;

  // amn.updateConfiguration(config);
  Method methodUpdateConfiguration = amnClass.getMethod("updateConfiguration", Configuration.class);
  methodUpdateConfiguration.setAccessible(true);
  methodUpdateConfiguration.invoke(amn, config);
</code></pre>
