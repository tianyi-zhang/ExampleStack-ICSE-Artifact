<p>I just tested it with code found <a href="http://svn.alfresco.com/repos/alfresco-open-mirror/alfresco/HEAD/root/projects/data-model/source/java/org/alfresco/util/ISO9075.java" rel="nofollow">here</a> and could not get your exception.</p>

<pre><code>public static void main(String args[]) {
    String s = "mediaasset_-g9mdob83oozsr5n_xadda";

    System.out.println(ISO9075.decode(s)); //prints mediaasset_-g9mdob83oozsr5n_xadda
}

public static class ISO9075 {
    //I have removed the parts not used by your main()

    private static boolean matchesEncodedPattern(String string, int position) {
        return (string.length() &gt; position + 6)
                &amp;&amp; (string.charAt(position) == '_') &amp;&amp; (string.charAt(position + 1) == 'x')
                &amp;&amp; isHexChar(string.charAt(position + 2)) &amp;&amp; isHexChar(string.charAt(position + 3))
                &amp;&amp; isHexChar(string.charAt(position + 4)) &amp;&amp; isHexChar(string.charAt(position + 5))
                &amp;&amp; (string.charAt(position + 6) == '_');
    }

    private static boolean isHexChar(char c) {
        switch (c) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
                return true;
            default:
                return false;
        }
    }

    public static String decode(String toDecode) {
        if ((toDecode == null) || (toDecode.length() &lt; 7) || (toDecode.indexOf("_x") &lt; 0)) {
            return toDecode;
        }
        StringBuffer decoded = new StringBuffer();
        for (int i = 0, l = toDecode.length(); i &lt; l; i++) {
            if (matchesEncodedPattern(toDecode, i)) {
                decoded.append(((char) Integer.parseInt(toDecode.substring(i + 2, i + 6), 16)));
                i += 6;// then one added for the loop to mkae the length of 7
            } else {
                decoded.append(toDecode.charAt(i));
            }
        }
        return decoded.toString();
    }
}
</code></pre>
