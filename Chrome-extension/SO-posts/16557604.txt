<p>How about put</p>

<pre><code>mediaPlayer.prepareAsync();
</code></pre>

<p>at the end of <code>run()</code> function ?</p>

<pre><code>Thread trd = new Thread(new Runnable(){
    public void run(){
        //code to do the HTTP request
        MediaPlayer mediaPlayer = new MediaPlayer();  
        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);  
        try {  
            mediaPlayer.setDataSource(mp3Link);  
        } catch (IllegalArgumentException e) {  
            e.printStackTrace();  
        } catch (SecurityException e) {  
            e.printStackTrace();  
        } catch (IllegalStateException e) {  
            e.printStackTrace();  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
        // mediaPlayer.prepareAsync();  // &lt;== Marked
        // You can show progress dialog here untill it prepared to play  
        mediaPlayer.setOnPreparedListener(new OnPreparedListener() {  
            public void onPrepared(MediaPlayer mp) {  
                // Now dismis progress dialog, Media palyer will start playing 
                Log.d("Mediaplyer&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;", "Mediaplyer&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;");
                mp.start();  
            }  
        });  
        mediaPlayer.setOnErrorListener(new OnErrorListener() {  
            public boolean onError(MediaPlayer mp, int what, int extra) {  
                // dissmiss progress bar here. It will come here when  
                // MediaPlayer  
                // is not able to play file. You can show error message to user  
                return false;  
            }  
        });  
        mediaPlayer.prepareAsync(); // &lt;== Add

    }
});
trd.start();
</code></pre>

<p>Hope this helps.</p>
