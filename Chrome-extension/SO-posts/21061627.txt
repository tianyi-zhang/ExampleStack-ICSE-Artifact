<p>Lets say your
library package is <code>com.android.app.library</code>
free package is <code>com.android.app.free</code>
paid package is <code>com.android.app.paid</code></p>

<p>In your free project and paid project, make an identical file in a package which can be anything, but must be the same.</p>

<p>Example: </p>

<ol>
<li><p>Create a new package in your free version with com.android.app.data</p></li>
<li><p>Create a file called Authority.java and inside (Authority.java) put:</p>

<p><code>public class Authority {</code></p>

<pre><code>`public static final String CONTENT_AUTHORITY = "YOUR PROVIDER";`
</code></pre>

<p><code>}</code></p></li>
<li><p>Repeat this for the paid version, remember to keep the package name the same and class name.</p></li>
</ol>

<p>Now, in your contract file, in your library use the following:</p>

<pre><code>public static String AUTHORITY = initAuthority();

    private static String initAuthority() {
        String authority = "something.went.wrong.if.this.is.used";

        try {

            ClassLoader loader = Contract.class.getClassLoader();

            Class&lt;?&gt; clz = loader.loadClass("com.android.app.data.Authority");
            Field declaredField = clz.getDeclaredField("CONTENT_AUTHORITY");

            authority = declaredField.get(null).toString();
        } catch (ClassNotFoundException e) {} 
        catch (NoSuchFieldException e) {} 
        catch (IllegalArgumentException e) {
        } catch (IllegalAccessException e) {
        }

        return authority;
    }

    public static final Uri CONTENT_URI = Uri.parse("content://" + AUTHORITY);
</code></pre>

<p>Now you should be able to use two authorities.</p>

<p>Credit: Ian Warick
<a href="http://stackoverflow.com/questions/10790919/android-having-provider-authority-in-the-app-project">Android - Having Provider authority in the app project</a></p>
