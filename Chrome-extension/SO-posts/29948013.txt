<p>This method gives the <strong>minimum</strong> audio sample rate supported by your device.</p>

<p><strong>NOTE</strong> : You may reverse the for loop to get the <strong>maximum</strong> sample rate supported by your device (Don't forget to change the method name).</p>

<p><strong>NOTE 2</strong> : Though android doc says upto 48000(48khz) sample rate is supported ,I have added all the possible sampling rates (as in wikipedia)  since who know new devices may record UHD audio in higher (sampling) framerates.</p>

<pre><code>private int getMinSupportedSampleRate() {
    /*
     * Valid Audio Sample rates
     * 
     * @see &lt;a
     * href="http://en.wikipedia.org/wiki/Sampling_%28signal_processing%29"
     * &gt;Wikipedia&lt;/a&gt;
     */
    final int validSampleRates[] = new int[] { 8000, 11025, 16000, 22050,
            32000, 37800, 44056, 44100, 47250, 4800, 50000, 50400, 88200,
            96000, 176400, 192000, 352800, 2822400, 5644800 };
    /*
     * Selecting default audio input source for recording since
     * AudioFormat.CHANNEL_CONFIGURATION_DEFAULT is deprecated and selecting
     * default encoding format.
     */
    for (int i = 0; i &lt; validSampleRates.length; i++) {
        int result = AudioRecord.getMinBufferSize(validSampleRates[i],
                AudioFormat.CHANNEL_IN_DEFAULT,
                AudioFormat.ENCODING_DEFAULT);
        if (result != AudioRecord.ERROR
                &amp;&amp; result != AudioRecord.ERROR_BAD_VALUE &amp;&amp; result &gt; 0) {
            // return the mininum supported audio sample rate
            return validSampleRates[i];
        }
    }
    // If none of the sample rates are supported return -1 handle it in
    // calling method
    return -1;
}
</code></pre>
