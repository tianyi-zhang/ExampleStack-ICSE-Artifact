<p>I recommend you to make a custom adapter by which you can play with whatever the customization you want. </p>

<p>Take a look at <a href="http://theopentutorials.com/tutorials/android/listview/android-custom-listview-with-image-and-text-using-baseadapter/" rel="nofollow">http://theopentutorials.com/tutorials/android/listview/android-custom-listview-with-image-and-text-using-baseadapter/</a></p>

<p>Don't extend your custom adapter to Array adapter but BaseAdapter.Yo need to pass a RowItem like</p>

<pre><code>class RowItem{
     ...
     boolean isConditionSatisfied;
     ...
}
</code></pre>

<p>and in you adapter override the getView() as </p>

<pre><code>public View getView(int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;

    LayoutInflater mInflater = (LayoutInflater) 
        context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        convertView = mInflater.inflate(R.layout.list_item, null);
        holder = new ViewHolder();
        holder.txtDesc = (TextView) convertView.findViewById(R.id.desc);
        holder.txtTitle = (TextView) convertView.findViewById(R.id.title);
        holder.imageView = (ImageView) convertView.findViewById(R.id.icon);
        convertView.setTag(holder);
    }
    else {
        holder = (ViewHolder) convertView.getTag();
    }

    RowItem rowItem = (RowItem) getItem(position);

    holder.txtDesc.setText(rowItem.getDesc());
    holder.txtTitle.setText(rowItem.getTitle());
    holder.imageView.setImageResource(rowItem.getImageId());

    if(isConditionSatisfied){
       convertView.setBackground(R.drawable.your_drawable);
    }

    return convertView;
}
</code></pre>
