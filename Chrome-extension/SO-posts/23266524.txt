<p>I feel it is better to keep all the date formats that are likely to appear in an array, then by using a foreach loop you can check which format is best suited and You can parse it that way.
I used the following code to achieve it,</p>

<pre><code>public static String postedTimeFormat(String inPostedTime) {

        String[] formats = {
                "EEE MMM dd HH:mm:ss Z yyyy", "yyyy-MM-dd'T'HH:mm:ss",
                "yyyy-MM-dd'T'HH:mm:ss'Z'", "yyyy-MM-dd'T'HH:mm:ssZ", 
                "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "yyyy-MM-dd'T'HH:mm:ss.SSSZ", 
                "yyyy-MM-dd HH:mm:ss", "MM/dd/yyyy HH:mm:ss", 
                "MM/dd/yyyy'T'HH:mm:ss.SSS'Z'", "MM/dd/yyyy'T'HH:mm:ss.SSSZ", 
                "MM/dd/yyyy'T'HH:mm:ss.SSS", "MM/dd/yyyy'T'HH:mm:ssZ", 
                "MM/dd/yyyy'T'HH:mm:ss", "yyyy:MM:dd HH:mm:ss",
                "yyyyMMdd", "yyyy-MM-dd" ,
                "yyyy-MM-dd HH:mm", "yyyy-MM-dd HH:mmZ",
        "yyyy-MM-dd HH:mm:ss.SSSZ"};

        if (inPostedTime != null) {
            for (String format : formats) {
                SimpleDateFormat sdf = new SimpleDateFormat(format, Locale.US);
                try {
                    sdf.parse(inPostedTime);
                    return format;

                } catch (ParseException e) {
                }
            }
        }
        return null;
    }
</code></pre>
