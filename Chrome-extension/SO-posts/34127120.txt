<p>you seem to have some kind of misconception about custom list views and their adapters, Since you are setting your listview's adapter as <code>eh</code> you don't even need to have that array adapter, you have not only created the array adapter but pushed data into it, then you get the data from the array adapter one by one and put it into kapow? All you need to do is initialize your adapter <code>eh</code> with data and <code>listview.setadapter(eh)</code></p>

<pre><code> View view = mInflater.inflate(R.layout.nutrition_main, null);
    listview = (ListView) view.findViewById(R.id.listView);

    // YOU DONT NEED THIS ADAPTER !
    // Pass the results into an ArrayAdapter
    // ArrayAdapter adapter = new ArrayAdapter&lt;&gt;(getActivity(),
    //        R.layout.listviewtextview);

    // just pass your calories string to the kapow list.                
    ArrayList&lt;String&gt; kapow = new ArrayList&lt;String&gt;();
    for (ParseObject calories : ob) {
        Log.i("Calories", calories.get("Calories").toString());
        kapow.add(calories.get("Calories") + "");
    }

    // You dont need this either
    /*for(int i = 0; i &lt; adapter.getCount(); i++){
        String str = (String)adapter.getItem(i);
        kapow.add(str);
        Log.i("str", str);
    }*/

    SomeAdapter eh = new SomeAdapter(getActivity(), kapow);
    listview.setAdapter(eh);
    eh.notifyDataSetChanged();
</code></pre>

<p><strong>EDIT</strong></p>

<p>Your adapter with viewholder</p>

<pre><code>public class SomeAdapter extends ArrayAdapter&lt;String&gt; {

    private Context mContext;
    private ArrayList&lt;String&gt; mItem;

    public SomeAdapter(Context context, ArrayList&lt;String&gt; itemsArrayList) {
        super(context, R.layout.listviewtextview, itemsArrayList);
        this.mContext = context;
        this.mItem = itemsArrayList;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder viewHolder;
        if(convertView == null) {
            LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = inflater.inflate(R.layout.listviewtextview, parent, false);
            ViewHolder viewHolder = new ViewHolder();
            viewHolder.textView = (TextView) v.findViewById(R.id.food_name);v.findViewById(R.id.food_description);
            convertView.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) convert.getTag();
        }
        viewHolder.textView.setText(mItem.get(position) + "");
        return convertView;
    }

    private static class ViewHolder {
        TextView textView;
    }
}
</code></pre>
