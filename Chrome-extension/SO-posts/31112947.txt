<p>You can achieve what you want by forking this lib and change the behaviour of IconTabProvider used <a href="https://github.com/astuetz/PagerSlidingTabStrip/blob/master/sample/src/com/astuetz/viewpager/extensions/sample/QuickContactFragment.java" rel="nofollow">there</a> in sample app implemented to use only static resources.</p>

<hr>

<p>Changes to do to your lib fork to add dynamic icon changes: </p>

<p>In <code>PagerSlidingTabStrip</code>:</p>

<p>Change return type (and name) of getPageIconResId method of IconTabProvider interface</p>

<pre><code>public interface IconTabProvider {
    //public int getPageIconResId(int position) becomes
    public Bitmap getPageIconBitmap(int position)
}
</code></pre>

<p>This causes to update the call to this method in <code>PagerSlidingTabStrip</code></p>

<p>--</p>

<p>And also to change the method <code>addIconTab</code> from </p>

<pre><code>private void addIconTab(final int position, int resId) {
    ImageButton tab = new ImageButton(getContext());
    tab.setImageResource(resId);
    addTab(position, tab);
}
</code></pre>

<p>to</p>

<pre><code>private void addIconTab(final int position, bitmap icon) {
    ImageButton tab = new ImageButton(getContext());
    tab.setImageBitmap(icon);
    addTab(position, tab);
}
</code></pre>

<hr>

<p>Then you need to create an adapter for your tabs bar, here is an example: </p>

<pre><code>public class DynamicIconPagerAdapter extends PagerAdapter implements IconTabProvider {

    public HashMap&lt;Integer, Bitmap&gt; mapBetweenPositionAndIcons = new HashMap();

    public DynamicIconPagerAdapter () {
        super();
    }

    @Override
    public int getCount() {
        return mapBetweenPositionAndIcons.size();
    }

    @Override
    public Bitmap getPageIconResId(int position) {
        return mapBetweenPositionAndIcons.get(position);
    }

    @Override
    public Object instantiateItem(ViewGroup container, int position) {
        // looks a little bit messy here
        TextView v = new TextView(getActivity());
        v.setBackgroundResource(R.color.background_window);
        v.setText("PAGE " + (position + 1));
        final int padding = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 16, getResources()
                .getDisplayMetrics());
        v.setPadding(padding, padding, padding, padding);
        v.setGravity(Gravity.CENTER);
        container.addView(v, 0);
        return v;
    }

    @Override
    public void destroyItem(ViewGroup container, int position, Object view) {
        container.removeView((View) view);
    }

    @Override
    public boolean isViewFromObject(View v, Object o) {
        return v == ((View) o);
    }

}
</code></pre>

<hr>

<p>Finally, when you want to update an icon just change the corresponding bitmap of the map (mapBetweenPositionAndIcons) and call notifyDataSetChanged() on your PagerSlidingTabStrip object.</p>

<p>I havn't tested my solution yet due to a lack of time, but I will as soon as possible! ;)</p>
