<p>Use try catch block in your <code>onCreate</code> it will not crash your app, and you'll be able to see the errors via catch block.</p>

<p>Remove <code>super.onPreExecute();</code> from <code>protected void onPreExecute()</code>. Its causing the leak memory. I have experienced the same.</p>

<p>Do not perform any actions that are related to interface in <code>protected String doInBackground</code>, instead use Log.i or other Log methods to print or use debugger.</p>

<p>Use <code>protected void onPostExecute</code> to perform any action on user interface, that is the way AsyncTask is designed to work.</p>

<p>Problem was with initializing and configuring, I have moved that part in <code>onCreate</code>.
See the code below for details.</p>

<pre><code>public class DemoAct extends Activity {

    // Progress Dialog
    private ProgressDialog pDialog;

    JSONParser jsonParser = new JSONParser();
    EditText inputName;
    EditText inputPrice;
    EditText inputDesc;

    // url to create new product
    private static String url_create_product = "http://192.168.1.102/android/create_product.php";

    // JSON Node names
    private static final String TAG_SUCCESS = "success";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_demo_act);

        pDialog = new ProgressDialog(this);
        pDialog.setMessage("Creating Product..");
        pDialog.setIndeterminate(false);
        pDialog.setCancelable(true);

        // Edit Text
        inputName = (EditText) findViewById(R.id.editText1);
        inputPrice = (EditText) findViewById(R.id.editText2);
        inputDesc = (EditText) findViewById(R.id.editText3);

        try {
            // Create button
            Button btnCreateProduct = (Button) findViewById(R.id.button1);

            // button click event
            btnCreateProduct.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View view) {
                    // creating new product in background thread
                    new CreateNewProduct().execute();
                }
            });

        } catch (Exception ex) {
            Log.e("DemoAct", ex.toString());
        }
    }// End onCreate

    /**
     * Background Async Task to Create new product
     * */
    class CreateNewProduct extends AsyncTask&lt;String, String, String&gt; {

        /**
         * Before starting background thread Show Progress Dialog
         * */

        protected void onPreExecute() {
            // super.onPreExecute();

            pDialog.show();
        }

        /**
         * Creating product
         * */
        @Override
        protected String doInBackground(String... args) {

            try {
                String name = inputName.getText().toString();
                String price = inputPrice.getText().toString();
                String description = inputDesc.getText().toString();

                // Building Parameters
                List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
                params.add(new BasicNameValuePair("name", name));
                params.add(new BasicNameValuePair("price", price));
                params.add(new BasicNameValuePair("description", description));

                // getting JSON Object
                // Note that create product url accepts POST method
                JSONObject json = jsonParser.makeHttpRequest(
                        url_create_product, "POST", params);

                // check log cat fro response
                Log.d("Create Response", json.toString());

                // check for success tag
                try {
                    int success = json.getInt(TAG_SUCCESS);

                    if (success == 1) {

                        // finish();
                    } else {
                        // failed to create product
                    }
                } catch (JSONException e) {
                    Toast.makeText(getApplicationContext(), " in catch",
                            Toast.LENGTH_LONG).show();

                    e.printStackTrace();
                }

            } catch (Exception ex) {
                Log.e("DIG", ex.toString());
            }

            return null;
        }

        /**
         * After completing background task Dismiss the progress dialog
         * **/
        protected void onPostExecute(String file_url) {
            // dismiss the dialog once done
            Toast.makeText(getApplicationContext(), "finished...",
                    Toast.LENGTH_LONG).show();

            pDialog.dismiss();
        }

    }
</code></pre>
