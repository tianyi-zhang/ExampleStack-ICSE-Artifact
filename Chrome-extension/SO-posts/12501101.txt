<p>Although recursion can work and is often an assignment to implement in some college level courses on Algorithms &amp; Data Structures, I believe the "dynamic programming" implementation is more efficient. </p>

<pre><code>public static int findCombinationsCount(int sum, int vals[]) {
        if (sum &lt; 0) {
            return 0;
        }
        if (vals == null || vals.length == 0) {
            return 0;
        }

        int dp[] = new int[sum + 1];
        dp[0] = 1;
        for (int i = 0; i &lt; vals.length; ++i) {
            for (int j = vals[i]; j &lt;= sum; ++j) {
                dp[j] += dp[j - vals[i]];
            }
        }
        return dp[sum];
    }
</code></pre>
