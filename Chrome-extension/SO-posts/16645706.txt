<p>Did not manage to solve it with the answers. Tweaked the buttons by removing all without the arrows and then I moved the arrows together:</p>

<pre><code>private Component createArrowButton(int direction) {

        JButton b = new BasicArrowButton(direction){

            private static final long serialVersionUID = 1L;

            @Override
            public void paintTriangle(Graphics g, int x, int y, int size,
                    int direction, boolean isEnabled) {


                if(direction == NORTH){
                    y +=3;
                }
                else if(direction == SOUTH){
                    y -=3;
                }

                Color shadow = UIManager.getColor("controlShadow");                 
                Color darkShadow = UIManager.getColor("controlDkShadow");
                Color highlight = UIManager.getColor("controlLtHighlight");

                Color oldColor = g.getColor();
                int mid, i, j;

                j = 0;
                size = Math.max(size, 2);
                mid = (size / 2) - 1;

                g.translate(x, y);
                if (isEnabled)
                    g.setColor(darkShadow);
                else
                    g.setColor(shadow);

                switch (direction) {
                case NORTH:

                    for (i = 0; i &lt; size; i++) {
                        g.drawLine(mid - i, i, mid + i, i);
                    }
                    if (!isEnabled) {
                        g.setColor(highlight);
                        g.drawLine(mid - i + 2, i, mid + i, i);
                    }
                    break;
                case SOUTH:
                    if (!isEnabled) {
                        g.translate(1, 1);
                        g.setColor(highlight);
                        for (i = size - 1; i &gt;= 0; i--) {
                            g.drawLine(mid - i, j, mid + i, j);
                            j++;
                        }
                        g.translate(-1, -1);
                        g.setColor(shadow);
                    }

                    j = 0;
                    for (i = size - 1; i &gt;= 0; i--) {
                        g.drawLine(mid - i, j, mid + i, j);
                        j++;
                    }
                    break;
                case WEST:
                    for (i = 0; i &lt; size; i++) {
                        g.drawLine(i, mid - i, i, mid + i);
                    }
                    if (!isEnabled) {
                        g.setColor(highlight);
                        g.drawLine(i, mid - i + 2, i, mid + i);
                    }
                    break;
                case EAST:
                    if (!isEnabled) {
                        g.translate(1, 1);
                        g.setColor(highlight);
                        for (i = size - 1; i &gt;= 0; i--) {
                            g.drawLine(j, mid - i, j, mid + i);
                            j++;
                        }
                        g.translate(-1, -1);
                        g.setColor(shadow);
                    }

                    j = 0;
                    for (i = size - 1; i &gt;= 0; i--) {
                        g.drawLine(j, mid - i, j, mid + i);
                        j++;
                    }
                    break;
                }
                g.translate(-x, -y);
                g.setColor(oldColor);
            }
        };
        b.setBorder(BorderFactory.createEmptyBorder());
        //removes content area
        b.setContentAreaFilled(false);
        b.setInheritsPopupMenu(true);
        b.setOpaque(false);
        b.setBackground(color);

        return b;
    }
</code></pre>
