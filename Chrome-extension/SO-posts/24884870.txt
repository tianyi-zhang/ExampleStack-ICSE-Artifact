<p>@Parag Chauhan soltution is working well, but I had problem - some file manager apps are returning in Intent object "file:///..." instead of "content://..." - which is needed to use query.</p>

<p>There is my short solution for that problem:</p>

<pre><code>public String getRealPathFromURI(Context context, Uri contentUri) {
    Cursor cursor = null;
    try {

        if("content".equals(contentUri.getScheme())) {
            String[] proj = {MediaStore.Images.Media.DATA};
            cursor = context.getContentResolver().query(contentUri, proj, null, null, null);
            int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
            cursor.moveToFirst();
            return cursor.getString(column_index);
        }
        else{
            return contentUri.getPath();
        }


    } finally {
        if (cursor != null) {
            cursor.close();
        }
    }
}    
</code></pre>

<p>Based on @Parag solution,</p>

<p>partial solution here (@nobre) <a href="http://stackoverflow.com/questions/5657411/android-getting-a-file-uri-from-a-content-uri">Android: Getting a file Uri from a content Uri?</a></p>

<p>parital solution here (@Nikolay) <a href="http://stackoverflow.com/questions/3401579/get-filename-and-path-from-uri-from-mediastore">Get filename and path from uri from mediastore</a></p>
