<p>A recursive version of the <a href="http://stackoverflow.com/questions/1670862/obtaining-powerset-of-a-set-in-java">generic solution</a> proposed by <a href="http://stackoverflow.com/users/140816/joao-silva">JoÃ£o Silva</a> :</p>

<pre><code>public static &lt;T&gt; Set&lt;Set&lt;T&gt;&gt; powerSet2(Set&lt;T&gt; originalSet) {
    Set&lt;Set&lt;T&gt;&gt; sets = new HashSet&lt;Set&lt;T&gt;&gt;();
    if (originalSet.isEmpty()) {
        sets.add(new HashSet&lt;T&gt;());
        return sets;
    }
    List&lt;T&gt; list = new ArrayList&lt;T&gt;(originalSet);
    T head = list.get(0);
    Set&lt;T&gt; rest = new HashSet&lt;T&gt;(list.subList(1, list.size()));
    addSets(sets, powerSet(rest), head);
    return  sets;
}

private static &lt;T&gt; void addSets(Set&lt;Set&lt;T&gt;&gt; sets, Set&lt;Set&lt;T&gt;&gt; setsToAdd, T head) {
    Iterator&lt;Set&lt;T&gt;&gt; iterator = setsToAdd.iterator();
    if (iterator.hasNext()) {
        Set&lt;T&gt; set = iterator.next();
        iterator.remove();
        Set&lt;T&gt; newSet = new HashSet&lt;T&gt;();
        newSet.add(head);
        newSet.addAll(set);
        sets.add(newSet);
        sets.add(set);
        addSets(sets, setsToAdd, head);
    }
}
</code></pre>

<p>I extract the recursive addSets method to transform the original <code>for</code> loop:</p>

<pre><code>for (Set&lt;T&gt; set : powerSet(rest)) {
    Set&lt;T&gt; newSet = new HashSet&lt;T&gt;();
    newSet.add(head);
    newSet.addAll(set);
    sets.add(newSet);
    sets.add(set);
}
</code></pre>
