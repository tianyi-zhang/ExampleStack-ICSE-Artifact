<p>Here is my solution (it works only if you run a web server on your debug machine):
I have created a background task that starts when the application starts. It looks for <a href="http://10.0.2.2">http://10.0.2.2</a> and if it exists it changes a global parameter (IsDebug) to true. It is a silent way to find out where you are running.</p>

<pre><code>public class CheckDebugModeTask extends AsyncTask&lt;String, Void, String&gt; {
public static boolean IsDebug = false;

public CheckDebugModeTask()
{

}

@Override
protected String doInBackground(String... params) {     
  try {
    HttpParams httpParameters = new BasicHttpParams();
    int timeoutConnection = 1000;
    HttpConnectionParams.setConnectionTimeout(httpParameters, timeoutConnection);
    int timeoutSocket = 2000;
    HttpConnectionParams.setSoTimeout(httpParameters, timeoutSocket);

    String url2 = "http://10.0.2.2";        
          HttpGet httpGet = new HttpGet(url2);
    DefaultHttpClient client = new DefaultHttpClient(httpParameters);

    HttpResponse response2 = client.execute(httpGet);
    if (response2 == null || response2.getEntity() == null || response2.getEntity().getContent() == null)
    return "";

    return "Debug";

} catch (Exception e) {
    return "";
}
}

@Override
protected void onPostExecute (String result)
{       
if (result == "Debug")
{
    CheckDebugModeTask.IsDebug = true;
}
}
</code></pre>

<p>from the main activity onCreate:</p>

<pre><code>CheckDebugModeTask checkDebugMode = new CheckDebugModeTask();
checkDebugMode.execute("");
</code></pre>
