<p>Create a Key Class let us say <strong>Employee.java</strong> with below code.</p>

<pre><code>package com.innovation;


public class Employee {
private String name;
private String address;
private String phone;

public Employee() {
    super();
}

public Employee(String name, String address, String phone) {
    super();
    this.name = name;
    this.address = address;
    this.phone = phone;
}

public String getName() {
    return name;
}

public void setName(String name) {
    this.name = name;
}

public String getAddress() {
    return address;
}

public void setAddress(String address) {
    this.address = address;
}

public String getPhone() {
    return phone;
}

public void setPhone(String phone) {
    this.phone = phone;
}

@Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((address == null) ? 0 : address.hashCode());
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    result = prime * result + ((phone == null) ? 0 : phone.hashCode());
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    Employee other = (Employee) obj;
    if (address == null) {
        if (other.address != null)
            return false;
    } else if (!address.equals(other.address))
        return false;
    if (name == null) {
        if (other.name != null)
            return false;
    } else if (!name.equals(other.name))
        return false;
    if (phone == null) {
        if (other.phone != null)
            return false;
    } else if (!phone.equals(other.phone))
        return false;
    return true;
}

@Override
public String toString() {
    return "Employee [name=" + name + ", address=" + address + ", phone="
            + phone + "]";
}



}
</code></pre>

<p>Now create a Client class where you want to apply your logic let us assume a class containing main method say <strong>Client.java</strong></p>

<pre><code>package com.innovation;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Client {

    public static void main(String[] args) {


        Set&lt;Employee&gt; empSet = new HashSet&lt;Employee&gt;(populateList());

        for (Employee employee : empSet)
        {
            System.out.println(employee);
        }

    }   

    public static List&lt;Employee&gt; populateList()
    {
        List&lt;Employee&gt; lsts = new ArrayList&lt;Employee&gt;();

        lsts.add(new Employee("rais","gurgaon","123456"));
        lsts.add(new Employee("alam","Delhi","123685"));
        lsts.add(new Employee("shyam","Mumbai","1257456"));
        lsts.add(new Employee("ramesh","Ahmadabad","196356"));
        lsts.add(new Employee("rais","gurgaon","123456"));
        lsts.add(new Employee("rais","gurgaon","123456"));
        lsts.add(new Employee("rais","gurgaon","123456"));


        return lsts;

    }

}
</code></pre>

<p>You will see below out put. it is clearly visible that duplicate entry present in list is removed in set. it all magic of good implementation of equals and hashcode method.</p>

<pre><code>Employee [name=rais, address=gurgaon, phone=123456]
Employee [name=ramesh, address=Ahmadabad, phone=196356]
Employee [name=alam, address=Delhi, phone=123685]
Employee [name=shyam, address=Mumbai, phone=1257456]
</code></pre>
