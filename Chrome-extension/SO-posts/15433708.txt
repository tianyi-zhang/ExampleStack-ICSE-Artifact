<p>i also had same problem earlier.. and i have managed it by using this function where you can get scale as your required width and height.</p>

<pre><code>private Bitmap decodeFile(FileInputStream f)
{
    try
    {
        //decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inJustDecodeBounds = true;
        BitmapFactory.decodeStream(f,null,o);

        //Find the correct scale value. It should be the power of 2.
        final int REQUIRED_SIZE=70;
        int width_tmp=o.outWidth, height_tmp=o.outHeight;
        int scale=1;
        while(true)
        {
            if(width_tmp/2&lt;REQUIRED_SIZE || height_tmp/2&lt;REQUIRED_SIZE)
                break;
            width_tmp/=2;
            height_tmp/=2;
            scale*=2;
        }

        //decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options();
        o2.inSampleSize=scale;
        return BitmapFactory.decodeStream(f, null, o2);
    } 
    catch (FileNotFoundException e) {}
    return null;
}
</code></pre>

<p>and refer <a href="http://stackoverflow.com/questions/13248070/memory-leak-error-android/13248108#13248108">Memory Leak Error Android</a> and <a href="http://stackoverflow.com/questions/13248698/error-in-loading-images-to-gridview-android/13248728#13248728">error in loading images to gridview android</a></p>
