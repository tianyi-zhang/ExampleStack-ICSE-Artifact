<p>You can look for any child of TextView instance in your convertView. This method uses Breadth First Search algorithm to search for TextView instance. </p>

<pre><code>private void setOnClickListenerOnTextViews(View contentViev, OnClickListener listener) {
            ArrayList&lt;View&gt; unvisited = new ArrayList&lt;View&gt;();
            unvisited.add(contentView);
            while (!unvisited.isEmpty()) {
                View child = unvisited.remove(0);
                if(child instanceof TextView) {
                    child.setOnClickListener(listener);
                    continue;
                }
                if (!(child instanceof ViewGroup)){
                    continue;
                }
                ViewGroup group = (ViewGroup) child;
                final int childCount = group.getChildCount();
                for (int i=0; i&lt; childCount; i++){
                    unvisited.add(group.getChildAt(i));
                }
            }
           }
}
</code></pre>

<p>Call this method in your getView() method:</p>

<pre><code>public View getView(.....){
//...
setOnClickListenerOnTextViews(convertView,mClickListener)
return convertView;
}
</code></pre>

<p>EDIT: For the sake of copy and paste solution, <code>mClickListener</code> is listener instance somewhere in your code:</p>

<pre><code>private View.OnClickListener mClickListener = new View.OnclickListerner(){
 @Override
 public void onClick(View v){
   //do your thing here.
 }
};
</code></pre>
