<p>Is this happening on android 6.0 as well? Then you will have to go for runtime permissions as well. <strong>Pre marshmallow</strong>-</p>

<pre><code>&lt;uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/&gt; in the android manifest file.
</code></pre>

<p><strong>Marshmallow and above(Targeted SDK)-</strong>
You should be checking if the user has granted permission of external storage by using:</p>

<pre><code>    public  boolean haveStoragePermissions() {
    if (Build.VERSION.SDK_INT &gt;= 23) {
        if (checkSelfPermission(android.Manifest.permission.WRITE_EXTERNAL_STORAGE)
                == PackageManager.PERMISSION_GRANTED) {
            Log.v(TAG,"Permission is granted");
            return true;
        } else {

            Log.v(TAG,"Permission is revoked");
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
            return false;
        }
    }
    else { //permission is automatically granted on sdk&lt;23 upon installation
        Log.v(TAG,"Permission is granted");
        return true;
    }
}
</code></pre>

<p>Then make your activity implement <code>OnRequestPermissionResult</code>-</p>

<pre><code>@Override
public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if(grantResults[0]== PackageManager.PERMISSION_GRANTED){
        Log.v(TAG,"Permission: "+permissions[0]+ "was "+grantResults[0]);
        //resume tasks needing this permission
    }
}
</code></pre>
