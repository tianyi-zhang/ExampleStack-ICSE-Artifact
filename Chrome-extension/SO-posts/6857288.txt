<p><a href="http://www.jjoe64.com/2011/07/chart-and-graph-library-for-android.html" rel="nofollow">Original post: Chart and Graph Library for Android</a></p>

<p>With the library <strong>GraphView</strong> it's possible to create a line and bar graphs.</p>

<p>GraphView is a library for Android to programmatically create flexible and nice-looking line and bar diagramms. It is easy to understand, to integrate and to customize it.</p>

<p>First checkout the library and integrate it into your project.
Source code is hosted on github.
<a href="https://github.com/jjoe64/GraphView" rel="nofollow">GraphView library on github</a></p>

<p>It's also possible to let the graph be scalable (zooming) and scrollable. More information about this library on <a href="http://www.jjoe64.com/2011/07/chart-and-graph-library-for-android.html" rel="nofollow">Original post: Chart and Graph Library for Android</a></p>

<p><strong>This is how it will look like</strong>:
<img src="https://github.com/jjoe64/GraphView/raw/master/GVLine.jpg" alt="line graph"></p>

<p>Then you can easily create it with a few lines of code (see snippet):</p>

<pre><code>// graph with dynamically genereated horizontal and vertical labels
GraphView graphView = new LineGraphView(
  this // context
  , new GraphViewData[] {
    new GraphViewData(1, 2.0d)
    , new GraphViewData(2, 1.5d)
    , new GraphViewData(2.5, 3.0d) // another frequency
    , new GraphViewData(3, 2.5d)
    , new GraphViewData(4, 1.0d)
    , new GraphViewData(5, 3.0d)
  } // data
  , "GraphViewDemo" // heading
  , null // dynamic labels
  , null // dynamic labels
);
LinearLayout layout = (LinearLayout) findViewById(R.id.graph1);
layout.addView(graphView);
</code></pre>
