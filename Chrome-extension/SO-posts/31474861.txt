<p>Use this short and sweet code for this. use intent of gallery.</p>

<p>1.declaire variable.</p>

<pre><code>private static int RESULT_IMG = 1;
String imgString;
</code></pre>

<p>2.call intent of gallery on onclick of button.</p>

<pre><code>Intent galleryIntent = new Intent(Intent.ACTION_PICK,
                android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
startActivityForResult(galleryIntent, RESULT_LOAD_IMG);
</code></pre>

<p>3.onActivityResult to your code.</p>

<pre><code>@Override
protected void onActivityResult(int requestCode, int responseCode, Intent data) {
super.onActivityResult(requestCode, responseCode, data);
try {
    if (requestCode == RESULT_IMG &amp;&amp; responseCode == RESULT_OK
                    &amp;&amp; null != data) {
    Uri pickedImage = data.getData();
    String[] filePathColumn = { MediaStore.Images.Media.DATA };
    Cursor cursor = getContentResolver().query(pickedImage,
            filePathColumn, null, null, null);
    cursor.moveToFirst();
    int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
    imgString = cursor.getString(columnIndex);
    cursor.close();

    //set bitmap to your imageview
    ImageView imgView = (ImageView) findViewById(R.id.imgView);
    imgView.setImageBitmap(BitmapFactory.decodeFile(imgString));
} else {
    Toast.makeText(this, "please select picture",Toast.LENGTH_LONG).show();
}
} catch (Exception e) {
    Toast.makeText(this, "error message", Toast.LENGTH_LONG)
                    .show();
    }
}
</code></pre>
