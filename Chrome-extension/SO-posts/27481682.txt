<p>On android, the class <code>CordovaWebViewClient</code> do a <code>this.appView.postMessage("onPageFinished", url);</code> when it finish loading the page</p>

<p>But listening to it isn't as easy as on iOS</p>

<p>CordovaInterface has a method <code>public Object onMessage(String id, Object data);</code></p>

<p>Your main activity should be extending <code>CordovaActivity</code>, and as <code>CordovaActivity</code> implements <code>CordovaInterface</code>, you could override the <code>public Object onMessage(String id, Object data)</code> from <code>CordovaActivity</code> from your main activity, but I'm not sure if that's a good idea.</p>

<p>To override the onMessage , copy the whole onMessage from <code>CordovaActivity</code> and paste it on your main activity, be aware that the onMessage from <code>CordovaActivity</code> won't be executed anymore.</p>

<pre><code>    @Override
    public Object onMessage(String id, Object data) {
        if (!"onScrollChanged".equals(id)) {
            LOG.d(TAG, "overrided onMessage(" + id + "," + data + ")");
        }

        if("onPageFinished".equals(id)) {

            //Show the ad here

        }

        if ("splashscreen".equals(id)) {
            if ("hide".equals(data.toString())) {
                this.removeSplashScreen();
            }
            else {
                // If the splash dialog is showing don't try to show it again
                if (this.splashDialog == null || !this.splashDialog.isShowing()) {
                    String splashResource = preferences.getString("SplashScreen", null);
                    if (splashResource != null) {
                        splashscreen = getResources().getIdentifier(splashResource, "drawable", getClass().getPackage().getName());
                    }
                    this.showSplashScreen(this.splashscreenTime);
                }
            }
        }
        else if ("spinner".equals(id)) {
            if ("stop".equals(data.toString())) {
                this.spinnerStop();
                this.appView.setVisibility(View.VISIBLE);
            }
        }
        else if ("onReceivedError".equals(id)) {
            JSONObject d = (JSONObject) data;
            try {
                this.onReceivedError(d.getInt("errorCode"), d.getString("description"), d.getString("url"));
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
        else if ("exit".equals(id)) {
            this.endActivity();
        }
        return null;
    }
</code></pre>
