<p>Tried with single view.
I can know the view was dismissed, but I'm wondering how to restore the view like Gmail.</p>

<p>Layout:</p>

<pre><code>&lt;android.support.design.widget.CoordinatorLayout
            xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:tools="http://schemas.android.com/tools"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/coordinatorLayout"
            tools:context=".MainActivity"&gt;


        &lt;android.support.v7.widget.CardView
                android:id="@+id/cardView"
                android:layout_margin="20dp"
                android:layout_width="match_parent"
                android:layout_height="match_parent"&gt;
            &lt;TextView
                    android:text="Haha"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"/&gt;
        &lt;/android.support.v7.widget.CardView&gt;

&lt;/android.support.design.widget.CoordinatorLayout&gt;
</code></pre>

<p>Activity:</p>

<pre><code>public class MainActivity extends AppCompatActivity {

    private CoordinatorLayout coordinatorLayout;
    private CardView cardView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        coordinatorLayout = (CoordinatorLayout) findViewById(R.id.coordinatorLayout);
        cardView = (CardView) findViewById(R.id.cardView);

        CoordinatorLayout.LayoutParams params = (CoordinatorLayout.LayoutParams) cardView.getLayoutParams();

        final SwipeDismissBehavior&lt;CardView&gt; behavior = new SwipeDismissBehavior();
        behavior.setSwipeDirection(SwipeDismissBehavior.SWIPE_DIRECTION_START_TO_END);
        behavior.setListener(new SwipeDismissBehavior.OnDismissListener() {
            @Override
            public void onDismiss(final View view) {
                Snackbar.make(coordinatorLayout, "Done", Snackbar.LENGTH_LONG)
                        .show();
            }

            @Override
            public void onDragStateChanged(int i) {
            }
        });
        params.setBehavior(behavior);

        cardView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                return behavior.onTouchEvent(coordinatorLayout, cardView, event);
            }
        });
    }


}
</code></pre>
