<p>After searching and seeing the above answer I have written a simple snippet by just modifying code from Android User.I have used this which is successfully working.This code setCallback the view's background and even recycle all the present bitmap used.</p>

<pre><code>     @Override
        protected void onDestroy() {
        super.onDestroy();

        unbindDrawables(findViewById(R.id.rootView));
        System.gc();
        }

 static void unbindDrawables(View view) {
     try{
     System.out.println("UNBINDING"+view);
            if (view.getBackground() != null) {

                ((BitmapDrawable)view.getBackground()).getBitmap().recycle();


                view.getBackground().setCallback(null);
                view=null;
            }

            if (view instanceof ViewGroup) {
                for (int i = 0; i &lt; ((ViewGroup) view).getChildCount(); i++) {
                unbindDrawables(((ViewGroup) view).getChildAt(i));
                }
            ((ViewGroup) view).removeAllViews();
            }

    }catch (Exception e) {
        // TODO: handle exception
        e.printStackTrace();
    }
 }   
</code></pre>

<p>EDIT:</p>

<p>A new thing I discovered today using images less than 20 kb of size is good for memory-optimization and less u have to go through out-of-memory error.</p>
