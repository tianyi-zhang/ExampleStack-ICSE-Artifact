<p>After long time I am created an app to print image on bluetooth printer by using following steps:
1. Connect your Bluetooth device with Android phone
2. Call senddatatodevice() method when you want to send data on printer
3. code executed within senddatatodevice() is like bellow.</p>

<pre><code>    private static void senddatatodevice() {
    // TODO Auto-generated method stub
    try {
        //base64 image string
    String  sig="";
  byte[] imageAsBytes = android.util.Base64
                .decode(sig, android.util.Base64.DEFAULT);

        btMap = BitmapFactory.decodeByteArray(imageAsBytes, 0,
                imageAsBytes.length);


        Bitmap bitmapOrg = resizeImage(btMap, 384,
                150);// Bit
        byte[] sendbuf = StartBmpToPrintCode(bitmapOrg, 0);
       /*byte[] a=t2.getBytes();


       byte[] combined = new byte[a.length + sendbuf.length];

       System.arraycopy(a,0,combined,0         ,a.length);
       System.arraycopy(sendbuf,0,combined,a.length,sendbuf.length);*/
    mbtOutputStream = mbtSocket.getOutputStream();
    mbtOutputStream.write(sendbuf);
    mbtOutputStream.flush();

    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}
public static Bitmap resizeImage(Bitmap bitmap, int w, int h) {
    Bitmap BitmapOrg = bitmap;
    int width = BitmapOrg.getWidth();
    int height = BitmapOrg.getHeight();
    int newWidth = w;
    int newHeight = h;

    float scaleWidth = ((float) newWidth) / width;
    float scaleHeight = ((float) newHeight) / height;
    Matrix matrix = new Matrix();
    matrix.postScale(scaleWidth, scaleWidth);
    Bitmap resizedBitmap = Bitmap.createBitmap(BitmapOrg, 10,10, width,
            height, matrix, true);
    return resizedBitmap;
}
private static byte[] StartBmpToPrintCode(Bitmap bitmap, int t) {
    byte temp = 0;
    int j = 7;
    int start = 0;
    if (bitmap != null) {
        int mWidth = bitmap.getWidth();
        int mHeight = bitmap.getHeight();

        int[] mIntArray = new int[mWidth * mHeight];
        byte[] data = new byte[mWidth * mHeight];
        bitmap.getPixels(mIntArray, 0, mWidth, 0, 0, mWidth, mHeight);
        encodeYUV420SP(data, mIntArray, mWidth, mHeight, t);
        byte[] result = new byte[mWidth * mHeight / 8];
        for (int i = 0; i &lt; mWidth * mHeight; i++) {
            temp = (byte) ((byte) (data[i] &lt;&lt; j) + temp);
            j--;
            if (j &lt; 0) {
                j = 7;
            }
            if (i % 8 == 7) {
                result[start++] = temp;
                temp = 0;
            }
        }
        if (j != 7) {
            result[start++] = temp;
        }

        int aHeight = 24 - mHeight % 24;
        byte[] add = new byte[aHeight * 48];
        byte[] nresult = new byte[mWidth * mHeight / 8 + aHeight * 48];
        System.arraycopy(result, 0, nresult, 0, result.length);
        System.arraycopy(add, 0, nresult, result.length, add.length);

        byte[] byteContent = new byte[(mWidth / 8 + 4)
                * (mHeight + aHeight)];// ´òÓ¡Êý×é
        byte[] bytehead = new byte[4];// Ã¿ÐÐ´òÓ¡Í·
        bytehead[0] = (byte) 0x1f;
        bytehead[1] = (byte) 0x10;
        bytehead[2] = (byte) (mWidth / 8);
        bytehead[3] = (byte) 0x00;
        for (int index = 0; index &lt; mHeight + aHeight; index++) {
            System.arraycopy(bytehead, 0, byteContent, index * 52, 4);
            System.arraycopy(nresult, index * 48, byteContent,
                    index * 52 + 4, 48);

        }
        return byteContent;
    }
    return null;

}

public static void encodeYUV420SP(byte[] yuv420sp, int[] rgba, int width,
        int height, int t) {
    final int frameSize = width * height;
    int[] U, V;
    U = new int[frameSize];
    V = new int[frameSize];
    final int uvwidth = width / 2;
    int r, g, b, y, u, v;
    int bits = 8;
    int index = 0;
    int f = 0;
    for (int j = 0; j &lt; height; j++) {
        for (int i = 0; i &lt; width; i++) {
            r = (rgba[index] &amp; 0xff000000) &gt;&gt; 24;
            g = (rgba[index] &amp; 0xff0000) &gt;&gt; 16;
            b = (rgba[index] &amp; 0xff00) &gt;&gt; 8;
            // rgb to yuv
            y = ((66 * r + 129 * g + 25 * b + 128) &gt;&gt; 8) + 16;
            u = ((-38 * r - 74 * g + 112 * b + 128) &gt;&gt; 8) + 128;
            v = ((112 * r - 94 * g - 18 * b + 128) &gt;&gt; 8) + 128;
            // clip y
            // yuv420sp[index++] = (byte) ((y &lt; 0) ? 0 : ((y &gt; 255) ? 255 :
            // y));
            byte temp = (byte) ((y &lt; 0) ? 0 : ((y &gt; 255) ? 255 : y));
            if (t == 0) {
                yuv420sp[index++] = temp &gt; 0 ? (byte) 1 : (byte) 0;
            } else {
                yuv420sp[index++] = temp &gt; 0 ? (byte) 0 : (byte) 1;
            }

            // {
            // if (f == 0) {
            // yuv420sp[index++] = 0;
            // f = 1;
            // } else {
            // yuv420sp[index++] = 1;
            // f = 0;
            // }

            // }

        }

    }
    f = 0;
}
</code></pre>
