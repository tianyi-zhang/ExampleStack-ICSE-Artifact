<p>create a Asyntask class </p>

<pre><code>public class SendRequest extends AsyncTask&lt;Void, Void, Void&gt; {

private Context context;
private String url;
private String token;
private String uid;

public SendRequest(Context context, String token, String uid) {
    // TODO Auto-generated constructor stub
    this.context = context;
    this.token = token;
    this.uid = uid;
    url = "http://" + context.getResources().getString(R.string.url)
            + "/xyz.php";
}

@Override
protected Void doInBackground(Void... arg0) {
    List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
    params.add(new BasicNameValuePair("token", token));
    params.add(new BasicNameValuePair("user_id", uid));
    HttpClient httpclient = new DefaultHttpClient();
    HttpPost httppost = new HttpPost(url);
    try {
        httppost.setEntity(new UrlEncodedFormEntity(params));
        HttpResponse response = httpclient.execute(httppost);
    }

    catch (ClientProtocolException e) {
        Log.e("e", "error1");
        e.printStackTrace();
    } catch (IOException e) {
        Log.e("e", "error2");
        e.printStackTrace();
    }
    return null;
}

@Override
protected void onPostExecute(Void result) {
    //after http request
}
}
</code></pre>

<p>And call this in you activity like<br></p>

<pre><code>new SendRequest(par1, par2, par3).execute();
</code></pre>
