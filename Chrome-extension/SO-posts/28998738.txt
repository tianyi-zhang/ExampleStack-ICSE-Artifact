<p>Use <code>android.R.layout.simple_list_item_2</code> as a row item in your <code>ListView</code>. You need to create <em>Custom Adapter</em> so as to show both the text in the <code>ListView</code>. Set both text in <code>getView()</code> method. Also, use <code>ViewHolder</code> pattern for smooth scrolling on <code>ListView</code>.</p>

<pre><code>protected void onPostExecute(String result) {
        JSONObject json = null;
        try {
            json = new JSONObject(result);
        } catch (JSONException e) {
            e.printStackTrace();
        }

        ArrayList&lt;FollowingKeywords&gt; keyWord = new ArrayList&lt;FollowingKeywords&gt;();
        JSONArray keywordArray = json.optJSONArray("keywords");
        if(keywordArray != null) {
            for (int i = 0; i &lt; keywordArray.length(); i++) {
                JSONObject keywordObject = keywordArray.optJSONObject(i);
                if(keywordObject != null) {
                     FollowingKeywords keywords = new FollowingKeywords();
                     keywords.setKeyword(keywordObject.optString("keyword"));
                     keywords.setTimestamp(keywordObject.optString("creation_date"));
                     keyWord.add(keywords);
                }
            }
        }

        MyAdapter myAdapter = new MyAdapter(this, android.R.layout.simple_list_item_2, keyWord);
        ListView listView1 = (ListView) findViewById(R.id.listView1);
        listView1.setAdapter(myAdapter);
    }
</code></pre>

<p><strong>MyAdapter.java</strong></p>

<pre><code>public class MyAdapter extends ArrayAdapter&lt;FollowingKeywords&gt;{

    Context context;
    List&lt;FollowingKeywords&gt; keywordList;

    public MyAdapter(Context context, int resource, ArrayList&lt;FollowingKeywords&gt; keywordList) {
        super(context, resource, keywordList);
        this.context = context;
        this.keywordList = keywordList;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View row = convertView;
        ViewHolder holder;
        if(row == null){
            LayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            row = (View)inflater.inflate(android.R.layout.simple_list_item_2, null);      

            holder = new ViewHolder();
            holder.keywordText = (TextView)row.findViewById(android.R.id.text1);
            holder.creationText = (TextView)row.findViewById(android.R.id.text2);

            row.setTag(holder);
        } else{
            holder = (ViewHolder) row.getTag();
        }

        holder.keywordText.setText(keywordList.get(position).getKeyword());
        holder.creationText.setText(keywordList.get(position).getTimestamp());

        return row;
    }

    static class ViewHolder {
        TextView keywordText;
        TextView creationText;
    }

}
</code></pre>
