<p><strong>It works fine</strong></p>

<p><strong>Add Below permission in Manifest.xml</strong></p>

<pre><code> &lt;uses-permission android:name="android.permission.INTERNET"/&gt;
</code></pre>

<p><strong>ManiActivity.java</strong></p>

<pre><code>public class MainActivity extends Activity {
private ListView listView;
private List&lt;FeedsDTO&gt; feedsList = new ArrayList&lt;FeedsDTO&gt;();
private FeedsDTO dto  = null;
private BackgroundThread backgroundThread;
private CustomAdapter customAdapter = null;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    listView = (ListView) findViewById(R.id.listview);
    backgroundThread = new BackgroundThread();
    backgroundThread.execute();
}
private void setListViewAdapter(){
    customAdapter = new CustomAdapter(this, R.layout.listitem, feedsList);
    listView.setAdapter(customAdapter);
}
private class BackgroundThread extends AsyncTask&lt;Void, Void, String&gt; {
    private ProgressDialog progressBar = null;
    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        progressBar = new ProgressDialog(MainActivity.this);
        progressBar.setCancelable(false);
        progressBar.show();

    }
    @Override
    protected String doInBackground(Void... params) {
        BufferedReader reader = null;
        String webc = "";
        try{
            URL url = new URL("http://gdata.youtube.com/feeds/api/users/thecovery/uploads?v=2&amp;alt=json");
            reader = new BufferedReader(new InputStreamReader(url.openStream()));
            StringBuffer buffer = new StringBuffer();
            int read;
            char[] chars = new char[1024];
            while((read = reader.read(chars)) != -1){
                buffer.append(chars,0,read);
            }
            webc = buffer.toString();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (reader != null) {
                try {
                    reader.close();
                    return webc;
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
        System.out.println(webc);
        return webc;
    }
    @Override
    protected void onPostExecute(String result) {
        JSONObject obj;
        try {
            obj = new JSONObject(result);
            JSONArray feed = obj.getJSONObject("feed").getJSONArray("entry");
            Log.i("=======", "========="+feed.length());
            for(int i = 0; i &lt; feed.length(); i++){
                dto = new FeedsDTO();
                dto.setName(feed.getJSONObject(i).getJSONObject("title").getString("$t"));
                dto.setLink(feed.getJSONObject(i).getJSONArray("link").getJSONObject(0).getString("href"));
                feedsList.add(dto);
                dto = null;
            }
            Log.i("=======LIst Size", "========="+feedsList.size());
            progressBar.dismiss();
            setListViewAdapter();
        } catch (JSONException e) {
            e.printStackTrace();
        }
        super.onPostExecute(result);
    }
}
</code></pre>

<p>}</p>

<p><strong>CustomAdapter.java</strong></p>

<pre><code>public class CustomAdapter extends ArrayAdapter&lt;FeedsDTO&gt;{
private LayoutInflater inflater;
private int layoutID;
public CustomAdapter(Context cntx, int resource, List&lt;FeedsDTO&gt; objects) {
    super(cntx, resource, objects);
    this.inflater =(LayoutInflater) cntx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    this.layoutID = resource;
}
@Override
public View getView(int position, View convertView, ViewGroup parent) {
    try {
        ViewHolder holder = null;
        if (convertView == null) {
            convertView = inflater.inflate(layoutID, null);
            holder = new ViewHolder();
            holder.NameTV = (TextView) convertView.findViewById(R.id.textview);

            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
        FeedsDTO feedsDTO = getItem(position);
        holder.NameTV.setText(feedsDTO.getName());

        feedsDTO = null;
    } catch (Exception e) {
        e.printStackTrace();
    }
    return convertView;
}
private class ViewHolder{
    TextView NameTV;
}
</code></pre>

<p>}</p>

<p><strong>FeedsDTO.java</strong></p>

<pre><code>public class FeedsDTO {
private String name;
public String getName() {
    return name;
}
public void setName(String name) {
    this.name = name;
}
public String getLink() {
    return link;
}
public void setLink(String link) {
    this.link = link;
}
private String link;
}
</code></pre>

<p><strong>listitem.xlm:-</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
  android:layout_width="match_parent"
  android:layout_height="match_parent"
  android:orientation="vertical" &gt;

&lt;TextView
    android:id="@+id/textview"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;
&lt;/TextView&gt;
</code></pre>

<p></p>

<p><strong>I hope this code will work perfectly</strong></p>
