<p>You can use <a href="http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/StringUtils.html#indexOfIgnoreCase%28java.lang.String,%20java.lang.String,%20int%29" rel="nofollow">StringUtils</a> class of Apache commons libraries or <a href="http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/StringUtils.html#indexOfIgnoreCase%28java.lang.String,%20java.lang.String%29" rel="nofollow">this</a> If you don't want to download the library look at the <a href="http://www.jarvana.com/jarvana/view/com/alibaba/citrus/tool/antx-autoconfig/1.0.10/antx-autoconfig-1.0.10-sources.jar!/org/apache/commons/lang/StringUtils.java?format=ok" rel="nofollow">source code</a> for logic to create the method. The <a href="http://stackoverflow.com/questions/8660151/how-do-i-use-stringutils-in-java">stackoverflow</a> link for using StringUtils</p>

<p>If you want to find the index of String from array of strings then there is another library <a href="http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/ArrayUtils.html" rel="nofollow">ArrayUtils</a> which has a method <a href="http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/ArrayUtils.html" rel="nofollow">indexOf</a></p>

<p>here's the implementation of indexOf</p>

<pre><code> public static int indexOf(Object[] array, Object objectToFind, int startIndex) {
        if (array == null) {
            return INDEX_NOT_FOUND;
        }
        if (startIndex &lt; 0) {
            startIndex = 0;
        }
        if (objectToFind == null) {
            for (int i = startIndex; i &lt; array.length; i++) {
                if (array[i] == null) {
                    return i;
                }
            }
        } else {
            for (int i = startIndex; i &lt; array.length; i++) {
                if (objectToFind.equals(array[i])) {
                    return i;
                }
            }
        }
        return INDEX_NOT_FOUND;
    }
</code></pre>

<p>since you can see that it uses .equals() I suggest you to </p>

<p>1) create a custom string class</p>

<p>2) add it to the array</p>

<p>3) override the .equals method like this</p>

<pre><code>class StringCustom
{
String string;
//implement getters and setters
public String equals(Object o)
{
return this.getString().equalsIgnoreCase(((String)o).getString());
}
}
</code></pre>
