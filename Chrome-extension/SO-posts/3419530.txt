<p>What are you trying to accomplish? Are you trying to retrieve a XML feed over HTTP?</p>

<p>In that case I suggest you to take a look at <a href="http://hc.apache.org/httpcomponents-client-4.0.1/" rel="nofollow">Apache HttpClient</a>. It offers similair functionality as cURL but in a pure Java way (cURL is a native C application). HttpClient supports multiple <a href="http://hc.apache.org/httpclient-3.x/authentication.html#Authentication_Schemes" rel="nofollow">authentication mechanisms</a>. For example you can submit a username/password using Basic Authentication like this: </p>

<pre><code>public static void main(String[] args) throws Exception {
    DefaultHttpClient httpclient = new DefaultHttpClient();

    httpclient.getCredentialsProvider().setCredentials(
            new AuthScope("localhost", 443), 
            new UsernamePasswordCredentials("username", "password"));

    HttpGet httpget = new HttpGet("https://localhost/protected");

    System.out.println("executing request" + httpget.getRequestLine());
    HttpResponse response = httpclient.execute(httpget);
    HttpEntity entity = response.getEntity();

    System.out.println("----------------------------------------");
    System.out.println(response.getStatusLine());
    if (entity != null) {
        System.out.println("Response content length: " + entity.getContentLength());
    }
    if (entity != null) {
        entity.consumeContent();
    }

    // When HttpClient instance is no longer needed, 
    // shut down the connection manager to ensure
    // immediate deallocation of all system resources
    httpclient.getConnectionManager().shutdown();        
}
</code></pre>

<p>Check the website for <a href="http://hc.apache.org/httpcomponents-client-4.0.1/examples.html" rel="nofollow">more examples</a>.</p>
