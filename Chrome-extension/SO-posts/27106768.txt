<p>There are a few examples and tutorials on the web, but be careful. <code>Sensor.TYPE_ORIENTATION</code> became deprecated. You need to calculate rotations by listening to these two sensors <code>Sensor.TYPE_ACCELEROMETER</code> and <code>Sensor.TYPE_MAGNETIC_FIELD</code>. </p>

<p>The tricky part after registering to receive notifications from these sensors, is to figure out how to handle the data received from them. The key part is the following:</p>

<pre><code>public void onSensorChanged(SensorEvent event) {
    if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER)
        mGravity = event.values;
    if (event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD)
        mGeomagnetic = event.values;
    if (mGravity != null &amp;&amp; mGeomagnetic != null) {
       float R[] = new float[9];
       float I[] = new float[9];
       boolean success = SensorManager.getRotationMatrix(R, I, mGravity, mGeomagnetic);
       if (success) {
         float orientation[] = new float[3];
         SensorManager.getOrientation(R, orientation);
         azimut = orientation[0]; // orientation contains: azimut, pitch and roll
         pitch = orientation[1];
         roll = orientation[2];
       }
    }
}
</code></pre>

<p>This is how you should be calculating the azimuth, pitch, roll values of your device in the <code>onSensorChanged(SensorEvent event)</code> callback. Keep in mind that "All three angles above are in radians and positive in the counter-clockwise direction". You can simply convert them to degrees with <code>Math.toDegrees()</code></p>

<p>As Louis CAD pointed out in the comments, it is a good idea to move the initialization of the I, R and orientation arrays out of the onSensorChanged callback, since it is called frequently. Creating and then leaving them behind for the GC is bad for your apps performance. I left it there for the sake of simplicity.</p>

<p>Based on how your device is rotated you might need to remap the coordinates to get the result you want. You can read more about <code>remapCoordinateSystem</code> and also about <code>getRotationMatrix</code> and <code>getOrientation</code> in the <a href="http://developer.android.com/reference/android/hardware/SensorManager.html" rel="nofollow">android documentation</a> </p>

<p>Example code:
<a href="http://www.codingforandroid.com/2011/01/using-orientation-sensors-simple.html" rel="nofollow">http://www.codingforandroid.com/2011/01/using-orientation-sensors-simple.html</a></p>
