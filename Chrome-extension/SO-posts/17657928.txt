<p>Determine the device width and height and scale it:</p>

<pre><code>int deviceWidth = getWindowManager().getDefaultDisplay()
.getWidth();
int deviceHeight = getWindowManager().getDefaultDisplay()
.getHeight();
</code></pre>

<p>So in complete you can use the following ready-to-use snippet taken from <a href="http://androidsnippets.wordpress.com/2012/10/25/how-to-scale-a-bitmap-as-per-device-width-and-height/" rel="nofollow">here</a>:</p>

<pre><code>public Bitmap scaleToActualAspectRatio(Bitmap bitmap) {
if (bitmap != null) {
boolean flag = true;

int deviceWidth = getWindowManager().getDefaultDisplay()
.getWidth();
int deviceHeight = getWindowManager().getDefaultDisplay()
.getHeight();

int bitmapHeight = bitmap.getHeight();
int bitmapWidth = bitmap.getWidth();

if (bitmapWidth &gt; deviceWidth) {
flag = false;

// scale According to WIDTH
int scaledWidth = deviceWidth;
int scaledHeight = (scaledWidth * bitmapHeight) / bitmapWidth;

try {
if (scaledHeight &gt; deviceHeight)
  scaledHeight = deviceHeight;
  bitmap = Bitmap.createScaledBitmap(bitmap, scaledWidth,
  scaledHeight, true);
 } catch (Exception e) {
  e.printStackTrace();
 }
}

if (flag) {
  if (bitmapHeight &gt; deviceHeight) {
    // scale According to HEIGHT
    int scaledHeight = deviceHeight;
    int scaledWidth = (scaledHeight * bitmapWidth) / bitmapHeight;

    try {
      if (scaledWidth &gt; deviceWidth)
       scaledWidth = deviceWidth;
      bitmap = Bitmap.createScaledBitmap(bitmap, scaledWidth,
      scaledHeight, true);
     } catch (Exception e) {
      e.printStackTrace();
     }
    }
   }
  }
 return bitmap;
}
</code></pre>

<p>So finaly use:</p>

<pre><code> myCanvas.drawBitmap(scaleToActualAspectRatio(myBitmap), X, Y, null)
</code></pre>
