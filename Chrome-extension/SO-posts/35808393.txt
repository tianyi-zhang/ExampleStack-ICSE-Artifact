<p>It's an android framework bug. <a href="https://code.google.com/p/android/issues/detail?id=34731" rel="nofollow">https://code.google.com/p/android/issues/detail?id=34731</a>
It hasn't been fixed yet, even in support library.</p>

<p>Here is the fix:</p>

<pre><code>public static void fixInputMethodManagerLeak(Context destContext) {
    if (destContext == null) {
        return;
    }

    InputMethodManager imm = (InputMethodManager) destContext.getSystemService(Context.INPUT_METHOD_SERVICE);
    if (imm == null) {
        return;
    }

    String[] arr = new String[]{"mCurRootView", "mServedView", "mNextServedView"};
    Field f = null;
    Object obj_get = null;
    for (int i = 0; i &lt; arr.length; i++) {
        String param = arr[i];
        try {
            f = imm.getClass().getDeclaredField(param);
            if (!f.isAccessible()) {
                f.setAccessible(true);
            }
            obj_get = f.get(imm);
            if (obj_get != null &amp;&amp; obj_get instanceof View) {
                View v_get = (View) obj_get;
                if (v_get.getContext() == destContext) {  // referenced context is held InputMethodManager want to destroy targets
                    f.set(imm, null);  // set empty, destroyed node path to gc
                } else {
                    // Not want to destroy the target, that is, again into another interface, do not deal with, to avoid affecting the original logic, there is nothing further for the cycle
                    Log.e(TAG, "fixInputMethodManagerLeak break, context is not suitable, get_context=" + v_get.getContext() + " dest_context=" + destContext);
                    break;
                }
            }
        } catch (Throwable t) {
            t.printStackTrace();
        }
    }
}
</code></pre>

<p>Call it like this:</p>

<pre><code>@Override
protected void onDestroy() {
    super.onDestroy();
    //if you get memory leak on configuration change too, remove the if clause.
    if (isFinishing()) {
        fixInputMethodManagerLeak(this);
    }
}
</code></pre>

<p>Take a look at <a href="http://stackoverflow.com/questions/5038158/main-activity-is-not-garbage-collected-after-destruction-because-it-is-reference">this question</a> too. </p>
