<p>You don't need neither onSaveInstanceState nor onRestoreInstanceState.
Just call finish in the onClick listener for the button in the second Activity:</p>

<pre><code>import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;

public class IntentActivity extends Activity {
    EditText ed1, ed2;
    float ed1_val, ed2_val;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // TODO Auto-generated method stub
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        ed1 = (EditText) findViewById(R.id.editText1);
        ed2 = (EditText) findViewById(R.id.editText2);
        Button next = (Button) findViewById(R.id.button1);

        next.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
                Intent intent = new Intent(getApplicationContext(),
                        Second_activity.class);
                startActivity(intent);
            }
        });
    }

}
</code></pre>

<p>This is the second one:</p>

<pre><code>import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class Second_activity extends Activity {
    // TODO Auto-generated method stub
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.second_xml);

        Button back = (Button) findViewById(R.id.button1);
        back.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
                finish();
            }
        });
    }
}
</code></pre>

<p>That way you are resuming the previous Activity instead of starting new one.
If you need to pass data between them you could use <em>startActivityForResult</em> / <em>onActivityResult</em> and <em>setResult</em> methods:</p>

<pre><code>import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;

public class IntentActivity extends Activity {
    private static final int GET_VALUES_REQUEST_ID = 1;
    public static final String FIRST_VALUE_ID = "first_value_id";
    public static final String SECOND_VALUE_ID = "second_value_id";
    private static final float DEFAULT_VALUE = 0;

    EditText ed1, ed2;
    float ed1_val, ed2_val;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // TODO Auto-generated method stub
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        ed1 = (EditText) findViewById(R.id.editText1);
        ed2 = (EditText) findViewById(R.id.editText2);
        Button next = (Button) findViewById(R.id.button1);

        next.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
                Intent intent = new Intent(getApplicationContext(),
                        Second_activity.class);
                startActivityForResult(intent, GET_VALUES_REQUEST_ID);
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        switch (requestCode) {
        case GET_VALUES_REQUEST_ID: {
            if (Activity.RESULT_OK == resultCode) {
                ed1_val = data.getFloatExtra(FIRST_VALUE_ID, DEFAULT_VALUE);
                ed2_val = data.getFloatExtra(SECOND_VALUE_ID, DEFAULT_VALUE);
                setValues();
            }
            break;
        }
        }
        super.onActivityResult(requestCode, resultCode, data);
    }


    protected void setValues() {
        ed1.setText(Float.toString(ed1_val));
        ed2.setText(Float.toString(ed2_val));
    }

}
</code></pre>

<p>The second activity could be something like that:</p>

<pre><code>import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class Second_activity extends Activity {
    // TODO Auto-generated method stub
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.second_xml);

        Button back = (Button) findViewById(R.id.button1);
        back.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
                Intent data = new Intent();
                data.putExtra(IntentActivity.FIRST_VALUE_ID, 324f);
                data.putExtra(IntentActivity.SECOND_VALUE_ID, 32234f);
                setResult(Activity.RESULT_OK, data);
                finish();
            }
        });
    }
}
</code></pre>

<p>This is a very basic example so I just hardcoded some return values - please implement something more meaningful.
Beside that you could avoid using underscores as word separator in class names - camel case is much more accepted as name convention.</p>
