<p>You might try using this method:</p>

<pre><code>UIManager.put ( "TabbedPane.tabInsets", new Insets ( 0, 0, 0, 0 ) );
</code></pre>

<p>to remove tab insets and this one:</p>

<pre><code>UIManager.put ( "TabbedPane.selectedTabPadInsets", new Insets ( 0, 0, 0, 0 ) );
</code></pre>

<p>to remove selected tab additional insets.</p>

<p>There is also a few other options that are <strong>usually</strong> taken from UI defaults:</p>

<pre><code>    highlight = UIManager.getColor("TabbedPane.light");
    lightHighlight = UIManager.getColor("TabbedPane.highlight");
    shadow = UIManager.getColor("TabbedPane.shadow");
    darkShadow = UIManager.getColor("TabbedPane.darkShadow");
    focus = UIManager.getColor("TabbedPane.focus");
    selectedColor = UIManager.getColor("TabbedPane.selected");
    textIconGap = UIManager.getInt("TabbedPane.textIconGap");
    tabInsets = UIManager.getInsets("TabbedPane.tabInsets");
    selectedTabPadInsets = UIManager.getInsets("TabbedPane.selectedTabPadInsets");
    tabAreaInsets = UIManager.getInsets("TabbedPane.tabAreaInsets");
    tabsOverlapBorder = UIManager.getBoolean("TabbedPane.tabsOverlapBorder");
    contentBorderInsets = UIManager.getInsets("TabbedPane.contentBorderInsets");
    tabRunOverlay = UIManager.getInt("TabbedPane.tabRunOverlay");
    tabsOpaque = UIManager.getBoolean("TabbedPane.tabsOpaque");
    contentOpaque = UIManager.getBoolean("TabbedPane.contentOpaque");
    opaque = UIManager.get("TabbedPane.opaque");
</code></pre>

<p>You might want to modify some of them aswell to achieve what you need...</p>
