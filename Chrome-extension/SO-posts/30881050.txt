<p>Okay, I usually use this helper class to save my media files:</p>

<pre><code>/**
 * This class create, name given the timestamp and save a multimedia file in the Environment.DIRECTORY_PICTURES folder
 * This location works best if you want the created images to be shared
 * between applications and persist after your app has been uninstalled.
 */
public class FileManager {

    public static final int MEDIA_TYPE_IMAGE = 1;
    public static final int MEDIA_TYPE_VIDEO = 2;


    public static Uri getOutputMediaFileUri(int type){
        return Uri.fromFile(getOutputMediaFile(type));
    }

    /** Create a File for saving an image or video */
   public static File getOutputMediaFile(int type){


        File mediaStorageDir = new File(Environment.getExternalStoragePublicDirectory(
                Environment.DIRECTORY_PICTURES), VideoRecordingActivity.TAG);



        if (! mediaStorageDir.exists()){
            if (! mediaStorageDir.mkdirs()){
                Log.d("MyCameraApp", "failed to create directory");
                return null;
            }
        }

        // Create a media file name
        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
        File mediaFile;
        if (type == MEDIA_TYPE_IMAGE){
            mediaFile = new File(mediaStorageDir.getPath() + File.separator +
                    "IMG_"+ timeStamp + ".jpg");
        } else if(type == MEDIA_TYPE_VIDEO) {
            mediaFile = new File(mediaStorageDir.getPath() + File.separator +
                    "VID_"+ timeStamp + ".mp4");
        } else {
            return null;
        }

        return mediaFile;
    }
}
</code></pre>

<p>Then to use it I will just do:</p>

<pre><code>File currentFile= FileManager.getOutputMediaFile(2);
</code></pre>

<p>Note: The media file will be created in sdcard/Pictures/AppName but to be able to see them with your file browser make sure to update your <code>mediaScanner</code>:</p>

<pre><code>MediaScannerConnection.scanFile(getApplicationContext(), new String[]{file.getPath()}, null,
    new MediaScannerConnection.OnScanCompletedListener() {
        @Override
        public void onScanCompleted(String path, final Uri fileUri) {           
            //Eventually some UI updates
        }
    });
</code></pre>
