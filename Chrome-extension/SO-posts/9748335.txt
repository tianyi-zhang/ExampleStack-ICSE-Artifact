<p>Please look at the following code,</p>

<pre><code>public class select_Gallery_image extends Activity{

    private static final int SELECT_PICTURE = 1;
    protected String _path;
    protected boolean _taken;   
    protected static final String PHOTO_TAKEN   = "photo_taken";
    ProgressDialog PD1;
    @Override
    protected void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);

        Intent intent = new Intent(Intent.ACTION_PICK);
        intent.setType("image/*");
        //intent.setAction(Intent.ACTION_GET_CONTENT);
        startActivityForResult(intent, SELECT_PICTURE);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) 
    {
        if (resultCode == RESULT_OK)
        {
            if (requestCode == SELECT_PICTURE) 
            {
                settings.bitmap=null;
                Uri selectedImageUri = data.getData();
                settings.selectedImagePath = getPath(selectedImageUri);
                File filenew = new File(settings.selectedImagePath);
                int file_size = Integer.parseInt(String.valueOf(filenew.length()/1024));
                if(file_size&lt;= 10000){
                PD1 = ProgressDialog.show(select_Gallery_image.this,"","Loading");
                new Thread(new Runnable() {

                    public void run() {
                        Looper.prepare();
                        settings.bitmap = decodeFile(settings.selectedImagePath);
                        imagehandler.sendEmptyMessage(0);

                    }
                }).start();
                }
                else{
                    AlertDialog.Builder alertbox = new AlertDialog.Builder(select_Gallery_image.this);
                    alertbox.setMessage("Take Image Size Less than 10 MB");
                    alertbox.setNeutralButton("Ok", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface arg0, int arg1) {
                        finish();
                         }
                    });
                    alertbox.show();
                }
             }
        }
    }
    private Handler imagehandler = new Handler(){
          public void handleMessage(Message msg){
             PD1.dismiss();
             settings.img_logo.setImageBitmap(settings.bitmap); 
             settings.img_logo.setBackgroundColor(Color.DKGRAY);
              finish(); 
          }
    };


    public String getPath(Uri uri) 
    {
        String[] projection = { MediaStore.Images.Media.DATA };
      Cursor cursor = managedQuery(uri, projection, null, null, null);
      int column_index = cursor.getColumnIndex(MediaStore.Images.Media.DATA);
      cursor.moveToFirst();
      return cursor.getString(column_index);

    }

     static Bitmap decodeFile(String str){
            try {
                //decode image size
                BitmapFactory.Options o = new BitmapFactory.Options();
                o.inJustDecodeBounds = true;
                BitmapFactory.decodeStream(new FileInputStream(str),null,o);

                //Find the correct scale value. It should be the power of 2.
                final int REQUIRED_SIZE=70;
                int width_tmp=o.outWidth, height_tmp=o.outHeight;
                int scale=1;
                while(true){
                    if(width_tmp/2&lt;REQUIRED_SIZE || height_tmp/2&lt;REQUIRED_SIZE)
                        break;
                    width_tmp/=2;
                    height_tmp/=2;
                    scale++;
                }

                //decode with inSampleSize
                BitmapFactory.Options o2 = new BitmapFactory.Options();
                o2.inSampleSize=scale;
                return BitmapFactory.decodeStream(new FileInputStream(str), null, o2);
            } catch (FileNotFoundException e) {}
            return null;
        }

     @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
         if(keyCode == KeyEvent.KEYCODE_BACK){
             finish();
         }
        return super.onKeyDown(keyCode, event);
    }
}
</code></pre>
