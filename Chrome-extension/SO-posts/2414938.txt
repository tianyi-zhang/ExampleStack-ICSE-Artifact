<p>Firstly, Strings can't be modified in Java so you'll need to create new versions with the correct modified values. There are two ways to approach this problem:</p>

<ol>
<li><p>Dynamically hard-code all the replacements like other posters have suggested. This isn't scalable with large strings or a large number of replacements; or</p></li>
<li><p>You loop through the String looking for potential variables. If they're in your replacement <code>Map</code> then replace them. This is very similar to <a href="http://stackoverflow.com/questions/2368802/how-to-create-dynamic-template-string/2368810#2368810">How to create dynamic Template String</a>.</p></li>
</ol>

<p>The code for (2) looks something like this:</p>

<pre><code>public static String replaceAll(String text, Map&lt;String, String&gt; params) {
  Pattern p = Pattern.compile("&amp;(\\w+)");
  Matcher m = p.matcher(text);
  boolean result = m.find();
  if (result) {
    StringBuffer sb = new StringBuffer();
    do {
      String replacement = params.get(m.group(1));
      if (replacement == null) {
        replacement = m.group();
      }
      m.appendReplacement(sb, replacement);
      result = m.find();
    } while (result);
    m.appendTail(sb);
    return sb.toString();
  }
  return text;
}
</code></pre>
