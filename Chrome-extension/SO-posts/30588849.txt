<p>You can use Custom adapter for this like</p>

<p><div class="snippet" data-lang="js" data-hide="false">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>public class CustomAdapter extends BaseAdapter implements Filterable {


private Context context;


private List&lt;String&gt; originalData;
private List&lt;String&gt; filteredData;

private ItemFilter mFilter = new ItemFilter();

public CustomAdapter(List&lt;String&gt; itemList, Context ctx) {

    originalData = new ArrayList&lt;String&gt;();
    filteredData = new ArrayList&lt;String&gt;();

    filteredData = itemList;
    originalData = itemList;

    context = ctx;
}

@Override
public int getCount() {
    return filteredData.size();
}

@Override
public Object getItem(int position) {
    return filteredData.get(position);
}

@Override
public long getItemId(int position) {
    return position;
}

@Override
public View getView(final int position, View convertView, ViewGroup parent) {

    if (convertView == null) {
        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        convertView = inflater.inflate(android.R.layout.simple_dropdown_item_1line, null);
    }

    final TextView text = (TextView) convertView.findViewById(android.R.id.textView);

    text.setText(filteredData.get(position));

    return convertView;
}

public Filter getFilter() {
    return mFilter;
}

private class ItemFilter extends Filter {
    @Override
    protected FilterResults performFiltering(CharSequence constraint) {

        String filterString = constraint.toString().toLowerCase();

        Filter.FilterResults results = new FilterResults();

        final List&lt;String&gt; list = originalData;

        int count = list.size();
        final ArrayList&lt;String&gt; nlist = new ArrayList&lt;String&gt;(count);

        String filterableString;

        for (int i = 0; i &lt; count; i++) {

            filterableString = list.get(i);

            if (filterableString.toLowerCase().contains(filterString)) {
                nlist.add(filterableString);
            }
        }

        results.values = nlist;
        results.count = nlist.size();

        return results;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected void publishResults(CharSequence constraint, FilterResults results) {
        filteredData = (ArrayList&lt;String&gt;) results.values;
        notifyDataSetChanged();
    }

}

}</code></pre>
</div>
</div>
</p>
