<p>You could use <a href="https://github.com/timmolter/XChart" rel="nofollow">XChart</a> for this, as exporting <code>Charts</code> in high-res at a certain DPI is a new feature since <a href="http://xeiam.com/xchart_changelog.jsp" rel="nofollow">version 2.2.0</a>. The code would look something like this:</p>

<pre><code>double[] xData = new double[] { 0.0, 1.0, 2.0 };
double[] yData = new double[] { 2.0, 1.0, 0.0 };

// Create Chart
Chart chart = QuickChart.getChart("Sample Chart", "X", "Y", "y(x)", xData, yData);

// Show it
new SwingWrapper(chart).displayChart();

// Save it
BitmapEncoder.savePNG(chart, "./Sample_Chart.png"); // default 72 DPI
BitmapEncoder.savePNGWithDPI(chart, "./Sample_Chart_300_DPI.png", 300);
</code></pre>

<p>Disclaimer: I'm the lead developer of XChart. I recently faced the exact same problem as you. I needed charts at 300 DPI for a scientific publication. Feedback is welcome!</p>
