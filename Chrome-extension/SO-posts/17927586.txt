<p>ok, the issue was that jacoco only dumps the file contents when the jvm shuts down (it registers a hook for it), and apparently arquillian (at least the version im using?) doesnt shut the jvm down as nicely.</p>

<p>i ended up adding the following method to my test classes:</p>

<pre><code>@After
public void writeOutJacocoData() {
    try {
        Class rtClass = Thread.currentThread().getContextClassLoader().getParent().loadClass("org.jacoco.agent.rt.RT");
        Object jacocoAgent = rtClass.getMethod("getAgent", null).invoke(null);
        Method dumpMethod = jacocoAgent.getClass().getMethod("dump", boolean.class);
        dumpMethod.invoke(jacocoAgent, false);
    } catch(ClassNotFoundException e) {
        logger.debug("no jacoco agent attached to this jvm");
    } catch (Exception e) {
        logger.error("while trying to dump jacoco data",e);
    }
}
</code></pre>

<p>its ugly and brutish (and uses jacoco classes which they dont publish in any publically-available jacoco artifacts, hence the reflection) but works.</p>
