<p>Change your Adapter like this..</p>

<pre><code>public class SearchableAdapter extends BaseAdapter implements Filterable,
    OnCheckedChangeListener {

public SparseBooleanArray mCheckStates;
private List&lt;ProfileBean&gt; originalData = null;
private List&lt;ProfileBean&gt; filteredData = null;
private LayoutInflater mInflater;
private ItemFilter mFilter = new ItemFilter();

public SearchableAdapter(Context context, List&lt;ProfileBean&gt; data) {
    // mCheckStates = new SparseBooleanArray(filteredData.size());
    mCheckStates = new SparseBooleanArray(data.size());
    this.filteredData = data;
    this.originalData = data;
    mInflater = LayoutInflater.from(context);
}

public int getCount() {
    return filteredData.size();
}

public Object getItem(int position) {
    return filteredData.get(position);
}

public long getItemId(int position) {
    return position;
}

public View getView(int position, View convertView, ViewGroup parent) {

    ViewHolder holder;
    if (convertView == null) {
        convertView = mInflater.inflate(R.layout.row, null);

        holder = new ViewHolder();
        holder.name = (TextView) convertView.findViewById(R.id.textView1);
        holder.number = (TextView) convertView.findViewById(R.id.textView2);
        holder.chk = (CheckBox) convertView.findViewById(R.id.checkBox1);
        holder.chk.setTag(position);
        convertView.setTag(R.layout.row, holder);
    } else {
        holder = (ViewHolder) convertView.getTag(R.layout.row);
    }

    ProfileBean bean = filteredData.get(position);
    holder.name.setText(bean.getName());
    holder.number.setText(bean.getNumber());
    holder.chk.setOnCheckedChangeListener(null);
    holder.chk.setChecked(bean.isChecked);
    holder.chk.setOnCheckedChangeListener(this);
    convertView.setTag(bean);
    return convertView;
}

static class ViewHolder {
    TextView name;
    TextView number;
    CheckBox chk;
}

public void toggle(int position) {
    ProfileBean bean = filteredData.get(position);
    bean.isChecked = !bean.isChecked;
}

public android.widget.Filter getFilter() {
    return mFilter;
}

private class ItemFilter extends android.widget.Filter {

    @Override
    protected FilterResults performFiltering(CharSequence constraint) {

        String filterString = constraint.toString().toLowerCase();

        FilterResults results = new FilterResults();

        final List&lt;ProfileBean&gt; list = originalData;

        int count = list.size();
        final ArrayList&lt;ProfileBean&gt; nlist = new ArrayList&lt;ProfileBean&gt;(
                count);

        String filterableString;

        for (int i = 0; i &lt; count; i++) {

            ProfileBean bean = list.get(i);
            filterableString = bean.getName();
            if (filterableString.toLowerCase().contains(
                    filterString.toString().toLowerCase())) {
                nlist.add(bean);
            }
        }

        results.values = nlist;
        results.count = nlist.size();

        return results;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected void publishResults(CharSequence constraint,
            FilterResults results) {
        filteredData = (ArrayList&lt;ProfileBean&gt;) results.values;
        notifyDataSetChanged();
    }
}

@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
    // TODO Auto-generated method stub
    int position = (Integer) buttonView.getTag();
    ProfileBean profileBean = filteredData.get(position);
    profileBean.isChecked = isChecked;
    // mCheckStates.put((Integer) buttonView.getTag(), isChecked);

}
}
</code></pre>

<p>and your bean class like..</p>

<pre><code>public class ProfileBean {
private String name;
private String number;
public boolean isChecked;

// private boolean checked = false ;
public String getName() {
    return name;
}

public void setName(String name) {
    this.name = name;
}

public String getNumber() {
    return number;
}

public void setNumber(String number) {
    this.number = number;
}

public ProfileBean(String name, String number) {
    super();
    this.name = name;
    this.number = number;

}

}
</code></pre>

<p>And keep remaining same..try like this and let know if any problem..</p>

<p>Change your onBkpress method like this..</p>

<pre><code>@Override
public void onBackPressed() {
    phno0.clear();
    for (ProfileBean bean : list) {
        if (bean.isChecked) {
            phno0.add(bean.getNumber());
        } else {
            System.out.println("..Not Checked......"
                    + list.get(i).getNumber().toString());
        }
    }

    Intent returnIntent = new Intent();
    returnIntent.putStringArrayListExtra("name", phno0);
    setResult(RESULT_OK, returnIntent);

    finish();
}
</code></pre>
