<p>For what concerns best practices I think it's the most correct and easier for you if you create your own custom <code>DatePicker</code> by creating your own layout, so I suggest you take a look at its source code just for reference:</p>

<p><a href="http://source.android.com/source/downloading.html" rel="nofollow">Android Source Code</a></p>

<p>or </p>

<p><a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/2.2.2_r1/android/widget/DatePicker.java" rel="nofollow">Here</a></p>

<p>That's the fancy way. The ugly way, you could do this:</p>

<p><strong>Android Version &lt; 3.0</strong></p>

<pre><code>package my.pkg;
...
class MyDatePicker extends DatePicker {

    public MyDatePicker(Context context, AttributeSet attrs) {
        super(context, attrs);
        Field[] fields = DatePicker.class.getDeclaredFields();
        try {
            for (Field field : fields) {
                field.setAccessible(true);
                if (TextUtils.equals(field.getName(), "mMonthPicker")) {
                    Method m = field.getType().getDeclaredMethod("setRange", int.class, int.class, String[].class);
                    m.setAccessible(true);
                    String[] s = new String[] {"01","02","03","04","05","06","07","08","09","10","11","12"};
                    m.invoke(field.get(this), 1, 12, s);
                    break;
                }
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }

}
</code></pre>

<p><strong>Android Version >= 3.0 (only the constructor)</strong></p>

<pre><code>public MyDatePicker(Context context, AttributeSet attrs) {
    super(context, attrs);
    Field[] fields = DatePicker.class.getDeclaredFields();
    try {
        String[] s = new String[] {"01","02","03","04","05","06","07","08","09","10","11","12"};
        for (Field field : fields) {
            field.setAccessible(true);
            if (TextUtils.equals(field.getName(), "mMonthSpinner")) {
                NumberPicker monthPicker = (NumberPicker) field.get(this);
                monthPicker.setDisplayedValues(s);
            } 
            if (TextUtils.equals(field.getName(), "mShortMonths")) {
                field.set(this, s);
            }
        }
    }
    catch (Exception e) {
        System.out.println(e.getMessage());
        e.printStackTrace();
    }
}
</code></pre>

<p>Then the boilerplate xml:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" &gt;

    &lt;my.pkg.MyDatePicker
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p><img src="http://i.stack.imgur.com/JLVZ8.png" alt="enter image description here"></p>
