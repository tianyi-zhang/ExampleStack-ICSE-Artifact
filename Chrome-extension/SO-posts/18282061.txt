<p>You want to use an AsyncTask for anything requiring a network connection. You can setup your Async as follows: (This takes a String as a parameter and returns an InputStream)    </p>

<pre><code>public class OpenHttpConnection extends AsyncTask&lt;String, Void, InputStream&gt; {

    @Override
    protected String doInBackground(String... params) {
      String urlstring = params[0];
      InputStream in = null;
      int response = 01;

      URL url = new URL(urlString);
      URLConnection conn = url.openConnection();

      if (!(conn instanceof HttpURLConnection))
        throw new IOException("Not an HTTP connection");
      try{
        HttpURLConnection httpConn = (HttpURLConnection) conn;
        httpConn.setAllowUserInteraction(false);
        httpConn.setInstanceFollowRedirects(true);
        httpConn.setRequestMethod("Get");
        httpConn.connect();
        response = httpConn.getResponseCode();
        if (response == HttpURLConnection.HTTP_OK){
          in = httpConn.getInputStream();
        }
      }
      catch (Exception ex)
      {
        throw new IOException("Error connecting");
      }
      return in;

    }

}
</code></pre>

<p>Then you can call/run you Async like this.</p>

<pre><code>OpenHttpConnection connection = new OpenHttpConnection().execute("http://YourURL.com");
InputStream is = connection.get();
</code></pre>
