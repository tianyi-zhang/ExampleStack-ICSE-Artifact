<pre><code>You can use a AutoCompletetextView for showing the place names. I did the same below.

class GetPlaces extends AsyncTask&lt;String, Void, ArrayList&lt;String&gt;&gt; {

    @Override
    // three dots is java for an array of strings
    protected ArrayList&lt;String&gt; doInBackground(String... args) {


        ArrayList&lt;String&gt; predictionsArr = new ArrayList&lt;String&gt;();

        try {

            URL googlePlaces = new URL(
                    // URLEncoder.encode(url,"UTF-8");
                    "https://maps.googleapis.com/maps/api/place/autocomplete/json?input="
                            + URLEncoder.encode(args[0].toString(), "UTF-8")
                            + "&amp;types=geocode&amp;language=en&amp;sensor=true&amp;key="+Constant.GOOGLE_API_KEY);
            URLConnection tc = googlePlaces.openConnection();
            BufferedReader in = new BufferedReader(new InputStreamReader(
                    tc.getInputStream()));

            String line;
            StringBuffer sb = new StringBuffer();
            // take Google's legible JSON and turn it into one big string.
            while ((line = in.readLine()) != null) {
                sb.append(line);
            }

            // turn that string into a JSON object
            JSONObject predictions = new JSONObject(sb.toString());
            // now get the JSON array that's inside that object
            JSONArray ja = new JSONArray(
                    predictions.getString("predictions"));

            for (int i = 0; i &lt; ja.length(); i++) {
                JSONObject jo = (JSONObject) ja.get(i);
                // add each entry to our array
                predictionsArr.add(jo.getString("description"));
            }
        } catch (IOException e) {

            Log.e("YourApp", "GetPlaces : doInBackground", e);

        } catch (JSONException e) {

            Log.e("YourApp", "GetPlaces : doInBackground", e);

        }

        return predictionsArr;

    }



    @Override
    protected void onPostExecute(ArrayList&lt;String&gt; result) {

        // update the adapter
        adapter = new ArrayAdapter&lt;String&gt;(getActivity(),
                android.R.layout.simple_list_item_1);
        adapter.setNotifyOnChange(true);
        // attach the adapter to auto complete textview
        et_destination.setAdapter(adapter);


    }

}
</code></pre>
