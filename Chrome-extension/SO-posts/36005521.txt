<p>I had a widget implementation in my project. I have modified the below code so that data in widget can be changed from one of my Activity in application. Only showing the essential code for your specific use case.  <br> <br>Here I am having a button with text in my widget. Through login button click in my Activity , I am modifying the button text in my widget<br><br>
Below is my <code>AppWidgetProvider.java</code> class</p>

<pre><code>public class AppWidgetTrackAsset extends AppWidgetProvider{
      @Override
      public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
        // Perform this loop procedure for each App Widget that belongs to this provider
        final int N = appWidgetIds.length;

        for (int i=0; i&lt;N; i++) {
            int appWidgetId = appWidgetIds[i];
            // Create an Intent to launch Activity
            Intent intent = new Intent(context, WidgetAlertActivity.class);
            PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);
            // Get the layout for the App Widget and attach an on-click listener
            // to the button
            RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.app_widget_track_asset);
            views.setOnClickPendingIntent(R.id.sosButton, pendingIntent);
            // Tell the AppWidgetManager to perform an update on the current app widget
            appWidgetManager.updateAppWidget(appWidgetId, views);
        }
    }
    @Override
    public void onReceive(Context context, Intent intent) {
        super.onReceive(context, intent);
        Log.v(Constants.WIDGET_LOG, "onReceive called with " + intent.getAction());
        if (intent.getAction().equals("update_widget")) {
            // widget update started
            RemoteViews remoteViews = new RemoteViews(context.getPackageName(),
                    R.layout.app_widget_track_asset);
            // Update text , images etc
            remoteViews.setTextViewText(R.id.sosButton, "My updated text");
            // Trigger widget layout update
            AppWidgetManager.getInstance(context).updateAppWidget(
                    new ComponentName(context, AppWidgetTrackAsset.class), remoteViews);
        }
    }
    @Override
    public void onEnabled(Context context) {
        // Enter relevant functionality for when the first widget is created
    }

    @Override
    public void onDisabled(Context context) {
        // Enter relevant functionality for when the last widget is disabled
    }
}
</code></pre>

<p><br>Below is my Activity where I am updating the widget button text on click of my login button
<br> <code>LoginActivity.java</code> <br></p>

<pre><code>public class LoginActivity extends AppCompatActivity implements View.OnClickListener{

  Button loginButton;
  @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        loginButton=(Button)findViewById(R.id.loginButton);
        loginButton.setOnClickListener(this);

    }
    @Override
    public void onClick(View v) {
        if(v.getId() == R.id.loginButton){
            updateWidget();
        }
    }
    private void updateWidget(){
        try {
            Intent updateWidget = new Intent(this, AppWidgetTrackAsset.class);
            updateWidget.setAction("update_widget");
            PendingIntent pending = PendingIntent.getBroadcast(this, 0, updateWidget, PendingIntent.FLAG_CANCEL_CURRENT);
            pending.send();
        } catch (PendingIntent.CanceledException e) {
            Log.e(Constants.UI_LOG,"Error widgetTrial()="+e.toString());
        }
    }
}
</code></pre>

<p><br> Layout for app widget goes like this<br></p>

<p><code>app_widget_track_asset.xml</code><br></p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/widgetbackground"
    android:padding="@dimen/widget_margin"&gt;
    &lt;Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/sosButton"
        android:text="SOS"
        android:textSize="20sp"
        android:layout_centerHorizontal="true"
        android:layout_centerVertical="true"
        /&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<p>Below is the manifest file essential part for widget<br></p>

<pre><code>&lt;receiver android:name=".appwidget.AppWidgetTrackAsset"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.appwidget.action.APPWIDGET_UPDATE" /&gt;
            &lt;/intent-filter&gt;

            &lt;meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/app_widget_track_asset_info" /&gt;
        &lt;/receiver&gt;
</code></pre>
