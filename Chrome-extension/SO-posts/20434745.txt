<p>Although I do agree with Robin Green about using the API and not Jsoup in this occasion, I will provide a working solution for what you asked just to close this topic and for help on future viewers that have a problem with </p>

<ol>
<li>selector with tag that has two or more classes</li>
<li><p>Get the direct text of a  Jsoup element that contains other elements.</p>

<pre><code>public static void main(String[] args) {

    Document doc;
    try {

        // need http protocol
        doc = Jsoup.connect("https://twitter.com/ATT/").get();

        // get page title
        String title = doc.title();
        System.out.println("title : " + title);

        //select this &lt;p class="js-tweet-text tweet-text"&gt;&lt;/p&gt;
        Elements links = doc.select("p.js-tweet-text.tweet-text");  

        for (Element link : links) {
            System.out.println("\nlink : " + link.attr("p"));
             /*use ownText() instead of text() in order to grab the direct text of 
             &lt;p&gt; and not the text that belongs to &lt;p&gt;'s children*/
            System.out.println("text : " + link.ownText());
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
</code></pre></li>
</ol>
