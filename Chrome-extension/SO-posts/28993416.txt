<p>Adding the class to  move the file to inside jar/zip folder based on accepted answer.
The accepted answer didn't hold full executable code ,So i have added the class which helps to move/copy the file to jar/zip 
    package ZipReader;</p>

<pre><code>import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;

public class ZipWrite {
    public static void main(String args[]) throws IOException
    {
        File file=new File("F:/MyProjects/New folder/mysql-connector-java-5.1.18-bin.jar");
        File filetoPush=new File("F:/MyProjects/New folder/BestResponseTimeBalanceStrategy.class");
        File[] files=new File[1];
        files[0]=filetoPush;
        addFilesToExistingZip(file,files);
    }

    public static void addFilesToExistingZip(File zipFile, File[] files)
            throws IOException {
        // get a temp file
        File tempFile = File.createTempFile(zipFile.getName(), null);
        // delete it, otherwise you cannot rename your existing zip to it.
        tempFile.delete();
        boolean renameOk = zipFile.renameTo(tempFile);
        if (!renameOk) {
            throw new RuntimeException("could not rename the file "
                    + zipFile.getAbsolutePath() + " to "
                    + tempFile.getAbsolutePath());
        }
        byte[] buf = new byte[1024];
        ZipInputStream zin = new ZipInputStream(new FileInputStream(tempFile));
        ZipOutputStream out = new ZipOutputStream(new FileOutputStream(zipFile));
        ZipEntry entry = zin.getNextEntry();
        while (entry != null) {
            String name = entry.getName();

            boolean notInFiles = true;
            for (File f : files) {
                if (f.getName().equals(name)) {
                    System.out.println(name);
                    notInFiles = false;
                    break;
                }
            }

            if (notInFiles) {
                System.out.println("adding");
                // Add ZIP entry to output stream.
                out.putNextEntry(new ZipEntry(name)); // Transfer bytes from the
                                                        // ZIP file to the
                                                        // output file
                int len;
                while ((len = zin.read(buf)) &gt; 0) {
                    out.write(buf, 0, len);
                }
            }
            entry = zin.getNextEntry();
        } // Close the streams
        zin.close(); // Compress the files
        for (int i = 0; i &lt; files.length; i++) {
            FileInputStream in = new FileInputStream(files[i]);
            // Add ZIP entry to output stream.
            System.out.println("files[i].getName()--&gt;"+files[i].getName());
            out.putNextEntry(new ZipEntry("com/mysql/jdbc/util/"+files[i].getName()));
            // Transfer bytes from the file to the ZIP file
            int len;
            while ((len = in.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
            // Complete the entry
            out.closeEntry();
            in.close();
        }
        // Complete the ZIP file
        out.close();
        tempFile.delete();
    }

}
</code></pre>
