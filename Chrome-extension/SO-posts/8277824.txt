<p>Just a little warning: this code is untested, </p>

<p>Try digging into the arp cache, like so:</p>

<pre><code>public static String getIpFromArpCache(String macaddr) {
    if (ip == null)
        return null;
    BufferedReader br = null;
    try {
        br = new BufferedReader(new FileReader("/proc/net/arp"));
        String line;
        while ((line = br.readLine()) != null) {
            String[] splitted = line.split(" +");
            if (splitted != null &amp;&amp; splitted.length &gt;= 4 &amp;&amp; macaddr.equals(splitted[3])) {
                // Basic sanity check
                String ip = splitted[0];
                if (validateIp(ip)) {
                    return ip;
                } else {
                    return null;
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        try {
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    return null;
}

private static final String PATTERN = 
    "^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
    "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
    "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
    "([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";

public static boolean validateIp(final String ip){          

      Pattern pattern = Pattern.compile(PATTERN);
      Matcher matcher = pattern.matcher(ip);
      return matcher.matches();             
}
</code></pre>

<p><sub> Modified routine from <a href="http://www.flattermann.net/2011/02/android-howto-find-the-hardware-mac-address-of-a-remote-host/" rel="nofollow">here</a> </sub> </p>
