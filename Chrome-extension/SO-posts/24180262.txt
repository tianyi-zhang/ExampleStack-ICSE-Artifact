<p>File Upload Code:</p>

<pre><code>String upLoadServerUri_here = "Your url " ;



 private int serverResponseCode = 0;
     private Context mContext ;

public int upload_to_server(final String imagepath) {

        String fileName = imagepath;
        HttpURLConnection conn = null;
        DataOutputStream dos = null; 
        String lineEnd = "\r\n";
        String twoHyphens = "--";
        String boundary = "*****";
        int bytesRead, bytesAvailable, bufferSize;
        byte[] buffer;
        int maxBufferSize = 1 * 1024 * 1024 ;
        File sourceFile = new File(imagepath);

        if (!sourceFile.isFile()) {
          Log.e("uploadFile", "Source File not exist :" + imagepath);

            ((Activity) mContext).runOnUiThread(new Runnable() {
                 public void run() {

                     Toast.makeText(mContext, "Source File not found "+imagepath ,Toast.LENGTH_LONG).show();     
              }
             });

             return 0;

        }
        else
        {
             try {


                 FileInputStream fileInputStream = new FileInputStream(sourceFile);
                 URL url = new URL(upLoadServerUri_here);


                 // Open a HTTP  connection to  the URL
                 conn = (HttpURLConnection) url.openConnection();
                 conn.setDoInput(true);
                 conn.setDoOutput(true); 
                 conn.setUseCaches(false);
                 conn.setRequestMethod("POST");
                 conn.setRequestProperty("Connection", "attachment");
                 conn.setRequestProperty("ENCTYPE", "multipart/form-data");
                 conn.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary);
                 conn.setRequestProperty("uploaded_file", fileName);

                 dos = new DataOutputStream(conn.getOutputStream());

                 dos.writeBytes(twoHyphens + boundary + lineEnd);
                 dos.writeBytes("Content-Disposition: form-data; name=\"uploaded_file\";filename=\""
                                           + fileName + "\"" + lineEnd);

                 dos.writeBytes(lineEnd);
                //create a buffer of  maximum size
                 bytesAvailable = fileInputStream.available();
                 bufferSize = Math.min(bytesAvailable, maxBufferSize);
                 buffer = new byte[bufferSize];

                 // read file and write it into form...
                 bytesRead = fileInputStream.read(buffer, 0, bufferSize); 
                  while (bytesRead &gt; 0) {

                   dos.write(buffer, 0, bufferSize);
                   bytesAvailable = fileInputStream.available();
                   bufferSize = Math.min(bytesAvailable, maxBufferSize);
                   bytesRead = fileInputStream.read(buffer, 0, bufferSize);  

                  }


                 dos.writeBytes(lineEnd);
                 dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);
                 serverResponseCode = conn.getResponseCode();
                 String serverResponseMessage = conn.getResponseMessage();

                 Log.i("uploadFile", "HTTP Response is : " + serverResponseMessage + ": " + serverResponseCode);
                 Toast.makeText(mContext, "Got.."+serverResponseMessage, Toast.LENGTH_SHORT).show(); 


                 if(serverResponseCode == 200){

                 //chk it @ C:\inetpub\wwwroot\Uploads\Work
             ((Activity) mContext).runOnUiThread(new Runnable() {
                          public void run() {


                              Toast.makeText(mContext, "sucesss..", Toast.LENGTH_SHORT).show();
                          }
                      });               
                 }   

                 //close the streams //
                 fileInputStream.close();
                 dos.flush();
                 dos.close();

            } catch (MalformedURLException ex) {

              //  dialog.dismiss(); 
                ex.printStackTrace();

                ((Activity) mContext).runOnUiThread(new Runnable() {
                    public void run() {

                        Toast.makeText(mContext, "MalformedURLException", Toast.LENGTH_SHORT).show();
                    }
                });

                Log.e("Upload file to server", "error: " + ex.getMessage(), ex); 
            } catch (Exception e) {


                e.printStackTrace();

                ((Activity) mContext).runOnUiThread(new Runnable() {
                    public void run() {

                        Toast.makeText(mContext, "Got Exception : see logcat "+serverResponseCode, Toast.LENGTH_SHORT).show();
                    }
                });


                Log.e("Upload file to server Exception", "Exception : "  + e.getMessage(), e); 
            }

            return serverResponseCode;

         } 
       }
</code></pre>

<p>Where <em>imagepath = "yourselectedimage with full path";</em></p>
