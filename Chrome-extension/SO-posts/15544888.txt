<p>The problem you have with Hibernate you can't get the persistence instance by some property value, only can do it by <code>id</code>. If you want to find an instance by <code>userName</code> try this</p>

<pre><code>public static final String USER_NAME = "userName";

private List&lt;User&gt; findByProperty(String propertyName, Object value) {
    log.debug("finding User instance with property: " + propertyName    + ", value: " + value);
    try {
        String queryString = "from User as model where model." + propertyName   + "= ?";
        Query queryObject = getSession().createQuery(queryString);
        queryObject.setParameter(0, value);
        return queryObject.list();
    } catch (RuntimeException re) {
        log.error("find by property name failed", re);
        throw re;
    }
}

public List&lt;User&gt; findByUserName(Object userName) {
    return findByProperty(USER_NAME, userName);
}

@Override
public void deleteUsers(String userName) {
  try {
    List&lt;User&gt; list = findByUserName(userName);
    for (User user: list)
      getSession().delete(user);
    log.debug("delete successful");
  } catch (RuntimeException re) {
    log.error("delete failed", re);
    throw re;
  }
}  
</code></pre>

<p>that will delete all users with the given name, to delete the unique user make sure the <code>user_name</code> field has unique constraint. It could be done via annotation on the table</p>

<pre><code>@Table(name = "user", uniqueConstraints = {
        @UniqueConstraint(columnNames = "user_name")
})
</code></pre>
