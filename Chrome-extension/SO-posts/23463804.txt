<p>I have another option for you, You can validate the input in real time, with a <code>DocumentFilter</code>. With this, you validate each character input. If the character does not match what you want, it won't be allowed to be entered. </p>

<p>Here is for numbers only</p>

<pre><code>private JTextField createNumberField() {
    JTextField field = new JTextField(20);
    ((AbstractDocument) field.getDocument()).setDocumentFilter(new DocumentFilter() {
        @Override
        public void insertString(FilterBypass fb, int off, String str, AttributeSet attr)
                throws BadLocationException {
            fb.insertString(off, str.replaceAll("\\D", ""), attr);  // remove non-digits
        }

        @Override
        public void replace(FilterBypass fb, int off, int len, String str, AttributeSet attr)
                throws BadLocationException {
            fb.replace(off, len, str.replaceAll("\\D", ""), attr);  // remove non-digits
        }
    });
    return field; 
}
</code></pre>

<p>Here is for name (letters, - , and spaces) are allowed</p>

<pre><code>private JTextField createNameField() {
    JTextField field = new JTextField(20);
    ((AbstractDocument) field.getDocument()).setDocumentFilter(new DocumentFilter() {
        @Override
        public void insertString(DocumentFilter.FilterBypass fb, int off, String str, AttributeSet attr)
                throws BadLocationException {
            fb.insertString(off, str.replaceAll("[^a-zA-Z\\s\\-]", ""), attr);  // remove non-digits
        }

        @Override
        public void replace(DocumentFilter.FilterBypass fb, int off, int len, String str, AttributeSet attr)
                throws BadLocationException {
            fb.replace(off, len, str.replaceAll("[^a-zA-Z\\s\\-]", ""), attr);  // remove non-digits
        }
    });
    return field;
}
</code></pre>
