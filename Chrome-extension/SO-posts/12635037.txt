<p>Define your specific Key class like this :</p>

<pre><code>public class Key {
    final String name;
    final int number;
    public Key(String name, int number) {
        this.name = name;
        this.number = number;
    }
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + getOuterType().hashCode();
        result = prime * result
                + ((name == null) ? 0 : name.hashCode());
        result = prime * result + number;
        return result;
    }
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Key other = (Key) obj;
        if (!getOuterType().equals(other.getOuterType()))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        } else if (!name.equals(other.name))
            return false;
        if (number != other.number)
            return false;
        return true;
    }
    private Test getOuterType() {
        return Test.this;
    }
 }
</code></pre>

<p>The important point is to ensure that you respect the contract of equals and hashCode to enable your collection (any standard collection using key) to work as intended.</p>

<p>Here I simply used the generated methods produced by Eclipse but there are also many dynamic utilities (for example in Guava) helping you on this topic.</p>
