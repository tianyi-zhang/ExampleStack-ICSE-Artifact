<p>From <a href="http://blog.mark-mclaren.info/2007/02/invalid-xml-characters-when-valid-utf8_5873.html" rel="nofollow">Mark McLaren's Weblog</a></p>

<pre><code>  /**
   * This method ensures that the output String has only
   * valid XML unicode characters as specified by the
   * XML 1.0 standard. For reference, please see
   * &lt;a href="http://www.w3.org/TR/2000/REC-xml-20001006#NT-Char"&gt;the
   * standard&lt;/a&gt;. This method will return an empty
   * String if the input is null or empty.
   *
   * @param in The String whose non-valid characters we want to remove.
   * @return The in String, stripped of non-valid characters.
   */
  public static String stripNonValidXMLCharacters(String in) {
      StringBuffer out = new StringBuffer(); // Used to hold the output.
      char current; // Used to reference the current character.

      if (in == null || ("".equals(in))) return ""; // vacancy test.
      for (int i = 0; i &lt; in.length(); i++) {
          current = in.charAt(i); // NOTE: No IndexOutOfBoundsException caught here; it should not happen.
          if ((current == 0x9) ||
              (current == 0xA) ||
              (current == 0xD) ||
              ((current &gt;= 0x20) &amp;&amp; (current &lt;= 0xD7FF)) ||
              ((current &gt;= 0xE000) &amp;&amp; (current &lt;= 0xFFFD)) ||
              ((current &gt;= 0x10000) &amp;&amp; (current &lt;= 0x10FFFF)))
              out.append(current);
      }
      return out.toString();
  }   
</code></pre>
