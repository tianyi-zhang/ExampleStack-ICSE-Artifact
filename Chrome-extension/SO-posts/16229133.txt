<p>From the source code of <a href="http://www.java2s.com/Open-Source/Java-Open-Source-Library/7-JDK/lang/java/lang/String.java.htm"><code>java.lang.String</code></a><sup>1</sup>:</p>

<pre><code>public String replace(CharSequence target, CharSequence replacement) {
   return Pattern
            .compile(target.toString(), Pattern.LITERAL)
            .matcher(this )
            .replaceAll(
                    Matcher.quoteReplacement(replacement.toString()));
}
</code></pre>

<p><code>String.replace(CharSequence target, CharSequence replacement)</code> is implemented with <code>java.util.regex.Pattern</code>, therefore, it is not surprising that it is slower that <a href="http://www.docjar.org/html/api/org/apache/commons/lang/StringUtils.java.html"><code>StringUtils.replace(String text, String searchString, String replacement)</code></a><sup>2</sup>, which is implemented with <code>indexOf</code> and <code>StringBuffer</code>.</p>

<pre><code>public static String replace(String text, String searchString, String replacement) {
    return replace(text, searchString, replacement, -1);
}

public static String replace(String text, String searchString, String replacement, int max) {
    if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {
        return text;
    }
    int start = 0;
    int end = text.indexOf(searchString, start);
    if (end == -1) {
        return text;
    }
    int replLength = searchString.length();
    int increase = replacement.length() - replLength;
    increase = (increase &lt; 0 ? 0 : increase);
    increase *= (max &lt; 0 ? 16 : (max &gt; 64 ? 64 : max));
    StringBuffer buf = new StringBuffer(text.length() + increase);
    while (end != -1) {
        buf.append(text.substring(start, end)).append(replacement);
        start = end + replLength;
        if (--max == 0) {
            break;
        }
        end = text.indexOf(searchString, start);
    }
    buf.append(text.substring(start));
    return buf.toString();
}
</code></pre>

<h3>Footnote</h3>

<p><sup>1</sup> The version that I links to and copied source code from is JDK 7</p>

<p><sup>2</sup> The version that I links to and copied source code from is common-lang-2.5</p>
