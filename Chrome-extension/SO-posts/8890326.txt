<p>Problem is in your getView method, please correct this as follows:</p>

<pre><code>    public class ContactPickerActivity extends Activity {

    private ArrayList&lt;Contacts&gt; arr = new ArrayList&lt;Contacts&gt;();
    private Context context;
    private ListView list;
    private ContactArrayAdapter adapter;
    private String strName,strNumber;
    private View view;  
    public static boolean[] arrBoolean = null;

    @Override
    public void onCreate(Bundle savedInstance) {
        super.onCreate(savedInstance);
        //setContentView(R.layout.contact_picker);
        ProgressDialog pd  = new ProgressDialog(this);
        list = (ListView)findViewById(R.id.contactList);
        arr = new ArrayList&lt;Contact&gt;();
        context = ContactPickerActivity.this;
        arr =  displayContacts();
        arrBoolean=new boolean[arr.size()];
        Arrays.fill(arrBoolean, false);
        Log.i("ContactPicker", "Completed Displaying Contact list ::: " + arr.size());
        adapter = new ContactArrayAdapter(this,arr);
        list.setAdapter(adapter);
//              list.setAdapter(new ArrayAdapter&lt;String&gt;(this,
//                      android.R.layout.simple_list_item_multiple_choice, listContent));
        list.setOnItemClickListener(ContactSelectedListener);
        Log.i("Boolaean &gt;&gt;&gt; ", arrBoolean.size() + "");


    }

    private OnItemClickListener ContactSelectedListener = new OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView&lt;?&gt; parent, View arg1, int position,long arg3) {
            Log.i("ListViewTest","Item Click");
            arrBoolean[position]=!arrBoolean[position];
            adapter.notifyDataSetChanged();
        }
    };

    private ArrayList&lt;Contacts&gt; displayContacts() {

        ContentResolver cr = getContentResolver();
        Cursor cur = cr.query(ContactsContract.Contacts.CONTENT_URI,null, null, null, null);
        Contacts contact;
        if (cur.getCount() &gt; 0) {
            while (cur.moveToNext()) {
                contact = new Contacts();
                String id = cur.getString(cur.getColumnIndex(People._ID));
                String name = cur.getString(cur.getColumnIndex(People.DISPLAY_NAME));
                contact.setName(name);
                arr.add(contact);
            }
        }
        return arr;
    }
}
//********* Adapter *****

public class ContactArrayAdapter extends BaseAdapter {

//  private final List&lt;Contact&gt; list;
    private Context context;    

    private LayoutInflater mInflater;
    private List&lt;Contacts&gt; list; 

     public ContactArrayAdapter(Context context,ArrayList&lt;Contact&gt; arrPublicData) {

        this.mInflater = LayoutInflater.from(context);
        this.list = arrPublicData;
    }

    public int getCount() {
        return list.size();
    }

    public Object getItem(int position) {
        return position;
    }

    public long getItemId(int position) {
        return position;
    }

    public View getView(int position, View convertView, ViewGroup parent) {
        View view = convertView;
        final ViewHolder viewHolder;
        if (view == null) {         
            view = mInflater.inflate(R.layout.multiselect_row, null);
            viewHolder = new ViewHolder();
            viewHolder.text = (TextView) view.findViewById(R.id.txtItem);
            viewHolder.checkbox = (CheckBox) view.findViewById(R.id.chkItem);


            view.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) view.getTag();
        }
        ViewHolder holder = (ViewHolder) view.getTag();
        holder.text.setText(list.get(position).getName());
        holder.checkbox.setChecked(ContactPickerActivity.arrBoolean[position]);        
        return view;
    }

    static class ViewHolder {
    protected TextView text;
    protected CheckBox checkbox;
}
</code></pre>
