<p>I hope i did not misunderstand you.</p>

<p>At bottom there is a seekbar, whenever you change it, also changes circle radius too.</p>

<p>Then i'm filtering markers by new radius value in filterMarkers method</p>

<p><a href="http://i.stack.imgur.com/Bsyjg.png" rel="nofollow"><img src="http://i.stack.imgur.com/Bsyjg.png" alt="enter image description here"></a><a href="http://i.stack.imgur.com/W2RHC.png" rel="nofollow"><img src="http://i.stack.imgur.com/W2RHC.png" alt="enter image description here"></a><a href="http://i.stack.imgur.com/rWPaB.png" rel="nofollow"><img src="http://i.stack.imgur.com/rWPaB.png" alt="enter image description here"></a><a href="http://i.stack.imgur.com/t56Ay.png" rel="nofollow"><img src="http://i.stack.imgur.com/t56Ay.png" alt="enter image description here"></a></p>

<pre><code>public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {

    private GoogleMap mMap;
    private SeekBar mRadiusSeekBar;

    private Circle mCircle;
    private double mCircleRadius = 250;
    private LatLng mCircleCenter = new LatLng(38.432398, 27.155882);

    private void addCircle(){
        mCircle = mMap.addCircle(new CircleOptions()
                .strokeWidth(4)
                .radius(mCircleRadius)
                .center(mCircleCenter)
                .strokeColor(Color.parseColor("#D1C4E9"))
                .fillColor(Color.parseColor("#657C4DFF")));
    }

    private List&lt;LatLng&gt; mPoints = new ArrayList&lt;&gt;();
    private List&lt;Marker&gt; mMarkers = new ArrayList&lt;&gt;();

    private void addMarkers(){
        LatLng mPoint1 = new LatLng(38.440925, 27.153672);
        LatLng mPoint2 = new LatLng(38.440700, 27.155877);
        LatLng mPoint3 = new LatLng(38.438402, 27.153988);
        LatLng mPoint4 = new LatLng(38.433767, 27.155410);
        LatLng mPoint5 = new LatLng(38.432143, 27.156049);
        LatLng mPoint6 = new LatLng(38.427804, 27.153486);
        LatLng mPoint7 = new LatLng(38.424637, 27.152007);
        LatLng mPoint8 = new LatLng(38.421315, 27.153216);
        LatLng mPoint9 = new LatLng(38.418219, 27.154731);
        LatLng mPoint10 = new LatLng(38.414628, 27.156085);

        mPoints.add(mPoint1);
        mPoints.add(mPoint2);
        mPoints.add(mPoint3);
        mPoints.add(mPoint4);
        mPoints.add(mPoint5);
        mPoints.add(mPoint6);
        mPoints.add(mPoint7);
        mPoints.add(mPoint8);
        mPoints.add(mPoint9);
        mPoints.add(mPoint10);

        BitmapDescriptor bd = BitmapDescriptorFactory
                .defaultMarker(BitmapDescriptorFactory.HUE_VIOLET);

        for(int i = 0; i&lt;mPoints.size(); i++){
            Marker marker = mMap.addMarker(
                    new MarkerOptions()
                            .visible(false)
                            .position(mPoints.get(i)).icon(bd));

            mMarkers.add(marker);
        }
    }

    private void filterMarkers(double radiusForCircle){
        mCircle.setRadius(radiusForCircle);
        float[] distance = new float[2];
        for(int m = 0; m &lt; mMarkers.size(); m++){
            Marker marker = mMarkers.get(m);
            LatLng position = marker.getPosition();
            double lat = position.latitude;
            double lon = position.longitude;

            Location.distanceBetween(lat, lon, mCircleCenter.latitude,
                    mCircleCenter.longitude, distance);

            boolean inCircle = distance[0] &lt;= radiusForCircle;
            marker.setVisible(inCircle);
        }
    }




    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);

        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);

        mRadiusSeekBar = (SeekBar) findViewById(R.id.seekbar);

        mRadiusSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                filterMarkers(progress * 10);
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        });
    }

    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;
        mMap.moveCamera(CameraUpdateFactory
                .newLatLngZoom(mCircleCenter, 12));

        addMarkers();
        addCircle();
    }
}
</code></pre>

<p>layout</p>

<pre><code>&lt;FrameLayout android:layout_height="match_parent"
android:layout_width="match_parent"
xmlns:android="http://schemas.android.com/apk/res/android"&gt;

&lt;fragment xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/map"
    android:name="com.google.android.gms.maps.SupportMapFragment"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.blackkara.mapquestions.MapsActivity" /&gt;

&lt;android.support.v7.widget.AppCompatSeekBar
    android:id="@+id/seekbar"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_gravity="bottom"/&gt;
&lt;/FrameLayout&gt;
</code></pre>
