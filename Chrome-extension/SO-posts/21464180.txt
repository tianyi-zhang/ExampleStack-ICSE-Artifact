<p>How about some code? The code below assumes the use of Fragments, but you should be able to adapt it (pun intended) to work with any old straight-up Activity:</p>

<p>It sounds like for each ListView item you have two attributes to display:</p>

<ul>
<li>Category</li>
<li>Title</li>
</ul>

<p>So, the model object might look something like:</p>

<pre><code>public class MyItem {
  private String mCategory;
  private String mTitle;
  public String getCategory() {
    return mCategory;
  }
  // Plus other getters/setters.....
}
</code></pre>

<p>If you want to display more than one field you can use a custom layout, which you will put in <code>res/layout</code> (let's call it list_item_myitems.xml):</p>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent" &gt;

    &lt;TextView
        android:id="@+id/list_item_categoryTextView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingLeft="4dp"
        android:paddingRight="4dp"
        android:textStyle="bold" /&gt;

    &lt;TextView
        android:id="@+id/list_item_titleTextView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingLeft="4dp"
        android:paddingRight="4dp"/&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>The layout above will be inflated inside of a <code>&lt;FrameLayout&gt;</code> when using Fragments. If you are not using Fragments, then include the two <code>&lt;TextView&gt;</code> items above below your <code>&lt;ListView&gt;</code> element in your activity's layout XML.</p>

<p>Next, how about a custom adapter class to handle rendering the View that is displayed for each ListView item?</p>

<pre><code>public class MyItemAdapter extends ArrayAdapter&lt;MyItem&gt; {

  public MyItemAdapter(Activity activity, ArrayList&lt;MyItem&gt; items) {
    super(activity, 0, items);
  }

  @Override
  public View getView(int position, View convertView, ViewGroup parent) {
    View ret;
    if (convertView == null) {
      convertView = getActivity().
        getLayoutInflater().
        inflate(R.layout.list_item_myitems, null);
    }

    MyItem item = getItem(position);

    TextView dateTextView = 
      (TextView)convertView.findViewById(R.id.list_item_categoryTextView);
    dateTextView.setText(item.getCategory());

    TextView titleTextView =     
      (TextView)convertView.findViewById(R.id.list_item_titleTextView);
    titleTextView.setText(item.getTitle());

     ret = convertView;
     return ret;
   }


}
</code></pre>

<p>In your ListFragment subclass (or Activity subclass - probably a ListActivity subclass), create the custom adapter above (making sure to pass the collection of items you want to display) and call setListAdapter(...).</p>

<p>Have fun!</p>
