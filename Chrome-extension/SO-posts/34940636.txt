<p>I have found two ways:</p>

<ol>
<li>Assuming you have a textview with id "R.id.description" for each item in the RecyclerView. You can do this to match a specific child:</li>
</ol>

<p><code>onView(allOf(withId(R.id.place_description),withText("what"))).perform(click());</code></p>

<ol start="2">
<li>A tutorial from Android Testing Codelab
<a href="https://codelabs.developers.google.com/codelabs/android-testing/#0" rel="nofollow">https://codelabs.developers.google.com/codelabs/android-testing/#0</a></li>
</ol>

<p>`</p>

<pre><code>public Matcher&lt;View&gt; withItemText(final String itemText)
    {
        checkArgument(!TextUtils.isEmpty(itemText),"cannot be null");
        return new TypeSafeMatcher&lt;View&gt;() {
            @Override
            protected boolean matchesSafely(View item) {
                return allOf(isDescendantOfA(isAssignableFrom(RecyclerView.class)),withText(itemText)).matches(item);
            }

            @Override
            public void describeTo(Description description) {
                description.appendText("is descendant of a RecyclerView with text" + itemText);
            }
        };
    }
</code></pre>

<p>`</p>

<p>And then, do this:</p>

<pre><code>onView(withItemText("what")).perform(click());
</code></pre>
