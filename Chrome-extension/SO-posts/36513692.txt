<p>try this one.</p>

<p>Replace </p>

<pre><code>adapter.add(adaptItem);
</code></pre>

<p>code as </p>

<pre><code>adapter.addDatas(adaptItem);
</code></pre>

<p>in <strong>GetRssFeed.java</strong> and replace your <strong>RssListViewAdapter.java</strong> adapter class as </p>

<pre><code>public class RssListViewAdapter extends BaseAdapter {

private final Context context;
private ArrayList&lt;adapterItem&gt; itemsArrayList;


public RssListViewAdapter(Context context) {

    this.context = context;
    itemsArrayList=new ArrayList&lt;adapterItem&gt;();

}

public void addDatas(adapterItem item){
    itemsArrayList.add(item);
}
@Override
public long getItemId(int position) {
    return position;
}

@Override
public Object getItem(int position) {
    return getItem(position);
}

@Override
public int getCount() {
    return itemsArrayList.size();
}




@Override
public View getView(int position, View convertView, ViewGroup parent) {


    LayoutInflater inflater = (LayoutInflater) context
            .getSystemService(Context.LAYOUT_INFLATER_SERVICE);


    View rowView = inflater.inflate(R.layout.basic_list_item, parent, false);


    TextView headerView = (TextView) rowView.findViewById(R.id.headerName);
    TextView dateView = (TextView) rowView.findViewById(R.id.dateTime);

    headerView.setText(itemsArrayList.get(position).getHeader());
    dateView.setText(itemsArrayList.get(position).getDate());
    return rowView;
}


}
</code></pre>

<p>by Defalut the <strong><a href="http://github.com/ShirwaM/Simplistic-RSS" rel="nofollow">RssReader</a></strong> doesn't read pubDate from xml.If you wish to read pubDate in <strong><a href="http://github.com/ShirwaM/Simplistic-RSS" rel="nofollow">RSSReader</a></strong> please copy the code and replace it with <strong>RssHandler.java</strong></p>

<p><strong>RssHandler.Java</strong></p>

<pre><code>public class RssHandler extends DefaultHandler {
private List&lt;RssItem&gt; rssItemList;
private RssItem currentItem;
private boolean parsingTitle;
private boolean parsingLink;
private boolean parsingDescription;
private boolean parsingPubDate;
public RssHandler() {
    //Initializes a new ArrayList that will hold all the generated RSS items.
    rssItemList = new ArrayList&lt;RssItem&gt;();
}

public List&lt;RssItem&gt; getRssItemList() {
    return rssItemList;
}


//Called when an opening tag is reached, such as &lt;item&gt; or &lt;title&gt;
@Override
public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
    if (qName.equals("item"))
        currentItem = new RssItem();
    else if (qName.equals("title"))
        parsingTitle = true;
    else if (qName.equals("link"))
        parsingLink = true;
    else if (qName.equals("description"))
        parsingDescription = true;
    else if(qName.equals("pubDate"))
        parsingPubDate=true;
    else if (qName.equals("media:thumbnail") || qName.equals("media:content") || qName.equals("image")) {
        if (attributes.getValue("url") != null)
            currentItem.setImageUrl(attributes.getValue("url"));

    }
}

//Called when a closing tag is reached, such as &lt;/item&gt; or &lt;/title&gt;
@Override
public void endElement(String uri, String localName, String qName) throws SAXException {
    if (qName.equals("item")) {
        //End of an item so add the currentItem to the list of items.
        rssItemList.add(currentItem);
        currentItem = null;
    } else if (qName.equals("title"))
        parsingTitle = false;
    else if (qName.equals("link"))
        parsingLink = false;
    else if (qName.equals("description"))
        parsingDescription = false;
    else if(qName.equals("pubDate"))
        parsingPubDate=false;
}

//Goes through character by character when parsing whats inside of a tag.
@Override
public void characters(char[] ch, int start, int length) throws SAXException {
    if (currentItem != null) {
        //If parsingTitle is true, then that means we are inside a &lt;title&gt; tag so the text is the title of an item.
        if (parsingTitle)
            currentItem.setTitle(new String(ch, start, length));
            //If parsingLink is true, then that means we are inside a &lt;link&gt; tag so the text is the link of an item.
        else if (parsingLink)
            currentItem.setLink(new String(ch, start, length));
            //If parsingDescription is true, then that means we are inside a &lt;description&gt; tag so the text is the description of an item.
        else if (parsingDescription)
            currentItem.setDescription(new String(ch, start, length));
        else if(parsingPubDate)
            currentItem.setDate(new String(ch,start,length));
    }
}
} 
</code></pre>
