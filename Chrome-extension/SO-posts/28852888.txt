<p>After a lot of effort to find out an efficient solution for my problem, finally I got it! Here below anyone who will face with this problem can find an alternative solution:</p>

<p>Generate a method to find closest color name which is in your database:</p>

<pre><code>private String findClosedColor(String hexColor) {
    int rgb[] = hexToRGB(hexColor);
    int min = 3 * (int) pow(256, 2) + 1;
    ArrayList&lt;HashMap&lt;String, String&gt;&gt; colorList = getColorList();

    String colorName = null;
    int i;
    int len = colorList.size();
    for (i = 0; i &lt; len; i++) {
        HashMap&lt;String, String&gt; map = colorList.get(i);
        String colorCode = map.get("code");
        Log.w("myApp", "HashMap'ten gelen colorCode:" + colorCode);
        if (colorCode != null) {
            int df = rgbDistance(hexToRGB(colorCode), rgb);
            if (df &lt; min) {
                min = df;
                colorName = map.get("name");
            }
        }
    }
    return colorName;
}

private int rgbDistance(int[] c1, int[] c2) {
    return ( (int) pow(c1[0] - c2[0], 2)) + ((int) pow(c1[1] - c2[1], 2)) + ((int) pow(c1[2] - c2[2], 2));
}

private int[] hexToRGB( String hexCode)
{
    int returnValue[] = new int[3];

    if (hexCode.charAt(0) == '#')
    {
        hexCode = hexCode.substring(1);
    }

    if (hexCode.length() &lt; 6)
    {
        returnValue[0] = -1;
        returnValue[1] = -1;
        returnValue[2] = -1;
    }
    else
    {
        int r = fromHex(hexCode.substring(0, 2));
        int g = fromHex(hexCode.substring(2, 4));
        int b = fromHex(hexCode.substring(4, 6));

        returnValue[0] = r;
        returnValue[1] = g;
        returnValue[2] = b;

    }
    return returnValue;
}

private int fromHex( String n) {
    n = n.toUpperCase();
    if (n.length() &lt; 2)
        return -1;
    int f1 = letterToCode(n.charAt(0));
    int f2 = letterToCode(n.charAt(1));
    if (f1 == -1 || f2 == -1) {
        return -1;
    } else {
        return f1 * 16 + f2;
    }
}

private int letterToCode(char n) {
    switch (n) {
        case '0': return 0;
        case '1': return 1;
        case '2': return 2;
        case '3': return 3;
        case '4': return 4;
        case '5': return 5;
        case '6': return 6;
        case '7': return 7;
        case '8': return 8;
        case '9': return 9;
        case 'A': return 10;
        case 'B': return 11;
        case 'C': return 12;
        case 'D': return 13;
        case 'E': return 14;
        case 'F': return 15;
        default: return -1;
    }
}
</code></pre>

<p>getColorList() function returns the color list from my database. With this solution, I can easily detect every hex code by choosing closer name in my database. </p>

<p>Best Regards to everyone...</p>
