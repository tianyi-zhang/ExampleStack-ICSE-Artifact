<p>This will be helpful to you.
Adapter class:-</p>

<pre><code>public class MyExpandableAdapter extends BaseExpandableListAdapter {
    private Activity activity;
    private ArrayList&lt;Object&gt; childtems;
    private LayoutInflater inflater;
    private ArrayList&lt;String&gt; parentItems, child;

    public MyExpandableAdapter(ArrayList&lt;String&gt; parents,
            ArrayList&lt;Object&gt; childern) {
        this.parentItems = parents;
        this.childtems = childern;
    }

    public void setInflater(LayoutInflater inflater, Activity activity) {
        this.inflater = inflater;
        this.activity = activity;
    }

    @Override
    public View getChildView(int groupPosition, final int childPosition,
            boolean isLastChild, View convertView, ViewGroup parent) {

        child = (ArrayList&lt;String&gt;) childtems.get(groupPosition);

        TextView textView = null;


        if (convertView == null) {
            convertView = inflater.inflate(R.layout.group, null);
        }

        textView = (TextView) convertView.findViewById(R.id.textView1);
        textView.setText(child.get(childPosition));

        convertView.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View view) {
                Toast.makeText(activity, child.get(childPosition),
                        Toast.LENGTH_SHORT).show();
            }
        });

        return convertView;
    }

    @Override
    public View getGroupView(int groupPosition, boolean isExpanded,
            View convertView, ViewGroup parent) {

        if (convertView == null) {

            convertView = inflater.inflate(R.layout.row, null);

        }

        ((CheckedTextView) convertView).setText(parentItems
                .get(groupPosition));
        ((CheckedTextView) convertView).setChecked(isExpanded);

        return convertView;

    }

    @Override
    public Object getChild(int groupPosition, int childPosition) {

        return null;

    }

    @Override
    public long getChildId(int groupPosition, int childPosition) {

        return 0;

    }

    @Override
    public int getChildrenCount(int groupPosition) {

        return ((ArrayList&lt;String&gt;) childtems.get(groupPosition)).size();

    }

    @Override
    public Object getGroup(int groupPosition) {

        return null;

    }

    @Override
    public int getGroupCount() {

        return parentItems.size();

    }

    @Override
    public void onGroupCollapsed(int groupPosition) {

        super.onGroupCollapsed(groupPosition);

    }

    @Override
    public void onGroupExpanded(int groupPosition) {

        super.onGroupExpanded(groupPosition);

    }

    @Override
    public long getGroupId(int groupPosition) {

        return 0;

    }

    @Override
    public boolean hasStableIds() {

        return false;

    }

    @Override
    public boolean isChildSelectable(int groupPosition, int childPosition) {

        return false;

    }

}
</code></pre>

<p>MainActivity is here.</p>

<pre><code>public class MainActivity extends ExpandableListActivity {

    private ArrayList&lt;String&gt; parentItems = new ArrayList&lt;String&gt;();
    private ArrayList&lt;Object&gt; childItems = new ArrayList&lt;Object&gt;();

    @Override
    public void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);

        // this is not really necessary as ExpandableListActivity contains
        // an ExpandableList
        // setContentView(R.layout.main);

        ExpandableListView expandableList = getExpandableListView(); // you
                                                                        // can
                                                                        // use
                                                                        // (ExpandableListView)
                                                                        // findViewById(R.id.list)

        expandableList.setDividerHeight(2);
        expandableList.setGroupIndicator(null);
        expandableList.setClickable(true);

        setGroupParents();
        setChildData();

        MyExpandableAdapter adapter = new MyExpandableAdapter(parentItems,
                childItems);
        adapter.setInflater(
                (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE),
                this);
        expandableList.setAdapter(adapter);
        expandableList.setOnChildClickListener(this);
    }

    public void setGroupParents() {
        parentItems.add("Android");
        parentItems.add("Core Java");
        parentItems.add("Desktop Java");
        parentItems.add("Enterprise Java");
    }

    public void setChildData() {

        // Android
        ArrayList&lt;String&gt; child = new ArrayList&lt;String&gt;();
        child.add("Core");
        child.add("Games");
        childItems.add(child);

        // Core Java
        child = new ArrayList&lt;String&gt;();
        child.add("Apache");
        child.add("Applet");
        child.add("AspectJ");
        child.add("Beans");
        child.add("Crypto");
        childItems.add(child);

        // Desktop Java
        child = new ArrayList&lt;String&gt;();
        child.add("Accessibility");
        child.add("AWT");
        child.add("ImageIO");
        child.add("Print");
        childItems.add(child);

        // Enterprise Java
        child = new ArrayList&lt;String&gt;();
        child.add("EJB3");
        child.add("GWT");
        child.add("Hibernate");
        child.add("JSP");
        childItems.add(child);
    }
}
</code></pre>
