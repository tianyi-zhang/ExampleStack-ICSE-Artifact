<pre><code> /**
 * Call this from a drag source view.
 */
@SuppressLint("NewApi")
public boolean onTouchEvent(MotionEvent ev) {
    if (!mDragging) {
        return false;
    }

    final int action = ev.getAction();
    final int screenX = clamp((int)ev.getRawX(), 0, mDisplayMetrics.widthPixels);
    final int screenY = clamp((int)ev.getRawY(), 0, mDisplayMetrics.heightPixels);

    switch (action) {
    case MotionEvent.ACTION_DOWN:
        // Remember where the motion event started
        mMotionDownX = screenX;
        mMotionDownY = screenY;
        break;
    case MotionEvent.ACTION_MOVE:
        //Set background color of remove comment box layout
        if(((int)ev.getY() &lt;= 50))
            ImageEditingActivityNew.rl_remove.setBackgroundColor(Color.RED);
        else
            ImageEditingActivityNew.rl_remove.setBackgroundColor(Color.TRANSPARENT);

        // Update the drag view.  Don't use the clamped pos here so the dragging looks
        // like it goes off screen a little, intead of bumping up against the edge.
        mDragView.move((int)ev.getRawX(), (int)ev.getRawY());

        // Drop on someone?
        final int[] coordinates = mCoordinatesTemp;
        DropTarget dropTarget = findDropTarget(screenX, screenY, coordinates);
        if (dropTarget != null) {
            if (mLastDropTarget == dropTarget) {
                dropTarget.onDragOver(mDragSource, coordinates[0], coordinates[1],(int) mTouchOffsetX, (int) mTouchOffsetY, mDragView, mDragInfo);
            } else {
                if (mLastDropTarget != null) {
                    mLastDropTarget.onDragExit(mDragSource, coordinates[0], coordinates[1],(int) mTouchOffsetX, (int) mTouchOffsetY, mDragView, mDragInfo);
                }
                dropTarget.onDragEnter(mDragSource, coordinates[0], coordinates[1],
                    (int) mTouchOffsetX, (int) mTouchOffsetY, mDragView, mDragInfo);
            }
        } else {
            if (mLastDropTarget != null) {
                mLastDropTarget.onDragExit(mDragSource, coordinates[0], coordinates[1],
                    (int) mTouchOffsetX, (int) mTouchOffsetY, mDragView, mDragInfo);
            }
        }
        mLastDropTarget = dropTarget;


        /* The original Launcher activity supports a delete region and scrolling.
           It is not needed in this example.

        // Scroll, maybe, but not if we're in the delete region.
        boolean inDeleteRegion = false;
        if (mDeleteRegion != null) {
            inDeleteRegion = mDeleteRegion.contains(screenX, screenY);
        }
        //Log.d(TAG, "inDeleteRegion=" + inDeleteRegion + " screenX=" + screenX
        //        + " mScrollZone=" + mScrollZone);
        if (!inDeleteRegion &amp;&amp; screenX &lt; mScrollZone) {
            if (mScrollState == SCROLL_OUTSIDE_ZONE) {
                mScrollState = SCROLL_WAITING_IN_ZONE;
                mScrollRunnable.setDirection(SCROLL_LEFT);
                mHandler.postDelayed(mScrollRunnable, SCROLL_DELAY);
            }
        } else if (!inDeleteRegion &amp;&amp; screenX &gt; scrollView.getWidth() - mScrollZone) {
            if (mScrollState == SCROLL_OUTSIDE_ZONE) {
                mScrollState = SCROLL_WAITING_IN_ZONE;
                mScrollRunnable.setDirection(SCROLL_RIGHT);
                mHandler.postDelayed(mScrollRunnable, SCROLL_DELAY);
            }
        } else {
            if (mScrollState == SCROLL_WAITING_IN_ZONE) {
                mScrollState = SCROLL_OUTSIDE_ZONE;
                mScrollRunnable.setDirection(SCROLL_RIGHT);
                mHandler.removeCallbacks(mScrollRunnable);
            }
        }
        */
        break;
    case MotionEvent.ACTION_UP:
        //When touch up then remove comment box

        if(((int)ev.getY() &lt;= 50)) {
            ImageEditingActivity.rl_imageEdit_comment.removeAllViews();
            ImageEditingActivity.rl_imageEdit_comment.invalidate();
            //ImageEditingActivity.mDragLayer.removeView(ImageEditingActivity.rl_imageEdit_comment);
            ImageEditingActivity.addComment = true;
            ImageEditingActivity.changeIconBackground("Remove");
            ImageEditingActivity.editParam.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
        }

        if (mDragging) {
            drop(screenX, screenY);
        }

        endDrag();
        break;
    case MotionEvent.ACTION_CANCEL:
        cancelDrag();
    }

    return true;
}
</code></pre>
