<p>create a <strong>customList</strong> class<code>(dont use hashmap)</code></p>

<p><strong>change your custom list code  (this is your code)</strong></p>

<pre><code>public class CustomList extends ArrayAdapter&lt;String&gt;
{
public final ArrayList&lt;HashMap&lt;String, String&gt;&gt; urlist;
private Activity context;

public CustomList(Activity context,ArrayList&lt;HashMap&lt;String, String&gt;&gt; urlist) 
{
    super(context, R.layout.list_single);
    this.context = context;
    this.urlist=urlist;

}
@Override
public View getView(int position, View view, ViewGroup parent) {
LayoutInflater inflater = context.getLayoutInflater();
View rowView= inflater.inflate(R.layout.list_single, null, true);

TextView txtTitle = (TextView) rowView.findViewById(R.id.txt);
txtTitle.setText((CharSequence) urlist);
return rowView;

 }
 }
</code></pre>

<p><strong>to</strong></p>

<pre><code>public class customList extends ArrayAdapter&lt;String&gt;{

Context context; 
int layoutResourceId;    
ArrayList&lt;String&gt; data = null;

public customList(Context context, int layoutResourceId, ArrayList&lt;String&gt; data) {
    super(context, layoutResourceId, data);
    this.layoutResourceId = layoutResourceId;
    this.context = context;
    this.data = data;
}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    View row = convertView;
    CustomHolder holder = null;

    if(row == null)
    {
        LayoutInflater inflater = ((Activity)context).getLayoutInflater();
        row = inflater.inflate(layoutResourceId, parent, false);

        holder = new CustomHolder();
        holder.txtTitle = (TextView)row.findViewById(R.id.txtTitle);

        row.setTag(holder);
    }
    else
    {
        holder = (CustomHolder)row.getTag();
    }

    String s = data.get(postition);
    holder.txtTitle.setText(s);

    return row;
}

static class CustomHolder
{
    TextView txtTitle;
}
}
</code></pre>

<p><strong>and change your json parsing code and parse your json like</strong></p>

<pre><code> // JSONArray has four JSONObject

     ArrayList&lt;String&gt; messages = new ArrayList&lt;String&gt;();
        for (int i = 0; i &lt; jsonArray.length(); i++) {

            // Creating JSONObject from JSONArray
            JSONObject jsonObj = jsonArray.getJSONObject(i);

            // Getting data from individual JSONObject
            String message = jsonObj.getString("msg");
            messages.add(message);

        }
</code></pre>

<p><strong>and finally replace your this code</strong></p>

<pre><code>CustomList adapter = new CustomList(MainActivity.this,urlist);
    list=(ListView)findViewById(R.id.list);
    list.setAdapter(adapter);
    list.setOnItemClickListener(new AdapterView.OnItemClickListener() 
    {

         @Override
                public void onItemClick(AdapterView&lt;?&gt; parent, View view,
                                        int position, long id) {
                    Toast.makeText(MainActivity.this, "TEST.........", Toast.LENGTH_SHORT).show();

                }
            });
</code></pre>

<p><strong>with this one</strong></p>

<pre><code>customList adapter = new customList(MainActivity.this,R.layout.list_single,messages);  //messagses is your arraylist in which you added string by parsing your json (see before this code mean upward)
    list=(ListView)findViewById(R.id.list);
    list.setAdapter(adapter);
    list.setOnItemClickListener(new AdapterView.OnItemClickListener() 
    {

         @Override
                public void onItemClick(AdapterView&lt;?&gt; parent, View view,
                                        int position, long id) {
                    Toast.makeText(MainActivity.this, "TEST.........", Toast.LENGTH_SHORT).show();

                }
            });
</code></pre>

<p><em><strong>Solution 2</em></strong></p>

<p><strong>since you are showing only single text , you dont need to create your own custom adapter instead you can simply do.</strong></p>

<pre><code> ArrayList&lt;String&gt; messages = new ArrayList&lt;String&gt;();
        for (int i = 0; i &lt; jsonArray.length(); i++) {

            // Creating JSONObject from JSONArray
            JSONObject jsonObj = jsonArray.getJSONObject(i);

            // Getting data from individual JSONObject
            String message = jsonObj.getString("msg");
            messages.add(message);

        }

  ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(MainActivity.this,
                android.R.layout.simple_list_item_1, messages);
  list=(ListView)findViewById(R.id.list);
    list.setAdapter(adapter);
    list.setOnItemClickListener(new AdapterView.OnItemClickListener() 
    {

         @Override
                public void onItemClick(AdapterView&lt;?&gt; parent, View view,
                                        int position, long id) {
                    Toast.makeText(MainActivity.this, "TEST.........", Toast.LENGTH_SHORT).show();

                }
            });
</code></pre>
