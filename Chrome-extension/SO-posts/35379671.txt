<p>Finally I got it. The key is use a TextView and make its text SpannableStrings:
This is the code:</p>

<p>The interface:</p>

<pre><code>public interface IClickSpannableListener {
  void onClickSpanText(SpecialClickableSpan sender);
}
</code></pre>

<p>The class:</p>

<pre><code>import android.text.TextPaint;
import android.text.style.ClickableSpan;
import android.view.View;

public class SpecialClickableSpan extends ClickableSpan {
    private IClickSpannableListener oyente;
    private String text;
    private RoundedBackgroundSpan roundedBackgroundSpan;

    //region get    
    public String getText() {
        return text;
    }
    public RoundedBackgroundSpan getRoundedBackgroundSpan() {
        return roundedBackgroundSpan;
    }
    //endregion

    //region constructor
    public SpecialClickableSpan(String text,IClickSpannableListener quien,boolean isRoundedBackgroundSpam){
        super();
        //IMPORTANT: Replace space (alt + 255) by asc 32.
        this.text = text.replace(' ',' '); 
        if (isRoundedBackgroundSpam){
            roundedBackgroundSpan=new RoundedBackgroundSpan();
        }
        oyente =quien;
    }
    //endregion

    //region mustOverride
    @Override
    public void onClick(View widget) {
        oyente.onClickSpanText(this);
    }
    //endregion

    public void updateDrawState(TextPaint ds) {// override updateDrawState
        ds.setUnderlineText(false); // set to false to remove underline
    }
}
</code></pre>

<p>and finally, in the activity:</p>

<pre><code>public class MyActivity extends Activity
  implements IClickSpannableListener{

  public void onClickSpanText(SpecialClickableSpan sender) {
    System.out.println(sender.getText());
    switch (sender.getText()){
      case "50 pence": //do something
        break;
      //...
      case else:
      //....
  }

    private void setSpannableWords(String wordsWithToken){
        wordsWithToken="   50 pence   front page   massive   There's a history   "; //for this example
            //IMPORTANT between «50» and «pence»,  «front» and «page», and also between «there's» and «a» and «history»
            //THERE ISN'T space (asc 32), there is ALT+255. This avoid wordwrap in those texts
        SpannableString spannableString=new SpannableString(wordsWithToken);
        int inicio=wordsWithToken.indexOf(" ")+3;
        while (inicio&gt;2){
            int fin=wordsWithToken.indexOf(" ",inicio);
            if (fin&gt;-1){
                SpecialClickableSpan specialClickableSpan=new SpecialClickableSpan(wordsWithToken.substring(inicio,fin),this,true);
                spannableString.setSpan(specialClickableSpan, inicio, fin, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                spannableString.setSpan(specialClickableSpan.getRoundedBackgroundSpan(), inicio, fin, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                inicio=fin;
            }
            inicio=wordsWithToken.indexOf(" ",inicio+2)+1;
        }
        TextView textView=((TextView)findViewById(R.id.tvWordText));
        if (textView.getMovementMethod()==null) {
            textView.setMovementMethod(LinkMovementMethod.getInstance());
            textView.setHighlightColor(Color.TRANSPARENT);
        }
        textView.setText(spannableString);
    }


}
</code></pre>

<p>and this is the result:
<a href="http://i.stack.imgur.com/lwgnV.png" rel="nofollow"><img src="http://i.stack.imgur.com/lwgnV.png" alt="enter image description here"></a></p>

<p>Edit: Sorry, I forgot RoundedBackgroundSpan class. Here is:</p>

<pre><code>import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.RectF;
import android.text.style.ReplacementSpan;


public class RoundedBackgroundSpan extends ReplacementSpan {

    private static int CORNER_RADIUS = 8;
    private int backgroundColor = Color.CYAN;
    private int textColor = Color.BLACK;

    public RoundedBackgroundSpan() {
        super();
    }

    @Override
    public void draw(Canvas canvas, CharSequence text, int start, int end, float x, int top, int y, int bottom, Paint paint) {
        if (top==0){
            top=4;
        }
        top+=2;
        RectF rect = new RectF(x-3, top, x + measureText(paint, text, start, end)+3, bottom);
        paint.setColor(backgroundColor);
        canvas.drawRoundRect(rect, CORNER_RADIUS, CORNER_RADIUS, paint);
        paint.setColor(textColor);
        canvas.drawText(text, start, end, x, y, paint);
    }

    @Override
    public int getSize(Paint paint, CharSequence text, int start, int end, Paint.FontMetricsInt fm) {
        return Math.round(paint.measureText(text, start, end));
    }

    private float measureText(Paint paint, CharSequence text, int start, int end) {
        return paint.measureText(text, start, end);
    }
}
</code></pre>
