<p>You can do it without indexOf and substring.<br> The implementation is taken from java.lang.String.replace().</p>

<pre><code>public static String replace(String str, char oldChar, char newChar) {
    if (oldChar != newChar) {
        char[] value = str.toCharArray();
        int len = value.length;
        int i = -1;
        char[] val = value;

        while (++i &lt; len) {
            if (val[i] == oldChar) {
                break;
            }
        }
        if (i &lt; len) {
            char buf[] = new char[len];
            for (int j = 0; j &lt; i; j++) {
                buf[j] = val[j];
            }
            while (i &lt; len) {
                char c = val[i];
                buf[i] = (c == oldChar) ? newChar : c;
                i++;
            }
            return new String(buf);
        }
    }
    return str;
}
</code></pre>
