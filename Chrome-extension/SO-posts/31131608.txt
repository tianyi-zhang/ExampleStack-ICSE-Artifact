<p>I got the same problem. But this solution work for me. Hope it help's you.</p>

<p>If you want to decrypt the string, then use below code. You can also use </p>

<blockquote>
  <p>android.util.Base64</p>
</blockquote>

<p>rather than </p>

<blockquote>
  <p>org.apache.commons.codec.binary.Base64</p>
</blockquote>

<pre><code>package com.myApp.security;

import  android.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;

public class Security {
    public static String encrypt(String input, String key){
      byte[] crypted = null;
      try{
        SecretKeySpec skey = new SecretKeySpec(key.getBytes(), "AES");
          Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
          cipher.init(Cipher.ENCRYPT_MODE, skey);
          crypted = cipher.doFinal(input.getBytes());
        }catch(Exception e){
            System.out.println(e.toString());
        }
        return new String(Base64.encode(crypted, Base64.DEFAULT));
    }

    public static String decrypt(String input, String key){
        byte[] output = null;
        try{
          SecretKeySpec skey = new SecretKeySpec(key.getBytes(), "AES");
          Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
          cipher.init(Cipher.DECRYPT_MODE, skey);
          //output = cipher.doFinal(Base64.decodeBase64(input));
          output = cipher.doFinal(Base64.decode(input, Base64.DEFAULT));
        }catch(Exception e){
          System.out.println(e.toString());
        }
        return new String(output);
    }   
}
</code></pre>

<p>Use these encrypt &amp; decrypt methods in to your class directly.</p>

<pre><code>String key = "Dhruv349emaeGtuL";
String data = "example";
Log.e("Decrypt_Key", Security.decrypt(Security.encrypt(data, key), key));
Log.e("Encrypted Data", Security.encrypt(data, key));
</code></pre>
