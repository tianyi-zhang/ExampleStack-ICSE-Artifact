<p>Do this.
create a class</p>

<pre><code>public class Data
{
String name ="";
String viewers ="";

public Data(String n,String v)
{
name = n;
viewers=v;
}   
}
</code></pre>

<p>then in <code>MainActivity</code> create only single <code>arraylist</code> with type <code>Data</code></p>

<pre><code>ArrayList&lt;Data&gt; web = new ArrayList&lt;Data&gt;();
</code></pre>

<p>and then parse your json like</p>

<pre><code>// Creating JSONObject from String
        JSONObject jsonObjMain = new JSONObject(myjsonstring);

        // Creating JSONArray from JSONObject
        JSONArray jsonArray = jsonObjMain.getJSONArray("pgm");

        // JSONArray has four JSONObject
        for (int i = 0; i &lt; jsonArray.length(); i++) {

            // Creating JSONObject from JSONArray
            JSONObject jsonObj = jsonArray.getJSONObject(i);

            // Getting data from individual JSONObject

            Data data = new Data(jsonObj.getString("name") , jsonObj.getString("viewers"));

            web.add(data);
</code></pre>

<p>now instead of passing two array list to your custom adapter , pass only single arraylist i.e web</p>

<pre><code>customtest adapter = new customtest(MainActivity.this,R.layout.list_single,web); 
ListView list = (ListView)findViewById(R.id.list);
list.setAdapter(adapter);
</code></pre>

<p>in your <code>customtest</code> class , inside <code>getview</code> when you will bind data, you will do</p>

<pre><code>Data dt = web.get(position);
String name = dt.name;
String viewers = dt.viewers;
</code></pre>

<p>and then do what you were doing before.</p>

<p>and after all this, now ehnever you want to update your list simply call</p>

<pre><code>adapter.notifyDataSetChanged();
</code></pre>

<p>your <code>customtest</code> class now will be like</p>

<pre><code>    public class customtest extends ArrayAdapter&lt;Data&gt;{

Context context; 
int layoutResourceId;    
ArrayList&lt;Data&gt; data = null;

public customList(Context context, int layoutResourceId, ArrayList&lt;Data&gt; data) {
    super(context, layoutResourceId, data);
    this.layoutResourceId = layoutResourceId;
    this.context = context;
    this.data = data;
}

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    View row = convertView;
    CustomHolder holder = null;

    if(row == null)
    {
        LayoutInflater inflater = ((Activity)context).getLayoutInflater();
        row = inflater.inflate(layoutResourceId, parent, false);

        holder = new CustomHolder();
        holder.txtName = (TextView)row.findViewById(R.id.txtName);   //this is id of textview where you want to set name
        holder.txtViewers = (TextView)row.findViewById(R.id.txtViewers);     //this is id of textview where you want to set viewers

        row.setTag(holder);
    }
    else
    {
        holder = (CustomHolder)row.getTag();
    }

    Data dt = data.get(postition);
    holder.txtName.setText(dt.name);
    holder.txtViewers.setText(dt.viewers);

        return row;
    }

        static class CustomHolder
        {
            TextView txtName;
            TextView txtViewers;
        }
    }
</code></pre>

<p>//////////////////////////////////////////////////////////////////////////////////////////</p>

<pre><code>new Thread(){

public void run()
{
While(true)
{
Thread.sleep(3000);
jsonParse(); //this is your method for parsing json
}
}

}.start();
</code></pre>
