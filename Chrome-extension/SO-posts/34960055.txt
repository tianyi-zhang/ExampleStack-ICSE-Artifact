<p>Well, for one thing the CipherInputStream isn't being read, use something like this:</p>

<pre><code>            byte[] data = new byte[1024];
            int read = cis.read(data);
            while (read != -1) {
                fos.write(data, 0, read);
                read = cis.read(data);
                System.out.println(new String(data, "UTF-8").trim());
            } 
</code></pre>

<p>And you need to include this for the padding beyond "AES"</p>

<p><code>Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding")</code>;</p>

<p>Example: </p>

<pre><code>public void decrypt(File inputFile, File outputFile, byte[] key) throws Exception {
        Cipher cipher = getCipherDecrypt(key);
        FileOutputStream fos = null;
        CipherInputStream cis = null;
        FileInputStream fis = null;
        try { 
            fis = new FileInputStream(inputFile);
            cis = new CipherInputStream(fis, cipher);
            fos = new FileOutputStream(outputFile);
            byte[] data = new byte[1024];
            int read = cis.read(data);
            while (read != -1) {
                fos.write(data, 0, read);
                read = cis.read(data);
                System.out.println(new String(data, "UTF-8").trim());
            } 
        } finally { 
            fos.close();
            cis.close();
            fis.close();
        } 
    } 
</code></pre>
