<p>This method has always worked for me </p>

<pre><code>Matrix matrix = new Matrix();
   //myBitmap is the bitmap which is to be rotated
    matrix.postRotate(rotateDegree);
    Bitmap bitmap = Bitmap.createBitmap(myBitmap, 0, 0, myBitmap.getWidth(), myBitmap.getHeight(), matrix, true);//Rotated Bitmap
</code></pre>

<p>Well if you have this bitmap generated from a url , go ahead and use this function</p>

<pre><code>public Bitmap decodeBitmap(File f) {

    try {
        //Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inJustDecodeBounds = true;
        BitmapFactory.decodeStream(new FileInputStream(f), null, o);

        //The new size we want to scale to
        final int REQUIRED_SIZE = 490;

        //Find the correct scale value. It should be the power of 2.
        int scale = 1;
        while (o.outWidth / scale / 2 &gt;= REQUIRED_SIZE &amp;&amp; o.outHeight / scale / 2 &gt;= REQUIRED_SIZE)
            scale *= 2;

        //Decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options();
        o2.inSampleSize = scale;
        return BitmapFactory.decodeStream(new FileInputStream(f), null, o2);
    } catch (FileNotFoundException e) {
    }
    return null;
}
</code></pre>
