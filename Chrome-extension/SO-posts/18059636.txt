<p>I propose a spiral, non-recursively easiest.
For ease of reading the move is selected again in every step.</p>

<pre><code>int x = 0;
int y = 0;
for (int t = 0; t &lt; 100; ++t) {
    func(x, y);
    if (x &lt;= 0 &amp;&amp; y == 0) { // Widen spiral.
        --x;
        ++y; // So next condition takes next.
    } else if (x &lt; 0 &amp;&amp; y &gt;= 0) { // Left, upper quadrant.
        ++x;
        ++y;
    } else if (x &gt;= 0 &amp;&amp; y &gt; 0) { // Right, upper.
        ++x;
        --y;
    } else if (x &gt;= 0 &amp;&amp; y &lt;= 0) { // Right, lower.
        --x;
        --y;
    } else if (x &lt; 0 &amp;&amp; y &lt; 0) { // Left, lower.
        --x;
        ++y;
    } else {
        throw new IllegalStateException("x = " + x + ", y = " + y);
    }
}
</code></pre>

<p><em>I did not try the code! Check the conditions.</em></p>
