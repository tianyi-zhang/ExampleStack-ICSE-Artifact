<p>The Solution to Bind your multi select value to the POJO Object list is done under  <a href="http://docs.spring.io/spring/docs/2.5.6/api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html" rel="nofollow">CustomCollectionEditor</a> class. This is important when binding complex data types such as in your case.  </p>

<p>Add this below code in your controller class <strong>myController.java</strong>  :  </p>

<pre><code>@InitBinder
protected void initBinder(WebDataBinder binder)   
{
   binder.registerCustomEditor(List.class, "hobbies", new CustomCollectionEditor(List.class)
    {
       @Override
       protected Object convertElement(Object element)
        {
           Long id = null;
           String name = null;
           if(element instanceof String &amp;&amp; !((String)element).equals(""))  
           {
              //From the JSP 'element' will be a String
              try{
                   id = Long.parseLong((String) element);
                 }
              catch (NumberFormatException e) {
                    e.printStackTrace();
                 }
            }
           else if(element instanceof Long) 
           {
              //From the database 'element' will be a Long
              id = (Long) element;
           }
           // Here you can get Hobby object from database based on the id you have got.
           //You any other way you can get hobbyName and set in hobby object and return it
           Hobby h = new Hobby();
           h.setId(Integer.parseInt(String.valueOf(id)));
           h.setHobbyName(name);
           return h;
     }
  });  
}  
</code></pre>

<p>Reference Link for more details :<br>
<a href="http://stackoverflow.com/questions/15746371/springmvc-custom-collection-editor-not-returning-data-to-jsp">SpringMVC bind Multi Select with object in Form submit</a><br>
<a href="http://stackoverflow.com/questions/4331532/multiple-select-in-spring-3-0-mvc">Multiple Select in Spring 3.0 MVC</a>.</p>
