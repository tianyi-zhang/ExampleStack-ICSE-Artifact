<p>To the best of my knowledge, all the standard XML APIs in Java support namespaces. Many of the APIs were written before namespaces were created (or became popular - I can no longer remember). You often need to <a href="http://java.sun.com/javase/6/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setNamespaceAware%28boolean%29" rel="nofollow">enable support</a>:</p>

<pre><code>public class NS {
  private static void print(Node node) {
    Queue&lt;Node&gt; nodes = new LinkedList&lt;Node&gt;();
    nodes.add(node);
    while (!nodes.isEmpty()) {
      node = nodes.poll();
      NodeList list = node.getChildNodes();
      for (int i = 0; i &lt; list.getLength(); i++) {
        nodes.add(list.item(i));
      }
      System.out.format("%s %s %s%n", node.getPrefix(), node.getLocalName(),
          node.getNamespaceURI());
    }
  }

  public static void main(String[] args) throws Exception {
    String xml = "&lt;a xmlns=\"http://domain/a\"&gt;"
        + "&lt;pre:b xmlns:pre=\"http://domain/b\"&gt;" + "&lt;c/&gt;" + "&lt;d xmlns=\"\"&gt;"
        + "&lt;e/&gt;" + "&lt;/d&gt;" + "&lt;/pre:b&gt;" + "&lt;/a&gt;";

    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
    dbf.setNamespaceAware(true);
    Document doc = dbf.newDocumentBuilder().parse(
        new InputSource(new StringReader(xml)));
    print(doc.getDocumentElement());
  }
}
</code></pre>

<p>This code will print:</p>

<pre><code>null a http://domain/a
pre b http://domain/b
null c http://domain/a
null d null
null e null
</code></pre>
