<p>Display a strings which has HTML tags in a TextView usually a cumbersome process normally I do something like this.</p>

<p><strong>Show String Html into TextView</strong></p>

<ul>
<li><code>textView.setText(Html.fromHtml(your_string_html));</code></li>
</ul>

<p><strong>Listener to links from String HTML</strong></p>

<ul>
<li><code>textView.setMovementMethod(LinkMovementMethod.getInstance());</code></li>
</ul>

<p><strong>Show images in a TextView</strong> (It is the most laborious)</p>

<pre><code>public class PicassoImageGetter implements Html.ImageGetter {

    final Resources resources;

    final Picasso picasso;

    final TextView textView;

    public PicassoImageGetter(final TextView textView, final Resources resources, final Picasso picasso) {
        this.textView  = textView;
        this.resources = resources;
        this.picasso     = picasso;
    }

    @Override public Drawable getDrawable(final String source) {
        final BitmapDrawablePlaceHolder result = new BitmapDrawablePlaceHolder();

        new AsyncTask&lt;Void, Void, Bitmap&gt;() {

            @Override
            protected Bitmap doInBackground(final Void... meh) {
                try {
                    return picasso.load(source).get();
                } catch (Exception e) {
                    return null;
                }
            }

            @Override
            protected void onPostExecute(final Bitmap bitmap) {
                try {
                    final BitmapDrawable drawable = new BitmapDrawable(resources, bitmap);

                    drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());

                    result.setDrawable(drawable);
                    result.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());

                    textView.setText(textView.getText()); 
                } catch (Exception e) {
                       e.printStackTrace();
                }
            }

        }.execute((Void) null);

        return result;
    }

    static class BitmapDrawablePlaceHolder extends BitmapDrawable {

        protected Drawable drawable;

        @Override
        public void draw(final Canvas canvas) {
            if (drawable != null) {
                drawable.draw(canvas);
            }
        }

        public void setDrawable(Drawable drawable) {
            this.drawable = drawable;
        }

    }
}
</code></pre>

<p><strong>You must use the class as follows:</strong></p>

<pre><code>PicassoImageGetter picassoImageGetter = new PicassoImageGetter(txtView,getResources(), Picasso.with(this));

    textView.setText(Html.fromHtml(your_string_html),picassoImageGetter,null);
</code></pre>

<p>Automatically you can show your images and text into TextView I hope it helps!</p>

<p><em>Look this link if you never used Picasso o other library for download images.</em>
<a href="http://inthecheesefactory.com/blog/get-to-know-glide-recommended-by-google/en" rel="nofollow">http://inthecheesefactory.com/blog/get-to-know-glide-recommended-by-google/en</a></p>
