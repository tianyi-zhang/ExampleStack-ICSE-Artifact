<p>I am not sure I understand your idea, but here is why it doesn't work:</p>

<p>Your code is equivalent to:</p>

<pre><code>public static Pair BinarySearchDup(int[] A, int x, int low, int high){
    int mid = (low + high) / 2;
    if(low &lt;= high){        
        if(A[mid] == x)
            return BinarySearchDup(A, x, low, mid - 1);
        else if(A[mid] &lt; x)
            return BinarySearchDup(A, x, mid + 1, high);
        else// (A[mid] &gt; x)
            return BinarySearchDup(A, x, low, mid - 1);
    }

    return new Pair(-1, -1);        
}
</code></pre>

<p>Indeed, if you enter the while loop, you always return, so there is never more than one iteration. Also if the value at mid is x then since left is -1 you always enter this if clause. Alternatively if you don't enter the while loop you just return (-1, -1).
Hope this helps.</p>

<p>EDIT:
Can't you just use normal binary search and then simply go back and forth from the found index until you get the whole range?</p>
