<p>You should not create three differents cursors and contextresolver, use the same, but make the conditions in the loop in order to get what you want, I'll give you a method I wrote myself.
This will give you all the contacts in your phone which has a phone number, you'll get the idea of to implements yours:</p>

<pre><code>public ArrayList&lt;Contact&gt; getSMSContacts(Context context){
    ArrayList&lt;Contact&gt; contacts = new ArrayList&lt;Contact&gt;();
    ContentResolver cr = context.getContentResolver();
    Cursor cur = cr.query(ContactsContract.Contacts.CONTENT_URI, null, null, null, ContactsContract.Contacts.DISPLAY_NAME + " asc");
    if (cur.getCount() &gt; 0) {
        while (cur.moveToNext()) {
            String id = cur.getString(cur.getColumnIndex(ContactsContract.Contacts._ID));
            String name = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
            if (Integer.parseInt(cur.getString(cur.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER))) &gt; 0) {
                Contact c = new Contact();
                c.setId(Integer.parseInt(id));
                c.setName(name);
                Cursor pCur = cr.query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,
                        null, ContactsContract.CommonDataKinds.Phone.CONTACT_ID +" = ?", 
                        new String[]{id}, null);
                while (pCur.moveToNext()) {
                    String number = pCur.getString(
                            pCur.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
                    c.setNumber(number);
                } 
                pCur.close();
                contacts.add(c);
            }
        }
    }
    cur.close();
    return contacts;
}
</code></pre>
