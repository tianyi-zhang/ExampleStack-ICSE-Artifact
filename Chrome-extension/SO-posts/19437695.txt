<p>You never assign your path to your ArrayLists. You just extend your <code>path</code>over and over again and paint it with <code>paint</code>which gets modified after a Double Tap. Your `Ã²lds<code>and</code>news`` has Paths in it with zero Points, therefore these never get painted.</p>

<p>You should make <code>path</code>of Type <code>DrawingPath</code> and add it to your <code>ArrayLists</code> in the corresponding Methods.</p>

<pre><code>package com.example.guiao_2_1;

import java.util.ArrayList;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.support.v4.view.GestureDetectorCompat;
import android.util.AttributeSet;
import android.util.Log;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Toast;

public class NewView extends View implements GestureDetector.OnGestureListener,
        GestureDetector.OnDoubleTapListener {
    private Paint oldsPaint = new Paint();
    private Paint newsPaint = new Paint();
    private Path path = new Path();
    private Path newPath;
    private GestureDetectorCompat mDetector;
    private static final String DEBUG_TAG = "Gestures";
    private Path oldPath;
    private ArrayList&lt;Path&gt; olds = new ArrayList&lt;Path&gt;();
    private ArrayList&lt;Path&gt; news = new ArrayList&lt;Path&gt;();
    private boolean hasDoubleTapped;

    public NewView(Context context, AttributeSet attrs) {
        super(context, attrs);

        oldsPaint.setAntiAlias(true);
        oldsPaint.setStrokeWidth(6f);
        oldsPaint.setColor(Color.BLACK);
        oldsPaint.setStyle(Paint.Style.STROKE);
        oldsPaint.setStrokeJoin(Paint.Join.ROUND);

        newsPaint.set(oldsPaint);
        newsPaint.setColor(Color.GREEN);
        newsPaint.setStrokeWidth(8f);

        mDetector = new GestureDetectorCompat(context, this);
    }

    @Override
    protected void onDraw(Canvas canvas) {

        if (hasDoubleTapped) {
            canvas.drawPath(path, oldsPaint);
        } else {
            canvas.drawPath(path, newsPaint);
        }

        for (Path p : olds) {

            canvas.drawPath(p, oldsPaint);
        }

        for (Path j : news) {

            canvas.drawPath(j, newsPaint);
        }
        // canvas.drawPath(path, paint);

    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {

        this.mDetector.onTouchEvent(event);
        float eventX = event.getX();
        float eventY = event.getY();

        switch (event.getAction()) {
        case MotionEvent.ACTION_DOWN:
            path.moveTo(eventX, eventY);
            return true;
        case MotionEvent.ACTION_MOVE:
            path.lineTo(eventX, eventY);
            break;
        case MotionEvent.ACTION_UP:
            if (hasDoubleTapped) {
                news.add(path);
            } else {
                olds.add(path);
            }
            break;
        default:
            return false;
        }

        // Schedules a repaint.
        invalidate();
        return true;
    }

    @Override
    public boolean onDown(MotionEvent e) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public void onLongPress(MotionEvent e) {
        // TODO Auto-generated method stub

    }

    @Override
    public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public void onShowPress(MotionEvent e) {
        // TODO Auto-generated method stub

    }

    @Override
    public boolean onSingleTapUp(MotionEvent e) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public boolean onDoubleTap(MotionEvent e) {
        // TODO Auto-generated method stub
        hasDoubleTapped = true;

        // int numColor = paint.getColor();
        // String color = Integer.toHexString(numColor);
        // Toast.makeText(getContext(), color, Toast.LENGTH_SHORT).show();

        Log.d(DEBUG_TAG, "onDoubleTap: " + e.toString());
        return true;
    }

    @Override
    public boolean onDoubleTapEvent(MotionEvent event) {
        // TODO Auto-generated method stub
        Log.d(DEBUG_TAG, "onDoubleTap: " + event.toString());
        return false;
    }

    @Override
    public boolean onSingleTapConfirmed(MotionEvent e) {
        // TODO Auto-generated method stub
        return false;
    }
}
</code></pre>

<p>What I have done now is: I removed the Class DrawingPath since it was useless. Then I added a little bit of logic to the <code>MotionEvent.ACTION_UP:</code> case to add the path to the array what you have never done so far. Also I added a extra <code>Paint</code> to avoid the need of a derived DrawingPath.</p>

<p>Please look that you really understand what now happens in the Lines <code>83ff</code> and <code>48ff</code></p>
