<p>Where do you make your database? Also, you should be referencing aspects of your database with defined constants.</p>

<p>I don't see in your post where it is that you create your database. For example, in an app I have (link to the full file: <a href="http://code.devminded.com/score-it/src/56ac2292cfa3/src/com/devminded/scoreit/ScoreDbAdapter.java" rel="nofollow">http://code.devminded.com/score-it/src/56ac2292cfa3/src/com/devminded/scoreit/ScoreDbAdapter.java</a> ) you can see my database class as such:</p>

<pre><code>public class ScoreDbAdapter {

public static final String TAG = "com.devminded.scoreit.ScoreDbAdapter";

/**
 * Keys for the player table. ID is incrementing value to
 * reference the players.
 */
public static final String KEY_PLAYERS_ID = "_id";
public static final String KEY_PLAYERS_NAME = "name";
public static final String KEY_PLAYERS_ICON = "icon";
public static final String KEY_PLAYERS_SCORE = "score";
public static final String KEY_PLAYERS_ORDER = "turn";

/**
 * Keys for the History table.  Sequence is an increase value.  Their order
 * is the order the transactions were made.
 */
public static final String KEY_HISTORY_ID = "_id";
public static final String KEY_HISTORY_PLAYER = "player";
public static final String KEY_HISTORY_VALUE = "value";
public static final String KEY_HISTORY_NOTE = "note";

public static final String DATABASE_NAME = "scoreitdb";
public static final String TABLE_PLAYERS = "players";
public static final String TABLE_HISTORY = "history";

public static final String TRIGGER_UPDATE_NEW_SCORE = "update_new_score";
public static final String TRIGGER_UPDATE_SCORE = "update_score";
public static final String TRIGGER_DELETE_SCORE = "delete_score";
public static final String TRIGGER_DELETE_HISTORY = "delete_history";

public static final int DATABASE_VERSION = 25;

private DatabaseHelper mDbHelper;
private SQLiteDatabase mDb;


private final Context mCtx;

private int mNumPlayers;


private static final String CREATE_TABLE_PLAYERS =
    "create table " + TABLE_PLAYERS + " (" + KEY_PLAYERS_ID + " integer primary key autoincrement, "
    + KEY_PLAYERS_NAME + " text not null, " + KEY_PLAYERS_ICON + " long not null, " + KEY_PLAYERS_SCORE + " long not null, "
    + KEY_PLAYERS_ORDER + " long not null);";

private static final String CREATE_TABLE_HISTORY =
    "create table " + TABLE_HISTORY + " (" + KEY_HISTORY_ID + " integer primary key autoincrement, "
    + KEY_HISTORY_PLAYER + " integer not null, " + KEY_HISTORY_NOTE + " text not null, " 
    + KEY_HISTORY_VALUE + " integer not null);";

private static final String CREATE_TRIGGER_NEW_SCORE =
    "create trigger " + TRIGGER_UPDATE_NEW_SCORE + " after insert on " + TABLE_HISTORY
    + " begin"
    + " update " + TABLE_PLAYERS + " set " + KEY_PLAYERS_SCORE + " = " + KEY_PLAYERS_SCORE + " + new." + KEY_HISTORY_VALUE + " where " + KEY_PLAYERS_ID + " = new. " + KEY_HISTORY_PLAYER + ";"
    + " end;";

private static final String CREATE_TRIGGER_UPDATE_SCORE =
    "create trigger " + TRIGGER_UPDATE_SCORE + " after update on " + TABLE_HISTORY
    + " begin"
    + " update " + TABLE_PLAYERS + " set " + KEY_PLAYERS_SCORE + " = " + KEY_PLAYERS_SCORE + " + (new." + KEY_HISTORY_VALUE + " - old." + KEY_HISTORY_VALUE + ")"
    + " where " + KEY_PLAYERS_ID + " = new. " + KEY_HISTORY_PLAYER + ";"
    + " end;";

private static final String CREATE_TRIGGER_DELETE_SCORE =
    "create trigger " + TRIGGER_DELETE_SCORE + " after delete on " + TABLE_HISTORY
    + " begin"
    + " update " + TABLE_PLAYERS + " set " + KEY_PLAYERS_SCORE + " = " + KEY_PLAYERS_SCORE + " - old." + KEY_HISTORY_VALUE
    + " where " + KEY_PLAYERS_ID + " = old." + KEY_HISTORY_PLAYER + ";"
    + " end;";

private static final String CREATE_TRIGGER_DELETE_HISTORY =
    "create trigger " + TRIGGER_DELETE_HISTORY + " delete on " + TABLE_PLAYERS
    + " begin"
    + " delete from " + TABLE_HISTORY + " where " + KEY_HISTORY_PLAYER + " = old." + KEY_PLAYERS_ID + ";"
    + " end;";


private static class DatabaseHelper extends SQLiteOpenHelper {

    DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {

        db.execSQL(CREATE_TABLE_PLAYERS);
        db.execSQL(CREATE_TABLE_HISTORY);
        db.execSQL(CREATE_TRIGGER_NEW_SCORE);
        db.execSQL(CREATE_TRIGGER_DELETE_HISTORY);
        db.execSQL(CREATE_TRIGGER_UPDATE_SCORE);
        db.execSQL(CREATE_TRIGGER_DELETE_SCORE);

    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        Log.w(TAG, "Upgrading database from version " + oldVersion + " to "
                + newVersion + ", which will destroy all old data");
        db.execSQL("DROP TRIGGER IF EXISTS " + TRIGGER_DELETE_HISTORY);
        db.execSQL("DROP TRIGGER IF EXISTS " + TRIGGER_UPDATE_NEW_SCORE);
        db.execSQL("DROP TRIGGER IF EXISTS " + TRIGGER_UPDATE_SCORE);
        db.execSQL("DROP TRIGGER IF EXISTS " + TRIGGER_DELETE_SCORE);
        db.execSQL("DROP TABLE IF EXISTS "+ TABLE_PLAYERS);
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_HISTORY);
        onCreate(db);
    }
}

public ScoreDbAdapter(Context ctx) {
    this.mCtx = ctx;
}

public ScoreDbAdapter open() throws SQLException {
    if (mDbHelper == null) {
        mDbHelper = new DatabaseHelper(mCtx);
    }
    mDb = mDbHelper.getWritableDatabase();

    countPlayers();

    return this;
}

public void close() {
    mDbHelper.close();
}

public long createPlayer(String name, int icon, long score) {
    countPlayers();
    ContentValues initialValues = new ContentValues();
    initialValues.put(KEY_PLAYERS_NAME, name);
    initialValues.put(KEY_PLAYERS_ICON, icon);
    initialValues.put(KEY_PLAYERS_SCORE, score);
    initialValues.put(KEY_PLAYERS_ORDER, mNumPlayers);
    return mDb.insert(TABLE_PLAYERS, null, initialValues);
} 
</code></pre>

<p>In create player you can see I am using the same functionality for adding that you are. I do not however see where you are creating the database. Can you present to us that similar functionality? Something is obviously amiss and we seem to be missing some aspect of the required information still.</p>

<p>Edit: Sorry, apparently my source somehow got a mixture of tabs and spaces in it, I guess I messed up an eclipse setting.</p>
