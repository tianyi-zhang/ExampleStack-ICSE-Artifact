<p>In Java we use the <code>equals</code> method to check for object equality. Your <code>DataValue</code> class does not implement this so when you ask to remove an object from the list it is actually comparing the object using <code>==</code> (as implemented by the <code>Object</code> class).</p>

<pre><code>System.out.println((new DataValue("hello", 1)).equals(new DataValue("hello", 1))); 
// prints false
</code></pre>

<p>This is because the 2 objects are actually represented by 2 different spaces in memory. To resolve this you need to override the <code>equals</code> method in the <code>DataValue</code> class, it is also good practice to override the <code>hashCode</code> method as well. I used eclipse to generate the 2 methods for me:</p>

<pre><code>@Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((first == null) ? 0 : first.hashCode());
    result = prime * result + second;
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    DataValue other = (DataValue) obj;
    if (first == null) {
        if (other.first != null)
            return false;
    } else if (!first.equals(other.first))
        return false;
    if (second != other.second)
        return false;
    return true;
}
</code></pre>
