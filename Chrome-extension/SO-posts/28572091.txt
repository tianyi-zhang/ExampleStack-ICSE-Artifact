<p>You can extend <code>WebViewClient</code> and override <code>shouldOverrideUrlLoading</code> method. In the method you are able to check if you want to handle the request or leave it for <code>WebView</code>.</p>

<p><a href="http://developer.android.com/reference/android/webkit/WebViewClient.html#shouldOverrideUrlLoading(android.webkit.WebView,%20java.lang.String)" rel="nofollow">see the android documentation</a></p>

<p><strong>EDIT</strong></p>

<p>referring to the comment below, here is the example: </p>

<pre><code>public class MyWebViewClient extends WebViewClient {
    @Override
    public boolean shouldOverrideUrlLoading(WebView view, String url) {
        if (url.endsWith(".pdf") || url.endsWith(".xls") || url.endsWith(".ppt")) {
            Log.i(TAG, "download: " + url);
            // In this place you should handle the download
            return true;
        }
        return super.shouldOverrideUrlLoading(view, url);
    }
}
</code></pre>

<p>and set an instance of the class to your WebView:</p>

<pre><code>moodleweb.setWebViewClient(new MyWebViewClient());
moodleweb.loadUrl("http://moodle.ubt-uni.net/");
</code></pre>

<p><strong>EDIT2</strong></p>

<p>The easiest way to download files is to use <code>AsyncTask</code>:</p>

<pre><code>private class DownloadTask extends AsyncTask&lt;String, Void, Void&gt; {

    @Override
    protected Void doInBackground(String... sUrl) {
        InputStream input = null;
        OutputStream output = null;
        HttpURLConnection connection = null;
        try {
            URL url = new URL(sUrl[0]);
            String filename = url.getFile();
            connection = (HttpURLConnection) url.openConnection();
            connection.connect();

            if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
                Log.e(TAG, "Server didn't return 200. ");
                // handle error
                return null;
            }

            input = connection.getInputStream();
            output = new FileOutputStream("/sdcard/downloadedFiels/" + filename); // where to save file

            byte data[] = new byte[4096];
            int count;
            while ((count = input.read(data)) != -1) {
                if (isCancelled()) {
                    return null;
                }
                output.write(data, 0, count);
            }
        } catch (Exception e) {
            // handle error
            Log.e(TAG, "Exception: ", e);
        } finally {
            try {
                if (output != null)
                    output.close();
                if (input != null)
                    input.close();
            } catch (IOException e) {
                Log.e(TAG, "IOException: ", e);
            }

            if (connection != null)
                connection.disconnect();
        }
        return null;
    }
}
</code></pre>

<p>to download file you have to execute the task with url as an argument:</p>

<pre><code>new DownloadTask().execute(url);
</code></pre>

<p><strong>EDIT3</strong></p>

<p>I guess, it is because the path does not exist or is invalid. Try introduce few changes:
the first thing is the filename, where I assume the url would look like this: <code>http://host/file.pdf</code> not as argument of php. This is not proper way for that, but you can try this:</p>

<pre><code>String filename = URLDecoder.decode(sUrl[0].substring(sUrl[0].lastIndexOf("=")), "UTF-8");
</code></pre>

<p>and</p>

<pre><code>// where to save file
File file = new File("/sdcard/downloadedFiels/" + filename);
file.mkdirs();
output = new FileOutputStream(file);
</code></pre>
