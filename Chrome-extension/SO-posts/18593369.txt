<p>You should have to change the  <code>public Map&lt;Object&gt; map = new HashMap&lt;Object&gt;();</code> field to <code>public Map&lt;String,Foo&gt; map = new HashMap&lt;String,Foo&gt;();</code> and you should change the name of your class from Object to Foo as 'mre' suggestion. </p>

<p><em><strong>Foo Class</em></strong></p>

<pre><code>public class Foo {

    private String a;
    private String b;
    private String c;

    public Foo(String a, String b) {
        this.a = a;
        this.a = b;
        this.c = getKey();
    }

    public String getA() {
        return a;
    }

    public String getB() {
        return b;
    }

    public String getC() {
        return c;
    }   

    public String getKey() {
        return "" + a + b + "";
    }

    @Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((a == null) ? 0 : a.hashCode());
    result = prime * result + ((b == null) ? 0 : b.hashCode());
    result = prime * result + ((c == null) ? 0 : c.hashCode());
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    Foo other = (Foo) obj;
    if (a == null) {
        if (other.a != null)
            return false;
    } else if (!a.equals(other.a))
        return false;
    if (b == null) {
        if (other.b != null)
            return false;
    } else if (!b.equals(other.b))
        return false;
    if (c == null) {
        if (other.c != null)
            return false;
    } else if (!c.equals(other.c))
        return false;
    return true;
}
}  
</code></pre>

<p>and you can add objects in map as follows  </p>

<pre><code>map.put(new Foo("a", "b").getKey(),new Foo("a", "b"));
</code></pre>

<p>now you <code>deleteChest()</code> method will be like </p>

<pre><code>public static void deleteChest() {
        Foo foo = null;  
        for (int i = 0; i &lt; data.size(); i++) {
            foo =  map.get(new Foo(data.get(i).getA(), data.get(i).getB()).getKey())   
            if( foo != null) {
                map.remove(foo.getKey());
            }
        }
    }
</code></pre>

<p>hope this will solve your problem..</p>
