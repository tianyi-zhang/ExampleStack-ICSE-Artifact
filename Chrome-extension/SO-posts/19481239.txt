<p>Add an <code>ImageView</code> in <code>list_group</code> and  <code>list_item</code> xml files and set image to those ImageViews in your Adapter Class.</p>

<p>Like you are setting the text to <code>TextView</code>, in the same way you can set the image to <code>ImageView</code></p>

<pre><code>TextView txtListChild = (TextView) convertView
                    .findViewById(R.id.lblListItem);
          txtListChild.setText(childText);
ImageView imgListChild = (ImageView) convertView
                    .findViewById(R.id.image);

            imgListChild.setImageResource(R.drawable.imagename);
</code></pre>

<p>and your xml file should be</p>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="horizontal" &gt;

&lt;CheckedTextView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/lblListHeader"
    android:layout_width="wrap_content"
    android:layout_height="?android:attr/listPreferredItemHeight"
    android:layout_marginLeft="8dp"
    android:drawableRight="@drawable/ic_launcher"
    android:gravity="center_horizontal"
    android:paddingLeft="32dp"
    android:paddingTop="8dp"
    android:text="Test"
    android:textSize="20sp"
    android:textAlignment="textEnd"
    android:textStyle="bold" &gt;


&lt;/CheckedTextView&gt; 

    &lt;ImageView 
    android:id="@+id/IV_group"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"   
    android:contentDescription="group image"    

        /&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p><strong>EDIT:</strong></p>

<p>There are many ways to store image paths\ Resource IDs.The simplest way is to store them in <code>ArrayList</code> and <code>HashMap</code>.</p>

<p>Declare a new ArrayList and HashMap to store Resource IDs for Group and Child items.</p>

<pre><code>public List&lt;Integer&gt; groupImages;
public HashMap&lt;Integer, List&lt;Integer&gt;&gt; childImages;
</code></pre>

<p>populate it in your <code>prepareListData()</code> function.</p>

<pre><code>groupImages= new ArrayList&lt;Integer&gt;();
         groupImages.add(R.drawable.vegetables);
         groupImages.add(R.drawable.fruits);
         groupImages.add(R.drawable.drinks);
         groupImages.add(R.drawable.deserts);

         childImages = new HashMap&lt;Integer, List&lt;Integer&gt;&gt;();
         List&lt;Integer&gt; vegetablesi = new ArrayList&lt;Integer&gt;();
         vegetablesi.add(R.drawable.Tomatoes);
         vegetablesi.add(R.drawable.Potatoes);
         vegetablesi.add(R.drawable.Cucumbers);
         vegetablesi.add(R.drawable.Pumpkins);
         vegetablesi.add(R.drawable.Peppers);
         vegetablesi.add(R.drawable.Onions);
         vegetablesi.add(R.drawable.Garlic);

         List&lt;Integer&gt; fruitsi = new ArrayList&lt;Integer&gt;();
         fruitsi.add(R.drawable.Strawberries);
         fruitsi.add(R.drawable.Blackcurrants);
         fruitsi.add(R.drawable.Redcurrant);
         fruitsi.add(R.drawable.Gooseberry);
         fruitsi.add(R.drawable.Kiwifruit);
         fruitsi.add(R.drawable.Grape);


         List&lt;Integer&gt; drinksi = new ArrayList&lt;Integer&gt;();
         drinksi.add(R.drawable.Vodka);
         drinksi.add(R.drawable.Milk);
         drinksi.add(R.drawable.Water);
         drinksi.add(R.drawable.CocaCola);
         drinksi.add(R.drawable.Sprite);


         List&lt;Integer&gt; desertsi = new ArrayList&lt;Integer&gt;();
         desertsi.add(R.drawable.Vodka);
         desertsi.add(R.drawable.Milk);
         desertsi.add(R.drawable.Water);
         desertsi.add(R.drawable.CocaCola);
         desertsi.add(R.drawable.Sprite);


         childImages.put(groupImages.get(0), vegetablesi);
         childImages.put(groupImages.get(1), fruitsi);
         childImages.put(groupImages.get(2), drinksi);
         childImages.put(groupImages.get(3), desertsi);
</code></pre>

<p>In <code>getGroupView</code> and <code>getChildView</code> functions you can access those images in this way:</p>

<pre><code>@Override
    public View getGroupView(int groupPosition, boolean isExpanded,
            View convertView, ViewGroup parent) {
         String headerTitle = (String) getGroup(groupPosition);
            if (convertView == null) {
                LayoutInflater infalInflater = (LayoutInflater) this._context
                        .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                convertView = infalInflater.inflate(R.layout.list_group, null);
            }

            TextView lblListHeader = (TextView) convertView
                    .findViewById(R.id.lblListHeader);
            lblListHeader.setTypeface(null, Typeface.BOLD);
            lblListHeader.setText(headerTitle);

            ImageView imageView = (ImageView) convertView.findViewById(R.id.IV_group);
            int imageId = this.groupImages.get(groupPosition);
            imageView.setImageResource(imageId);

            return convertView;
    }





@Override
    public View getChildView(int groupPosition,final int childPosition, boolean isLastChild, View convertView,
            ViewGroup parent) {

         final String childText = (String) getChild(groupPosition, childPosition);

          if (convertView == null) {
                LayoutInflater infalInflater = (LayoutInflater) this._context
                        .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                convertView = infalInflater.inflate(R.layout.list_item, null);
            }
          TextView txtListChild = (TextView) convertView
                    .findViewById(R.id.lblListItem);
          txtListChild.setText(childText);

          ImageView imageView = (ImageView) convertView.findViewById(R.id.IV_child);
          int imageId = this.childImages.get(this.groupImages.get(groupPosition)).get(childPosition);
          imageView.setImageResource(imageId);

        return convertView;
    }
</code></pre>
