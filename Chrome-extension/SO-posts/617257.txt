<p>Heres my code that tofubeer updated that I updated again.  His didn't compile. missing InvalidGroupException class. Also, no package was specified. Switched EMPTY_LIST to emptyList() to avoid lack of parameterization.</p>

<pre><code>package fileutils;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class GroupReader2 {
    public static class InvalidGroupException extends Exception {
     private static final long serialVersionUID = 1L;

     public InvalidGroupException(String string) {
      super(string);
     }
    }

    public static GroupReader2 parseGroup(final String groupLine)
      throws InvalidGroupException {
     final String line;
     final String[] parts;

     if (groupLine == null) {
      throw new IllegalArgumentException("groupLine cannot be null");
     }

     line = groupLine.trim();

     if (line.startsWith("#") || line.isEmpty()) {
      return null;
     }

     parts = line.split(":");

     if (parts.length &lt; 3) {
      throw new InvalidGroupException(groupLine
        + "must be in the format of name:passwd:gid[:userlist]");
     }

     try {
      final GroupReader2 group;
      final String name;
      final String passwd;
      final int gid;
      final List&lt;String&gt; userList;

      name = parts[0];
      passwd = parts[1];
      gid = Integer.parseInt(parts[2]);

      if (parts.length == 4) {
       userList = Arrays.asList(parts[3].split(","));
      } else {
       userList = Collections.emptyList();
      }

      group = new GroupReader2(name, passwd, gid, userList);

      return group;
     } catch (final NumberFormatException ex) {
      throw new InvalidGroupException(groupLine + " gid must be a number");
     }
    }

    private final int gid;
    private final String name;
    private final String passwd;

    private final List&lt;String&gt; userList;

    public GroupReader2(final String nm, final String pw, final int id,
      final List&lt;String&gt; users) {
     name = nm;
     passwd = pw;
     gid = id;
     userList = Collections.unmodifiableList(new ArrayList&lt;String&gt;(users));
    }

    public int getGid() {
     return (gid);
    }

    public String getName() {
     return (name);
    }

    public String getPasswd() {
     return (passwd);
    }

    public List&lt;String&gt; getUserList() {
     return (userList);
    }

    @Override
    public String toString() {
     final StringBuilder sb;

     sb = new StringBuilder();
     sb.append(name);
     sb.append(":");
     sb.append(passwd);
     sb.append(":");
     sb.append(gid);
     sb.append(":");

     for (final String user : userList) {
      sb.append(user);
      sb.append(",");
     }

     sb.setLength(sb.length() - 1);

     return (sb.toString());
    }
}
</code></pre>
