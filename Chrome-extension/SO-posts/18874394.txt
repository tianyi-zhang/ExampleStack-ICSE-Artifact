<p>The <em>setCameraDisplayOrientation()</em> method lets you change how the <strong>preview</strong> is displayed <strong>without affecting</strong> how the image is recorded (<a href="http://developer.android.com/training/camera/cameradirect.html#TaskOrientation">source</a>).</p>

<p>In order to change the actual recorded image you need to set the <em>rotation</em> parameter of the <em>Camera</em>. You do it like this:</p>

<pre><code>//STEP #1: Get rotation degrees
Camera.CameraInfo info = new Camera.CameraInfo();
Camera.getCameraInfo(Camera.CameraInfo.CAMERA_FACING_BACK, info);
int rotation = mActivity.getWindowManager().getDefaultDisplay().getRotation();
int degrees = 0;
switch (rotation) {
    case Surface.ROTATION_0: degrees = 0; break; //Natural orientation
        case Surface.ROTATION_90: degrees = 90; break; //Landscape left
        case Surface.ROTATION_180: degrees = 180; break;//Upside down
        case Surface.ROTATION_270: degrees = 270; break;//Landscape right
    }
int rotate = (info.orientation - degrees + 360) % 360;

//STEP #2: Set the 'rotation' parameter
Camera.Parameters params = mCamera.getParameters();
params.setRotation(rotate); 
mCamera.setParameters(params);
</code></pre>

<p>Your solution is kind of a workaround since you modify the image AFTER it was already recorded. This solution is cleaner and doesn't require all these 'if' statements before saving the image.</p>
