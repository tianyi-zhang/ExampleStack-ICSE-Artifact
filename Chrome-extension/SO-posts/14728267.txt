<p>Well following Class work for me :</p>

<pre><code>import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;
import android.os.Environment;
import android.util.Log;

public class HttpPictureUpload implements Runnable {
private String TAG = "HTTPFILEUPLOAD";
private URL connectURL;
private FileInputStream fileInputStream = null;
private String pictureFileName;
private String myName;

public HttpPictureUpload(String urlString, String pictureFileNameString,
        String myNameString) {
    try {
        connectURL = new URL(urlString);

        pictureFileName = pictureFileNameString;
        myName = myNameString;

    } catch (Exception ex) {
        Log.i(TAG, "URL Malformatted");
    }
}

public void SendPictureNow() {

    Sending();
}

private void Sending() {
    int maxBufferSize = 1 * 1024*1024*1024;
    String lineEnd = "\r\n";
    String twoHyphens = "--";
    String boundary = "*****";

    try {

        fileInputStream = new FileInputStream(Environment
                .getExternalStorageDirectory().toString()
                + "/Picture/"
                + pictureFileName);

        Log.e(TAG, "Starting Http File Sending to URL");

        // Open a HTTP connection to the URL
        HttpURLConnection conn = (HttpURLConnection) connectURL
                .openConnection();
        conn.setChunkedStreamingMode(maxBufferSize);
        // conn.setchu

        // Allow Inputs
        conn.setDoInput(true);

        // Allow Outputs
        conn.setDoOutput(true);

        // Don't use a cached copy.
        conn.setUseCaches(false);

        // Use a post method.
        conn.setRequestMethod("POST");

        conn.setRequestProperty("Connection", "Keep-Alive");

        conn.setRequestProperty("Content-Type",
                "multipart/form-data;boundary=" + boundary);

        DataOutputStream dos = new DataOutputStream(conn.getOutputStream());

        // sending appid
        dos.writeBytes(twoHyphens + boundary + lineEnd);
        dos.writeBytes("Content-Disposition: form-data; name=\"my_name\""
                + lineEnd);
        dos.writeBytes(lineEnd);
        dos.writeBytes(myName);
        dos.writeBytes(lineEnd);
        dos.writeBytes(twoHyphens + boundary + lineEnd);


        dos.writeBytes("Content-Disposition: form-data; name=\"file\";filename=\""
                + System.currentTimeMillis() + "\"" + lineEnd);
        dos.writeBytes(lineEnd);

        int bytesAvailable = fileInputStream.available();

        byte[] buffer = new byte[bytesAvailable];

        int bytesRead = fileInputStream.read(buffer, 0, bytesAvailable);

        while (bytesRead &gt; 0) {
            dos.write(buffer, 0, bytesAvailable);
            bytesAvailable = fileInputStream.available();
            bytesAvailable = Math.min(bytesAvailable, maxBufferSize);
            bytesRead = fileInputStream.read(buffer, 0, bytesAvailable);
        }
        dos.writeBytes(lineEnd);
        dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);

        fileInputStream.close();

        dos.flush();

        Log.e(TAG,
                "File Sent, Response: "
                        + String.valueOf(conn.getResponseCode()));

        InputStream is = conn.getInputStream();

        // retrieve the response from server
        int ch;

        StringBuffer b = new StringBuffer();

        while ((ch = is.read()) != -1) {
            b.append((char) ch);

        }

        String s = b.toString();

        Log.i("Response", s);
        dos.close();
    } catch (MalformedURLException ex) {
        Log.e(TAG, "URL error: " + ex.getMessage(), ex);
    }

    catch (IOException ioe) {
        Log.e(TAG, "IO error: " + ioe.getMessage(), ioe);
    }
}

@Override
public void run() {
    // TODO Auto-generated method stub
}
 }
</code></pre>

<p>Above class can be use to send picture file or any other file and one any string.<br>
To use above  :  </p>

<pre><code>HttpPictureUpload uploadPicture=new HttpPictureUpload("http://serverurl.com/webservice.php", "tux.png", "my name is john");
uploadPicture.SendPictureNow();
</code></pre>
