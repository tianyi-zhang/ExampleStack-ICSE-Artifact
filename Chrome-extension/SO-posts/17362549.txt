<p>1) Since you do not need expansion/collapse of check boxes, you may not need a tree. Just add the Checkboxes in the panel at respective position using preferred layout.</p>

<p>2) Build a model of checkboxes to have proper parent-child relations.</p>

<p>3) Add an actionListener to your checkbox, and listen to check/uncheck event. When a parent is checked, check all the child and vice versa.</p>

<p>Sample code</p>

<pre><code>        import java.awt.BorderLayout;
        import java.awt.Dimension;

        import java.awt.Toolkit;

        import java.awt.event.WindowAdapter;

        import java.awt.event.WindowEvent;

        import javax.swing.JFrame;
        import javax.swing.UIManager;


        public class NewJPanel extends javax.swing.JPanel {

            /** Creates new form NewJPanel */
            public NewJPanel() {
                initComponents();
            }


            @SuppressWarnings("unchecked")
            private void initComponents() {
                jCheckBox1 = new javax.swing.JCheckBox();
                jCheckBox2 = new javax.swing.JCheckBox();
                jCheckBox3 = new javax.swing.JCheckBox();

                jCheckBox1.setText("Tall Things");
                jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jCheckBox1ActionPerformed(evt);
                    }
                });

                jCheckBox2.setText("Buildings");

                jCheckBox3.setText("Giants");

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox3))
                        .addContainerGap(321, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox3)
                        .addGap(0, 232, Short.MAX_VALUE))
                );
            }

            private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2.setSelected(jCheckBox1.isSelected());
                jCheckBox3.setSelected(jCheckBox1.isSelected());
            }


            private javax.swing.JCheckBox jCheckBox1;
            private javax.swing.JCheckBox jCheckBox2;
            private javax.swing.JCheckBox jCheckBox3;
            public static void main(String[] args) {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

                    JFrame frame = new JFrame();
                    frame.setSize(new Dimension(400,200));
                    frame.getContentPane().setLayout(new BorderLayout());
                    frame.getContentPane().add(new NewJPanel());
                    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                    Dimension frameSize = frame.getSize();
                    if (frameSize.height &gt; screenSize.height) {
                        frameSize.height = screenSize.height;
                    }
                    if (frameSize.width &gt; screenSize.width) {
                        frameSize.width = screenSize.width;
                    }
                    frame.setLocation( ( screenSize.width - frameSize.width ) / 2, ( screenSize.height - frameSize.height ) / 2 );
                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
</code></pre>
