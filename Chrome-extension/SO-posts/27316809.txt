<p>Hurray....! Finally it works after some minor changes in the MainActivity.java. And here is that code:</p>

<p><div class="snippet" data-lang="js" data-hide="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>package com.example.webview;


import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.webkit.WebChromeClient;
import android.widget.Button;
import android.widget.EditText;


public class MainActivity extends Activity {
 
 /** Called when the activity is first created. */
 
 WebView Browser;
 
 private class WebClient extends WebViewClient
 {
  @Override
  public boolean shouldOverrideUrlLoading(WebView view, String url) 
  {
   
   // TODO Auto-generated method stub

   view.loadUrl(url);
   return true;
  }
 }
 
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Browser=(WebView) findViewById(R.id.webView1);
        Browser.getSettings().setJavaScriptEnabled(true);
            // Give your desired URL below
        Browser.loadUrl("http://www.xxxxxxxxxxxxxx.com");
        Browser.setWebViewClient(new WebClient());
        Browser.setWebChromeClient(new WebChromeClient()});
    }
    
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
     if(event.getAction()==KeyEvent.ACTION_DOWN)
     {
      switch(keyCode)
      {
      case KeyEvent.KEYCODE_BACK:
       if(Browser.canGoBack())
       {
        Browser.goBack();
       }
       else
       {
        backButtonHandler();
       }
       return true;
      }
     }
     return super.onKeyDown(keyCode, event);
    }
    
    public void backButtonHandler() {
     AlertDialog.Builder alertDialog=new AlertDialog.Builder(MainActivity.this);
     
     // Setting Dialog Title 
        // Setting Dialog Message
     
     alertDialog.setTitle("");
     alertDialog.setIcon(R.drawable.dialog_icon1);
     alertDialog.setMessage("Exit Now?");
     
     // Setting Icon to Dialog 
      // Setting Positive "Yes" Button
     
     alertDialog.setPositiveButton("Exit", new DialogInterface.OnClickListener() {
      public void onClick(DialogInterface dialog, int which) { finish();
    }
  });
     
     // Setting Negative "NO" Button
     
     alertDialog.setNegativeButton("No", new DialogInterface.OnClickListener() {
      public void onClick(DialogInterface dialog, int which) {
       
       // Write your code here to invoke NO event
       
       dialog.cancel();
      }
  });
     
     // Showing Alert Message
     
     alertDialog.show();
    }
}</code></pre>
</div>
</div>
</p>
