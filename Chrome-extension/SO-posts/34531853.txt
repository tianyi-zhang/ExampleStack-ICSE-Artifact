<p>Ok figured it out.
As the drawable, <code>will</code> was on top of <code>obama</code> in the design, the <code>fadeBack</code> method was always being called. 
Changed the code so that the crossfade and return was contained in one method, with a counter to control which way it went.</p>

<p>MainActivity.java</p>

<pre><code>package com.example.richardcurteis.layoutdemo;

import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ImageView;

public class MainActivity extends AppCompatActivity {

    ImageView obama;
    ImageView will;
    int count;

    public void fade(View view) {

        if (count == 0) {
            obama.animate().alpha(0f).setDuration(2000);
            will.animate().alpha(1f).setDuration(2000);
            count++;
        } else {
            will.animate().alpha(0f).setDuration(2000);
            obama.animate().alpha(1f).setDuration(2000);
            count = 0;
        }

    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        obama = (ImageView) findViewById(R.id.obama);
        will = (ImageView) findViewById(R.id.will);
        count = 0;

        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
</code></pre>

<p>content_main.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:context="com.example.richardcurteis.layoutdemo.MainActivity"
    tools:showIn="@layout/activity_main"
    android:clickable="false"&gt;

     &lt;ImageView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/obama"
        android:layout_alignParentTop="true"
        android:layout_alignParentStart="true"
         android:src="@drawable/obama"
         android:layout_alignParentLeft="true" /&gt;

    &lt;ImageView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/will"
        android:layout_alignTop="@+id/obama"
        android:layout_alignParentStart="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentLeft="true"
        android:src="@drawable/will"
        android:onClick="fade"
        android:alpha="0" /&gt;
&lt;/RelativeLayout&gt;
</code></pre>
