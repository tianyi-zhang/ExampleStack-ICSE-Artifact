<p>Here is how i upload files to my server from my Android Application</p>

<pre><code>public void UploadFile(final String sourceFileUri) {

        new Thread(new Runnable() {

            @Override
            public void run() {
                String fileName = sourceFileUri;
                String upLoadServerUri = "http://example.com/fileuploader.php";

                HttpURLConnection conn = null;
                DataOutputStream dos = null;
                String lineEnd = "\r\n";
                String twoHyphens = "--";
                String boundary = "*****";
                int bytesRead, bytesAvailable, bufferSize;
                byte[] buffer;
                int maxBufferSize = 1 * 1024 * 1024;
                File sourceFile = new File(sourceFileUri);

                try {

                    // open a URL connection to the Servlet
                    FileInputStream fileInputStream = new FileInputStream(
                            sourceFile);
                    URL url = new URL(upLoadServerUri);

                    // Open a HTTP connection to the URL
                    conn = (HttpURLConnection) url.openConnection();
                    conn.setDoInput(true); // Allow Inputs
                    conn.setDoOutput(true); // Allow Outputs
                    conn.setUseCaches(false); // Don't use a Cached Copy
                    conn.setRequestMethod("POST");
                    conn.setChunkedStreamingMode(1024);
                    conn.setRequestProperty("Connection", "Keep-Alive");
                    conn.setRequestProperty("ENCTYPE", "multipart/form-data");
                    conn.setRequestProperty("Content-Type",
                            "multipart/form-data;boundary=" + boundary);
                    conn.setRequestProperty("uploaded_file", fileName);

                    dos = new DataOutputStream(conn.getOutputStream());

                    dos.writeBytes(twoHyphens + boundary + lineEnd);
                    dos.writeBytes("Content-Disposition: form-data; name='uploaded_file';filename="
                            + fileName + "" + lineEnd);

                    dos.writeBytes(lineEnd);

                    // create a buffer of maximum size
                    bytesAvailable = fileInputStream.available();

                    bufferSize = Math.min(bytesAvailable, maxBufferSize);
                    buffer = new byte[bufferSize];

                    // read file and write it into form...
                    bytesRead = fileInputStream.read(buffer, 0, bufferSize);

                    while (bytesRead &gt; 0) {

                        dos.write(buffer, 0, bufferSize);
                        bytesAvailable = fileInputStream.available();
                        bufferSize = Math.min(bytesAvailable, maxBufferSize);
                        bytesRead = fileInputStream.read(buffer, 0, bufferSize);

                    }

                    // send multipart form data necesssary after file data...
                    dos.writeBytes(lineEnd);
                    dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);

                    // Responses from the server (code and message)
                    int serverResponseCode = conn.getResponseCode();

                    Log.d("X", "RESPONSE:" + conn.getResponseMessage());

                    if (conn.getResponseMessage().equals("success")) {
                        Log.i("X", "This runs ok");
                    }

                    Log.d("X", String.valueOf(serverResponseCode));

                    // close the streams //
                    try {
                        fileInputStream.close();
                        dos.flush();
                        dos.close();
                    } catch (IOException e) {

                        e.printStackTrace();
                        Log.e("X", e.getMessage());
                    }

                    if (serverResponseCode == 200) {
                        Log.d("X", "Network Ok");
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();

    }
</code></pre>

<p>All you want to pass the File Path into the function. :) Enjoy</p>
