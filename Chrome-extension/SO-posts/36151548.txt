<p>you have follow some steps.</p>

<ol>
<li><p>if you using Spring Java Based configuration then add CORSFilter</p>

<pre><code>public class CORSFilter implements Filter {
public void doFilter(ServletRequest req, ServletResponse res,
    FilterChain chain) throws IOException, ServletException {
System.out
        .println("Filtering on...........................................................");
HttpServletResponse response = (HttpServletResponse) res;
response.setHeader("Access-Control-Allow-Origin", "*");
response.setHeader("Access-Control-Allow-Methods",
        "POST, GET, PUT, OPTIONS, DELETE");
response.setHeader("Access-Control-Max-Age", "3600");
response.setHeader("Access-Control-Allow-Headers",
        "x-requested-with, Content-Type");
chain.doFilter(req, res);
}

public void init(FilterConfig filterConfig) {
}

public void destroy() {
}
}
</code></pre></li>
</ol>

<p>OR </p>

<ol>
<li>you are using xml based spring configuration then try to add </li>
</ol>

<p><code>&lt;context:annotation-config/&gt;</code> 
in your Spring configuration file. It will support your controller annotations.</p>

<ol start="2">
<li><p>configure @RequestMapping like below example</p>

<pre><code>@RequestMapping(value = "/servicetest", method = {RequestMethod.GET})
</code></pre></li>
<li><p>still not working ?, then remove header from http call, just make simple http call, if this step not working then you can go for next step.</p></li>
<li><p>still not working then don't try to return actual entity just return proxy object or dummy object, if its working then go ahead.</p></li>
</ol>
