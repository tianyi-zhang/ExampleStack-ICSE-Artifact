<p>Yes, this is the sollution. The folder name "app_%{TYPE}" is the one returned by the calling of the function getDir(%{TYPE}, MODE_PRIVATE);</p>

<p>So the following code, does the desired functionality:</p>

<pre><code>   private static void copyRawFile(Context ctx, int resid, File file, String mode) throws IOException, InterruptedException {
           final String abspath = file.getAbsolutePath();
           // Write the iptables binary
           final FileOutputStream out = new FileOutputStream(file);
           final InputStream is = ctx.getResources().openRawResource(resid);
           byte buf[] = new byte[1024];
           int len;
           while ((len = is.read(buf)) &gt; 0) {
               out.write(buf, 0, len);
           }
           out.close();
           is.close();
           // Change the permissions
           Runtime.getRuntime().exec("chmod " + mode + " " + abspath).waitFor();
       }

       private boolean assertBinaries(Context ctx, boolean showErrors) {
           try {
               File file = new File(ctx.getDir("bin", MODE_PRIVATE), "xtables_multi");
               if (!file.exists()) {
                   copyRawFile(ctx, R.raw.xtables_multi, file, "755");
               }
               file = new File(ctx.getDir("bin", MODE_PRIVATE), "iptables_new.sh");
               if (!file.exists()) {
                   copyRawFile(ctx, R.raw.iptables_new, file, "755");
               }
           } catch(Exception e) {
               if (showErrors) {
                   alert(ctx, R.string.error_assertbinaries + " " + e);
               }
               return false;
           }
        return true;
       }

       public static void alert(Context ctx, CharSequence msg) {
           if (ctx != null) {
               Toast.makeText(ctx, msg, Toast.LENGTH_SHORT).show();
           }
       }
</code></pre>

<p>Hope that helps,</p>

<p>cheers; Abel.</p>
