<p>The url in <code>JsonObjectRequest()</code> is not optional, and the JSONObject parameter is used to post parameters with the request to the url.</p>

<p>From the documentation:
<a href="http://afzaln.com/volley/com/android/volley/toolbox/JsonObjectRequest.html">http://afzaln.com/volley/com/android/volley/toolbox/JsonObjectRequest.html</a></p>

<p><a href="http://developer.android.com/training/volley/index.html">http://developer.android.com/training/volley/index.html</a></p>

<blockquote>
  <p>JsonObjectRequest</p>
  
  <p>public JsonObjectRequest(int method,
                           String url,
                           JSONObject jsonRequest,
                           Response.Listener listener,
                           Response.ErrorListener errorListener) Creates a new request. </p>
  
  <p>Parameters:</p>
  
  <p>method - the HTTP method to use</p>
  
  <p>url - URL to fetch the JSON from</p>
  
  <p>jsonRequest - A JSONObject to post with the request. Null is allowed
  and indicates no parameters will be posted along with request.</p>
  
  <p>listener - Listener to receive the JSON response</p>
  
  <p>errorListener - Error listener, or null to ignore errors.</p>
</blockquote>

<p>Using <code>HttpURLConnection</code>:</p>

<p><a href="http://developer.android.com/reference/java/net/HttpURLConnection.html">http://developer.android.com/reference/java/net/HttpURLConnection.html</a></p>

<p>The code would be something like this:</p>

<pre><code> public class getData extends AsyncTask&lt;String, String, String&gt; {

        HttpURLConnection urlConnection;

        @Override
        protected String doInBackground(String... args) {

            StringBuilder result = new StringBuilder();

            try {
                URL url = new URL("https://api.github.com/users/dmnugent80/repos");
                urlConnection = (HttpURLConnection) url.openConnection();
                InputStream in = new BufferedInputStream(urlConnection.getInputStream());

                BufferedReader reader = new BufferedReader(new InputStreamReader(in));

                String line;
                while ((line = reader.readLine()) != null) {
                    result.append(line);
                }

            }catch( Exception e) {
                e.printStackTrace();
            }
            finally {
                urlConnection.disconnect();
            }


            return result.toString();
        }

        @Override
        protected void onPostExecute(String result) {

            //Do something with the JSON string

        }

    }
</code></pre>
