<p>Yeah, <code>ViewPager</code> and other scrolling items don't play well together by default. When I have to do such things, I typically subclass <code>ViewPager</code> to make something that's aware of children that can scroll. Then in my <code>onInterceptTouchEvent()</code> I check whether the hit rect is within that child and don't intercept the touch event so the child has a whack at it. Something like this:</p>

<pre><code>/**
 * Override to not intercept touch events within our scroller if it exists.
 */
@Override
public boolean onInterceptTouchEvent(MotionEvent ev) {
    if(scrollerId != 0) {
        View scroller = findViewById(scrollerId);
        if(scroller != null) {
            Rect rect = new Rect();
            scroller.getHitRect(rect);
            if(rect.contains((int)ev.getX(), (int)ev.getY())) {
                return false;
            }
        }
    }
    return super.onInterceptTouchEvent(ev);
}
</code></pre>

<p>Then all you need is a way to set that <code>scrollerId</code> (a simple public method works).</p>

<p>Note another way is if you are using a <code>ScrollView</code> for <em>vertically</em> scrolling elements with <code>ViewPager</code> <em>children</em>, you'll need to go a different direction. Have a subclass of <code>ScrollView</code> that detects vertical scrolling directions and bails for horizontal scrolling so the <code>ViewPager</code> picks it up.</p>

<pre><code>@Override
public boolean onInterceptTouchEvent(MotionEvent ev) {
    switch (ev.getAction()) {
        case MotionEvent.ACTION_DOWN:
            xDistance = yDistance = 0f;
            lastX = ev.getX();
            lastY = ev.getY();
            break;
        case MotionEvent.ACTION_MOVE:
            final float curX = ev.getX();
            final float curY = ev.getY();
            xDistance += Math.abs(curX - lastX);
            yDistance += Math.abs(curY - lastY);
            lastX = curX;
            lastY = curY;
            if (xDistance &gt; yDistance)
                return false;
    }

    return super.onInterceptTouchEvent(ev);
}
</code></pre>
