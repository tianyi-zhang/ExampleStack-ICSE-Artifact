<p>You can try something similar to the following:</p>

<pre><code>public String getDataString() {
    String someString = "";

    JSONObject jsonObj = getData();
    Log.i("JSON string =&gt;", jsonObj.toString());

    String text= null;

    try {
            // Handle cols
            JSONArray cols = jsonObj.getJSONArray("cols");
            int i = 0;
            Log.i("i", i+ "," + cols.length() ); //TODO delete this
            while(i&lt;cols.length()) {

                JSONObject obj= cols.getJSONObject(i);
                String labelType = obj.getString("label");

                if(labelType.equals("time"))
                {
                    text = obj.getString("datetime");
                }
                else if(labelType.equals("Temperature"))
                {
                    text = obj.getString("number");
                }

                // Do something with String text

                i++;
            }
            // Handle rows
            JSONArray rows= jsonObj.getJSONArray("rows");
            int i = 0;
            Log.i("i", i+ "," + rows.length() ); //TODO delete this
            while(i&lt;rows.length()) {

                JSONObject obj= rows.getJSONObject(i);
                JSONArray cObj= obj.getJSONArray("c");
                JSONObject vFirst = cObj.getJSONObject(0);
                JSONObject vSecond = cObj.getJSONObject(1);

                String firstString = vFirst.getString("v");
                String secondString = vSecond .getString("v");

                // Do something with String firstString and/or String secondString

                i++;
            }

        }

    } catch (JSONException e) {
        Log.e("testing","Failed to load JSON");
        e.printStackTrace();
    }
. 
.
.
// Return some string
return someString;
. 
.
.
}


public static JSONObject getData() {

    HttpGet httpGet = new HttpGet("YOUR_URI_HERE");
    HttpClient client = new DefaultHttpClient();
    HttpResponse response;
    StringBuilder stringBuilder = new StringBuilder();

    try {
        response = client.execute(httpGet);
        HttpEntity entity = response.getEntity();
        InputStream stream = entity.getContent();
        int b;
        while ((b = stream.read()) != -1) {
            stringBuilder.append((char) b);
        }
    } catch (ClientProtocolException e) {
    } catch (IOException e) {
    }

    JSONObject jsonObject = new JSONObject();
    try {
        jsonObject = new JSONObject(stringBuilder.toString());
    } catch (JSONException e) {
        e.printStackTrace();
    }

    return jsonObject;
}
</code></pre>
