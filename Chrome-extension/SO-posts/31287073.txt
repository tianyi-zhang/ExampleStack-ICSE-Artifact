<p>You have in code:</p>

<pre><code>this.listview = (ListView)findViewById(R.id.Listview);
</code></pre>

<p>Where in your XML your id is different:</p>

<pre><code>&lt;ListView
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:id="@+id/conversationListview" /&gt;
</code></pre>

<p>Also, move it to your <code>activity_conversation_threads.xml</code>, it doesn't need separate layout.</p>

<hr>

<p>Add to class `ConversationThreads:</p>

<pre><code>private ArrayList&lt;String&gt; numbers;
private CardListviewAdapter adapter;
</code></pre>

<p>And then change your method to:</p>

<pre><code>private void populateConversations()
{
    Log.d("Populate", "Populating...");

    //Array of Strings returned -- Target Data

    numbers = TSMS.getConversationNumbers(getApplicationContext());

    Log.d("ArrayList size", String.valueOf(numbers.size()); // check if it returns non zero

    adapter = new CardListviewAdapter(getApplicationContext(),numbers);
    listview.setAdapter(adapter);

}
</code></pre>

<hr>

<p>Code for adapter</p>

<pre><code>public class CardListViewAdapter extends BaseAdapter {
    private Context context;
    private ArrayList&lt;String&gt; numbers;


    public CardListViewAdapter(Context context, ArrayList&lt;String&gt; numbers) {

        this.context = context;
        this.numbers = numbers;

    }

    @Override
    public int getCount() {
        return numbers.size();
    }

    @Override
    public Object getItem(int position) {
        return numbers.get(position);
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View rowView = convertView;

        if (rowView == null) {
            LayoutInflater layoutInflater = LayoutInflater.from(context);
            rowView = layoutInflater.inflate(R.layout.conversation, null);
            ViewHolder viewHolder = new ViewHolder(rowView);
            rowView.setTag(viewHolder);
        }

        final ViewHolder holder = (ViewHolder) rowView.getTag();

        holder.numbers.setText(numbers.get(position));

        return rowView;
    }

    public class ViewHolder {

        private final TextView numbers;

        public ViewHolder(View v) {
            this.numbers = (TextView) v.findViewById(R.id.numbertitle);
        }
    }
}
</code></pre>
