<p>Well, first <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html" rel="nofollow"><code>Class</code></a> doesn't have a <code>getPrimitiveClass(String)</code> method. Second, I found <a href="http://www.java2s.com/Code/Java/Reflection/isPrimitivetypegetPrimitiveClassgetTypeDefaultValue.htm" rel="nofollow">this</a> link which implements a method with that name, from the link</p>

<blockquote>
<pre><code>public static final Class&lt;?&gt; getPrimitiveClass(String typeName) {
    if (typeName.equals("byte"))
        return byte.class;
    if (typeName.equals("short"))
        return short.class;
    if (typeName.equals("int"))
        return int.class;
    if (typeName.equals("long"))
        return long.class;
    if (typeName.equals("char"))
        return char.class;
    if (typeName.equals("float"))
        return float.class;
    if (typeName.equals("double"))
        return double.class;
    if (typeName.equals("boolean"))
        return boolean.class;
    if (typeName.equals("void"))
        return void.class;
    throw new IllegalArgumentException("Not primitive type : " + typeName);
}
</code></pre>
</blockquote>

<p>So, if you're using the method above - the answer is no. They're the same.</p>
