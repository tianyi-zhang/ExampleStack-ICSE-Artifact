<p>Because <code>TestJUnit5</code> extends a <code>TestCase</code> (not <code>TestJunit1</code>) so JUnit sees the test case and runs it.</p>

<p>From the <code>junit.framework.TestSuite</code> code, any class that <em>inherits</em> <code>Test</code> class or <em>extends</em> <code>TestCase</code> can get registered with <code>TestSuite</code> constructor.</p>

<pre><code>private void addTestsFromTestCase(final Class&lt;?&gt; theClass) {
        fName = theClass.getName();
        try {
            getTestConstructor(theClass); // Avoid generating multiple error messages
        } catch (NoSuchMethodException e) {
            addTest(warning("Class " + theClass.getName() + " has no public constructor TestCase(String name) or TestCase()"));
            return;
        }

        if (!Modifier.isPublic(theClass.getModifiers())) {
            addTest(warning("Class " + theClass.getName() + " is not public"));
            return;
        }

        Class&lt;?&gt; superClass = theClass;
        List&lt;String&gt; names = new ArrayList&lt;String&gt;();
        while (Test.class.isAssignableFrom(superClass)) {
            for (Method each : MethodSorter.getDeclaredMethods(superClass)) {
                addTestMethod(each, names, theClass);
            }
            superClass = superClass.getSuperclass();
        }
        if (fTests.size() == 0) {
            addTest(warning("No tests found in " + theClass.getName()));
        }
    }
</code></pre>

<p>To get <code>TestJunit1</code> to work, you will have to create an annotative <code>Suite</code>.</p>

<pre><code>import org.junit.runner.RunWith;
import org.junit.runners.Suite;

@RunWith(Suite.class)
@Suite.SuiteClasses({
   TestJunit1.class,
   TestJunit2.class,
   TestJunit5.class
})

public class JunitTestSuite {  
}
</code></pre>

<p>And to run it locally:</p>

<pre><code>import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

public class JunitTestSuiteRunner {

    public static void main(String[] args) {

        Result result = JUnitCore.runClasses(JunitTestSuite.class);
        for (Failure fail : result.getFailures()) {
            System.out.println(fail.toString());
        }
        if (result.wasSuccessful()) {
            System.out.println("All tests finished successfully...");
        }
    }
}
</code></pre>

<p>I hope this helps.</p>

<p><em>Source <a href="http://examples.javacodegeeks.com/core-java/junit/junit-suite-test-example/" rel="nofollow">reference</a></em>.</p>
