<p>When you returning <code>false</code> within <code>OnTouchListener</code>, it will allow <code>OnClickListener</code> to handle clicks. If you returning <code>true</code> within <code>OnTouchListener</code>, it will not allow other events to trigger at same time. So within your <code>OnTouchListener</code> try to return <code>true</code> if you don't want to handle <code>click</code> and <code>touch</code> events at same time. </p>

<pre><code>chatHead.setOnTouchListener(new View.OnTouchListener() {

              private int initialX;
              private int initialY;
              private float initialTouchX;
              private float initialTouchY;

              @Override public boolean onTouch(View v, MotionEvent event) {

                  if (on.equals("true"))
                  {
                      params.x = 0;
                        params.y = 0;


                        windowManager.updateViewLayout(chatHead, params); 
                  }

                switch (event.getAction()) {
                  case MotionEvent.ACTION_DOWN:
                    initialX = params.x;
                   initialY = params.y;
                    initialTouchX = event.getRawX();
                   initialTouchY = event.getRawY();
                     // Toast.makeText(getApplicationContext(), "1", Toast.LENGTH_SHORT).show();

                    return true;

                  case MotionEvent.ACTION_UP:
                    //  Toast.makeText(getApplicationContext(), "2", Toast.LENGTH_SHORT).show();
                    return true;
                  case MotionEvent.ACTION_MOVE:
                    params.x = initialX + (int) (event.getRawX() - initialTouchX);
                   params.y = initialY + (int) (event.getRawY() - initialTouchY);

                    windowManager.updateViewLayout(chatHead, params);

                   return true;
                    }
                return true;
              }
        });
      }
</code></pre>
