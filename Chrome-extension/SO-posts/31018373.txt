<p>Here's how to change the behavior:</p>

<p>First, you need this method to scour all Components in JFileChooser:</p>

<pre><code>@SuppressWarnings("unchecked")
private JList&lt;Class&lt;?&gt;&gt; findFileList(Component comp){
    if (comp instanceof JList){
        return (JList&lt;Class&lt;?&gt;&gt;) comp;
    }
    if (comp instanceof Container){
        for (Component c : ((Container) comp).getComponents()){
            JList&lt;Class&lt;?&gt;&gt; list = findFileList(c);
            if (list != null){
                return list;
            }
        }
    }
    return null;
}
</code></pre>

<p>Next, we need to find all MouseListeners available from the JList of all components, and remove all of them. It is possible that some MouseListeners may register double clicks and will affect how the text field displays its text. This will help to remove all of those affecting MouseListeners.</p>

<p>But removing MouseListeners will also affect how the JFileChooser is to handle opening files. We need to handle this action ourselves. Here's a simple way to do this.</p>

<pre><code>final JFileChooser opener = new JFileChooser();
JList&lt;Class&lt;?&gt;&gt; list = findFileList(opener);
LOOP_TEMP1: for (MouseListener l : list.getMouseListeners()){
    if (l.getClass().getName().indexOf("FilePane") &gt;= 0){
        list.removeMouseListener(l);
        list.addMouseListener(new MouseListener(){
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 1){
                    File file = opener.getSelectedFile();
                    if (file != null){
                        BasicFileChooserUI ui = (BasicFileChooserUI) opener.getUI();
                        ui.setFileName(file.getName());
                    }
                }
                else if (e.getClickCount() == 2){
                    File file = opener.getSelectedFile();
                    if (file != null){
                        if (file.isDirectory()){
                            opener.setCurrentDirectory(file);
                        }
                        else if (file.isFile()){
                            opener.setSelectedFile(file);
                        }
                        BasicFileChooserUI ui = (BasicFileChooserUI) opener.getUI();
                        ui.setFileName(file.getName()); 
                    }
                }
            }
            @Override
            public void mouseEntered(MouseEvent e) {
            }
            @Override
            public void mouseExited(MouseEvent e) {
            }
            @Override
            public void mousePressed(MouseEvent e) {
            }
            @Override
            public void mouseReleased(MouseEvent e) {
            }
        });
        break LOOP_TEMP1;
    }
}
</code></pre>

<p>Now, whenever the user double clicks on a folder/directory, JFileChooser will no longer display long file paths in the text field. And it now looks better. You may have to handle opening files after double clicking on your own.</p>

<p>Hope you find this somewhat helpful!</p>
