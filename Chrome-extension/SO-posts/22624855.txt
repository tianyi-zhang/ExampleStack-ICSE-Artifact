<p>You can achieve this by implementing the following code. </p>

<pre><code>/**
 * Scales image bitmap to fit in correctly in the view. The
 * {@link LayoutParams} for the view in which the bitmap to be rendered is
 * set here
 * 
 * @param bitmap
 *            the {@link Bitmap} object to be scaled
 * @param view
 *            the view in which the bitmap will be rendered
 * @param context
 *            the context being used for invoking the method dpToPx(int,
 *            Context)
 * @return a scaled {@link Bitmap} object for the {@link View} obejct
 *         provided
 */
public static Bitmap scaleAssetImage(Bitmap bitmap, View view,
        Context context) {
    int width = bitmap.getWidth();
    int height = bitmap.getHeight();
    int bounding = dpToPx(250, context);

    float xScale = ((float) bounding) / width;
    float yScale = ((float) bounding) / height;
    float scale = (xScale &lt;= yScale) ? xScale : yScale;

    Matrix matrix = new Matrix();
    matrix.postScale(scale, scale);
    Bitmap scaledBitmap = Bitmap.createBitmap(bitmap, 0, 0, width, height,
            matrix, true);
    width = scaledBitmap.getWidth();
    height = scaledBitmap.getHeight();
    RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) view
            .getLayoutParams();
    params.width = width;
    params.height = height;
    view.setLayoutParams(params);
    return scaledBitmap;
}

/**
 * Converts dp to pixel
 * 
 * @param dpValue
 *            the integer value to be scaled into pixels
 * @param context
 *            the context being used for accessing resources
 * @return the converted value
 */
private static int dpToPx(int dpValue, Context context) {
    float density = context.getResources().getDisplayMetrics().density;
    return Math.round((float) dpValue * density);
}
</code></pre>

<p>The <code>public static Bitmap scaleAssetImage(Bitmap bitmap, View view, Context context)</code> method will accept your <code>bitmap</code> along with your <code>ImageView</code> and will set the <code>LayoutParams</code> based on the <code>bitmap</code> size. </p>
