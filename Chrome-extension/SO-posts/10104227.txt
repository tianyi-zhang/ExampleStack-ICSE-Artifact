<p>Well, I solved it using php to write a link to the zip dynamically to the screen using this script:</p>

<pre><code>function file_list($d,$x){
    foreach(array_diff(scandir($d,1),array('.','..')) as $f)if(is_file($d.'/'.$f)&amp;&amp;(($x)?ereg($x.'$',$f):1))$l[]=$f;
    return $l;
}

$arr = file_list("../download/",".zip");

$filename = $arr[0];
$filepath = "http://".$_SERVER['SERVER_NAME']."/download/".$arr[0];
print($filepath);
</code></pre>

<p>Then on the android, I used a BufferedReader to get the link correctly:</p>

<pre><code>private String getZipURL(){
    String result = "";
    InputStream is = null;
    try{
        String url = ZipURL;
        HttpPost httppost = new HttpPost(url);
        HttpParams httpParameters = new BasicHttpParams();

        int timeoutConnection = 3000;
        HttpConnectionParams.setConnectionTimeout(httpParameters, timeoutConnection);

        int timeoutSocket = 3000;
        HttpConnectionParams.setSoTimeout(httpParameters, timeoutSocket);

        DefaultHttpClient httpclient = new DefaultHttpClient(httpParameters);

        HttpResponse response = httpclient.execute(httppost);
        HttpEntity entity = response.getEntity();
        is = entity.getContent();
    }catch(Exception e){
        Log.e("getZipURL", "Error in http connection "+e.toString());
        return null;
    }

    try{
        BufferedReader reader = new BufferedReader(new InputStreamReader(is,"iso-8859-1"),8);
        StringBuilder sb = new StringBuilder();
        String line = null;
        while ((line = reader.readLine()) != null) {
            sb.append(line + "\n");
        }
        is.close();

        result=sb.toString();
        return result;
    }catch(Exception e){
        Log.e("convertZipURL", "Error converting result "+e.toString());
        return null;
    }
}
</code></pre>

<p>It may seem wrong, but it works as I want. I posted the code so I can get a workaround for someone with the same problem. Thanks!</p>
