<p>Pass in your listview as a paramater to your <code>RouteLocationsTask</code> class and set the adapter in <code>onPostExecute</code>.</p>

<p>Like this:</p>

<p><strong>RouteLocationsTask.java</strong></p>

<pre><code>public class RouteLocationsTask extends AsyncTask&lt;Void, Void, ArrayList&lt;RouteItem&gt;&gt;{

private RouteListAdapter adapter;
private ArrayList&lt;RouteItem&gt; itemsList;
private ArrayList&lt;String&gt; routeFiles;
private ListView listview;
private Context context;

public RouteLocationsTask(ListView listview, RouteListAdapter adapter, ArrayList&lt;String&gt; routeFiles, Context context)
{
    this.adapter = adapter;
    itemsList = new ArrayList&lt;RouteItem&gt;();
    this.routeFiles = routeFiles;
    this.context = context;
    this.listview = listview;
}

@Override
protected ArrayList&lt;RouteItem&gt; doInBackground(Void... params) {
    for (int i = 0; i &lt; routeFiles.size(); i++) {

        File loadFile = new File(Environment.getExternalStorageDirectory()+"/LocationTracker/Routes/"+routeFiles.get(i));
        try {
            BufferedReader br = new BufferedReader(new FileReader(loadFile));

            //while ((line = br.readLine()) != null) {
            String firstEntry = br.readLine();
            GeoPoint startPt = getGeoPointFromString(firstEntry);

            String lastEntry = tail(loadFile);
            GeoPoint endPt = getGeoPointFromString(lastEntry);

            Geocoder geocoder = new Geocoder(context, Locale.getDefault());
            List&lt;Address&gt; addresses;

            addresses = geocoder.getFromLocation(startPt.getLatitude(), startPt.getLongitude(), 1);
            String startPtStr = addresses.get(0).getAddressLine(0);

            addresses = geocoder.getFromLocation(endPt.getLatitude(), endPt.getLongitude(), 1);
            String endPtStr = addresses.get(0).getAddressLine(0);

            itemsList.add(new RouteItem(startPtStr, endPtStr, 3.4));
        }
        catch(FileNotFoundException e)
        {
            e.printStackTrace();
        }
        catch (IOException e) {
            e.printStackTrace();
        }
    }

    return itemsList;
}

public void onPostExecute(ArrayList&lt;RouteItem&gt; itemsList)
{
    super.onPostExecute(itemsList);

    adapter.setItemList(itemsList);
    adapter.notifyDataSetChanged();
    listview.setAdapter(adapter);

}

 public GeoPoint getGeoPointFromString(String coordinates)
{
    String loadedLatStr = coordinates.substring(coordinates.indexOf("(") + 1, coordinates.indexOf(","));
    String loadedLongStr = coordinates.substring(coordinates.indexOf(",") + 1, coordinates.lastIndexOf(","));

    double loadedLat = Double.parseDouble(loadedLatStr);
    double loadedLong = Double.parseDouble(loadedLongStr);

    return new GeoPoint(loadedLat, loadedLong);
}

public String tail( File file ) {
    RandomAccessFile fileHandler = null;
    try {
        fileHandler = new RandomAccessFile( file, "r" );
        long fileLength = fileHandler.length() - 1;
        StringBuilder sb = new StringBuilder();

        for(long filePointer = fileLength; filePointer != -1; filePointer--){
            fileHandler.seek( filePointer );
            int readByte = fileHandler.readByte();

            if( readByte == 0xA ) {
                if( filePointer == fileLength ) {
                    continue;
                }
                break;

            } else if( readByte == 0xD ) {
                if( filePointer == fileLength - 1 ) {
                    continue;
                }
                break;
            }

            sb.append( ( char ) readByte );
        }

        return sb.reverse().toString();
    } catch( java.io.FileNotFoundException e ) {
        e.printStackTrace();
        return null;
    } catch( java.io.IOException e ) {
        e.printStackTrace();
        return null;
    } finally {
        if (fileHandler != null )
            try {
                fileHandler.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
    }
}
}
</code></pre>

<p><strong>RouteList.java</strong></p>

<pre><code>public class RouteList extends AppCompatActivity {
ArrayList&lt;RouteItem&gt; itemsList;
ArrayList&lt;String&gt; routeFiles;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_route_list);

    itemsList = new ArrayList&lt;RouteItem&gt;();

    RouteListAdapter adapter = new RouteListAdapter(this, R.layout.route_list_item);
    ListView listView = (ListView) findViewById(R.id.routeList);


    getRouteFiles();
    RouteLocationsTask task = new RouteLocationsTask(listView,adapter, routeFiles, getApplicationContext());
    task.execute();
}

public void getRouteFiles()
{
    String path = Environment.getExternalStorageDirectory()+"/LocationTracker/Routes/";

    // Read all files sorted into the values-array
    routeFiles = new ArrayList();
    File dir = new File(path);

    String[] list = dir.list();
    if (list != null) {
        for (String file : list) {
            if (!file.startsWith(".")) {
                routeFiles.add(file);
            }
        }
    }
    Collections.sort(routeFiles);
}
}
</code></pre>
