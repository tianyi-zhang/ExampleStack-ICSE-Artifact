<p>This is the code I'm using to copy all files in assets to a sdcard. It's a asynch task so you want to implement some kind of respond method to know when the code is done and the db is useable.</p>

<p>The variable maindir is the folder location that you're copying to </p>

<p>and remember to give promissions in manifest file </p>

<pre><code>public class copyEveStaticDataDump extends AsyncTask&lt;String,Void,String&gt; {
    private Context context;

    private String url,filename;
    private String maindir;
    public copyEveStaticDataDump(Context contextt,String maindir)  {
        super();
        this.context = contextt;
        this.maindir = maindir;



    }

    @Override
     protected String doInBackground(String... params) {
        copyFilesToSdCard();
        return null;
    }
    private void copyFilesToSdCard() {
        copyFileOrDir(""); // copy all files in assets folder in my project
    }

    private void copyFileOrDir(String path) {
        AssetManager assetManager = context.getAssets();
        String assets[] = null;
        try {
            Log.i("tag", "copyFileOrDir() "+path);
            assets = assetManager.list(path);

            if (assets.length == 0) {
                copyFile(path);
            } else {
                String fullPath =  maindir;
                Log.i("tag", "path="+fullPath);
                File dir = new File(fullPath);
                if (!dir.exists() &amp;&amp; !path.startsWith("images") &amp;&amp; !path.startsWith("sounds") &amp;&amp; !path.startsWith("webkit"))
                    if (!dir.mkdirs())
                        Log.i("tag", "could not create dir "+fullPath);
                for (int i = 0; i &lt; assets.length; ++i) {
                    String p;
                    if (path.equals(""))
                        p = "";
                    else
                        p = path + "/";

                    if (!path.startsWith("images") &amp;&amp; !path.startsWith("sounds") &amp;&amp; !path.startsWith("webkit"))
                        copyFileOrDir( p + assets[i]);
                }
            }
        } catch (IOException ex) {
            Log.e("tag", "I/O Exception", ex);
        }
    }

    private void copyFile(String filename) {
        AssetManager assetManager = context.getAssets();

        InputStream in = null;
        OutputStream out = null;
        String newFileName = null;
        try {
            Log.i("tag", "copyFile() "+filename);
            in = assetManager.open(filename);
            if (filename.endsWith(".jpg")) // extension was added to avoid compression on APK file
                newFileName = maindir + filename.substring(0, filename.length()-4);
            else
                newFileName = maindir+"/" + filename;
            out = new FileOutputStream(newFileName);

            byte[] buffer = new byte[1024];
            int read;
            while ((read = in.read(buffer)) != -1) {
                out.write(buffer, 0, read);
            }
            in.close();
            in = null;
            out.flush();
            out.close();
            out = null;
        } catch (Exception e) {
            Log.e("tag", "Exception in copyFile() of "+newFileName);
            Log.e("tag", "Exception in copyFile() "+e.toString());
        }

    }
    @Override
    protected void onPostExecute(String s) {

        super.onPostExecute(s);
    }
}
</code></pre>
