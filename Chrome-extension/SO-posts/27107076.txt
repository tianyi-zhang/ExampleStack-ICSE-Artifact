<p>Load  it like this</p>

<pre><code>Keyboard mQwertyKeyboard = new LatinKeyboard(this, R.xml.qwerty);
</code></pre>

<p><strong>LatinKeyboard</strong></p>

<pre><code>public class LatinKeyboard extends Keyboard
{

    private Key mEnterKey;
    private Key mSpaceKey;

    private Key mModeChangeKey;

    private Key mLanguageSwitchKey;

    private Key mSavedModeChangeKey;

    private Key mSavedLanguageSwitchKey;

    public LatinKeyboard(Context context, int xmlLayoutResId) {
        super(context, xmlLayoutResId);
    }

    public LatinKeyboard(Context context, int layoutTemplateResId, 
            CharSequence characters, int columns, int horizontalPadding) {
        super(context, layoutTemplateResId, characters, columns, horizontalPadding);
    }

    @Override
    protected Key createKeyFromXml(Resources res, Row parent, int x, int y, 
            XmlResourceParser parser) {
        Key key = new LatinKey(res, parent, x, y, parser);
        if (key.codes[0] == 10) {
            mEnterKey = key;
        } else if (key.codes[0] == ' ') {
            mSpaceKey = key;
        } else if (key.codes[0] == Keyboard.KEYCODE_MODE_CHANGE) {
            mModeChangeKey = key;
            mSavedModeChangeKey = new LatinKey(res, parent, x, y, parser);
        } else if (key.codes[0] == LatinKeyboardView.KEYCODE_LANGUAGE_SWITCH) {
            mLanguageSwitchKey = key;
            mSavedLanguageSwitchKey = new LatinKey(res, parent, x, y, parser);
        }
        return key;
    }


    void setLanguageSwitchKeyVisibility(boolean visible) {
        if (visible) {
            // The language switch key should be visible. Restore the size of the mode change key
            // and language switch key using the saved layout.
            mModeChangeKey.width = mSavedModeChangeKey.width;
            mModeChangeKey.x = mSavedModeChangeKey.x;
            mLanguageSwitchKey.width = mSavedLanguageSwitchKey.width;
            mLanguageSwitchKey.icon = mSavedLanguageSwitchKey.icon;
            mLanguageSwitchKey.iconPreview = mSavedLanguageSwitchKey.iconPreview;
        } else {
            // The language switch key should be hidden. Change the width of the mode change key
            // to fill the space of the language key so that the user will not see any strange gap.
            mModeChangeKey.width = mSavedModeChangeKey.width + mSavedLanguageSwitchKey.width;
            mLanguageSwitchKey.width = 0;
            mLanguageSwitchKey.icon = null;
            mLanguageSwitchKey.iconPreview = null;
        }
    }
    void setImeOptions(Resources res, int options) {
        if (mEnterKey == null) {
            return;
        }

        switch (options&amp;(EditorInfo.IME_MASK_ACTION|EditorInfo.IME_FLAG_NO_ENTER_ACTION)) {
            case EditorInfo.IME_ACTION_GO:
                mEnterKey.iconPreview = null;
                mEnterKey.icon = null;
                mEnterKey.label = res.getText(R.string.label_go_key);
                break;
            case EditorInfo.IME_ACTION_NEXT:
                mEnterKey.iconPreview = null;
                mEnterKey.icon = null;
                mEnterKey.label = res.getText(R.string.label_next_key);
                break;
            case EditorInfo.IME_ACTION_SEARCH:
                mEnterKey.icon = res.getDrawable(R.drawable.sym_keyboard_search);
                mEnterKey.label = null;
                break;
            case EditorInfo.IME_ACTION_SEND:
                mEnterKey.iconPreview = null;
                mEnterKey.icon = null;
                mEnterKey.label = res.getText(R.string.label_send_key);
                break;
            default:
                mEnterKey.icon = res.getDrawable(R.drawable.sym_keyboard_return);
                mEnterKey.label = null;
                break;
        }
    }

    void setSpaceIcon(final Drawable icon) {
        if (mSpaceKey != null) {
            mSpaceKey.icon = icon;
        }
    }

    static class LatinKey extends Keyboard.Key {

        public LatinKey(Resources res, Keyboard.Row parent, int x, int y,
                XmlResourceParser parser) {
            super(res, parent, x, y, parser);
        }

        /**
         * Overriding this method so that we can reduce the target area for the key that
         * closes the keyboard. 
         */
        @Override
        public boolean isInside(int x, int y) {
            return super.isInside(x, codes[0] == KEYCODE_CANCEL ? y - 10 : y);
        }
    }

}
</code></pre>

<p><strong>Static class LatinKey is neccessary because with the help of this you can change state of key in xml if you want.</strong></p>

<p><strong>qwerty.xml</strong></p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;

&lt;Keyboard xmlns:android="http://schemas.android.com/apk/res/android"
    android:keyWidth="10%p"
    android:horizontalGap="0px"
    android:verticalGap="0px"
    android:keyHeight="@dimen/key_height"
    &gt;

    &lt;Row&gt;
        &lt;Key android:codes="113" android:keyLabel="q" android:keyEdgeFlags="left"/&gt;
        &lt;Key android:codes="119" android:keyLabel="w"/&gt;
        &lt;Key android:codes="101" android:keyLabel="e"/&gt;
        &lt;Key android:codes="114" android:keyLabel="r"/&gt;
        &lt;Key android:codes="116" android:keyLabel="t"/&gt;
        &lt;Key android:codes="121" android:keyLabel="y"/&gt;
        &lt;Key android:codes="117" android:keyLabel="u"/&gt;
        &lt;Key android:codes="105" android:keyLabel="i"/&gt;
        &lt;Key android:codes="111" android:keyLabel="o"/&gt;
        &lt;Key android:codes="112" android:keyLabel="p" android:keyEdgeFlags="right"/&gt;
    &lt;/Row&gt;

    &lt;Row&gt;
        &lt;Key android:codes="97" android:keyLabel="a" android:horizontalGap="5%p" 
                android:keyEdgeFlags="left"/&gt;
        &lt;Key android:codes="115" android:keyLabel="s"/&gt;
        &lt;Key android:codes="100" android:keyLabel="d"/&gt;
        &lt;Key android:codes="102" android:keyLabel="f"/&gt;
        &lt;Key android:codes="103" android:keyLabel="g"/&gt;
        &lt;Key android:codes="104" android:keyLabel="h"/&gt;
        &lt;Key android:codes="106" android:keyLabel="j"/&gt;
        &lt;Key android:codes="107" android:keyLabel="k"/&gt;
        &lt;Key android:codes="108" android:keyLabel="l" android:keyEdgeFlags="right"/&gt;
    &lt;/Row&gt;

    &lt;Row&gt;
        &lt;Key android:codes="-1" android:keyIcon="@drawable/sym_keyboard_shift" 
                android:keyWidth="15%p" android:isModifier="true"
                android:isSticky="true" android:keyEdgeFlags="left"/&gt;
        &lt;Key android:codes="122" android:keyLabel="z"/&gt;
        &lt;Key android:codes="120" android:keyLabel="x"/&gt;
        &lt;Key android:codes="99" android:keyLabel="c"/&gt;
        &lt;Key android:codes="118" android:keyLabel="v"/&gt;
        &lt;Key android:codes="98" android:keyLabel="b"/&gt;
        &lt;Key android:codes="110" android:keyLabel="n"/&gt;
        &lt;Key android:codes="109" android:keyLabel="m"/&gt;
        &lt;Key android:codes="-5" android:keyIcon="@drawable/sym_keyboard_delete" 
                android:keyWidth="15%p" android:keyEdgeFlags="right"
                android:isRepeatable="true"/&gt;
    &lt;/Row&gt;

    &lt;Row android:rowEdgeFlags="bottom"&gt;
        &lt;Key android:codes="-3" android:keyIcon="@drawable/sym_keyboard_done" 
                android:keyWidth="15%p" android:keyEdgeFlags="left"/&gt;
        &lt;Key android:codes="-2" android:keyLabel="123" android:keyWidth="10%p"/&gt;
        &lt;!--
            android:codes: -101 is not a framework-defined key code but a key code that is
            privately defined in com.example.android.softkeyboard.LatinKeyboardView.
        --&gt;
        &lt;Key android:codes="-101" android:keyIcon="@drawable/sym_keyboard_language_switch"
                android:keyWidth="10%p"/&gt;
        &lt;Key android:codes="32" android:keyIcon="@drawable/sym_keyboard_space" 
                android:keyWidth="30%p" android:isRepeatable="true"/&gt;
        &lt;Key android:codes="46,44" android:keyLabel=". ,"
                android:keyWidth="15%p"/&gt;
        &lt;Key android:codes="10" android:keyIcon="@drawable/sym_keyboard_return" 
                android:keyWidth="20%p" android:keyEdgeFlags="right"/&gt;
    &lt;/Row&gt;
&lt;/Keyboard&gt;
</code></pre>
