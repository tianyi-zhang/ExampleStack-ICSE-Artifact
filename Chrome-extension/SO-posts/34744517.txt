<pre><code>public class RecyclerViewItemClickListener implements RecyclerView.OnItemTouchListener {

    private static final String TAG = RecyclerItemClickListener.class.getSimpleName();

    public void setListener(OnItemClickListener mListener) {
        this.mListener = mListener;
    }

    private OnItemClickListener mListener;

    public RecyclerViewItemClickListener(Context context) {
        this(context, null);
    }


    GestureDetector mGestureDetector;

    public RecyclerViewItemClickListener(Context context, OnItemClickListener listener) {
        mListener = listener;
        mGestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {
            @Override public boolean onSingleTapUp(MotionEvent e) {
                return true;
            }
        });
    }

    @Override public boolean onInterceptTouchEvent(RecyclerView view, MotionEvent e) {
        View childView = view.findChildViewUnder(e.getX(), e.getY());
        View exactView = findExactChild(childView, e.getX(), e.getY())
        if (childView != null &amp;&amp; mListener != null &amp;&amp; mGestureDetector.onTouchEvent(e)) {
            mListener.onItemClick(view, exactView, view. view.getChildPosition(childView));
        }
        return false;
    }

    @Override public void onTouchEvent(RecyclerView view, MotionEvent motionEvent) { }

    @Override
    public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {

    }
}

public View findExactChild(View childView, int x, int y){
            if(!(childView instanceof ViewGroup)) return child;
        ViewGroup group = (ViewGroup) childView;
            final int count =group.getChildCount();
            for (int i = count - 1; i &gt;= 0; i--) {
                final View child = group.getChildAt(i);
                final float translationX = ViewCompat.getTranslationX(child);
                final float translationY = ViewCompat.getTranslationY(child);
                if (x &gt;= child.getLeft() + translationX &amp;&amp;
                        x &lt;= child.getRight() + translationX &amp;&amp;
                        y &gt;= child.getTop() + translationY &amp;&amp;
                        y &lt;= child.getBottom() + translationY) {
                    return child;
                }
            }
            return null;
        }
    }
</code></pre>

<p>As you said findViewUnder returns only the container. You need another pass to run to find out if x and y of the touch event are on any child of the container.</p>

<p><code>View exactView = findExactChild(childView, e.getX(), e.getY())</code></p>

<p>This will run another pass to find exact child.</p>
