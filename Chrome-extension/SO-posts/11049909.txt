<p>This smells like outOfMemoryException. Instead of just fetching the huge picture file directly you need to do some code magic so that it doesn't eat up all the memory. Check out some documentation here: <a href="http://developer.android.com/training/displaying-bitmaps/index.html" rel="nofollow">http://developer.android.com/training/displaying-bitmaps/index.html</a></p>

<p>And some code 4 u:</p>

<pre><code>public Bitmap decodeFile(File f, int size){
    try {

        //Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inJustDecodeBounds = true;
        BitmapFactory.decodeStream(new FileInputStream(f),null,o);

        //Find the correct scale value. It should be the power of 2.
        int width_tmp=o.outWidth, height_tmp=o.outHeight;
        int scale=1;

        while(true){
            if(width_tmp/2&lt;size) // || height 
                break;
            width_tmp/=2;
            height_tmp/=2;
            scale*=2;
        }

        //Decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options();
        o2.inSampleSize=scale;
        return BitmapFactory.decodeStream(new FileInputStream(f), null, o2);

    } catch (FileNotFoundException e) {
        e.printStackTrace();
    }

    return null;
}
</code></pre>
