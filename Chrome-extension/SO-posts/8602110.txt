<p>Very similar function you can find in Robotium source code, especially at class ViewFetcher. Or you can use Robotium. </p>

<pre><code>public ArrayList&lt;View&gt; getAllViews(boolean onlySufficientlyVisible) {
    final View[] views = getWindowDecorViews();
    final ArrayList&lt;View&gt; allViews = new ArrayList&lt;View&gt;();
    final View[] nonDecorViews = getNonDecorViews(views);


    if (views != null &amp;&amp; views.length &gt; 0) {
        View view;
        for(int i = 0; i &lt; nonDecorViews.length; i++){
            view = nonDecorViews[i];
            try {
                addChildren(allViews, (ViewGroup)view, onlySufficientlyVisible);
            } catch (Exception ignored) {
            }
        }
        view = getRecentDecorView(views);
        try {
            addChildren(allViews, (ViewGroup)view, onlySufficientlyVisible);
        } catch (Exception ignored) {
        }
    }
    return allViews;
}
</code></pre>
