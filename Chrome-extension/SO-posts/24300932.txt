<p>You don't have to create two different activities for this. Create one activity and use all buttons (including button in header.xml) similarly</p>

<pre><code>public class MainActivity extends Activity {
 Button btn1,btnVerify;

 @Override
 protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    btn1 = (Button)findViewById(R.id.button1);

    btn1.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View arg0) {
            // Programming stuf
            //show the another view
            Toast.makeText(MainActivity.this, "Home button Action", Toast.LENGTH_SHORT).show();
        }
    });

    btnVerify = (Button)findViewById(R.id.btnVerify);
    btnVerify.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View arg0) {
            // Programming stuf
            //show the another view
            Toast.makeText(MainActivity.this, "Button Verify Action", Toast.LENGTH_SHORT).show();
        }
    });
  }
 }
</code></pre>

<p>You can not use one layout xml file with single activity only. </p>

<p>Note - If you still want to create two different activities - one base and one child then you need to use setContentView() method in base activity with main layout file (Home.xml in your case) and extend it with child activity. Remember in this case dont use setContentView() method in Child Activity. This scenario is not preferred generally unless we want to create several child of same activity.</p>
