<ol>
<li>Use <code>getAppNameFromPID(int PID)</code> to get the package name</li>
<li>Use <code>showInstalledAppDetails(String packageName)</code> to launch the App info/details settings page.</li>
</ol>

<p>And those 2 methods should be created like so:</p>

<pre><code>public void showInstalledAppDetails(String packageName) {
    Intent intent = new Intent();

    if (Build.VERSION.SDK_INT &gt;= 9) { //this supports all API levels
        intent.setAction(android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
        intent.setData(Uri.parse("package:" + packageName));
    } else {
        final String appPkgName = (apiLevel == 8 ? "pkg" : "com.android.settings.ApplicationPkgName");
        intent.setAction(Intent.ACTION_VIEW);
        intent.setClassName("com.android.settings", "com.android.settings.InstalledAppDetails");
        intent.putExtra(appPkgName, packageName);
    }
    startActivity(intent);
}

private String getAppName(int pID)
{
    ActivityManager am = (ActivityManager)this.getSystemService(ACTIVITY_SERVICE);
    List list = am.getRunningAppProcesses();
    Iterator i = list.iterator();
    PackageManager pm = this.getPackageManager();
    while(i.hasNext()) {
        ActivityManager.RunningAppProcessInfo info = (ActivityManager.RunningAppProcessInfo)(i.next());
        try { 
            if(info.pid == pID) //see *NOTE: you might need to compare with info.pkgList
                return info.processName;
        } catch(Exception e) {
            Log.d("getAppName", "Error&gt;&gt; :"+ e.toString());
        }
    }
    return "";
}
</code></pre>

<p>Each method seems to work individually, I would think this method would work for your needs.    </p>

<p>*NOTE: This will not work if the process name is different from the package name (e.g. it is a service with a different package name).  You may need to tweak <code>getAppName</code> to compare with the strings[] in info.pkgList.  Let us know if this works.</p>
