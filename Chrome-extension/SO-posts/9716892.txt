<p>You can use <a href="http://simple.sourceforge.net/" rel="nofollow">Simple XML</a> for this.</p>

<p>Adorn your <code>MagazinePreview</code> class with these annotations:</p>

<pre><code>public class MagazinePreview 
{
  @Attribute
  String title;
  @Attribute
  String id;
  @Element
  String description;
  @Element(name="miniatura")
  String miniatureUrl;
  Bitmap miniature;
  public MagazinePreview(String title, String id, 
                         String description, String miniatureUrl) 
  {
    super();
    ...
  }   
}
</code></pre>

<p>Now add a class for your collection of magazines. Add a method that performs deserialization of an XML string, instantiating your objects as it does so:</p>

<pre><code>@Root
public class MagazinePreviews
{
  @ElementList(name="magazines")
  ArrayList&lt;MagazinePreviews&gt; previews;

  public static MagazinePreviews Load(String xml)
  {
    Serializer serializer = new Persister();
    return serializer.read(MagazinePreviews.class, xml);
  }
}
</code></pre>

<p>This will get you a <code>MagazinePreviews</code> instance with your <code>MagazinePreview</code> instances in it. Simple XML does all the heavy lifting. It will use the annotations (<code>@Element</code>, <code>@Attribute</code>) to know which data to place in which fields.</p>

<p>You'll still need a way to connect to your PHP server script. Assuming it's a script that simply returns a string of XML, you could use this:</p>

<pre><code>public String getXML() throws Exception
{
  StringBuilder builder = new StringBuilder();
  HttpClient httpclient = new DefaultHttpClient();
  HttpGet httpget = new HttpGet("myscript.php");
  HttpResponse response = httpclient.execute(httpget);
  int statuscode = response.getStatusLine().getStatusCode();
  if(statuscode == 200)
  {
    HttpEntity entity = response.getEntity();
    InputStream content = entity.getContent();
    BufferedReader reader = new BufferedReader(new InputStreamReader(content));
    String line;
    while ((line = reader.readLine()) != null)  builder.append(line);               
  }
  else throw new Exception("HTTP error: " + String.valueOf(statuscode));
  return builder.toString();
}
</code></pre>

<p>This code calls your PHP script on the server, retrieves the response (assumed to be an XML string), or throws an error if the request fails.</p>
