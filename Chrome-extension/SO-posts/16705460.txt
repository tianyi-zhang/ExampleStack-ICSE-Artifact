<p>Done for int arrays, but easily coud be converted to double.</p>

<p>1) If <strong>you do not care</strong> about initial array elements order:</p>

<pre><code>private static int[] withoutDuplicates(int[] a) {
    Arrays.sort(a);
    int hi = a.length - 1;
    int[] result = new int[a.length];
    int j = 0;
    for (int i = 0; i &lt; hi; i++) {
        if (a[i] == a[i+1]) {
            continue;
        }
        result[j] = a[i];
        j++;            
    }
    result[j++] = a[hi];
    return Arrays.copyOf(result, j);
}
</code></pre>

<p>2) if you care about initial array elements order:</p>

<pre><code>private static int[] withoutDuplicates2(int[] a) {
    HashSet&lt;Integer&gt; keys = new HashSet&lt;Integer&gt;();
    int[] result = new int[a.length];
    int j = 0;
    for (int i = 0 ; i &lt; a.length; i++) {
        if (keys.add(a[i])) {
            result[j] = a[i];
            j++;
        }
    }
    return Arrays.copyOf(result, j);
}
</code></pre>

<p>3) If <strong>you do not care</strong> about initial array elements order:</p>

<pre><code>private static Object[] withoutDuplicates3(int[] a) {
    HashSet&lt;Integer&gt; keys = new HashSet&lt;Integer&gt;();
    for (int value : a) {
        keys.add(value);
    }
    return keys.toArray();
}
</code></pre>
