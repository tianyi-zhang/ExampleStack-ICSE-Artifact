<p>Ok, so, you want to do it like this:</p>

<p>On your on create check if the directory you want to put your pictures exists:</p>

<pre><code>private boolean createDir() {
        File myDir = new File(getCacheDir(), "profile_picture");
        Log.d("CreateDir", myDir.mkdir() ? "Yes" : "No");
        return myDir.mkdir();
    }
</code></pre>

<p>Now, you want to download Image from URL in byte[]:</p>

<pre><code> // DownloadImage AsyncTask
    private class DownloadImage extends AsyncTask&lt;String, Void, byte[]&gt; {

        UserData userData;

        public DownloadImage(UserData userData) {
            this.userData = userData;
        }

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
        }

        @Override
        protected byte[] doInBackground(String... URL) {
            try {
                return ViewUtils.getByteFromUrl(new URL(URL[0]));
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }

            return null;
        }

        @Override
        protected void onPostExecute(byte[] result) {
            File photo = new File(getCacheDir() + "/profile_picture/", "photo.jpg");
            if (photo.exists()) {
                photo.delete();
            }
            try {
                BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(photo));
                bos.write(result);
                bos.flush();
                bos.close();
            } catch (java.io.IOException e) {
                Log.e("PictureDemo", "Exception in photoCallback", e);
            }

        }

    }
</code></pre>

<p>where </p>

<pre><code>ViewUtils.getByteFromUrl(new URL(URL[0]));
</code></pre>

<p>is</p>

<pre><code>public static byte[] getByteFromUrl(URL src) {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        InputStream is = null;
        try {
            is = src.openStream();
            byte[] byteChunk = new byte[4096]; // Or whatever size you want to read in at a time.
            int n;

            while ((n = is.read(byteChunk)) &gt; 0) {
                baos.write(byteChunk, 0, n);
            }
            return baos.toByteArray();
        } catch (IOException e) {
            System.err.printf("Failed while reading bytes from %s: %s", src.toExternalForm(), e.getMessage());
            e.printStackTrace();
            // Perform any other exception handling that's appropriate.
        } finally {
            if (is != null) {
                try {
                    is.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
        return null;
    }
</code></pre>

<p>And now you have succesfully saved your image to local storage.</p>
