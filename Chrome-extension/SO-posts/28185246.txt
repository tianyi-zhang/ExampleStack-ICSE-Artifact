<p>Ok guys Here it is. This is how I solved my own problem. I just simply saved the captured image at a location in SD card and then used the same location to retreive the same captured image and then use it anywhere in my code.</p>

<pre><code>public class MainActivity extends Activity {

private static final int CAMERA_PIC_REQUEST=1111;
private ImageView imageVw;
public String encodedImage;
private static final String NAMESPACE="http://tempuri.org/";
private static final String URL="http://10.0.2.2:3694/WebService.asmx";
private static final String SOAP_ACTION="http://tempuri.org/insertData";
private static final String METHOD_NAME="insertData";

@TargetApi(Build.VERSION_CODES.GINGERBREAD)
@SuppressLint("NewApi")
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    if (android.os.Build.VERSION.SDK_INT &gt; 9) {
        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
        StrictMode.setThreadPolicy(policy);}

    this.imageVw=(ImageView)this.findViewById(R.id.imgv1);
    Button photoButton=(Button)this.findViewById(R.id.btnClick);
    Button btn=(Button)findViewById(R.id.btnClick2);

    photoButton.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
            Intent cameraIntent=new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
            startActivityForResult(cameraIntent, CAMERA_PIC_REQUEST);

        }
    });

    btn.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub

            SoapObject request=new SoapObject(NAMESPACE, METHOD_NAME);

            EditText ed1=(EditText)findViewById(R.id.etName);
            EditText ed2=(EditText)findViewById(R.id.etComplnt);

            Bitmap bmp=retreivePic();
            ByteArrayOutputStream bos=new ByteArrayOutputStream();
            bmp.compress(CompressFormat.JPEG, 100, bos);
            byte[] imageBytes = bos.toByteArray();
            String encoded = Base64.encodeToString(imageBytes, Base64.DEFAULT);

            PropertyInfo pi=new PropertyInfo();
            pi.type=PropertyInfo.STRING_CLASS;
            pi.name="name";

            PropertyInfo pi2=new PropertyInfo();
            pi2.type=pi2.STRING_CLASS;
            pi2.name="complnt";

            PropertyInfo pi3=new PropertyInfo();
            pi3.type=pi3.STRING_CLASS;
            pi3.name="img";

            request.addProperty(pi,ed1.getText().toString());
            request.addProperty(pi2,ed2.getText().toString());
            request.addProperty(pi3,encoded);

            SoapSerializationEnvelope env=new SoapSerializationEnvelope(SoapEnvelope.VER11);
            env.dotNet=true;
            env.setOutputSoapObject(request);
            HttpTransportSE htse=new HttpTransportSE(URL);
            try{
                htse.debug=true;
                htse.call(SOAP_ACTION, env);
                Object response=env.getResponse();
                TextView txt2=(TextView)findViewById(R.id.txtMsg3);
                txt2.setText("Sent");
                //Toast.makeText(getBaseContext(), encoded, Toast.LENGTH_LONG).show();
                //TextView txt7=(TextView)findViewById(R.id.txtMsg7);
                //txt7.setText(encoded);
            }

            catch(Exception exc)
            {
                TextView txt6=(TextView)findViewById(R.id.txtMsg6);
                txt6.setText(exc.toString());
                System.out.println("Dump : "+htse.responseDump);
            }

        }
    });


   // String strBase64=Base64.encodeToString(returnPic(req, res, data), flags);
}


@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.main, menu);
    return true;
}

@Override
public boolean onOptionsItemSelected(MenuItem item) {
    // Handle action bar item clicks here. The action bar will
    // automatically handle clicks on the Home/Up button, so long
    // as you specify a parent activity in AndroidManifest.xml.
    int id = item.getItemId();
    if (id == R.id.action_settings) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}


@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    // TODO Auto-generated method stub
    Bitmap thumb=(Bitmap)data.getExtras().get("data");
    //img.setImageBitmap(thumb);

    ByteArrayOutputStream bytes=new ByteArrayOutputStream();
    thumb.compress(Bitmap.CompressFormat.JPEG, 100, bytes);

    File file=new File(Environment.getExternalStorageDirectory()+File.separator+"image.jpg");
    try{
        file.createNewFile();
        FileOutputStream fo=new FileOutputStream(file);
        fo.write(bytes.toByteArray());
        fo.close();
    }

    catch(Exception exc)
    {
        exc.printStackTrace();
    }
}

public Bitmap retreivePic()
{
    File f=new File(Environment.getExternalStorageDirectory()+File.separator+"image.jpg");
    Bitmap bmp=BitmapFactory.decodeFile(f.getAbsolutePath());
    return bmp;
}
}
</code></pre>
