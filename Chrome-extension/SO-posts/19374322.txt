<p>Try this:</p>

<pre><code>private static File getOutputMediaFile(int type)
{
  File mediaStorageDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MOVIES);

    if (! mediaStorageDir.exists()){
        if (! mediaStorageDir.mkdirs()){
            Log.d("MyCameraApp", "failed to create directory");
            return null;
        }
    }

    // Create a media file name
    String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
    String mediaFile;
    if (type == MEDIA_TYPE_IMAGE){
        mediaFile = "IMG_"+ timeStamp + ".jpg";
    } else if(type == MEDIA_TYPE_VIDEO) {
        mediaFile = "VID_"+ timeStamp + ".mp4";
    } else {
        return null;
    }

    return new File(mediaStorageDir, mediaFile);
}
</code></pre>

<p>The getExternalStorageDirectory method returns a File object, not a string you can append a subdirectory to.  </p>

<p>It also wonder if the directory returned by that method would be available to a service.  The Android specs say:</p>

<blockquote>
  <p>On devices with multiple users (as described by UserManager), each
  user has their own isolated external storage. Applications only have
  access to the external storage for the user they're running as.</p>
</blockquote>

<p>LOL!!!! Just realized this question was asked 2 years ago!  Did you find the answer yet?? LOL</p>
