<p>I implemented somthing similar a while back so i've modified my activity and you can take a look below, sorry its not very well commented -  hope it helps!</p>

<pre><code>  public class AZIndexer extends Activity {
    ListView myListView;
    ArrayList&lt;String&gt; elements;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        // elements
        String s = "MNBVCXZLKJHGFDSAQWERTYUIOP";
        Random r = new Random();
        elements = new ArrayList&lt;String&gt;();
        for (int i = 0; i &lt; 300; i++) {
            elements.add(s.substring(r.nextInt(s.length())));
        }
        Collections.sort(elements); // Must be sorted!

        // listview
        myListView = (ListView) findViewById(R.id.myListView);
        myListView.setFastScrollEnabled(true);
        MyAZAdapter&lt;String&gt; adapter = new MyAZAdapter&lt;String&gt;(
                getApplicationContext(), android.R.layout.simple_list_item_1,
                elements);
        myListView.setAdapter(adapter);

    }

    class MyAZAdapter&lt;T&gt; extends ArrayAdapter&lt;T&gt; implements SectionIndexer {
        ArrayList&lt;String&gt; myElements;
        HashMap&lt;String, Integer&gt; azIndexer;
        String[] sections;

        public MyAZAdapter(Context context, int textViewResourceId, List&lt;T&gt; objects) {
            super(context, textViewResourceId, objects);
            myElements = (ArrayList&lt;String&gt;) objects;
            azIndexer = new HashMap&lt;String, Integer&gt;(); //stores the positions for the start of each letter

            int size = elements.size();
            for (int i = size - 1; i &gt;= 0; i--) {
                String element = elements.get(i);
                //We store the first letter of the word, and its index.
                azIndexer.put(element.substring(0, 1), i); 
            } 

            Set&lt;String&gt; keys = azIndexer.keySet(); // set of letters 

            Iterator&lt;String&gt; it = keys.iterator();
            ArrayList&lt;String&gt; keyList = new ArrayList&lt;String&gt;(); 

            while (it.hasNext()) {
                String key = it.next();
                keyList.add(key);
            }
            Collections.sort(keyList);//sort the keylist
            sections = new String[keyList.size()]; // simple conversion to array            
            keyList.toArray(sections);
        }

        public int getPositionForSection(int section) {
            String letter = sections[section];
            return azIndexer.get(letter);
        }

        public int getSectionForPosition(int position) {
            Log.v("getSectionForPosition", "called");
            return 0;
        }

        public Object[] getSections() {
            return sections; // to string will be called to display the letter
        }
    }
}
</code></pre>

<p>With xml as:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"&gt;
&lt;ListView 
    android:id="@+id/myListView" 
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"&gt;
&lt;/ListView&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>ScreenShot:</p>

<p><img src="http://i.stack.imgur.com/jCd5l.png" alt="enter image description here"></p>
