<p>Maybe more easy to write your own Preference and add it in xml<br/>
just set the <strong>custom font via Spannable to the settings fields</strong>:<br>
<em>(looks long but fast done :))</em></p>

<p><strong>complete solution:</strong></p>

<pre><code>private void convertPreferenceToUseCustomFont(Preference somePreference) {
    CustomTypefaceSpan customTypefaceSpan = new CustomTypefaceSpan("", net.mikekober.myMory.utils.Utils.getUsedTypeFace(getActivity()));

    SpannableStringBuilder ss;
    if (somePreference.getTitle() != null) {
        ss = new SpannableStringBuilder(somePreference.getTitle().toString());
        ss.setSpan(customTypefaceSpan, 0, ss.length(),Spanned.SPAN_EXCLUSIVE_INCLUSIVE);
        somePreference.setTitle(ss);
    }

    if (somePreference.getSummary() != null) {
        ss = new SpannableStringBuilder(somePreference.getSummary().toString());
        ss.setSpan(customTypefaceSpan, 0, ss.length(),Spanned.SPAN_EXCLUSIVE_INCLUSIVE);
        somePreference.setSummary(ss);
    }
}
</code></pre>

<p><strong>call it for every preference and you're done :)</strong></p>

<p><strong>have fun &amp;&amp; good luck</strong></p>

<p><strong>btw: on changing text, call it again!! <br/></strong>
btw2: checked, seen, applied, improved ;) from: <a href="http://stackoverflow.com/a/10741161/371749">http://stackoverflow.com/a/10741161/371749</a></p>

<p>btw3, nearly forgot:</p>

<pre><code>static private class CustomTypefaceSpan extends TypefaceSpan {

    private final Typeface newType;

    public CustomTypefaceSpan(String family, Typeface type) {
        super(family);
        newType = type;
    }

    @Override
    public void updateDrawState(TextPaint ds) {
        applyCustomTypeFace(ds, newType);
    }

    @Override
    public void updateMeasureState(TextPaint paint) {
        applyCustomTypeFace(paint, newType);
    }

    private static void applyCustomTypeFace(Paint paint, Typeface tf) {
        int oldStyle;
        Typeface old = paint.getTypeface();
        if (old == null) {
            oldStyle = 0;
        } else {
            oldStyle = old.getStyle();
        }

        int fake = oldStyle &amp; ~tf.getStyle();
        if ((fake &amp; Typeface.BOLD) != 0) {
            paint.setFakeBoldText(true);
        }

        if ((fake &amp; Typeface.ITALIC) != 0) {
            paint.setTextSkewX(-0.25f);
        }

        paint.setTypeface(tf);
    }
}
</code></pre>
