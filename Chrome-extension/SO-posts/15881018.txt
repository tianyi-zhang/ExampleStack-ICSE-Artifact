<p>I assume you need the log format in the below format
FINE,Message1,object.GetValue(),Message2,1,Message3,2</p>

<p>You need to create an output message format</p>

<pre><code>logger.log(Level.INFO, "{0},{1},{2},{3},{4},{5}",new Object[]{Message1,object.getValue(),Message2,1,Message3,2});
</code></pre>

<p>Now you need to create a custom formatter which by extending Formatter class</p>

<pre><code>public class DataFormatter extends Formatter {

@Override
public synchronized String format(LogRecord record) {
    String formattedMessage = formatMessage(record);
    String throwable = "";
    String outputFormat = "%1$s, %2$s \n %3$s"; //Also adding for logging exceptions
    if (record.getThrown() != null) {
        StringWriter sw = new StringWriter();
        PrintWriter pw = new PrintWriter(sw);
        pw.println();
        record.getThrown().printStackTrace(pw);
        pw.close();
        throwable = sw.toString();
    }
    return String.format(outputFormat,record.getLevel().getName(),formattedMessage,throwable);
}
}
</code></pre>

<p>Now set the newly created formatter</p>

<pre><code>    for(int i=0;i&lt;logger.getHandlers().length;i++)
        logger.getHandlers()[i].setFormatter(new DataFormatter());
</code></pre>
