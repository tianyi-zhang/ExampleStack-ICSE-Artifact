<p>Here is a code sample.</p>

<pre><code>import java.awt.event.ActionEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
public class SSCE extends javax.swing.JFrame {
   private static final String ACTION_NAME = "action";
   private Map&lt;String, MyAction&gt; actionMap = new HashMap&lt;&gt;();
   /**
    * Creates new form SSCE
    */
   public SSCE() {
      initComponents();
      actionMap.put(ACTION_NAME, new MyAction(ACTION_NAME));
      configAction();
   }

   private void configAction(){
      jMenuItem1.setAction(actionMap.get(ACTION_NAME));
   }

   /**
    * This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;                          
   private void initComponents() {

      jMenuBar1 = new javax.swing.JMenuBar();
      jMenu1 = new javax.swing.JMenu();
      jMenuItem1 = new javax.swing.JMenuItem();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      jMenu1.setText("jMenu1");
      jMenu1.add(jMenuItem1);

      jMenuBar1.add(jMenu1);

      setJMenuBar(jMenuBar1);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 400, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 279, Short.MAX_VALUE)
      );

      pack();
   }// &lt;/editor-fold&gt;                        

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /*
       * Set the Nimbus look and feel
       */
      //&lt;editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "&gt;
        /*
       * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(SSCE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(SSCE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(SSCE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(SSCE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //&lt;/editor-fold&gt;

      /*
       * Create and display the form
       */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new SSCE().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify                     
   private javax.swing.JMenu jMenu1;
   private javax.swing.JMenuBar jMenuBar1;
   private javax.swing.JMenuItem jMenuItem1;
   // End of variables declaration                   

   private static class MyAction extends AbstractAction {

      public MyAction(String name) {
         super(name);
      }

      @Override
      public void actionPerformed(ActionEvent e) {
         if (ActionEvent.CTRL_MASK == (ActionEvent.CTRL_MASK &amp; e.getModifiers())) {
            JOptionPane.showMessageDialog(null, "Run with ctrl mode");
         } else {
            JOptionPane.showMessageDialog(null, "Run with normal mode");
         }
      }

   }
}
</code></pre>

<p>But i'm affraid that I was wrong. Modifiers are passed (somehow, but I don't know how) but not in debug mode. I've tested SSCE in NetBeans and i think in debug there are some time dependencies that makes modifiers are not passed (You can check it with code above. Just set breakpoint in first line of actionPerformed method). And it works in my application too. So i think question can be closed.</p>
