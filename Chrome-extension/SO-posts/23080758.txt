<p>After reflecting on your latest comment
(The GCM engine might change the registration ID whenever it determines it need to, and this might happen at anytime without prior warning, that's why you should always check if the last registration ID matches the one that is current), I have this solution:</p>

<ol>
<li>Have webservice function like registerDevice(GCM_ID,DeviceID)</li>
<li>Now from DB fetch the GCMIdColumn where DeviceIDColumn = DeviceID. If this GCMIdColumn != GCM_ID, then update. Else do nothing.</li>
<li>If there is no row with having DeviceIDColumn = DeviceID, then insert (GCM_ID,DeviceID).</li>
</ol>

<p>DeviceID: A ID picked up from the App.
GCM_ID: Id returned by GCM.</p>

<p>Now the only thing you must be certain about is that  DeviceID you generate from the app should be unique. You can combine 2 or more properties of the device's configuration to make it unique.</p>

<p><strong>Generate Device ID</strong></p>

<pre><code>public String getDeviceID(Context context) {
        TelephonyManager TelephonyMgr = (TelephonyManager)context.getSystemService(Context.TELEPHONY_SERVICE);
        String szImei = TelephonyMgr.getDeviceId(); // Requires READ_PHONE_STATE
        String m_szDevIDShort = "35" + //we make this look like a valid IMEI
                Build.BOARD.length()%10+ Build.BRAND.length()%10 +
                Build.CPU_ABI.length()%10 + Build.DEVICE.length()%10 +
                Build.DISPLAY.length()%10 + Build.HOST.length()%10 +
                Build.ID.length()%10 + Build.MANUFACTURER.length()%10 +
                Build.MODEL.length()%10 + Build.PRODUCT.length()%10 +
                Build.TAGS.length()%10 + Build.TYPE.length()%10 +
                Build.USER.length()%10 ; //13 digits
        if(Utills.debug)
            Log.i("getDeviceID",szImei+"==XXX=="+m_szDevIDShort);
        return szImei+"==XXX=="+m_szDevIDShort;
    }
</code></pre>

<p>Hope this is the solution you are looking for!</p>
