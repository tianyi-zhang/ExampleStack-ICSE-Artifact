<blockquote>
  <p>-d '{ "name": "PhoneName", "description": "Phone Description!", "details": { "imeiNumber": "123456789123456", "phoneNumber": "9999999999"}}' \</p>
</blockquote>

<p>pushes the input json into POST request payload.
And you CANNOT simply unmarshall the input json attributes using their names and hence you get</p>

<pre><code>System.out.println("Name : " + request.getParameter("name"));   //gives null
</code></pre>

<p><code>null</code> values for such statements.</p>

<p>You need to read the POST request payload from your <code>HttpServletRequest</code> object and then should use json parser to parse it to get the attribute values.</p>

<p>You can read the entire POST request payload like this:</p>

<pre><code>try {
    InputStream inputStream = request.getInputStream();
    if (inputStream != null) {
        bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
        char[] charBuffer = new char[128];
        int bytesRead = -1;
        while ((bytesRead = bufferedReader.read(charBuffer)) &gt; 0) {
            stringBuilder.append(charBuffer, 0, bytesRead);
        }
    } else {
        stringBuilder.append("");
    }
} catch (IOException ex) {
    throw ex;
} finally {
    if (bufferedReader != null) {
        try {
            bufferedReader.close();
        } catch (IOException ex) {
            throw ex;
        }
    }
}

body = stringBuilder.toString();
</code></pre>

<p>Now you should get your input json in variable body. Now use a json parser to get the attribues value, for example like this:</p>

<pre><code>JsonParser parser = new JsonParser();
JsonObject obj = parser.parse(body).getAsJsonObject();
String name = obj.get("name").toString();
</code></pre>
