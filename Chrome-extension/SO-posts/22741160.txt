<p>This is no need for</p>

<pre><code>StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder()
            .permitAll().build();
InputStream is = null;
StrictMode.setThreadPolicy(policy);
</code></pre>

<p>Also  <code>@SuppressLint("NewApi")</code> indicates you suppressed a lint warning. Some features are available on new api's only. Do check your min sdk versions.</p>

<p>to display it the response in a list you need to listview</p>

<p>activity_main.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical"&gt;
    &lt;!-- Main ListView 
         Always give id value as list(@android:id/list)
    --&gt;
    &lt;ListView
        android:id="id/list" // id is list
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"/&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Then in onCreate</p>

<pre><code>ListView lv;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    lv= (ListView) findViewById(R.id.list);
    new JSONParse().execute();
}    
</code></pre>

<p>Change this</p>

<pre><code>   private class JSONParse extends AsyncTask&lt;String, String, JSONObject&gt;
</code></pre>

<p>to</p>

<pre><code>   private class JSONParse extends AsyncTask&lt;String, String, ArrayList&lt;HashMap&lt;String, String&gt;&gt;&gt;
</code></pre>

<p>Make sure you have these</p>

<pre><code>public class MainActivity extends Activity {

  private static String url = "http://api.androidhive.info/contacts/";
  private static final String TAG_CONTACTS = "contacts";
  private static final String TAG_ID = "id";
  private static final String TAG_NAME = "name";
  private static final String TAG_EMAIL = "email";
  private static final String TAG_ADDRESS = "address";
  private static final String TAG_GENDER = "gender";
  private static final String TAG_PHONE = "phone";
  private static final String TAG_PHONE_MOBILE = "mobile";
  private static final String TAG_PHONE_HOME = "home";
  private static final String TAG_PHONE_OFFICE = "office";
</code></pre>

<p>In <code>doInbackground</code> you need to parse the json</p>

<pre><code>   @Override
    protected ArrayList&lt;HashMap&lt;String, String&gt;&gt; doInBackground(String... args) {
        ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList= new ArrayList&lt;HashMap&lt;String,String&gt;&gt;();
        JSONParser jParser = new JSONParser();

        // Getting JSON from URL
        JSONObject json = jParser.getJSONFromUrl(url);
          try {
                contacts = json.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        return contactList;
    }
</code></pre>

<p>Then</p>

<pre><code>   @Override
    protected void onPostExecute(ArrayList&lt;HashMap&lt;String, String&gt;&gt;  result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        ListAdapter adapter = new SimpleAdapter(
                MainActivity.this, result,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        lv.setAdapter(adapter);
    }
</code></pre>

<p>list_item.xml</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="10dp"
    android:paddingLeft="10dp"
    android:paddingRight="10dp" &gt;

    &lt;!-- Name Label --&gt;

    &lt;TextView
        android:id="@+id/name"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:paddingBottom="2dip"
        android:paddingTop="6dip"
        android:textColor="#43bd00"
        android:textSize="16sp"
        android:textStyle="bold" /&gt;

    &lt;!-- Email label --&gt;
    &lt;TextView
        android:id="@+id/email"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:paddingBottom="2dip"
        android:textColor="#acacac" /&gt;

    &lt;!-- Mobile number label --&gt;
    &lt;TextView
        android:id="@+id/mobile"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:gravity="left"
        android:text="Mobile: "
        android:textColor="#5d5d5d"
        android:textStyle="bold" /&gt;

&lt;/LinearLayout&gt;
</code></pre>
