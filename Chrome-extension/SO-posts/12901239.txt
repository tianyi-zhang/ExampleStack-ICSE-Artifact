<p>If you know what directory it's in, yes. You can use a <a href="http://docs.oracle.com/javase/6/docs/api/java/io/FileFilter.html" rel="nofollow"><code>FileFilter</code></a>:</p>

<pre><code>final String prefix = "pass_231_"
File dir = ... ;
File[] candidates = dir.listFiles(new FileFilter() {
    @Override
    public boolean accept(File pathname) {
        return pathname.getName().startsWith(prefix);
    }
});
// candidates will contain all files starting with "pass_231_"
</code></pre>

<p>If you need to search recursively (including subfolders), you can do this:</p>

<pre><code>String prefix = "pass_231_";
File dir = ... ;
List&lt;File&gt; candidates = new ArrayList&lt;File&gt;();
searchRecursively(dir, prefix, candidates);
// candidates will contain all files starting with "pass_231_"
</code></pre>

<p>Then <code>searchRecursively</code> looks like this:</p>

<pre><code>public static void searchRecursively(File dir, final String prefix, List&lt;File&gt; candidates) {
    File[] matches = dir.listFiles(new FileFilter() {
        @Override
        public boolean accept(File pathname) {
            return pathname.getName().startsWith(prefix);
        }
    });
    candidates.addAll(Arrays.asList(matches));
    File[] subdirs = dir.listFiles(new FileFilter() {
        @Override
        public boolean accept(File pathname) {
            return pathname.isDirectory();
        }
    });
    for (File subdir : subdirs) {
        searchRecursively(subdir, prefix, candidates);
    }
}
</code></pre>
