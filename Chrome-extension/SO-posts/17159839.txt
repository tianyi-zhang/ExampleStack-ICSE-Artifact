<blockquote>
  <p><strong>Warning</strong>: Do not implement this in production code you are ever going to use on a network you do not entirely trust. Especially anything going over the public internet. <a href="http://stackoverflow.com/a/9582529/1979882">This link</a> gives more correct answer. <a href="http://stackoverflow.com/a/6378872/1979882">Here</a> is an implementation using SSL.</p>
</blockquote>

<p>Your problem is you are using DefaultHttpClient for <code>https</code>(secure url). <br>
Create a custom DefaultHttpClient</p>

<pre><code>public static HttpClient createHttpClient()
{
    HttpParams params = new BasicHttpParams();
    HttpProtocolParams.setVersion(params, HttpVersion.HTTP_1_1);
    HttpProtocolParams.setContentCharset(params, HTTP.DEFAULT_CONTENT_CHARSET);
    HttpProtocolParams.setUseExpectContinue(params, true);

    SchemeRegistry schReg = new SchemeRegistry();
    schReg.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
    schReg.register(new Scheme("https", SSLSocketFactory.getSocketFactory(), 443));
    ClientConnectionManager conMgr = new ThreadSafeClientConnManager(params, schReg);

    return new DefaultHttpClient(conMgr, params);
}
</code></pre>

<p>Than change your code as follows:</p>

<pre><code>        HttpClient httpclient = createHttpClient();
        HttpPost httppost = new HttpPost("https://10.0.2.2/insert222.php");
        httppost.setEntity(new UrlEncodedFormEntity(data));
        HttpResponse response = httpclient.execute(httppost);
</code></pre>

<p>Have a look at <a href="http://stackoverflow.com/a/4837230/1503155">here</a> if you have problems<br>
It should work.</p>
