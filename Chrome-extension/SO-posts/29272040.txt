<p>Here is a complete example that selects the second line in the table.
I use NetBeans so just don't care about the code for the ui. The code in <code>jButton1ActionPerformed</code> contains <code>jTable1.getSelectionModel().setSelectionInterval(row, row)</code> which does exactly what i expected - selecting the line.<br>
Are you sure that your program runs to <code>setSelectionInterval()</code>? Maybe the string contains whitespaces at the end. Debugging should help to find out.</p>

<pre><code>package tripulante;

public class Tripulante extends javax.swing.JFrame {

    public Tripulante() {
        initComponents();
    }

    @SuppressWarnings("unchecked")
    // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"sample 1", "a"},
                {"sample 2", "b"},
                {"sample 3", "c"},
                {"sample 4", "d"}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Select lines");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// &lt;/editor-fold&gt;                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        for (int row = 0; row &lt; jTable1.getRowCount(); row++) {
            String cellContent=jTable1.getValueAt(row, 0).toString();
            if (cellContent.equalsIgnoreCase("sample 2")) {
                jTable1.getSelectionModel().setSelectionInterval(row, row);
            }
        }
    }                                        

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Tripulante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
</code></pre>
