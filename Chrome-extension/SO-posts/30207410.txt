<p>Solved.</p>

<p>Thank you Nikolay for your answer.</p>

<p>In fact it was a silly mistake...</p>

<p>1) Download the sphinx4-core and sphinx4-data.</p>

<p>2) Include them in your project.</p>

<p>3) Test your code.</p>

<pre><code>import edu.cmu.sphinx.api.Configuration;
import edu.cmu.sphinx.api.LiveSpeechRecognizer;
import edu.cmu.sphinx.api.SpeechResult;

public class SpeechToText
{
    public static void main(String[] args) throws Exception
    {
        Configuration configuration = new Configuration();
        configuration.setAcousticModelPath("resource:/edu/cmu/sphinx/models/en-us/en-us");
        configuration.setDictionaryPath("resource:/edu/cmu/sphinx/models/en-us/cmudict-en-us.dict");
        configuration.setLanguageModelPath("resource:/edu/cmu/sphinx/models/en-us/en-us.lm.dmp");

        LiveSpeechRecognizer recognizer = new LiveSpeechRecognizer(configuration);
        recognizer.startRecognition(true);

        SpeechResult result;
        while ((result = recognizer.getResult()) != null)
        {
            System.out.println(result.getHypothesis());
        }
        recognizer.stopRecognition();
    }
}
</code></pre>

<p>And that is all!</p>

<ul>
<li><p>I recommend to read this tutorial: <a href="http://cmusphinx.sourceforge.net/wiki/tutorialsphinx4" rel="nofollow">http://cmusphinx.sourceforge.net/wiki/tutorialsphinx4</a></p></li>
<li><p>If you need the source code of Sphinx4: <a href="https://github.com/cmusphinx/sphinx4" rel="nofollow">https://github.com/cmusphinx/sphinx4</a></p></li>
</ul>

<p>If you need another example who allow you to talk with your computer, you can try that one:</p>

<pre><code>import java.io.File;
import java.io.FileInputStream;
import java.net.URI;
import java.net.URLEncoder;
import java.text.MessageFormat;
import com.gtranslate.Language;
import edu.cmu.sphinx.api.Configuration;
import edu.cmu.sphinx.api.LiveSpeechRecognizer;
import edu.cmu.sphinx.api.SpeechResult;
import javazoom.jl.player.Player;
import us.monoid.web.BinaryResource;
import us.monoid.web.Resty;


public class SpeakerBot
{
    private static final String BASE_URL = "http://translate.google.com/translate_tts?ie=UTF-8&amp;q={0}&amp;tl={1}&amp;prev=input";
    private static ChatterBotFactory factory = new ChatterBotFactory();
    private static ChatterBot bot;
    private static ChatterBotSession botSession;

    public static void main(String[] args) throws Exception
    {
        bot = factory.create(ChatterBotType.JABBERWACKY);
        botSession = bot.createSession();
        new SpeechToText().start();
    }

    private static void bot(String text) throws Exception
    {
        try
        {
                textToSpeech(botSession.think(text));
        }
        catch (Exception e)
        {
                try
                {
                        bot = factory.create(ChatterBotType.PANDORABOTS, "b0dafd24ee35a477");
                        botSession = bot.createSession();
                        textToSpeech(botSession.think(text));
                }
                catch (Exception ex)
                {
                        bot = factory.create(ChatterBotType.CLEVERBOT);
                        botSession = bot.createSession();
                        textToSpeech(botSession.think(text));
                }
        }
    }

    private static void textToSpeech(String text) throws Exception
    {
        File file = new File("toSpeech.mp3");
        String sentence = URLEncoder.encode(text, "UTF-8");
        String urlString = MessageFormat.format(BASE_URL, sentence, Language.ENGLISH);
        BinaryResource binaryResource = new Resty().bytes(new URI(urlString));
        binaryResource.save(file);
        FileInputStream fileInputStream = new FileInputStream(file);
        Player player = new Player(fileInputStream);
        player.play();
        player.close();
        file.delete();
    }

    private static class SpeechToText extends Thread
    {
        public void run()
        {
            try
            {
                Configuration configuration = new Configuration();
                configuration.setAcousticModelPath("resource:/edu/cmu/sphinx/models/en-us/en-us");
                configuration.setDictionaryPath("resource:/edu/cmu/sphinx/models/en-us/cmudict-en-us.dict");
                configuration.setLanguageModelPath("resource:/edu/cmu/sphinx/models/en-us/en-us.lm.dmp");

                LiveSpeechRecognizer recognizer = new LiveSpeechRecognizer(configuration);
                recognizer.startRecognition(true);

                SpeechResult result;
                while ((result = recognizer.getResult()) != null)
                {
                    bot(result.getHypothesis());
                }
                recognizer.stopRecognition();
            }
            catch (Exception e)
            {

            }
        }
    }
}
</code></pre>
