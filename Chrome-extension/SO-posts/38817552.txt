<p>About the auto-scroll, I just started a new master/detail template in Android Studio.</p>

<p>Can you try to use this class as your recyclerView's layout manager ?</p>

<pre><code>public class ScrollingLinearLayoutManager extends LinearLayoutManager {
private final int duration;

public ScrollingLinearLayoutManager(Context context, int orientation, boolean reverseLayout, int duration) {
    super(context, orientation, reverseLayout);
    this.duration = duration;
}

@Override
public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state,
                                   int position) {
    View firstVisibleChild = recyclerView.getChildAt(0);
    int itemHeight = firstVisibleChild.getHeight();
    int currentPosition = recyclerView.getChildLayoutPosition(firstVisibleChild);
    int distanceInPixels = Math.abs((currentPosition - position) * itemHeight);
    if (distanceInPixels == 0) {
        distanceInPixels = (int) Math.abs(firstVisibleChild.getY());
    }
    SmoothScroller smoothScroller = new SmoothScroller(recyclerView.getContext(), distanceInPixels, duration);
    smoothScroller.setTargetPosition(position);
    startSmoothScroll(smoothScroller);
}

private class SmoothScroller extends LinearSmoothScroller {
    private final float distanceInPixels;
    private final float duration;

    public SmoothScroller(Context context, int distanceInPixels, int duration) {
        super(context);
        this.distanceInPixels = distanceInPixels;
        this.duration = duration;
    }

    @Override
    public PointF computeScrollVectorForPosition(int targetPosition) {
        return ScrollingLinearLayoutManager.this
                .computeScrollVectorForPosition(targetPosition);
    }

    @Override
    protected int calculateTimeForScrolling(int dx) {
        float proportion = (float) dx / distanceInPixels;
        return (int) (duration * proportion);
    }
}
</code></pre>

<p>}</p>

<p>And set it like this </p>

<pre><code>recyclerView.setAdapter(new SimpleItemRecyclerViewAdapter(DummyContent.ITEMS));
    recyclerView.setLayoutManager(new ScrollingLinearLayoutManager(this, LinearLayoutManager.VERTICAL, false, 5000));
</code></pre>

<p>And trigger it this way </p>

<pre><code>recyclerView.smoothScrollToPosition(recyclerView.getAdapter().getItemCount());
</code></pre>
