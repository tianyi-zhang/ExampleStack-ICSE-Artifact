<p>I have created this only for answer this problem it works 10000% 
Please follow the step below.</p>

<p>work flow.</p>

<ol>
<li><p>Method to create dialog and show.</p>

<pre><code>private void showDialog(){
AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(MainActivity.this);
dialogBuilder.setIcon(R.drawable.ic_launcher); 
dialogBuilder.setTitle("Friends List");

ArrayList&lt;DialogModel&gt; list = new ArrayList&lt;DialogModel&gt;();
list.add(new DialogModel("Rafique"));
list.add(new DialogModel("Abedin"));
list.add(new DialogModel("Masud"));
list.add(new DialogModel("Younus"));

DialogAdapter dialogAdapter = new DialogAdapter(this, list);

dialogBuilder.setNegativeButton("cancel",new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                dialog.dismiss();
            }
});
//seting adapter to dialog
dialogBuilder.setAdapter(dialogAdapter,null);
//show dialog
dialogBuilder.show();
}
</code></pre></li>
<li><p>Code to create adapter for dialog</p>

<pre><code>private class DialogAdapter extends ArrayAdapter&lt;DialogModel&gt;{

ArrayList&lt;DialogModel&gt; list;

public DialogAdapter(Context context,  ArrayList&lt;DialogModel&gt; objects) {
    super(context, R.layout.list, objects);
    this.list = objects;
}

private class ViewHolder{
    Button icon;
    TextView name;
}

@Override
public View getView(int position, View convertView, ViewGroup parent) {

    ViewHolder viewHolder;

    if (convertView == null) {
        viewHolder = new ViewHolder();
        LayoutInflater inflater = LayoutInflater.from(getContext());
        convertView = inflater.inflate(R.layout.list, parent, false);
        viewHolder.icon = (Button) convertView.findViewById(R.id.round_icon);
        viewHolder.name = (TextView) convertView.findViewById(R.id.tv_name);
           convertView.setTag(viewHolder);
     } else {
           viewHolder = (ViewHolder) convertView.getTag();
     }
    viewHolder.icon.setText(list.get(position).getName().substring(0, 1));
    viewHolder.name.setText(list.get(position).getName());

     return convertView;
  }

  }
</code></pre></li>
<li><p>Model of the adapter</p>

<pre><code> private class DialogModel{

private String name;

DialogModel(String name){
    this.name = name;
}

public String getName() {
    return name;
}
}
</code></pre></li>
<li><p>XML for adapter layout<br>
create a layout list.xml</p>

<pre><code>&lt;Button android:id="@+id/round_icon" android:layout_width="wrap_content" android:layout_height="wrap_content" android:background="@drawable/round_buttin" android:text="B" android:layout_marginLeft="5dp"/&gt; &lt;TextView android:id="@+id/tv_name" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Name" android:textAppearance="?android:attr/textAppearanceLarge" android:layout_marginLeft="10dp"
/&gt;
</code></pre></li>
<li><p>xml for round icon for the code portion  android:background="@drawable/round_button"<br>
create round_button.xml<br>
and put it in drawable folder</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;selector xmlns:android="schemas.android.com/apk/res/android"&gt;; &lt;item android:state_pressed="false"&gt; &lt;shape android:shape="oval"&gt; &lt;solid android:color="#fa09ad"/&gt; &lt;/shape&gt; &lt;/item&gt; &lt;item android:state_pressed="true"&gt; &lt;shape android:shape="oval"&gt; &lt;solid android:color="#c20586"/&gt; &lt;/shape&gt; &lt;/item&gt;     &lt;/selector&gt;
</code></pre></li>
</ol>

<p>if any problem you are free to ask.</p>
