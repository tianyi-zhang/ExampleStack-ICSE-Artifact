<p>Here is a somewhat simpler example of a custom <code>DesktopManager</code> to keep the internal frame within the bounds of the desktop:</p>

<pre><code>public class BoundsDesktopManager extends DefaultDesktopManager
{
    /*
    **  This is called anytime a frame is moved. 
    **  This implementation keeps the frame from leaving the desktop.
    */
    @Override
    public void dragFrame(JComponent component, int x, int y)
    {
        // Deal only with internal frames

        if (component instanceof JInternalFrame)
        {
            JInternalFrame frame = (JInternalFrame)component;
            JDesktopPane desktop = frame.getDesktopPane();
            Dimension d = desktop.getSize();

            // Too far left or right?

            if (x &lt; 0)
            {
                x = 0; 
            }
            else if (x + frame.getWidth() &gt; d.width)
            {
                x = d.width - frame.getWidth();
            }

            //  Too high or low?

            if (y &lt; 0)
            {
                y = 0;
            }
            else if (y + frame.getHeight() &gt; d.height)
            {
                y = d.height - frame.getHeight();
            }
        }

        // Pass along the (possibly cropped) values to the normal drag handler.

        super.dragFrame(component, x, y);
    }
}
</code></pre>
