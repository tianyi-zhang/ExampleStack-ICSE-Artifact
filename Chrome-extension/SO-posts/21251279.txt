<p>You have two better android specific options</p>

<p>1>Use JakeWharton's <a href="https://github.com/JakeWharton/Android-ViewPagerIndicator" rel="nofollow">Android-ViewPagerIndicator</a></p>

<p>2>very famous astuetz <a href="https://github.com/astuetz/PagerSlidingTabStrip" rel="nofollow">PagerSlidingTabStrip</a> </p>

<p>use this libs and samples do some hacks to load the those amples activity or fragments inside your each parent tabs.</p>

<p>other than this you can do <a href="http://androidactivity.wordpress.com/2012/08/17/two-way-communication-between-tabactivity-and-its-child-tabs/" rel="nofollow">two way communication between a TabActivity</a> (i.e. the Activity that hosts the TabHost), and its respective child Tabs (the Activities inside each tab). </p>

<p>gist Code for layout:</p>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;TabHost xmlns:android="http://schemas.android.com/apk/res/android"
android:id="@android:id/tabhost"
android:layout_width="fill_parent"
android:layout_height="fill_parent"&gt;
&lt;LinearLayout
android:orientation="vertical"
android:layout_width="fill_parent"
android:layout_height="fill_parent"&gt;
&lt;TabWidget
android:id="@android:id/tabs"
android:layout_width="fill_parent"
android:layout_height="wrap_content"&gt;
&lt;TextView
android:tag="tab0"
android:text="Tab 1"
android:background="@android:drawable/btn_star_big_on"
android:layout_width="wrap_content"
android:layout_height="fill_parent"
/&gt;
&lt;TextView
android:tag="tab1"
android:text="Tab 2"
android:layout_width="wrap_content"
android:layout_height="fill_parent"
/&gt;
&lt;TextView
android:tag="tab2"
android:text="Tab 3"
android:layout_width="wrap_content"
android:layout_height="fill_parent"
/&gt;
&lt;/TabWidget&gt;
&lt;FrameLayout
android:id="@android:id/tabcontent"
android:layout_width="fill_parent"
android:layout_height="fill_parent"&gt;
&lt;TextView
android:text="Hallo1"
android:layout_width="fill_parent"
android:layout_height="fill_parent" /&gt;
&lt;TextView
android:text="Hallo2"
android:layout_width="fill_parent"
android:layout_height="fill_parent" /&gt;
&lt;TextView
android:text="Hallo3"
android:layout_width="fill_parent"
android:layout_height="fill_parent" /&gt;
&lt;/FrameLayout&gt;
&lt;/LinearLayout&gt;
&lt;/TabHost&gt;
</code></pre>

<p>Activity:    </p>

<pre><code>import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map; 
import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.TabHost;
import android.widget.TabHost.TabContentFactory;
import android.widget.TabHost.TabSpec;
import android.widget.TabWidget;
import android.widget.TextView;

public class SensorActivity extends Activity {

@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.tabsample);
TabHost tabHost = (TabHost) findViewById(android.R.id.tabhost);
tabHost.setup();
final TabWidget tabWidget = tabHost.getTabWidget();
final FrameLayout tabContent = tabHost.getTabContentView();
// Get the original tab textviews and remove them from the viewgroup.
TextView[] originalTextViews = new TextView[tabWidget.getTabCount()];
for (int index = 0; index &lt; tabWidget.getTabCount(); index++) {
originalTextViews[index] = (TextView) tabWidget.getChildTabViewAt(index);
}
tabWidget.removeAllViews();
// Ensure that all tab content childs are not visible at startup.
for (int index = 0; index &lt; tabContent.getChildCount(); index++) {
tabContent.getChildAt(index).setVisibility(View.GONE);
}
// Create the tabspec based on the textview childs in the xml file.
// Or create simple tabspec instances in any other way...
for (int index = 0; index &lt; originalTextViews.length; index++) {
final TextView tabWidgetTextView = originalTextViews[index];
final View tabContentView = tabContent.getChildAt(index);

TabSpec tabSpec = tabHost.newTabSpec((String) tabWidgetTextView.getTag());
tabSpec.setContent(new TabContentFactory() {
@Override
public View createTabContent(String tag) {
return tabContentView;
}
});
if (tabWidgetTextView.getBackground() == null) {
tabSpec.setIndicator(tabWidgetTextView.getText());
} else {
tabSpec.setIndicator(tabWidgetTextView.getText(), tabWidgetTextView.getBackground());
}
tabHost.addTab(tabSpec);
}
// tabHost.setCurrentTab(0);
}   
}
</code></pre>

<p>Source: <a href="https://gist.github.com/jerolimov/618086#file-res-layout-tabsample-xml" rel="nofollow">gist</a></p>
