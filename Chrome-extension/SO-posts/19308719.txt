<p>Okay, the problem had to do with calling onSearchRequested() in onOptionsItemSelected(MenuItem item).  That is redundant when I have a SearchView and should only be called on older platforms.</p>

<p>So, I created a separate menu item for devices under Honeycomb.  It is removed at runtime for newer devices.  The SearchView is removed at runtime for older devices.</p>

<p>See updated code below:</p>

<pre><code>@SuppressLint("NewApi")
@Override
public boolean onCreateOptionsMenu(Menu menu) {
    mMenu = menu;
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.main, menu);



    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
        //remove old
        menu.removeItem(R.id.search_old);
        SearchManager searchManager =
                (SearchManager) getSystemService(Context.SEARCH_SERVICE);
        SearchView searchView =
                (SearchView) menu.findItem(R.id.search).getActionView();
        searchView.setSearchableInfo(
                searchManager.getSearchableInfo(getComponentName()));
        searchView.setIconifiedByDefault(false);
    } else{
        //remove new
        menu.removeItem(R.id.search);
    }


    return true;
}

@Override
public boolean onOptionsItemSelected(MenuItem item) {
    switch (item.getItemId()) {
        case R.id.search_old:
            onSearchRequested();
            return true;
        default:
            return false;
    }
}

@SuppressLint("NewApi")
@Override
public boolean onSearchRequested() {
    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
        MenuItem mi = mMenu.findItem(R.id.search);
        if(mi.isActionViewExpanded()){
            mi.collapseActionView();
        } else{
            mi.expandActionView();
        }
    } else{
        //onOptionsItemSelected(mMenu.findItem(R.id.search));
    }
    return super.onSearchRequested();
}
</code></pre>
