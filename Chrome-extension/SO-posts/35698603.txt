<p>Maybe:</p>

<p>Create <strong>setAlarm</strong> method:</p>

<pre><code>public void setAlarm(long interval){ 
    Calendar calendar = Calendar.getInstance();

    //Alarm will go off at 1
    calendar.set(Calendar.HOUR_OF_DAY, 1);
    calendar.set(Calendar.MINUTE, 0);
    calendar.set(Calendar.SECOND, 0);

    PendingIntent pi = PendingIntent.getService(context, 0, new Intent(context,MyClass.class),PendingIntent.FLAG_UPDATE_CURRENT);
    AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
    am.setRepeating(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), interval, pi); 
}
</code></pre>

<p>Create <strong>cancelAlarm</strong> method (optional, if you want to use it somewhere):</p>

<pre><code>public void cancelAlarm(Context context){
    PendingIntent pi = PendingIntent.getService(context, 0, new Intent(context,MyClass.class),PendingIntent.FLAG_UPDATE_CURRENT);
    AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
    am.cancel(pi);
}
</code></pre>

<p>check the day in your <code>onReceive()</code></p>

<pre><code>@Override
public void onReceive(Context context, Intent intent) {

    Calendar calendar = Calendar.getInstance();
    int day = calendar.get(Calendar.DAY_OF_WEEK); //Sunday = 1, Saterday = 7
    switch(day){

        case 6:  //Friday
            long interval = 3*24*60*60*1000 //skip saterday and sunday
            setAlarm(interval);

        case 2: //Monday
            setAlarm(AlarmManager.INTERVAL_DAY);  //Alarm will repeat everyday, until friday
        break;
}
</code></pre>

<p><strong>PS:</strong> Don't forget to set your alarm somewhere for the <strong>first</strong> time using: <code>setAlarm(AlarmManager.INTERVAL_DAY);</code></p>

<p>I think this should work.</p>
