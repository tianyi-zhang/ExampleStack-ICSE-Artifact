<p>Just for clarification: setRequestProperty works just fine! At least with Java 1.6.30.</p>

<p>I listened on my machine with netcat(a port listener):</p>

<pre><code>$ nc -l -p 8080
</code></pre>

<p>It simply listens on the port, so you see anything which gets requested, like raw http-headers.</p>

<p>And got the following http-headers without setRequestProperty:</p>

<pre><code>GET /foobar HTTP/1.1
User-Agent: Java/1.6.0_30
Host: localhost:8080
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive
</code></pre>

<p>And WITH setRequestProperty:</p>

<pre><code>GET /foobar HTTP/1.1
User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2
Host: localhost:8080
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive
</code></pre>

<p>As you can see the user agent was properly set.</p>

<p>Full example:</p>

<pre><code>import java.io.IOException;
import java.net.URL;
import java.net.URLConnection;


public class TestUrlOpener {

    public static void main(String[] args) throws IOException {
        URL url = new URL("http://localhost:8080/foobar");
        URLConnection hc = url.openConnection();
        hc.setRequestProperty("User-Agent", "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2");

        System.out.println(hc.getContentType());
    }

}
</code></pre>
