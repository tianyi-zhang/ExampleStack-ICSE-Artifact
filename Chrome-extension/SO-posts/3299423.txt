<p>Use the DatePicker </p>

<p><a href="http://developer.android.com/reference/android/widget/DatePicker.html">http://developer.android.com/reference/android/widget/DatePicker.html</a></p>

<p>It is availible since API Level 1</p>

<p>Here a example how to use the DatePickerDialog.</p>

<p>First add a TextView and a Button to your layout.xml</p>

<pre><code>&lt;Button android:id="@+id/myDatePickerButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Choose Date"/&gt;

&lt;TextView android:id="@+id/showMyDate"
    android:layout_width="fill_parent" 
    android:layout_height="wrap_content"/&gt;
</code></pre>

<p>Next you have to initialize the Button and TextView in the onCreate Method of your layout.
You need this class variables</p>

<pre><code>private int mYear;
private int mMonth;
private int mDay;

private TextView mDateDisplay;
private Button mPickDate;

static final int DATE_DIALOG_ID = 0;
</code></pre>

<p>Here the onCreate method</p>

<pre><code>@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    mDateDisplay = (TextView) findViewById(R.id.showMyDate);        
    mPickDate = (Button) findViewById(R.id.myDatePickerButton);

    mPickDate.setOnClickListener(new View.OnClickListener() {
        public void onClick(View v) {
            showDialog(DATE_DIALOG_ID);
        }
    });

    // get the current date
    final Calendar c = Calendar.getInstance();
    mYear = c.get(Calendar.YEAR);
    mMonth = c.get(Calendar.MONTH);
    mDay = c.get(Calendar.DAY_OF_MONTH);

    // display the current date
    updateDisplay();
}
</code></pre>

<p>UpdateDisplay method:</p>

<pre><code>private void updateDisplay() {
    this.mDateDisplay.setText(
        new StringBuilder()
                // Month is 0 based so add 1
                .append(mMonth + 1).append("-")
                .append(mDay).append("-")
                .append(mYear).append(" "));
}
</code></pre>

<p>The callback listener for the DatePickDialog</p>

<pre><code>private DatePickerDialog.OnDateSetListener mDateSetListener =
    new DatePickerDialog.OnDateSetListener() {
        public void onDateSet(DatePicker view, int year, 
                              int monthOfYear, int dayOfMonth) {
            mYear = year;
            mMonth = monthOfYear;
            mDay = dayOfMonth;
            updateDisplay();
        }
    };
</code></pre>

<p>The onCreateDialog method, called by showDialog()</p>

<pre><code>@Override
protected Dialog onCreateDialog(int id) {
   switch (id) {
   case DATE_DIALOG_ID:
      return new DatePickerDialog(this,
                mDateSetListener,
                mYear, mMonth, mDay);
   }
   return null;
}
</code></pre>

<p>Hope it helps, used it and it works fine.</p>

<p>Example from </p>

<p><a href="http://developer.android.com/guide/tutorials/views/hello-datepicker.html">http://developer.android.com/guide/tutorials/views/hello-datepicker.html</a></p>
